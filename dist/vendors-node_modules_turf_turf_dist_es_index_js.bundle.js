





























                                                                                                                                                                                                                                                                                                                                                                                                                                    ( self["webpackChunk"  ]   =  self[  "webpackChunk"  ]  || [ ] )   .  push
                                                                                                                                                                                                                                                                                                                                                                                                                    "vendors-node_modules_turf_turf_dist_es_index_js"     ]  ,  {  "../node_modules/@turf/bbox/dist/js/index.js
                                                                                                                                                                                                                                                                                                                                                                                                      __unused_webpack_module,exports,__webpack_require__) =>{"use strict";Object.defineProperty(exports,"__esModule",{value:true });var meta
                                                                                                                                                                                                                                                                                                                                                                                             __webpack_require__("../node_modules/@turf/meta/dist/js/index.js");function bbox(geojson){var  result  =[ Infinity,Infinity, - Infinity, -  Infinity] ;meta
                                                                                                                                                                                                                                                                                                                                                                                   coordEach(geojson,function (coord) {if (result[0]> coord[ 0]){result[0]= coord[0];}if  (result[1]>coord[1]){ result[1]=coord[1];}if (result[2]<coord[0]){result[2]=coord[0];}if
                                                                                                                                                                                                                                                                                                                                                                           result[3]<coord[1]){result[3]=coord[1];}});return result;} bbox["default"]=bbox;exports["default"]=bbox;},"../node_modules/@turf/helpers/dist/js/index.js":(__unused_webpack_module,exports) =>{                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                          "use strict" ;Object.defineProperty(exports,"__esModule",{value:true });exports.earthRadius  =6371008.8;exports.factors ={centimeters:exports.earthRadius *100,centimetres:exports.earthRadius
                                                                                                                                                                                                                                                                                                                                                                 degrees:exports.earthRadius /111325,feet:exports.earthRadius * 3.28084,inches:exports.earthRadius *39.37,kilometers:exports.earthRadius /1000,kilometres:exports.earthRadius /1000,meters:exports.earthRadius,metres
                                                                                                                                                                                                                                                                                                                                                          exports. earthRadius,miles:exports.earthRadius /1609.344,millimeters:exports.earthRadius *1000,millimetres:exports.earthRadius *1000,nauticalmiles:exports.earthRadius /1852,radians:1,yards:exports.earthRadius *1.0936 };exports
                                                                                                                                                                                                                                                                                                                                                   unitsFactors ={centimeters:100,centimetres:100,degrees:1 /111325,feet:3.28084,inches:39.37,kilometers:1  /1000,kilometres:1 /1000,meters:1,metres:1,miles:1 /1609.344,millimeters:1000,millimetres:1000,nauticalmiles:1 /1852,radians:1 /exports.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                                                                                               earthRadius,yards:1.0936133 } ;exports.areaFactors ={  acres: 0.000247105,centimeters:10000,centimetres:10000,feet:10.763910417,hectares:0.0001,inches: 1550.003100006,kilometers:0.000001,kilometres:0.000001,meters:1,metres:1,miles:3.86e-7,millimeters:                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                                                                                                       1000000,millimetres:1000000,yards:1.195990046 };function feature( geom, properties,options){if (options  === void 0){options ={} ;}var feat ={type:"Feature"};if (options.id ===0 || options.id){feat.id =options.id;} if ( options.bbox){feat.bbox =options.bbox;}feat
                                                                                                                                                                                                                                                                                                                                  properties  =properties || {};feat.geometry =geom;return feat;}exports.feature =feature;function geometry(type,coordinates, _options){if (_options ===void  0){_options  = {}  ;}switch (type){case "Point":return point(coordinates).geometry;case "LineString":return lineString
                                                                                                                                                                                                                                                                                                                            coordinates).geometry;case "Polygon":return polygon(coordinates).geometry;case "MultiPoint":return multiPoint(coordinates).geometry;case "MultiLineString":return multiLineString(coordinates).geometry;case "MultiPolygon":return multiPolygon(coordinates).geometry;default:throw new Error
                                                                                                                                                                                                                                                                                                                       type +" is invalid");} }exports.geometry =geometry;function point(coordinates,properties,options){if (options ===void  0){options ={};}if (!coordinates){throw new Error("coordinates is required");} if (!Array.isArray(coordinates)){throw new  Error("coordinates must be an Array");}if (coordinates
                                                                                                                                                                                                                                                                                                                   length <2){throw new Error("coordinates must be at least 2 numbers long");}if (!isNumber(coordinates[0])||!isNumber(coordinates[1])){throw new Error("coordinates must contain numbers");}var geom ={type:"Point",coordinates:coordinates };return feature(geom,properties,options);}exports.point =point;function                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                              points(coordinates,properties,options){if (options ===void 0){options ={};}return featureCollection(coordinates.map(function (coords){return point(coords,properties);}),options);}exports.points =points;function polygon(coordinates,properties,options){if (options ===void 0){options ={};}for (var _i =0,coordinates
                                                                                                                                                                                                                                                                                                            = coordinates;  _i   <coordinates_1.length;_i++   ) { var ring = coordinates_1[_i];if  (ring.  length  < 4){throw new   Error("Each LinearRing of a Polygon must have 4 or more Positions." ) ;}for   (var j =0;j <ring[ ring.length -  1] .length;   j++  ) {if (ring[  ring. length -1][ j] !==  ring[ 0][j]) {throw new Error
                                                                                                                                                                                                                                                                                                       "First and last Position are not equivalent.");}}}var geom ={type:"Polygon",coordinates:coordinates };return feature(geom,properties,options);}exports.polygon =polygon;function polygons(coordinates,properties,options){if (options ===void 0){options ={};}return featureCollection(coordinates.map(function (coords){return polygon
                                                                                                                                                                                                                                                                                                   coords,properties);}),options);}exports.polygons =polygons;function lineString(coordinates,properties,options){if (options ===void 0){options ={};}if ( coordinates.length <2){throw new Error("coordinates must be an array of two or more positions");}var  geom ={type:"LineString",coordinates:coordinates };return feature(geom,properties
                                                                                                                                                                                                                                                                                               options);}exports.lineString =lineString;function lineStrings( coordinates,properties,options){if (options ===void 0){options  ={};}return featureCollection(coordinates.map(function (coords){return lineString(coords,properties);}),options);}exports.lineStrings = lineStrings;function featureCollection( features,options){if (options ===void  0){
                                                                                                                                                                                                                                                                                           options ={};}var fc ={type:"FeatureCollection"};if (options.id){fc.id =options.id;}if (options.bbox){fc.bbox =options.bbox;}fc.features =features;return fc;}exports.featureCollection =featureCollection;function multiLineString(coordinates,properties,options){if (options ===void 0){options ={};}var geom ={type:"MultiLineString",coordinates:coordinates }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                       ;return feature(geom,properties,options);} exports.multiLineString =multiLineString;function multiPoint(coordinates,properties,options){if (options ===void 0){ options ={};}var geom ={type:"MultiPoint",coordinates:coordinates };return  feature(geom,properties,options);}exports.multiPoint  = multiPoint;function multiPolygon(coordinates,properties,options){if
                                                                                                                                                                                                                                                                                   options === void 0){options ={};}var geom ={type:"MultiPolygon",coordinates:coordinates };return feature(geom,properties,options);}exports.multiPolygon =multiPolygon;function geometryCollection(geometries,properties,options){if  (options ===void 0){options ={};}var  geom ={type:"GeometryCollection",geometries:geometries } ;return feature( geom,properties,options) ;}
                                                                                                                                                                                                                                                                               exports.geometryCollection =geometryCollection;function round(num,precision){if (precision ===void 0){precision =0;}if (precision &&!(precision >=0)){throw new Error("precision must be a positive number");}var multiplier =Math.pow(10,precision ||0);return Math.round(num *multiplier)/multiplier;}exports.round =round;function radiansToLength(radians,units){if (units ===void
                                                                                                                                                                                                                                                                            {units ="kilometers";}var factor =exports.factors[units];if (!factor) {throw new Error(units   +" units is invalid");}return radians *factor;}exports.radiansToLength =radiansToLength;function lengthToRadians(distance,units){if (units ===void 0){units ="kilometers";}var factor =exports.factors[units];if (!factor){throw new Error(units +" units is invalid");}return distance /factor;}
                                                                                                                                                                                                                                                                        exports.lengthToRadians =lengthToRadians;function lengthToDegrees(distance,units){return radiansToDegrees(lengthToRadians(distance,units));}exports.lengthToDegrees =lengthToDegrees;function bearingToAzimuth(bearing){var angle =bearing %360;if (angle <0){angle  +=360;}return angle;}exports.bearingToAzimuth =bearingToAzimuth;function radiansToDegrees(radians){ var degrees =radians %(2 *Math
                                                                                                                                                                                                                                                                    PI);return degrees *180 /Math.PI;}exports.radiansToDegrees =radiansToDegrees;function degreesToRadians(degrees){var radians =degrees %360;return radians *Math.PI /180;}exports.degreesToRadians =degreesToRadians;function convertLength(length,originalUnit,finalUnit){if (originalUnit ===void 0){originalUnit ="kilometers";}if (finalUnit ===void 0){finalUnit ="kilometers";}if (!(length >=0)){throw new
                                                                                                                                                                                                                                                                 Error("length must be a positive number");}return radiansToLength(lengthToRadians(length,originalUnit) ,finalUnit);}exports.convertLength =convertLength;function convertArea(area,originalUnit,finalUnit){if (originalUnit ===void  0){originalUnit ="meters";}if (finalUnit ===void 0){ finalUnit ="kilometers" ;}if (! (area >=0) ) {throw new Error("area must be a positive number") ;}var startFactor =exports
                                                                                                                                                                                                                                                             areaFactors[originalUnit];if (!startFactor){throw new Error("invalid original units");}var finalFactor =exports.areaFactors[finalUnit];if (!finalFactor){throw new Error("invalid final units");}return area /startFactor *finalFactor;}exports.convertArea =convertArea;function isNumber(num){return !isNaN(num)&&num !==null &&!Array.isArray(num);}exports.isNumber =isNumber;function isObject(input){return !!input
                                                                                                                                                                                                                                                           input.constructor ===Object;}exports.isObject =isObject;function validateBBox( bbox){if (!bbox){throw new Error("bbox is required");}if (!Array.isArray(bbox) ){throw new Error("bbox must be an Array");}if (bbox.length !==4  &&bbox.length !==6){throw new Error("bbox must be an Array of 4 or 6 numbers") ;}bbox.forEach(function (num){if (!isNumber(num)){throw new Error("bbox must only contain numbers");}});}exports
                                                                                                                                                                                                                                                         validateBBox =validateBBox;function validateId(id){if (!id){throw new Error("id is required");}if (["string","number"].indexOf(typeof  id)=== -1){throw new Error("id must be a number or a string");}}exports.validateId =validateId;},"../node_modules/@turf/meta/dist/js/index.js":(__unused_webpack_module,exports,__webpack_require__) =>{"use strict";Object.defineProperty(exports,"__esModule", {value:true });var helpers =                   __webpack_require
                                                                                                                                                                                                                                                      "../node_modules/@turf/helpers/dist/js/index.js");function coordEach(geojson,callback,excludeWrapCoord){if (geojson ===null)return ;var j,k,l,geometry,stopG,coords,geometryMaybeCollection,wrapShrink =0,coordIndex =0,isGeometryCollection,type =geojson.type,isFeatureCollection =type ==="FeatureCollection",isFeature =type ==="Feature",stop =isFeatureCollection ?geojson.features.length :1;for (var featureIndex =0;featureIndex
                                                                                                                                                                                                                                                  stop;featureIndex++ ){geometryMaybeCollection =isFeatureCollection ?geojson.features[featureIndex].geometry :isFeature ?geojson.geometry :geojson;isGeometryCollection =geometryMaybeCollection ?geometryMaybeCollection.type ==="GeometryCollection":false;stopG =isGeometryCollection ?geometryMaybeCollection.geometries.length :1;for (var geomIndex =0;geomIndex <stopG;geomIndex++ ){var multiFeatureIndex =0;var geometryIndex =0;geometry
                                                                                                                                                                                                                                               isGeometryCollection ?geometryMaybeCollection.geometries[ geomIndex] :geometryMaybeCollection;if  (geometry ===null)continue ;coords =geometry.  coordinates;var geomType =geometry. type;wrapShrink =excludeWrapCoord  &&( geomType  ==="Polygon"|| geomType ==="MultiPolygon") ?1 : 0;switch (geomType){case  null:break ;case "Point":  if (callback(coords,coordIndex,featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex
                                                                                                                                                                                                                                            ;multiFeatureIndex++ ;break ;case "LineString":case "MultiPoint":for (j =0;j <coords.length;j++ ){if ( callback(coords[j],coordIndex,featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex++ ;if (geomType ==="MultiPoint")multiFeatureIndex++ ;}if (geomType ==="LineString")multiFeatureIndex++ ;break ;case "Polygon":case "MultiLineString":for (j =0;j  <coords.length;j++ ){for (k =0;k <coords[j].length -wrapShrink;k++ ){if
                                                                                                                                                                                                                                         callback(coords[j][k],coordIndex,featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex++ ;}if (geomType ==="MultiLineString")multiFeatureIndex++ ;if (geomType ==="Polygon")geometryIndex++ ;}if (geomType ==="Polygon")multiFeatureIndex++ ;break ;case "MultiPolygon":for (j =0;j <coords.length;j++ ){geometryIndex =0;for (k =0;k <coords[j].length;k++ ){for (l =0;l <coords[j][k].length -wrapShrink;l++ ){if (callback(coords[j][k][l
                                                                                                                                                                                                                                      coordIndex,featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex++ ;}geometryIndex++ ;}multiFeatureIndex++ ;}break ;case "GeometryCollection":for  (j =0; j <geometry.geometries. length;j++  )if ( coordEach(geometry.geometries[j],callback,excludeWrapCoord) ===false) return  false;break ;default:throw new  Error( "Unknown Geometry Type");}} }}function  coordReduce( geojson, callback,initialValue,excludeWrapCoord){ var previousValue
                                                                                                                                                                                                                                   initialValue;coordEach(geojson,function (currentCoord,coordIndex,featureIndex,multiFeatureIndex, geometryIndex){if (coordIndex ===0 &&initialValue ===undefined)previousValue =currentCoord;else previousValue =callback(previousValue,currentCoord,coordIndex, featureIndex,multiFeatureIndex,geometryIndex) ;},excludeWrapCoord);return previousValue;}function propEach(geojson,callback){var i;switch (geojson.type){case "FeatureCollection":for (i =0;i <geojson.features
                                                                                                                                                                                                                                length;i++ ){if (callback(geojson.features[i] .properties,i)===false) break ;}break ;case "Feature":callback(geojson.properties, 0);break ;}}function propReduce(geojson,callback,initialValue) {var previousValue =  initialValue;propEach(geojson,function (currentProperties,featureIndex){if (featureIndex ===0  &&initialValue ===undefined)previousValue =currentProperties;else previousValue =callback(previousValue,currentProperties,featureIndex);});return previousValue;}
                                                                                                                                                                                                                              function featureEach(geojson,callback){if (geojson.type ==="Feature"){callback(geojson,0);} else  if (geojson. type ==="FeatureCollection" ){ for ( var i = 0;i <geojson.features.length;i++ ){if (callback(geojson.features[i],i)===false)break ;}}}function featureReduce(geojson,callback,initialValue){var previousValue =initialValue;featureEach(geojson,function (currentFeature,featureIndex){if (featureIndex ===0 && initialValue ===undefined)previousValue =currentFeature;else
                                                                                                                                                                                                                            previousValue =callback(previousValue,currentFeature,featureIndex) ;});return  previousValue;}function coordAll(geojson){var coords =[] ;coordEach(geojson,function (coord){coords. push(coord);})  ;return  coords;}function geomEach(geojson,callback){var  i, j,g, geometry,stopG,geometryMaybeCollection,isGeometryCollection,featureProperties,featureBBox,featureId,featureIndex =0,isFeatureCollection =geojson.type ==="FeatureCollection",isFeature = geojson.type ==="Feature",stop =               isFeatureCollection
                                                                                                                                                                                                                          ?geojson.features.length :1;for (i  =0;i <stop;i++ ){geometryMaybeCollection =  isFeatureCollection ?geojson.features[i]. geometry :isFeature ?geojson.geometry  :geojson;featureProperties =isFeatureCollection ?geojson.features[i].properties :isFeature ?geojson.properties  :{};featureBBox =isFeatureCollection ?geojson.features[i].bbox :isFeature ?geojson.bbox :undefined;featureId =isFeatureCollection ?geojson.features[i].id :isFeature ?geojson.id :undefined;isGeometryCollection =                 geometryMaybeCollection
                                                                                                                                                                                                                        ?geometryMaybeCollection.type ==="GeometryCollection":false;stopG =isGeometryCollection ?geometryMaybeCollection.geometries.length :1;for (g =0;g <stopG;g++ ){geometry =isGeometryCollection ?geometryMaybeCollection.geometries[g]:geometryMaybeCollection;if (geometry ===null){if (callback(null,featureIndex,featureProperties,featureBBox,featureId)===false)return false;continue ;}switch (geometry.type){case "Point":case "LineString":case "MultiPoint":case "Polygon":case "MultiLineString
                                                                                                                                                                                                                     case "MultiPolygon" :{if  (callback(geometry,featureIndex,featureProperties,featureBBox, featureId)===false)return false;break ;}case "GeometryCollection":{for (j =0;j <geometry.geometries.length;j++ ){if  (callback(geometry.geometries[j],featureIndex,featureProperties,featureBBox,featureId)===false)return false;}break ;}default:throw new Error("Unknown Geometry Type");}}featureIndex++ ;}}function geomReduce(geojson,callback,initialValue){var previousValue = initialValue;geomEach(geojson,               function
                                                                                                                                                                                                                  (currentGeometry,featureIndex,featureProperties,featureBBox,featureId)  {if (featureIndex === 0  &&initialValue ===undefined)previousValue  =currentGeometry;else previousValue =callback(previousValue,currentGeometry,featureIndex,featureProperties,featureBBox,featureId);}) ;return previousValue;}function flattenEach( geojson,callback){geomEach(geojson, function (geometry,featureIndex,properties, bbox,id){var type =geometry ===null ?null  :geometry.type;switch ( type){case null:case "Point":case               "LineStringcase "Polygon":if (callback(helpers.feature( geometry,properties,{bbox:bbox
                                                                                                                                                                                                                id:id } ),featureIndex,0)=== false) return false;return  ;}var geomType;switch (type){case "MultiPoint":geomType = "Point";break ;case  "MultiLineString":geomType ="LineString";break ;case "MultiPolygon":geomType ="Polygon" ;break ;}for ( var multiFeatureIndex =0;multiFeatureIndex <geometry.coordinates.length;multiFeatureIndex++ ){var coordinate =geometry.coordinates[multiFeatureIndex];var  geom  ={type:geomType,coordinates:coordinate } ;if (callback(  helpers.feature(geom,properties), featureIndex,              multiFeatureIndexfalse)return   false;}  }    );}function  flattenReduce(  geojson,callback
                                                                                                                                                                                                             initialValue){var previousValue =initialValue;flattenEach(geojson,function (currentFeature,featureIndex,multiFeatureIndex){if (featureIndex ===0 &&multiFeatureIndex ===0 &&initialValue ===undefined)previousValue =currentFeature;else previousValue =callback(previousValue,currentFeature,featureIndex,multiFeatureIndex);});return previousValue;}function segmentEach(geojson,callback){flattenEach(geojson,function (feature,featureIndex,multiFeatureIndex){var segmentIndex =0;if (!feature.geometry)return ;var typefeature.geometry. type;if (type ==="Point"|| type ==="MultiPoint" )return ;var
                                                                                                                                                                                                          previousCoords;var previousFeatureIndex =0;var previousMultiIndex =0;var  prevGeomIndex =0;if (  coordEach(feature, function  (currentCoord,coordIndex,featureIndexCoord, multiPartIndexCoord,geometryIndex){if (previousCoords  ===undefined || featureIndex >previousFeatureIndex  || multiPartIndexCoord >previousMultiIndex ||geometryIndex >prevGeomIndex){previousCoords =currentCoord;previousFeatureIndex =featureIndex;previousMultiIndex  =multiPartIndexCoord;prevGeomIndex =geometryIndex;segmentIndex =0;return ;}var              currentSegmenthelpers. lineString([ previousCoords,currentCoord],feature. properties) ;if
                                                                                                                                                                                                        callback(currentSegment,featureIndex,multiFeatureIndex, geometryIndex,segmentIndex) ===false) return false;segmentIndex++ ;previousCoords =currentCoord;})===false)return false;});}function segmentReduce( geojson,callback,initialValue){var previousValue =initialValue;var started =false;segmentEach(geojson,function  (currentSegment,featureIndex, multiFeatureIndex,geometryIndex, segmentIndex){if ( started ===false &&initialValue ===undefined)previousValue  =currentSegment;else previousValue   =callback(previousValue,             currentSegmentfeatureIndex,multiFeatureIndex, geometryIndex, segmentIndex);started = true;}
                                                                                                                                                                                                      ;return previousValue;}function lineEach(geojson,callback){ if (! geojson)throw new Error("geojson is required");flattenEach(geojson,function (feature,featureIndex,multiFeatureIndex) {if (feature.geometry ===null)return ;var type =feature.geometry.type;var coords =feature.geometry.coordinates;switch (type){case  "LineString":if (callback(feature,featureIndex,multiFeatureIndex,0,0)===false)return false;break ;case "Polygon":for (var  geometryIndex = 0;geometryIndex <coords.length;geometryIndex++ ){if (callback(helpers.             lineStringcoords[ geometryIndex],feature. properties) , featureIndex, multiFeatureIndex
                                                                                                                                                                                                   geometryIndex)===false)return false;}break ;}});}function lineReduce(geojson,callback,initialValue){var previousValue =initialValue;lineEach(geojson,function (currentLine,featureIndex,multiFeatureIndex,geometryIndex){if (featureIndex ===0 &&initialValue ===undefined)previousValue =currentLine;else previousValue =callback(previousValue,currentLine,featureIndex,multiFeatureIndex,geometryIndex);});return previousValue;}function findSegment(geojson,options){options =options ||{};if (!helpers. isObject(options))throw new Error(             "options is invalidvar featureIndex  =options.featureIndex || 0;var multiFeatureIndex =options
                                                                                                                                                                                                 multiFeatureIndex  ||0;var geometryIndex = options.geometryIndex ||0;var segmentIndex =options.segmentIndex || 0;var properties =options.properties;var geometry;switch (geojson.type){case "FeatureCollection":if (featureIndex <0)featureIndex =geojson.features.length +featureIndex;properties =properties ||geojson. features[ featureIndex].properties;geometry =geojson.features[featureIndex].geometry;break ;case "Feature":properties =properties || geojson.properties;geometry =geojson.geometry;break  ;case "Point":case "MultiPoint":             return null;caseineString" : case "Polygon"  : case "MultiLineString": case "MultiPolygon" :    geometry
                                                                                                                                                                                               geojson;break ;default:throw new  Error("geojson is invalid" );}if (geometry ===null) return null;var coords  =geometry.coordinates;switch (geometry.type){case "Point" :case "MultiPoint":return null;case "LineString": if (segmentIndex <0)segmentIndex =coords.length +segmentIndex -1;return helpers.lineString([coords[segmentIndex],coords[segmentIndex +1]],properties,options);case "Polygon": if (geometryIndex <0)geometryIndex =coords.length +geometryIndex;if (segmentIndex <0)segmentIndex =coords[geometryIndex].length +  segmentIndex -            1;return helperslineString([  coords[geometryIndex]  [ segmentIndex], coords[geometryIndex]  [   segmentIndex
                                                                                                                                                                                             +1]],properties,options);case "MultiLineString":if (multiFeatureIndex <0)multiFeatureIndex =coords.length +multiFeatureIndex;if (segmentIndex <0)segmentIndex =coords[multiFeatureIndex].length +segmentIndex -1;return helpers.lineString([coords[multiFeatureIndex][segmentIndex],coords[multiFeatureIndex][segmentIndex +1]],properties,options);case "MultiPolygon":if (multiFeatureIndex <0)multiFeatureIndex =coords.length +multiFeatureIndex;if (geometryIndex <0)geometryIndex =coords[multiFeatureIndex].length +geometryIndex;if (segmentIndex <0)            segmentIndexcoords[ multiFeatureIndex] [ geometryIndex] . length  -   segmentIndex -   1;return helpers.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
                                                                                                                                                                                            lineString([coords[multiFeatureIndex] [geometryIndex][segmentIndex],coords[ multiFeatureIndex][geometryIndex][ segmentIndex + 1]],properties,options);} throw new Error( "geojson is invalid");}function findPoint(geojson,options){options = options ||{} ;if ( !helpers.isObject(options))throw new Error("options is invalid" );var featureIndex =options. featureIndex ||0;var multiFeatureIndex =options.multiFeatureIndex ||0;var  geometryIndex =options.geometryIndex ||0;var coordIndex =options.coordIndex ||0;var properties =options.properties;var             geometry;switchgeojson.type){case "FeatureCollection" :if (  featureIndex < 0)featureIndex =           geojson
                                                                                                                                                                                         features.length + featureIndex;properties =properties ||geojson.features[featureIndex].properties;geometry =geojson.features[featureIndex].geometry;break ;case "Feature":properties  =properties ||geojson.properties;geometry =geojson.geometry;break ;case "Point":case "MultiPoint":return  null;case "LineString":case "Polygon":case  "MultiLineString":case "MultiPolygon":geometry =geojson;break ;default: throw new Error("geojson is invalid");}if (geometry ===null) return null;var coords = geometry.coordinates;switch (geometry.type) {case "Point" :            return helperspoint(coords,properties,options);case  "MultiPoint": if (multiFeatureIndex <0)  multiFeatureIndex
                                                                                                                                                                                       coords.length +multiFeatureIndex;return  helpers.point(coords[multiFeatureIndex],properties,options);case "LineString":if  (coordIndex <0)coordIndex =coords. length +coordIndex;return helpers.point(coords[coordIndex] ,properties,options) ;case "Polygon":if (geometryIndex <0)geometryIndex = coords.length + geometryIndex;if (coordIndex <0)coordIndex =coords[geometryIndex]. length  +coordIndex;return helpers.point(coords[geometryIndex][coordIndex],properties,options);case  "MultiLineString":if  (multiFeatureIndex <0)multiFeatureIndex =coords.length +            multiFeatureIndex;ifcoordIndex    <0)  coordIndex    =  coords[ multiFeatureIndex] .   length +  coordIndex;return helpers
                                                                                                                                                                                      point(coords[multiFeatureIndex][coordIndex],properties,options);case "MultiPolygon":if (multiFeatureIndex <0)multiFeatureIndex =coords.  length +multiFeatureIndex;if (geometryIndex <0) geometryIndex =coords[multiFeatureIndex].length  +geometryIndex;if (coordIndex <0) coordIndex =coords[ multiFeatureIndex][geometryIndex]. length - coordIndex;return helpers.point(coords[ multiFeatureIndex][geometryIndex][coordIndex], properties,options);}throw new Error("geojson is invalid");}exports.coordAll =coordAll;exports.coordEach =coordEach;exports.coordReduce =            coordReduce;exportsfeatureEach   = featureEach;exports.featureReduce  =    featureReduce;exports.      findPoint
                                                                                                                                                                                   findPoint;exports.findSegment =findSegment;exports.flattenEach =flattenEach;exports.flattenReduce =flattenReduce;exports.geomEach =geomEach;exports.geomReduce =geomReduce;exports.lineEach =lineEach;exports.lineReduce =lineReduce;exports.propEach =propEach;exports.propReduce =propReduce;exports.segmentEach =segmentEach;exports.segmentReduce =segmentReduce;},"../node_modules/call-bind/callBound.js":(module,__unused_webpack_exports,__webpack_require__) =>{"use strict";var GetIntrinsic =__webpack_require__("../node_modules/get-intrinsic/index.js");var callBindwebpack_require__( "../node_modules/call-bind/index.js" ) ;var $indexOf    =            callBind
                                                                                                                                                                                GetIntrinsic('String.prototype.indexOf' ));module.exports =function  callBoundIntrinsic(name,allowMissing){var intrinsic =GetIntrinsic(name,!!allowMissing);if  (typeof intrinsic ==='function'&&$indexOf(name,'.prototype.') > -1){return callBind( intrinsic);}return intrinsic;};} ,"../node_modules/call-bind/index.js":(module, __unused_webpack_exports,__webpack_require__) =>{"use strict";var bind = __webpack_require__( "../node_modules/function-bind/index.js");var GetIntrinsic =__webpack_require__("../node_modules/get-intrinsic/index.js");var $apply =GetIntrinsic(            '%Function.prototype.applyvar  $call =GetIntrinsic('%Function.prototype.call%') ;var  $reflectApply =        GetIntrinsic
                                                                                                                                                                              '%Reflect.apply%',true)||bind.call($call,$apply);var $gOPD =GetIntrinsic('%Object.getOwnPropertyDescriptor%',true);var $defineProperty =GetIntrinsic('%Object.defineProperty%',true);var $max =GetIntrinsic('%Math.max%');if ($defineProperty){ try {$defineProperty({},'a',{value:1 });}catch (e){$defineProperty =null;}}module.exports =function callBind(originalFunction){var func =$reflectApply(bind,$call,arguments);if ($gOPD &&$defineProperty){var desc =$gOPD(func,'length');if (desc.configurable){$defineProperty(func,'length',  {value:1 +$max(0,originalFunction.length -(           argumentslength   - 1) ) }) ;}  }return   func;};var applyBind =function  applyBind() {  return $reflectApply
                                                                                                                                                                              bind, $apply,arguments);}  ;if  ( $defineProperty)  {$defineProperty(module.exports,'apply',  {value: applyBind })  ;}else  {module. exports.  apply = applyBind;}}, "../node_modules/concaveman/index.js" :(module,__unused_webpack_exports, __webpack_require__)  =>  {"use strict" ;var RBush  =__webpack_require__(  "../node_modules/concaveman/node_modules/rbush/rbush.min.js") ;var Queue = __webpack_require__( "../node_modules/tinyqueue/index.js" ) ;var pointInPolygon  =__webpack_require__("../node_modules/point-in-polygon/index.js" ) ;var  orient  = __webpack_require__(            "../node_modules/robust-predicates/umd/orient2d.min.jsorient2d;if (  Queue. default){Queue  = Queue. default;}module. exports   =   concaveman;module.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
                                                                                                                                                                          exports["default"]=concaveman;function concaveman(points,concavity,lengthThreshold){concavity =Math.max(0,concavity ===undefined ?2 :concavity) ;lengthThreshold =lengthThreshold ||0;var hull =fastConvexHull(points);var tree =new RBush(16);tree.toBBox =function (a){return {minX:a[0],minY:a[1],maxX:a[0],maxY:a[1]};};tree.compareMinX =function (a,b){return a[0]-b[0];};tree.compareMinY =function (a,b){return a[1]-b[1];};tree.load(points);var queue =[];for (var i =0,last;i <hull.length;i++ ){var p =hull[i];tree.remove(p);last =insertNode(p,last);queue.push(last);}var segTree =                newush(16);for (i =0;i < queue.length;i++ )segTree.insert(updateBBox(queue[i]))   ;var sqConcavity
                                                                                                                                                                        concavity *concavity;var sqLenThreshold =lengthThreshold *lengthThreshold;while (queue.length){var node =queue.shift();var a =node.p;var b =node.next.p;var sqLen =getSqDist(a,b);if (sqLen <sqLenThreshold)continue ;var maxSqLen =sqLen /sqConcavity;p =findCandidate(tree,node.prev.p,a,b,node.next.next.p,maxSqLen,segTree);if (p &&Math.min( getSqDist(p,a),getSqDist(p,b))<=maxSqLen){queue.push(node) ;queue.push(insertNode(p,node));tree.remove(p);segTree.remove(node);segTree.insert(updateBBox(node));segTree.insert(updateBBox(node.next));}} node =last;var concave =[];do {concave.push(            node.pnode =node.next;}while (node !==last) ;concave.push(node. p);return concave;}             function
                                                                                                                                                                      findCandidate(tree,a,b,c,d,maxDist,segTree){var queue =new Queue([],compareDist);var node =tree.data;while (node){for (var i =0;i <node.children.length;i++ ){var child =node.children[i];var dist =node.leaf ?sqSegDist(child,b,c):sqSegBoxDist(b,c,child);if (dist >maxDist)continue ;queue.push({node:child,dist:dist });}while (queue.length &&!queue.peek().node.children){var item =queue.pop();var p =item.node;var  d0 =sqSegDist(p,a,b);var d1 =sqSegDist(p,c,d);if (item. dist <d0 &&item.dist <d1 &&noIntersections(b,p,segTree)&&noIntersections(c,p,segTree))return p;}node =queue.pop();if (              nodenode = node.node;}return null;}function compareDist(  a,b){ return a.dist - b.     dist;}  function                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
                                                                                                                                                                     sqSegBoxDist(a,b,bbox){if (inside(a,bbox)||inside(b,bbox))return 0;var d1 =sqSegSegDist(a[0],a[1],b[0],b[1],bbox.minX,bbox.minY,bbox. maxX,bbox.minY);if (d1 ===0)return 0;var d2 =sqSegSegDist(a[0],a[1],b[0],b[1],bbox.minX,bbox.minY,bbox.minX,bbox.maxY);if (d2 ===0)return 0;var d3 =sqSegSegDist(a[0],a[1],b[0],b[1],bbox.maxX,bbox.minY,bbox.maxX,bbox.maxY);if (d3  ===0)return 0;var d4 =sqSegSegDist(a[0],a[1],b[0],b[1],bbox.minX,bbox.maxY,bbox.maxX,bbox.maxY);if (d4 ===0)return 0;return Math.min(d1,d2,d3,d4);}function inside(a,bbox){return a[0]>=bbox.minX &&a[0]<=bbox.maxX &&a[1]>=bbox.            mina[1]<=bbox.maxY;}function noIntersections(a,b,segTree){var minX =Math.min(a[0]  , b[ 0]);var min
                                                                                                                                                                     Math.min(a[1],b[1]);var maxX =Math.max(a[0],b[0]);var maxY =Math.max(a[1],b[1]);var edges =segTree.search({minX:minX,minY:minY,maxX:maxX,maxY:maxY });for (var i =0;i <edges.length;i++ ){if (intersects(edges[i].p,edges[i].next.p,a,b))return false;}return true;}function cross(p1,p2,p3){return orient(p1[0],p1[1],p2[0],p2[1],p3[0],p3[1]);}function intersects(p1,q1,p2,q2){return p1 !==q2 &&q1 !==p2 &&cross(p1,q1,p2)>0 !==cross(p1,q1,q2)>0 &&cross(p2,q2,p1)>0 !==cross(p2,q2,q1)>0;}function updateBBox(node){var p1 =node.p;var p2 =node.next.p;node.minX =Math.min(p1[0],p2[0]);node.minY =Math.            min( pp2[1]);node.maxX =Math.max(p1[0],p2[0]);node.maxY =Math.max( p1[ 1],p2[1])     ;return   node;}
                                                                                                                                                                  function fastConvexHull(points){var left =points[0];var top =points[0];var right =points[0];var bottom =points[0];for (var i =0;i <points.length;i++ ){var p =points[i];if (p[0]<left[0])left =p;if (p[0]>right[0])right =p;if (p[1]<top[1])top =p;if (p[1]>bottom[1])bottom =p;}var cull =[left,top,right,bottom];var filtered =cull.slice();for (i =0;i <points.length;i++ ){if (!pointInPolygon(points[i],cull))filtered.push(points[i]);}return convexHull(filtered);}function insertNode(p,prev){var node ={p:p,prev:null,next:null,minX:0,minY:0,maxX:0,maxY:0 };if (!prev){node.prev =node;node.next =node;}            else  {                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         node.next = prev.next;node.prev =prev;prev.next.prev = node;prev.next =node;}     return    node;}
                                                                                                                                                                function getSqDist(p1,p2){var dx =p1[0]-p2[0],dy =p1[1]-p2[1];return dx *dx +dy *dy;}function sqSegDist(p,p1,p2){var x =p1[0],y =p1[1],dx =p2[0]-x,dy =p2[1]-y;if (dx !==0 ||dy !==0){var t =((p[0]-x)*dx +(p[1]-y)*dy)/(dx *dx +dy *dy);if (t >1){x =p2[0];y =p2[1];}else if (t >0){x +=dx *t;y +=dy *t;}}dx =p[0]-x;dy =p[1]-y;return dx *dx +dy *dy;}function sqSegSegDist(x0,y0,x1,y1,x2,y2,x3,y3){var ux =x1 -x0;var uy =y1 -y0;var vx =x3 -x2;var vy =y3 -y2;var wx =x0 -x2;var wy =y0 -y2;var a =ux *ux +uy *uy;var b =ux *vx +uy *vy;var c =vx *vx +vy *vy;var d =ux *wx +uy *wy;var e =vx *wx +vy *wy;var D =            a *c -bb;var sc,sN, tc,tN;var sD =D;var tD =D;if (D ===0){sN =0;sD =1;tN =e;tD =c;}  else {sN =b *e -c
                                                                                                                                                              d;tN =a *e - b *d;if (sN <0){sN =0;tN =e;tD =c;}else if (sN >sD){sN =sD;tN =e +b;tD =c;}}if (tN <0.0){tN =0.0;if (  -d <0.0)sN =0.0;else if ( -d >a)sN =sD;else {sN = -d;sD =a;} }else if (tN >tD){tN =tD;if ( -d +b <0.0)sN =0;else if ( -d +b >a)sN =sD;else {sN = -d +b;sD =a;}}sc =sN ===0 ?0 :sN /sD;tc =tN ===0 ?0 :tN /tD;var cx =(1 -sc)*x0 +sc *x1;var cy =(1 -sc)*y0 +sc *y1;var cx2 =(1 -tc)*x2 +tc *x3;var cy2 =(1 -tc)*y2 +tc *y3;var dx =cx2 -cx;var dy =cy2 -cy;return dx *dx +dy *dy;}function compareByX(a,b){return a[0]===b[0]?a[1]-b[1]:a[0]-b[0];}function convexHull(points){points.sort(compareByX)                ;varlower =[  ];for ( var i =0;i <points.length;i++ ){while (lower.length  >= 2 &&   cross(lower[lower
                                                                                                                                                            length -2],lower[lower.length -1],points[i])<=0){lower.pop();}lower.push(points[i]);}var upper =[];for (var ii =points.length -1;ii >=0; ii-- ){while  (upper. length >=2 &&cross(upper[upper.length -2],upper[upper.length -1],points[ii])<=0){upper.pop();}upper.push(points[ii]);}upper.pop();lower.pop();return lower.concat(upper);}},"../node_modules/concaveman/node_modules/rbush/rbush.min.js":function (module){!function (t,i){true ?module.exports =i():0;}(this,function (){"use strict";function t(t,r,e,a,h){!function t(n,r,e,a,h){for (;a >e;){if (a -e >600){var o =a -e +1,s =r -e +1,l =Math.log(o),f =.5 *              Mathexp(2 *l /3),u =.5 *Math.sqrt(l  *f *(o -f)/o)*(s -o / 2 <0 ? -1 :1),m = Math.  max(e,Math.floor(r
                                                                                                                                                          s *f /o +u)),c =Math.min(a,Math.floor(r +(o -s)*f /o +u));t(n,r,m,c,h);}var p =n[r],d =e,x =a;for (i(n,e,r),h(n[a],p)>0 &&i(n,e,a);d <x;){for (i(n,d,x),d++ ,x-- ;h(n[d],p)<0;)d++ ;for (;h(n[x],p)>0;)x-- ;}0 ===h(n[e],p)?i(n,e,x):i(n, ++x,a),x <=r &&(e =x +1),r <=x &&(a =x -1);}}(t,r,e ||0,a ||t.length -1,h ||n);}function i(t,i,n){var r =t[i];t[i]=t[n],t[n]=r;}function n(t,i){return t <i ? -1 :t >i ?1 :0;}var r =function (t){void 0 ===t &&(t =9),this._maxEntries =Math.max(4,t),this._minEntries =Math.max(2,Math.ceil(.4 *this._maxEntries)),this.clear();};function e(t,i,n){if (!n)return i.indexOf(t);for (var          r = 0;r <                                                                                                                                                                                                                                                                                                                  i.length;r++ )if (n(t,i[r]))return r;return ( -1);}function a(t,i){h(t,0,t.children.length,i,t);}function h(t,i,n,r,e){e ||(e =p(null)),e.minX =1 /0,e.minY =1 /0,e.maxX = -1 /0,e.maxY = -1 /0;for (var a =i; a <n;a++ ){var h =t.children[a];o(e,t.leaf ?r(h):h);}return e;}function o(t,i){return t.minX =Math.min(t.                                                                                                                                                                        minX,i.minX),t.minY =Math.min(t.minY,i.minY),t.maxX =Math.max(t.maxX,i.maxX),t.maxY =Math.max(t.maxY,i.maxY),t;}function s(t,i){return t.minX -i.minX;}function l(t,i){return t.minY -i.minY;}function f(t){return (t.maxX -t.minX)*(t.maxY -t.minY);}function u(t){return t.maxX -t.minX +(t.maxY -t.minY);}function m(t,i){return t.minX <=                                                                                                                                                                                i.minX &&t.minY <=i.minY &&i.maxX <=t.maxX &&i.maxY <=t.maxY;}function c(                                                                                                                                                                                                                                                                                                                                         t,i){return i.minX <=t. maxX &&i.minY <=t.maxY &&i.maxX   >=t.minX &&i.                                                                                                                                                                                                                                                                                     maxY >=t.minY;}function p(t){return {children:t,height:1,leaf:!0,minX:1 /0,minY:1 /0,maxX: -1 /0,maxY: -1 /0 };}function d(i,n,r,e,a){for (var h =[n,r];h.length;)if (!((r =h.pop())-(n =h.pop())<=e)){var o =n +Math.ceil((r -n)/e /2)*e;t(i,o,n,r,a),h.push(n,o,o,r);}}return r.prototype.all =function (){return this._all(this.data,[]);}r.prototype.search =function    (t){var i =this. data,n  = [ ];if ( !c(t, i))  return n;for (var r
                                                                                                                                                        =this.toBBox,e =[];i;){for (var a =0;a <i.children.length;a++ ){var  h =i.children[a],o =i.leaf ?r(h):h;c(t,o)&&(i.leaf ?n.push(h):m(t,o)?this._all(h,n):e.push(h));}i =e.pop();}return n;},r.prototype.collides =function (t){var i =this.data;if (!c(t,i))return !1;for (var n =[];i;){for (var r =0;r <i.children.length;r++ ){var e =i.children[r],a =i.leaf ?this.toBBox(e):e;if (c(t,a) ){if (i.leaf ||m(t,a))return !0;n.push(e);}}i =n.pop();}return !1;},r.prototype.load =function (t){if (!t ||!t.length)return this;if (t.length <this._minEntries){for (var i =0;i <t.length; i++ )this.insert(t[i]);return this;}var n =               this.                                                                                                                                                                                                                                                                                                    _build(t.slice(),0,t.length -1,0);if (this.data.children.length){if (this.data.height ===n.height)this._splitRoot(this.data,n);else {if (this.data.height <n.height){var r =this.data;this.data =n,n =r;}this._insert(n,this.data.height -n.height -1,!0);}}else this.data =n;return this;},r.prototype.insert =function (t){return t &&                                                                                                                                                                    this._insert(t,this.data.height -1),this;},r.prototype.clear =function (){return this.data =p([]),this;},r.prototype.remove =function (t, i){if (!t)return this;for (var n,r,a,h =this.data,o =this.toBBox(t),s =[],l =[];h ||s.length;){if (h ||(h =s.pop(),r = s[s.length -1],n =l.pop(),a =!0),h.leaf){var f =e(t,h.children,i);if ( -1 !==f)return h.                                                                                                                                                                    children. splice(f,1),s.push(h),this._condense(s),this;}a ||h.leaf ||!m(h,                                                                                                                                                                                                                                                                                                                                      o)?r ?(n++ ,h =r.children[n],a =!1):h =null :(s.push(h),l.push(n),n =0,r =                                                                                                                                                                                                                                                                                    h,h =h.children[0]);}return this;},r.prototype.toBBox =function (t){return t;},r.prototype.compareMinX =function (t,i){return t.minX -i.minX;},r.prototype.compareMinY =function (t,i){return t.minY -i.minY;},r.prototype.toJSON =function (){return this.data;},r.prototype.fromJSON =function (t){return this.data =t,this;},r.prototype._all =functiont,i){for (var n =[];t;)t.leaf ?i.push. apply(i,t.children):n.push.apply(n, t.  children),t =n.pop(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
                                                                                                                                                       );return i;},r.prototype._build =function (t,i,n,r){var e,h =n -i +1,o =this._maxEntries;if (h <=o)return a(e =p(t.slice(i,n +1)),this.toBBox),e;r ||(r =Math.ceil(Math.log(h)/Math.log(o)),o =Math.ceil(h /Math.pow(o,r -1))),(e =p([])).leaf =!1,e.height =r;var s =Math.ceil(h /o),l =s *Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for (var f =i;f <=n;f +=l){var u =Math.min(f +l -1,n);d(t,f,u,s,this.compareMinY);for (var m =f;m <=u;m +=s){var c =Math.min(m +s -1,u);e.children.push(this._build(t,m,c,r -1));}}return a(e,this.toBBox), e;},r.prototype._chooseSubtree =function (t,i,n,r){for (;r.push(i),!i.leaf &&          r.length -                                                                                                                                                                                                                                                                                          1 !==n;){for (var e = 1 /0,a =1 /0,h =void 0,o =0;o <i.children.length;o++ ){var s =i.children[o],l =f(s),u =(m =t,c =s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u <a ?(a =u,e =l <e ?l :e,h =s):u ===a &&l <e &&(e =l,h =s);}i =h ||i.children[0];}var m,c;return i;},r.prototype.                                                                                                                                                                   _insert =function (t,i,n){var r =n ?t :this.toBBox(t),e =[],a =this._chooseSubtree(r,this.data,i,e) ;for (a.children.push(t),o(a,r);i >=0 &&e[ i].children.length >this._maxEntries;)this._split(e,i),i-- ;this._adjustParentBBoxes(r,e,i);},r.prototype._split =function (t,i){var n =t[i],r =n.children.length,e =this._minEntries;this._chooseSplitAxis(n,e,r)                                                                                                                                                            ;var  h =this._chooseSplitIndex(n,e,r),o =p(n.children.splice(h,n.children.                                                                                                                                                                                                                                                                                                                                    length -h));o.height = n.height,o.leaf  =n.leaf, a(n,this.toBBox),a(o,this.                                                                                                                                                                                                                                                                                    toBBox),i ?t[i -1].children.push(o):this._splitRoot(n,o);},r.prototype._splitRoot =function (t,i){this.data =p([t,i]),this.data.height =t.height +1,this.data.leaf =!1,a(this.data,this.toBBox);},r.prototype._chooseSplitIndex =function (t,i,n){for (var r,e,a,o,s,l,u,m =1 /0,c =1 /0,p =i;p <=n -i;p++ ){var d =h(t,0,p,this.toBBox),x =h(t,p,n,this.toBBox),v =                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               (e =d,a =x,o =void 0,s =void 0,l =void 0,u =void 0,o =Math.max(e.minX,a.minX),  s =Math.max(e.min
                                                                                                                                                     a.minY),l =Math.min(e.maxX,a.maxX),u =Math.min(e.maxY,a.maxY),Math.max(0,l -o)*Math.max(0,u -s)),M =f(d)+f(x);v <m ?(m =v,r =p,c =M <c ?M :c):v ===m &&M <c &&(c =M,r =p);}return r ||n -i;},r.prototype._chooseSplitAxis =function (t,i,n){var r =t.leaf ?this.compareMinX :s,e =t.leaf ?this.compareMinY :l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r);},r.prototype._allDistMargin =function (t,i,n,r){t.children.sort(r);for (var e =this.toBBox,a =h(t,0,i,e),s =h(t,n -i,n,e),l =u(a)+u(s),f =i;f <n -i;f++ ){var m =t.children[f];o(a,t.leaf ?e(m):m),l +=u(a);}for (var c =n -i -1;c >=i;c-- ){var            p  = t.                                                                                                                                                                                                                                                                                  children[c];o(s,t.leaf ? e(p):p),l +=u(s);}return l;},r.prototype._adjustParentBBoxes =function ( t,i,n){for (var r =n;r >=0;r-- )o(i[r],t);},r.prototype._condense =function (t){for (var i =t.length -1,n =void 0;i >=0;i-- )0 ===t[i].children.length ?i >0 ?(n =t[i -1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox);},r;});},                                                                                                                                                                 "../node_modules/d3-array/src/array.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"map":() =>map,"slice":() =>slice });var array =Array.prototype;var slice =array.slice;var map =array.map;},"../node_modules/d3-array/src/ascending.js":                                                                                                                                                   (  __unused_webpack_module,  __webpack_exports__,    __webpack_require__)  =>{                                                                                                                                                                                                                                                                                                                                  "use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(                                                                                                                                                                                                                                                                                  __webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(a,b){return a <b ? -1 :a >b ?1 :a >=b ?0 :NaN;}},"../node_modules/d3-array/src/bisect.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__. d(__webpack_exports__,{bisectLeft":() =>bisectLeft,"bisectRight":()  => bisectRight,"default
                                                                                                                                                   } );var _ascending__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-array/src/ascending.js");var  _bisector__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-array/src/bisector.js");var ascendingBisect =(0,_bisector__WEBPACK_IMPORTED_MODULE_1__["default"])( _ascending__WEBPACK_IMPORTED_MODULE_0__["default"]);var bisectRight =ascendingBisect.right;var bisectLeft =ascendingBisect.left;const __WEBPACK_DEFAULT_EXPORT__ =bisectRight;},"../node_modules/d3-array/src/bisector.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{ "use strict" ;__webpack_require__.r(           __webpack_exports__)                                                                                                                                                                                                                                                               ;__webpack_require__.d(__webpack_exports__,{"default":( ) =>__WEBPACK_DEFAULT_EXPORT__ });var _ascending__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-array/src/ascending.js");function __WEBPACK_DEFAULT_EXPORT__(compare){if (compare.length ===1)compare =ascendingComparator(compare);return {left:function (a,x,lo,hi){if (lo ==null)                                                                                                                                                              lo =0;if (hi ==null)hi =a.length;while (lo <hi){var mid =lo +hi >>>1;if (compare(a[mid],x)<0)lo =mid +1;else hi =mid;}return lo;},right:function (a,x,lo,hi){if (lo ==null)lo =0;if (hi ==null)hi =a.length;while (lo <hi){var mid  =lo +hi >>>1;if (compare(a[mid],x)>0)hi =mid;else lo =mid +1;}return lo;}};}function ascendingComparator(f){return function (d,x){return (                                                                                                                                             0,_ascending__WEBPACK_IMPORTED_MODULE_0__["default"  ]  )  (  f( d),x);}   ;}},                                                                                                                                                                                                                                                                                                                                  "../node_modules/d3-array/src/constant.js"     :  (  __unused_webpack_module,                                                                                                                                                                                                                                                                                   __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__. r(__webpack_exports__);__webpack_require__.d( __webpack_exports__,  {"default"   :( )  =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(  x) {return function  ( )  {return x;};} } ,"../node_modules/d3-array/src/cross.js":( __unused_webpack_module,  __webpack_exportswebpack_require__)  =>   {  "use strict"    ;__webpack_require__.     r(  __webpack_exports
                                                                                                                                                  ;__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _pairs__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-array/src/pairs.js");function __WEBPACK_DEFAULT_EXPORT__(values0,values1,reduce){var n0 = values0.length,n1 =values1.length,values =new Array(n0 *n1),i0,i1,i,value0;if (reduce ==null)reduce =_pairs__WEBPACK_IMPORTED_MODULE_0__.pair;for (i0 =i =0;i0 <n0; ++i0){for (value0 =values0[i0],i1 = 0;i1 <n1; ++i1, ++i){values[i]=reduce(value0,values1[i1]);}}return values;}},"../node_modules/d3-array/src/descending.js":(__unused_webpack_module,__webpack_exports__,          __webpack_require__) =>                                                                                                                                                                                                                                                      {"use strict";__webpack_require__. r(__webpack_exports__);__webpack_require__.d( __webpack_exports__,{"default" :() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(a,b){return b < a ? - 1 : b >a ?1 :b >=a ?0 :NaN;}},"../node_modules/d3-array/src/deviation.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict"                                                                                                                                                             ;__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _variance__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-array/src/variance.js");function __WEBPACK_DEFAULT_EXPORT__(array,f){var  v =(0,_variance__WEBPACK_IMPORTED_MODULE_0__["default"])(array,f);return v ?Math.                                                                                                                                       sqrt(v):v;} },"../node_modules/d3-array/src/extent.js":( __unused_webpack_module,                                                                                                                                                                                                                                                                                                                               __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__. r(                                                                                                                                                                                                                                                                                 __webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(values,valueof){var n = values.length,i = -1,value, min,max;if (valueof ==null){while ( ++i <n){ if ((value =values[ i])!=null &&value >=value){min  =max =value;while ( ++i <n){if ((value =values[i])!=null){if (min >value)min =                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               value;if (max <value)max =value;}}} }}else { while ( ++ i  < n) {if ((value  =  valueof(values[ i
                                                                                                                                                i,values)) !=null &&value >= value){min =max =value;while ( ++i  <n){  if  ((value = valueof(values[i],i,values))!=null){ if  ( min >value)min =value;if ( max < value)max =value;}}}}}return [ min,max];}},"../node_modules/d3-array/src/histogram.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{ "default":() =>__WEBPACK_DEFAULT_EXPORT__ });var  _array__WEBPACK_IMPORTED_MODULE_0__   =__webpack_require__("../node_modules/d3-array/src/array.js" );var  _bisect__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__(          "../node_modules/d3-array/src/bisect.js"                                                                                                                                                                                                                                );var _constant__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-array/src/constant.js");var  _extent__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__( "../node_modules/d3-array/src/extent.js");var _identity__WEBPACK_IMPORTED_MODULE_4__   =__webpack_require__("../node_modules/d3-array/src/identity.js");var _range__WEBPACK_IMPORTED_MODULE_5__ =                                                                                                                                                           __webpack_require__(   "../node_modules/d3-array/src/range.js"    )  ;var  _ticks__WEBPACK_IMPORTED_MODULE_6__   = __webpack_require__(  "../node_modules/d3-array/src/ticks.js" ) ;var   _threshold_sturges__WEBPACK_IMPORTED_MODULE_7__  = __webpack_require__(   "../node_modules/d3-array/src/threshold/sturges.js" ) ;function  __WEBPACK_DEFAULT_EXPORT__(  ) {   var   value  =                                                                                                                                   _identity__WEBPACK_IMPORTED_MODULE_4__[    "default"     ]  ,    domain          =                                                                                                                                                                                                                                                                                                                                 _extent__WEBPACK_IMPORTED_MODULE_3__[   "default"     ]     ,   threshold    =                                                                                                                                                                                                                                                                                _threshold_sturges__WEBPACK_IMPORTED_MODULE_7__["default" ];function histogram( data) {  var i, n =data.length, x,values =new  Array(n);for   (i   =0;i  <n; ++i){ values[i] = value(data[i] ,i, data);}var xz  =domain(values) ,x0 =xz[ 0] ,x1 =xz[1] ,tz = threshold(values,x0,x1)  ;if (!Array.isArray(tz)){tz  =(0, _ticks__WEBPACK_IMPORTED_MODULE_6__.tickStep)(x0,x1,tz);tzrange__WEBPACK_IMPORTED_MODULE_5__["default"])(Math.ceil(x0 /tz)*tz, x1,tz);}     var  m   =   tz
                                                                                                                                                length;while (tz[0]<=x0)tz.shift(), --m;while (tz[m -1]>x1)tz.pop(), --m;var bins = new Array( m +1),bin;for  (i =0;i <=m; ++i){bin =bins[i]= [] ;bin.x0 =i  >  0  ? tz[i -1]:x0;bin.x1  =i <m ?tz[ i]  :x1;} for (i  =0;i <n; ++i) {x =values[i];if (x0 <=x &&x <= x1) {bins[(0,_bisect__WEBPACK_IMPORTED_MODULE_1__["default"] )(tz,x,0,m) ]. push(data[i]);}}return bins;}histogram.value =function (_) { return arguments.length ? (value =typeof _ ==="function" ?_ :(0, _constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_),histogram) :value;};histogram.domain =function  (_){return arguments.length ?(domain =typeof _ ==="function"?_ :(0,           _constant__WEBPACK_IMPORTED_MODULE_2__[                                                                                                                                                                                                                             "default"])([_[0],_[1]]) ,histogram):domain;};histogram. thresholds =function  (_){return arguments.length ?(threshold =typeof _ ==="function"?_ :Array. isArray( _)?(0,_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_array__WEBPACK_IMPORTED_MODULE_0__.slice.call(_)):(0,_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_),histogram):threshold;};return  histogram;}},                                                                                                                                                         "../node_modules/d3-array/src/identity.js":(__unused_webpack_module,  __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__) ;__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__  });function  __WEBPACK_DEFAULT_EXPORT__(x){return x;}},"../node_modules/d3-array/src/index.js":(__unused_webpack_module,                                                                                                                               __webpack_exports__,__webpack_require__)  => {"use strict"   ;__webpack_require__. r(                                                                                                                                                                                                                                                                                                                          __webpack_exports__) ;__webpack_require__.d(__webpack_exports__, {"ascending": ( ) =>      _ascending__WEBPACK_IMPORTED_MODULE_1__[                                                                                                                                                                                                                                 "default"], "bisect": ()  => _bisect__WEBPACK_IMPORTED_MODULE_0__["default"], "bisectLeft"  :() => _bisect__WEBPACK_IMPORTED_MODULE_0__.bisectLeft,"bisectRight":( )   => _bisect__WEBPACK_IMPORTED_MODULE_0__. bisectRight, "bisector" :() =>_bisector__WEBPACK_IMPORTED_MODULE_2__[ "default"], "cross": ( ) => _cross__WEBPACK_IMPORTED_MODULE_3__[   "default"   ],"descendingdescending__WEBPACK_IMPORTED_MODULE_4__["default"] ,"deviation"  :  (  ) =>  _deviation
                                                                                                                                              "default"],"extent":() =>_extent__WEBPACK_IMPORTED_MODULE_6__["default"],"histogram" :() =>_histogram__WEBPACK_IMPORTED_MODULE_7__["default"],"max":()  =>_max__WEBPACK_IMPORTED_MODULE_11__["default"],"mean":()  =>_mean__WEBPACK_IMPORTED_MODULE_12__["default"],"median":() =>_median__WEBPACK_IMPORTED_MODULE_13__["default"],"merge":() =>_merge__WEBPACK_IMPORTED_MODULE_14__["default"],"min" :() =>_min__WEBPACK_IMPORTED_MODULE_15__["default"],"pairs":() =>_pairs__WEBPACK_IMPORTED_MODULE_16__["default"],"permute":() =>_permute__WEBPACK_IMPORTED_MODULE_17__["default"],"quantile":() =>_quantile__WEBPACK_IMPORTED_MODULE_18__["default"],            "range":(                                                                                                                                                                                                                                                     ) =>_range__WEBPACK_IMPORTED_MODULE_19__["default" ] , "scan":( ) => _scan__WEBPACK_IMPORTED_MODULE_20__["default" ],"shuffle":()  =>_shuffle__WEBPACK_IMPORTED_MODULE_21__["default" ], "sum" :( ) =>_sum__WEBPACK_IMPORTED_MODULE_22__[ "default" ], "thresholdFreedmanDiaconis":()  => _threshold_freedmanDiaconis__WEBPACK_IMPORTED_MODULE_8__["default"  ]  ,"thresholdScott":() =>                                                                                                                                                       _threshold_scott__WEBPACK_IMPORTED_MODULE_9__[ "default"]  ,  "thresholdSturges" :( )  =>_threshold_sturges__WEBPACK_IMPORTED_MODULE_10__[ "default"  ], "tickIncrement" : () => _ticks__WEBPACK_IMPORTED_MODULE_23__.tickIncrement,"tickStep" :()  => _ticks__WEBPACK_IMPORTED_MODULE_23__.tickStep,"ticks" : () =>_ticks__WEBPACK_IMPORTED_MODULE_23__[ "default"  ] , "transpose":   () =>                                                                                                                            _transpose__WEBPACK_IMPORTED_MODULE_24__[  "default" ]     ,  "variance"  :    ()  =>      _variance__WEBPACK_IMPORTED_MODULE_25__[                                                                                                                                                                                                                                                                            "default"] , "zip" : ( )   => _zip__WEBPACK_IMPORTED_MODULE_26__["default"]  })  ;var     _bisect__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                                                                                     =__webpack_require__("../node_modules/d3-array/src/bisect.js");var _ascending__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-array/src/ascending.js");var _bisector__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-array/src/bisector.js");var _cross__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/d3-array/src/cross.jsvar   _descending__WEBPACK_IMPORTED_MODULE_4__       =__webpack_require__(  "../node_modules/d3-array/src/descending.js
                                                                                                                                              )  ;var  _deviation__WEBPACK_IMPORTED_MODULE_5__  =__webpack_require__(  "../node_modules/d3-array/src/deviation.js") ;var  _extent__WEBPACK_IMPORTED_MODULE_6__  = __webpack_require__("../node_modules/d3-array/src/extent.js"  );var  _histogram__WEBPACK_IMPORTED_MODULE_7__  =  __webpack_require__(  "../node_modules/d3-array/src/histogram.js"   )  ;var _threshold_freedmanDiaconis__WEBPACK_IMPORTED_MODULE_8__ =  __webpack_require__(    "../node_modules/d3-array/src/threshold/freedmanDiaconis.js"  )  ;var _threshold_scott__WEBPACK_IMPORTED_MODULE_9__  = __webpack_require__(   "../node_modules/d3-array/src/threshold/scott.js"   ) ;var          _threshold_sturges__WEBPACK_IMPORTED_MODULE_10__                                                                                                                                                                                                         = __webpack_require__("../node_modules/d3-array/src/threshold/sturges.js");var _max__WEBPACK_IMPORTED_MODULE_11__ =__webpack_require__("../node_modules/d3-array/src/max.js");var _mean__WEBPACK_IMPORTED_MODULE_12__ =__webpack_require__("../node_modules/d3-array/src/mean.js");var _median__WEBPACK_IMPORTED_MODULE_13__ =__webpack_require__("../node_modules/d3-array/src/median.js");var                                                                                                                                                       _merge__WEBPACK_IMPORTED_MODULE_14__  = __webpack_require__( "../node_modules/d3-array/src/merge.js")  ;var  _min__WEBPACK_IMPORTED_MODULE_15__  = __webpack_require__( "../node_modules/d3-array/src/min.js" );var _pairs__WEBPACK_IMPORTED_MODULE_16__  =  __webpack_require__(  "../node_modules/d3-array/src/pairs.js");var    _permute__WEBPACK_IMPORTED_MODULE_17__ =__webpack_require__(                                                                                                                     "../node_modules/d3-array/src/permute.js" ) ;var _quantile__WEBPACK_IMPORTED_MODULE_18__ =      __webpack_require__(                                                                                                                                                                                                                                                                                          "../node_modules/d3-array/src/quantile.js");var  _range__WEBPACK_IMPORTED_MODULE_19__   =     __webpack_require__(                                                                                                                                                                                                                                                      "../node_modules/d3-array/src/range.js"   )  ;var      _scan__WEBPACK_IMPORTED_MODULE_20__  = __webpack_require__("../node_modules/d3-array/src/scan.js" );var  _shuffle__WEBPACK_IMPORTED_MODULE_21__  =__webpack_require__(  "../node_modules/d3-array/src/shuffle.js" )  ;var      _sum__WEBPACK_IMPORTED_MODULE_22__    =__webpack_require__( "../node_modules/d3-array/src/sum.js"  )  ;varticks__WEBPACK_IMPORTED_MODULE_23__       =      __webpack_require__(  "../node_modules/d3-array/src/ticks.js
                                                                                                                                          );var _transpose__WEBPACK_IMPORTED_MODULE_24__ =__webpack_require__("../node_modules/d3-array/src/transpose.js") ;var _variance__WEBPACK_IMPORTED_MODULE_25__ =__webpack_require__("../node_modules/d3-array/src/variance.js");var _zip__WEBPACK_IMPORTED_MODULE_26__ =__webpack_require__("../node_modules/d3-array/src/zip.js" );},"../node_modules/d3-array/src/max.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(values,valueof){ var n =values.          length,i = -                                                                                                                                                                                                                                        1,value,max;if (valueof ==null) {while ( ++i <n){if ((value =values[i])!=null &&value >=value){max =value;while ( ++i <n){if ((value =values[i])!=null &&value >max){max =value;}} }}}else {while ( ++i <n){if ((value = valueof(values[i],i,values))!=null &&value >=value){max =value;while ( ++i <n){if ((value =valueof(values[i],i,values)) !=null &&value >max){max = value;}}}}}return max;}},                                                                                                                                                   "../node_modules/d3-array/src/mean.js" : (__unused_webpack_module,__webpack_exports__,   __webpack_require__) =>{  "use strict";__webpack_require__.  r(__webpack_exports__);__webpack_require__.d( __webpack_exports__, {"default":  ()  =>__WEBPACK_DEFAULT_EXPORT__    }) ;var _number__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__(   "../node_modules/d3-array/src/number.js" ) ;function                                                                                                                  __WEBPACK_DEFAULT_EXPORT__(values,valueof){var  n =values.length,m  =n,i = - 1,value,sum =      0;if                                                                                                                                                                                                                                                                                                         (valueof ==null){while ( ++i <n){if (!isNaN(value =(0,_number__WEBPACK_IMPORTED_MODULE_0__[    "default"                                                                                                                                                                                                                                                                ]) (values[i])))sum  +=value;else -- m;}}else { while ( ++i  <n){ if (!isNaN(value  = (0,_number__WEBPACK_IMPORTED_MODULE_0__["default"])(valueof(values[i],i,values) )))  sum +=value;else --m;}}if   (m)return  sum /m;}} , "../node_modules/d3-array/src/median.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) => {"use strict";__webpack_require__.r( __webpack_exports__)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ;__webpack_require__.   d(  __webpack_exports__,   {   "default
                                                                                                                                        });var _ascending__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-array/src/ascending.js");var _number__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-array/src/number.js");var _quantile__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-array/src/quantile.js");function __WEBPACK_DEFAULT_EXPORT__(values,valueof){var n =values.length,i =  -1,value,numbers =[];if (valueof ==null){while ( ++i <n){if (!isNaN(value =(0,_number__WEBPACK_IMPORTED_MODULE_1__["default"])(values[i]))){numbers.push(value);}}}else {while ( ++i <n){if (!isNaN(value =(0,_number__WEBPACK_IMPORTED_MODULE_1__[          "default"])                                                                                                                                                                                                                                     (valueof( values[i] ,    i,values) ))){ numbers.push(value);} }}return  ( 0, _quantile__WEBPACK_IMPORTED_MODULE_2__[ "default"])(numbers.sort(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"]),0.5);} } , "../node_modules/d3-array/src/merge.js" :(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{ "use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(                                                                                                                                                 __webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(arrays){var n = arrays.length,m,i = -1,j =0,merged,array;while (  ++i <n)j +=arrays[i].length;merged =new Array(j);while ( --n >=0) {array =arrays[n];m =array.length;while  ( --m >=0){merged[ --j]= array[m];}}return merged;}},"../node_modules/d3-array/src/min.js":(__unused_webpack_module,                                                                                                                 __webpack_exports__, __webpack_require__)   => {   "use strict"  ;__webpack_require__. r(     __webpack_exports__)                                                                                                                                                                                                                                                                                         ;__webpack_require__.d( __webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ } )    ;function                                                                                                                                                                                                                                                                __WEBPACK_DEFAULT_EXPORT__(values,valueof){var n =values.length,i = -1,value,min;if (valueof ==null){while ( ++i <n){if ((value =values[i])!=null &&value >=value){min =value;while ( ++i <n){if ((value =values[i])!=null &&min >value){min =value;}}}}}else {while ( ++i <n){if ((value =valueof(values[i],i,values))!=null &&value >=value){min =value;while ( ++i <n){if ((value =valueof(values[ii,  values) )!=null  && min  >value) {  min =  value;}} }} }return  min;} } ,  "../node_modules/d3-array/src/number.js
                                                                                                                                      :(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(x){return x ===null ?NaN : +x;}},"../node_modules/d3-array/src/pairs.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__,"pair":() =>pair });function __WEBPACK_DEFAULT_EXPORT__(array,f){if (f ==null)f =pair;var i =0,n =array.length -1,p =           array[0] ,                                                                                                                                                                                                                                pairs =new Array(n  <0 ?0 : n) ;while ( i <  n)pairs[i]   = f(p,p  =array[  ++i]);return pairs;}function pair(a,b) {return [a,b];}},"../node_modules/d3-array/src/permute.js" :(__unused_webpack_module,__webpack_exports__, __webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__, {"default":( ) => __WEBPACK_DEFAULT_EXPORT__ });function                                                                                                                                             __WEBPACK_DEFAULT_EXPORT__(array, indexes){var  i   =indexes.length, permutes  =new Array(i) ;while ( i--   )permutes[i]=array[ indexes[i] ];return permutes;}},"../node_modules/d3-array/src/quantile.js":(__unused_webpack_module, __webpack_exports__,  __webpack_require__)  =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d( __webpack_exports__,{"default": (  ) =>                                                                                                                  __WEBPACK_DEFAULT_EXPORT__     }  )   ;var     _number__WEBPACK_IMPORTED_MODULE_0__   =     __webpack_require__(                                                                                                                                                                                                                                                                                      "../node_modules/d3-array/src/number.js" ) ;function __WEBPACK_DEFAULT_EXPORT__(  values,p,   valueof){if (                                                                                                                                                                                                                                                              valueof ==null)valueof = _number__WEBPACK_IMPORTED_MODULE_0__["default"];if  (! (n =values.length))return ;if ((p  = +p)<=0 ||n <2) return ( +valueof(values[0],0,values));if (p >=1)return ( +valueof(values[n -1],n -1,values));var n,i =(n -1)*p,i0 =Math.floor(i),value0 = + valueof(values[i0],i0,values),value1 = +valueof(values[ i0 +1],i0 +1,values);return value0  +(value1 -value0)*(i -i0);} },                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          "../node_modules/d3-array/src/range.js"  :      (   __unused_webpack_module,  __webpack_exports
                                                                                                                                     __webpack_require__) =>{ "use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__( start,stop,step){start = +start, stop = +stop,step =(n =arguments.length)<2 ?(stop =start,start =0,1):n <3 ?1  : +step;var i = -1,n  =Math.max(0,Math.ceil((stop -start)/step))| 0,range =new Array(n);while ( ++i <  n){range[i]=start +i *step;}return range;}} ,"../node_modules/d3-array/src/scan.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{ "use strict";__webpack_require__. r(__webpack_exports__);__webpack_require__.d(         __webpack_exports__,                                                                                                                                                                                                                   {"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _ascending__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-array/src/ascending.js");function __WEBPACK_DEFAULT_EXPORT__(values,compare){if ( !(n =  values.length))return ;var n,i =0,j =0,xi,xj =values[j];if (compare ==null)compare =_ascending__WEBPACK_IMPORTED_MODULE_0__["default"];while ( ++i <n){if (compare(xi =values[i],xj)<0 ||                                                                                                                                           compare(xj,xj)!==0){xj  =xi,j =i;}}if (compare(xj,xj)===0)return j;}},"../node_modules/d3-array/src/shuffle.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default": ()  =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(array,i0,i1){var m =  (i1 ==null ?                                                                                                           array.length :i1)-(i0 =i0 ==null ?0 : +i0),t,i;while (m){i =Math.random()*m-- |0;t =array[m +     i0]                                                                                                                                                                                                                                                                                                   ;array[m  +   i0]   =  array[   i   +   i0]   ;array[  i   + i0] = t;} return   array;}  } ,   "../node_modules/d3-array/src/sum.js"                                                                                                                                                                                                                                       :(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(values,valueof){var n =values.length,i = -1,value,sum =0;if (valueof ==null){while ( ++i <n){if (value = +values[i])sum +=value;}}else {while ( ++in){ if  (value  = +valueof( values[ i],i,values))sum +=value;}}return sum;}},  "../node_modules/d3-array/src/threshold/freedmanDiaconis.js
                                                                                                                                   :( __unused_webpack_module, __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":( ) =>__WEBPACK_DEFAULT_EXPORT__ } );var _array__WEBPACK_IMPORTED_MODULE_0__ =  __webpack_require__("../node_modules/d3-array/src/array.js") ;var _ascending__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-array/src/ascending.js");var _number__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-array/src/number.js")  ;var _quantile__WEBPACK_IMPORTED_MODULE_3__  =__webpack_require__("../node_modules/d3-array/src/quantile.js" );function         __WEBPACK_DEFAULT_EXPORT__(                                                                                                                                                                                                        values,min,  max) {values  =_array__WEBPACK_IMPORTED_MODULE_0__. map. call(values,_number__WEBPACK_IMPORTED_MODULE_2__["default" ]). sort( _ascending__WEBPACK_IMPORTED_MODULE_1__["default" ]);return  Math.ceil((max -min)  /(2  *(( 0, _quantile__WEBPACK_IMPORTED_MODULE_3__["default" ]) (values,0.75)- (0,_quantile__WEBPACK_IMPORTED_MODULE_3__["default"])(values,0.25))*  Math.pow( values.length, -1 /3)  ));}},                                                                                                                                        "../node_modules/d3-array/src/threshold/scott.js":( __unused_webpack_module,__webpack_exports__,__webpack_require__)    => { "use strict" ;__webpack_require__.r(__webpack_exports__) ;__webpack_require__.d( __webpack_exports__,{"default":( )   =>__WEBPACK_DEFAULT_EXPORT__  } )  ;var _deviation__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-array/src/deviation.js" ) ;function                                                                                                           __WEBPACK_DEFAULT_EXPORT__( values, min, max){ return Math.  ceil( (max  -min)/ ( 3.5  *( 0,    _deviation__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                                                                                                "default" ] )   ( values) *    Math. pow(values.  length,     -  1   / 3)   ) )   ;}  } ,   "../node_modules/d3-array/src/threshold/sturges.js"                                                                                                                                                                                                                          :(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(values){return Math. ceil(Math.log(values.length)/Math.LN2)+1;}},"../node_modules/d3-array/src/ticks.js":(__unused_webpack_module,__webpack_exportswebpack_require__)    =>   {  "use strict"      ;__webpack_require__. r(  __webpack_exports
                                                                                                                                  ;__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__,"tickIncrement":() =>tickIncrement,"tickStep":() =>tickStep });var e10 =Math.sqrt(50),e5 =Math.sqrt(10),e2 =Math.sqrt(2);function __WEBPACK_DEFAULT_EXPORT__(start,stop,count){var reverse,i = -1,n,ticks,step;stop = +stop,start = +start,count = +count;if (start ===stop &&count >0)return [start];if (reverse =stop <start)n =start,start =stop,stop =n;if ((step =tickIncrement(start,stop,count))===0 ||!isFinite(step))return [];if (step >0){start =Math.ceil(start /step);stop =Math.floor(stop /step);ticks =new Array(n =Math.ceil(stop -start +1));while ( ++i <n)ticks[i]=(start         + i)* step;}                                                                                                                                                                                                                    else {start =Math.floor(start *step);stop =Math.ceil(stop *step);ticks =new Array(n =Math.ceil(start -stop +1));while ( ++i <n)ticks[i]=(start -i)/step;}if (reverse)ticks.reverse();return ticks;}function tickIncrement(start,stop,count){var step =(stop -start)/Math.max(0,count),power =Math.floor(Math. log(step)/Math.LN10),error =step /Math.pow(10,power);return power >=0 ?(error >=e10 ?10 :error >=e5 ?5 :error >=                                                                                                                                      e2 ?2 :1)*Math.pow(10,power): -Math.pow(10, -power)/(error >=e10 ?10 :error >=e5 ?5 :error  >=e2 ?2 :1);}function tickStep( start,stop,count){var step0 =Math. abs(stop -start)/Math.max(0,count),step1 =Math.pow(10,Math.floor(Math.log(step0)/Math.LN10) ),error =step0 /step1;if (error >=e10)step1  *=10;else if (error >=e5)step1 *=5;else if (error >=e2)step1 *=2;return stop  <start ? -step1 :step1;}} ,                                                                                                          "../node_modules/d3-array/src/transpose.js" :  (__unused_webpack_module,__webpack_exports__,    __webpack_require__) =>                                                                                                                                                                                                                                                                           {  "use strict"   ;__webpack_require__. r(  __webpack_exports__)  ;__webpack_require__.   d(    __webpack_exports__,                                                                                                                                                                                                                                                          {"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _min__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-array/src/min.js");function __WEBPACK_DEFAULT_EXPORT__(matrix){if (!(n =matrix.length))return [];for  (var i = -1,m =(0,_min__WEBPACK_IMPORTED_MODULE_0__["default"])(matrix,length),transpose =new Array(m); ++i <m;){for (var j = -1,n,row =transpose[i]=new Array(n); ++j <n;){rowj]=matrix[j][ i];}}return  transpose;}function  length( d){return d.length;}},  "../node_modules/d3-array/src/variance.js
                                                                                                                                :(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _number__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-array/src/number.js") ;function  __WEBPACK_DEFAULT_EXPORT__(values,valueof){var n =values.length,m =0,i = -1,mean =0,value,delta,sum =0;if (valueof ==null){while ( ++i <n){if (!isNaN(value =(0,_number__WEBPACK_IMPORTED_MODULE_0__["default"])(values[i]))){delta =value -mean;mean +=delta / ++m;sum +=delta *(value -mean);}} }else {while ( ++i <n){if (!isNaN(value =(0,         _number__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                       "default"]) (valueof( values[i]  ,i,values))) ) {delta  =value -mean;mean +=delta / ++m;sum  +=delta * (value  -mean) ;}}} if (m > 1)return sum / ( m  -1);}},"../node_modules/d3-array/src/zip.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>  {"use strict";__webpack_require__. r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__  })  ;var                                                                                                                                    _transpose__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-array/src/transpose.js");function __WEBPACK_DEFAULT_EXPORT__(){return ( 0,_transpose__WEBPACK_IMPORTED_MODULE_0__["default"])(arguments);}},"../node_modules/d3-geo/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict" ;__webpack_require__.r(__webpack_exports__);__webpack_require__. d(                                                                                                        __webpack_exports__,{"geoAlbers":()  =>_src_projection_albers__WEBPACK_IMPORTED_MODULE_11__[    "default"                                                                                                                                                                                                                                                                                         ],"geoAlbersUsa": () =>_src_projection_albersUsa__WEBPACK_IMPORTED_MODULE_12__["default"],    "geoArea": ( )   =>                                                                                                                                                                                                                                                            _src_area__WEBPACK_IMPORTED_MODULE_0__[  "default"  ],"geoAzimuthalEqualArea"  :(  )  =>_src_projection_azimuthalEqualArea__WEBPACK_IMPORTED_MODULE_13__["default" ],"geoAzimuthalEqualAreaRaw" : ()  => _src_projection_azimuthalEqualArea__WEBPACK_IMPORTED_MODULE_13__.azimuthalEqualAreaRaw, "geoAzimuthalEquidistant":(  )  => _src_projection_azimuthalEquidistant__WEBPACK_IMPORTED_MODULE_14__["defaultgeoAzimuthalEquidistantRaw"       :          (               )       =>  _src_projection_azimuthalEquidistant
                                                                                                                                azimuthalEquidistantRaw,"geoBounds": () => _src_bounds__WEBPACK_IMPORTED_MODULE_1__[ "default"] ,"geoCentroid":( ) =>_src_centroid__WEBPACK_IMPORTED_MODULE_2__["default"],"geoCircle": () =>_src_circle__WEBPACK_IMPORTED_MODULE_3__["default" ] , "geoClipExtent" :() => _src_clip_extent__WEBPACK_IMPORTED_MODULE_4__["default"], "geoConicConformal":() =>_src_projection_conicConformal__WEBPACK_IMPORTED_MODULE_15__["default"],"geoConicConformalRaw" : ( )  => _src_projection_conicConformal__WEBPACK_IMPORTED_MODULE_15__.conicConformalRaw,"geoConicEqualArea": ( ) =>_src_projection_conicEqualArea__WEBPACK_IMPORTED_MODULE_16__[ "default" ], "geoConicEqualAreaRaw":() =>         _src_projection_conicEqualArea__WEBPACK_IMPORTED_MODULE_16__.                                                                                                                                                            conicEqualAreaRaw,"geoConicEquidistant":   () =>_src_projection_conicEquidistant__WEBPACK_IMPORTED_MODULE_17__[ "default"]  ,"geoConicEquidistantRaw": () =>_src_projection_conicEquidistant__WEBPACK_IMPORTED_MODULE_17__.conicEquidistantRaw,"geoContains"  : ()  =>_src_contains__WEBPACK_IMPORTED_MODULE_5__["default"],  "geoDistance":( ) =>_src_distance__WEBPACK_IMPORTED_MODULE_6__["default"],  "geoEquirectangular"  :() =>                                                                                                                                     _src_projection_equirectangular__WEBPACK_IMPORTED_MODULE_18__["default"] ,"geoEquirectangularRaw" :() => _src_projection_equirectangular__WEBPACK_IMPORTED_MODULE_18__.equirectangularRaw,  "geoGnomonic": (  )   => _src_projection_gnomonic__WEBPACK_IMPORTED_MODULE_19__[ "default"],"geoGnomonicRaw" : ()   => _src_projection_gnomonic__WEBPACK_IMPORTED_MODULE_19__.  gnomonicRaw,"geoGraticule" :(   )   =>                                                                                                         _src_graticule__WEBPACK_IMPORTED_MODULE_7__["default"   ]  , "geoGraticule10":   ()      =>    _src_graticule__WEBPACK_IMPORTED_MODULE_7__.                                                                                                                                                                                                                                                   graticule10,"geoIdentity":(  )  =>  _src_projection_identity__WEBPACK_IMPORTED_MODULE_20__[    "default"       ]   ,                                                                                                                                                                                                                                                           "geoInterpolate":() =>_src_interpolate__WEBPACK_IMPORTED_MODULE_8__["default"],"geoLength":() =>_src_length__WEBPACK_IMPORTED_MODULE_9__[ "default"],"geoMercator":() =>_src_projection_mercator__WEBPACK_IMPORTED_MODULE_22__["default"],"geoMercatorRaw":() =>_src_projection_mercator__WEBPACK_IMPORTED_MODULE_22__.mercatorRaw,"geoNaturalEarth1":() =>_src_projection_naturalEarthdefault"    ]   ,  "geoNaturalEarth1Raw"   :       (     )        =>  _src_projection_naturalEarth
                                                                                                                              naturalEarth1Raw, "geoOrthographic":() =>_src_projection_orthographic__WEBPACK_IMPORTED_MODULE_24__["default"],"geoOrthographicRaw":() =>_src_projection_orthographic__WEBPACK_IMPORTED_MODULE_24__.orthographicRaw,"geoPath": () =>_src_path_index__WEBPACK_IMPORTED_MODULE_10__["default"],"geoProjection":() =>_src_projection_index__WEBPACK_IMPORTED_MODULE_21__["default"] ,"geoProjectionMutator":() =>_src_projection_index__WEBPACK_IMPORTED_MODULE_21__. projectionMutator,"geoRotation":() =>_src_rotation__WEBPACK_IMPORTED_MODULE_27__["default"],"geoStereographic":( )  =>_src_projection_stereographic__WEBPACK_IMPORTED_MODULE_25__["default"],"geoStereographicRaw":() =>         _src_projection_stereographic__WEBPACK_IMPORTED_MODULE_25__.                                                                                                                                                            stereographicRaw,  "geoStream": ()  =>  _src_stream__WEBPACK_IMPORTED_MODULE_28__[  "default"  ] ,  "geoTransform" : ()  =>_src_transform__WEBPACK_IMPORTED_MODULE_29__[ "default"],"geoTransverseMercator" : ( ) =>_src_projection_transverseMercator__WEBPACK_IMPORTED_MODULE_26__["default" ],   "geoTransverseMercatorRaw" :  ()   =>_src_projection_transverseMercator__WEBPACK_IMPORTED_MODULE_26__. transverseMercatorRaw  });var                                                                                                                                _src_area__WEBPACK_IMPORTED_MODULE_0__   = __webpack_require__( "../node_modules/d3-geo/src/area.js"  ) ;var  _src_bounds__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__( "../node_modules/d3-geo/src/bounds.js" )  ;var  _src_centroid__WEBPACK_IMPORTED_MODULE_2__ =  __webpack_require__(     "../node_modules/d3-geo/src/centroid.js");var     _src_circle__WEBPACK_IMPORTED_MODULE_3__  =  __webpack_require__(                                                                                                        "../node_modules/d3-geo/src/circle.js");var _src_clip_extent__WEBPACK_IMPORTED_MODULE_4__ =    __webpack_require__(                                                                                                                                                                                                                                                                         "../node_modules/d3-geo/src/clip/extent.js");var _src_contains__WEBPACK_IMPORTED_MODULE_5__      =__webpack_require__(                                                                                                                                                                                                                                                           "../node_modules/d3-geo/src/contains.js") ;var   _src_distance__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(   "../node_modules/d3-geo/src/distance.js"  );var    _src_graticule__WEBPACK_IMPORTED_MODULE_7__   = __webpack_require__( "../node_modules/d3-geo/src/graticule.js" ) ;var  _src_interpolate__WEBPACK_IMPORTED_MODULE_8__  =   __webpack_require__( "../node_modules/d3-geo/src/interpolate.js") ;varsrc_length__WEBPACK_IMPORTED_MODULE_9__         =   __webpack_require__(  "../node_modules/d3-geo/src/length.js
                                                                                                                              )   ;var    _src_path_index__WEBPACK_IMPORTED_MODULE_10__   =  __webpack_require__( "../node_modules/d3-geo/src/path/index.js")    ;var _src_projection_albers__WEBPACK_IMPORTED_MODULE_11__ =    __webpack_require__("../node_modules/d3-geo/src/projection/albers.js" )  ;var _src_projection_albersUsa__WEBPACK_IMPORTED_MODULE_12__ =   __webpack_require__(   "../node_modules/d3-geo/src/projection/albersUsa.js")    ;var   _src_projection_azimuthalEqualArea__WEBPACK_IMPORTED_MODULE_13__  = __webpack_require__( "../node_modules/d3-geo/src/projection/azimuthalEqualArea.js")   ;var  _src_projection_azimuthalEquidistant__WEBPACK_IMPORTED_MODULE_14__  =__webpack_require__(          "../node_modules/d3-geo/src/projection/azimuthalEquidistant.js"                                                                                                                                                     )   ;var     _src_projection_conicConformal__WEBPACK_IMPORTED_MODULE_15__    =   __webpack_require__(  "../node_modules/d3-geo/src/projection/conicConformal.js"    )   ;var    _src_projection_conicEqualArea__WEBPACK_IMPORTED_MODULE_16__  =    __webpack_require__(  "../node_modules/d3-geo/src/projection/conicEqualArea.js"  ) ;var       _src_projection_conicEquidistant__WEBPACK_IMPORTED_MODULE_17__     = __webpack_require__(                                                                                                                                   "../node_modules/d3-geo/src/projection/conicEquidistant.js");var  _src_projection_equirectangular__WEBPACK_IMPORTED_MODULE_18__ =__webpack_require__(  "../node_modules/d3-geo/src/projection/equirectangular.js");var _src_projection_gnomonic__WEBPACK_IMPORTED_MODULE_19__  =__webpack_require__("../node_modules/d3-geo/src/projection/gnomonic.js");var  _src_projection_identity__WEBPACK_IMPORTED_MODULE_20__ =                                                                                                __webpack_require__(                 "../node_modules/d3-geo/src/projection/identity.js"           )         ;var _src_projection_index__WEBPACK_IMPORTED_MODULE_21__                                                                                                                                                                                                                             =  __webpack_require__(    "../node_modules/d3-geo/src/projection/index.js"   )       ;var   _src_projection_mercator__WEBPACK_IMPORTED_MODULE_22__                                                                                                                                                                                                                              =   __webpack_require__(  "../node_modules/d3-geo/src/projection/mercator.js"   )     ;var      _src_projection_naturalEarth1__WEBPACK_IMPORTED_MODULE_23__  =   __webpack_require__(     "../node_modules/d3-geo/src/projection/naturalEarth1.js"  )    ;var   _src_projection_orthographic__WEBPACK_IMPORTED_MODULE_24__   = __webpack_require__("../node_modules/d3-geo/src/projection/orthographic.js"     )     ;varsrc_projection_stereographic__WEBPACK_IMPORTED_MODULE_25__           =  __webpack_require
                                                                                                                           "../node_modules/d3-geo/src/projection/stereographic.js" );var  _src_projection_transverseMercator__WEBPACK_IMPORTED_MODULE_26__ =__webpack_require__("../node_modules/d3-geo/src/projection/transverseMercator.js") ;var _src_rotation__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(  "../node_modules/d3-geo/src/rotation.js" ) ;var _src_stream__WEBPACK_IMPORTED_MODULE_28__ =__webpack_require__("../node_modules/d3-geo/src/stream.js");var _src_transform__WEBPACK_IMPORTED_MODULE_29__ =__webpack_require__("../node_modules/d3-geo/src/transform.js");}, "../node_modules/d3-geo/src/adder.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict"          ;__webpack_require__.                                                                                                                                                                                           r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(){return new Adder();}function Adder(){this.reset();}Adder.prototype ={constructor:Adder,reset:function (){this.s =this.t =0;},add:function (y){add(temp,y,this.t);add(this,temp.s,this.s);if (this.s)this.t +=temp.t;else this.s =temp.t;},valueOf:function (){return this.s;}};var temp =                                                                                                                               new Adder();function add(adder,a,b){var x =adder.s =a +b,bv =x -a,av =x -bv;adder.t =a -av +(b -bv);}},"../node_modules/d3-geo/src/area.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"areaRingSum":() =>areaRingSum,"areaStream":() =>areaStream,"default":() =>__WEBPACK_DEFAULT_EXPORT__ }                                                                                                )          ;var     _adder__WEBPACK_IMPORTED_MODULE_0__           =         __webpack_require__(      "../node_modules/d3-geo/src/adder.js"                                                                                                                                                                                                                                                       )         ;var      _math__WEBPACK_IMPORTED_MODULE_1__    =       __webpack_require__(    "../node_modules/d3-geo/src/math.js"                                                                                                                                                                                                                                                );var  _noop__WEBPACK_IMPORTED_MODULE_2__  = __webpack_require__("../node_modules/d3-geo/src/noop.js");var _stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( "../node_modules/d3-geo/src/stream.js");var areaRingSum =(0,_adder__WEBPACK_IMPORTED_MODULE_0__[ "default"])();var areaSum = (0,_adder__WEBPACK_IMPORTED_MODULE_0__[ "default"])() ,lambda00,phi00,lambda0,cosPhi0,sinPhi0;var areaStream  ={ pointnoop__WEBPACK_IMPORTED_MODULE_2__[    "default"    ]          ,  lineStart:  _noop
                                                                                                                         "default"],lineEnd:_noop__WEBPACK_IMPORTED_MODULE_2__["default"],polygonStart:function (){areaRingSum.reset();areaStream.lineStart =areaRingStart;areaStream.lineEnd =areaRingEnd;},polygonEnd:function (){var areaRing = +areaRingSum;areaSum.add(areaRing <0 ?_math__WEBPACK_IMPORTED_MODULE_1__.tau +areaRing :areaRing);this.lineStart =this.lineEnd =this.point =_noop__WEBPACK_IMPORTED_MODULE_2__["default"];},sphere:function (){areaSum.add(_math__WEBPACK_IMPORTED_MODULE_1__.tau);}};function areaRingStart(){areaStream.point =areaPointFirst;}function areaRingEnd(){areaPoint(lambda00,phi00);}function areaPointFirst(lambda,phi){areaStream.point =areaPoint;lambda00 =lambda,phi00 =          phi;lambda                                                                                                                                                                                                 *=_math__WEBPACK_IMPORTED_MODULE_1__.radians,phi *=_math__WEBPACK_IMPORTED_MODULE_1__.radians;lambda0  =lambda,cosPhi0 =(0,_math__WEBPACK_IMPORTED_MODULE_1__.cos)(phi   = phi /2 +_math__WEBPACK_IMPORTED_MODULE_1__. quarterPi),sinPhi0 =(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(phi);}function areaPoint(lambda,phi){lambda *=_math__WEBPACK_IMPORTED_MODULE_1__.radians,phi *=_math__WEBPACK_IMPORTED_MODULE_1__.radians;phi =phi   /2 +                                                                                                                                _math__WEBPACK_IMPORTED_MODULE_1__.quarterPi;var dLambda =lambda -lambda0,sdLambda =dLambda >=0 ?1 : -1,adLambda =sdLambda *dLambda,cosPhi =( 0,_math__WEBPACK_IMPORTED_MODULE_1__.cos)( phi),sinPhi =(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(phi), k =sinPhi0 *sinPhi,u =cosPhi0 *cosPhi +k *(0, _math__WEBPACK_IMPORTED_MODULE_1__. cos)(adLambda),v =k *sdLambda *(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(adLambda)                                                                                            ;areaRingSum. add((0,_math__WEBPACK_IMPORTED_MODULE_1__.atan2)( v,u) ) ;lambda0 =lambda, cosPhi0 =cosPhi, sinPhi0                                                                                                                                                                                                                                                                                 =   sinPhi;}function   __WEBPACK_DEFAULT_EXPORT__(object)  {   areaSum.  reset(  )  ;(0,    _stream__WEBPACK_IMPORTED_MODULE_3__[                                                                                                                                                                                                                                                "default"])(object,areaStream);return areaSum *2;}},"../node_modules/d3-geo/src/bounds.js":( __unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__. r(__webpack_exports__);__webpack_require__. d(__webpack_exports__,{"default":( )  =>__WEBPACK_DEFAULT_EXPORT__ });var  _adder__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/adder.js");vararea__WEBPACK_IMPORTED_MODULE_1__        =     __webpack_require__(  "../node_modules/d3-geo/src/area.js
                                                                                                                        );var _cartesian__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-geo/src/cartesian.js");var _math__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/d3-geo/src/math.js");var _stream__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__("../node_modules/d3-geo/src/stream.js");var lambda0,phi0,lambda1,phi1,lambda2,lambda00,phi00,p0,deltaSum =(0,_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),ranges,range;var boundsStream ={point:boundsPoint,lineStart:boundsLineStart,lineEnd:boundsLineEnd,polygonStart:function (){boundsStream.point =boundsRingPoint;boundsStream.lineStart =boundsRingStart;boundsStream.lineEnd =boundsRingEnd;deltaSum.reset(                    )                                                                                                                                                                                             ;_area__WEBPACK_IMPORTED_MODULE_1__.areaStream.polygonStart();},polygonEnd:function (){_area__WEBPACK_IMPORTED_MODULE_1__.areaStream.polygonEnd();boundsStream.point =boundsPoint;boundsStream.lineStart =boundsLineStart;boundsStream.lineEnd =boundsLineEnd;if (_area__WEBPACK_IMPORTED_MODULE_1__.areaRingSum <0)lambda0 = -(lambda1 =180),phi0 = -(phi1 =90);else if (deltaSum >_math__WEBPACK_IMPORTED_MODULE_3__.epsilon)phi1 =90;else if (     deltaSum                                                                                                                   < -_math__WEBPACK_IMPORTED_MODULE_3__.epsilon)phi0 = -90;range[0]=lambda0,range[1]=lambda1;}};function boundsPoint(lambda,phi){ranges.push(range =[lambda0 =lambda,lambda1 =lambda]);if (phi <phi0)phi0 =phi;if (phi >phi1)phi1 =phi;}function linePoint(lambda,phi){var p =(0,_cartesian__WEBPACK_IMPORTED_MODULE_2__.cartesian)([lambda *_math__WEBPACK_IMPORTED_MODULE_3__.radians,phi *_math__WEBPACK_IMPORTED_MODULE_3__.                                                                                          radians]    );if (p0){var normal   =( 0,_cartesian__WEBPACK_IMPORTED_MODULE_2__.cartesianCross)(p0,p) ,    equatorial                                                                                                                                                                                                                                                                        =[ normal[ 1],  -normal[0],   0],inflection  =(0,   _cartesian__WEBPACK_IMPORTED_MODULE_2__.    cartesianCross) ( equatorial,                                                                                                                                                                                                                                                         normal);(0,_cartesian__WEBPACK_IMPORTED_MODULE_2__.cartesianNormalizeInPlace)(inflection);inflection =(0,_cartesian__WEBPACK_IMPORTED_MODULE_2__.spherical)(inflection);var delta =lambda -lambda2,sign =delta >0 ?1 : -1,lambdai =inflection[0]*_math__WEBPACK_IMPORTED_MODULE_3__.degrees *sign,phii,antimeridian =(0,_math__WEBPACK_IMPORTED_MODULE_3__.abs)(delta)>180;if (antimeridian ^(sign *lambda2 <lambdai &&lambdaisign *lambda)) { phii = inflection[  1] * _math__WEBPACK_IMPORTED_MODULE_3__.  degrees;if (phii
                                                                                                                      phi1)phi1 =phii;}else if (lambdai =(lambdai +360)%360 -180,antimeridian ^(sign *lambda2 <lambdai &&lambdai <sign *lambda)){phii = -inflection[1]*_math__WEBPACK_IMPORTED_MODULE_3__.degrees;if (phii <phi0)phi0 =phii;}else {if (phi <phi0)phi0 =phi;if (phi >phi1)phi1 =phi;}if (antimeridian){if (lambda <lambda2){if (angle(lambda0,lambda)>angle(lambda0,lambda1))lambda1 =lambda;}else {if (angle(lambda,lambda1)>angle(lambda0,lambda1))lambda0 =lambda;}}else {if (lambda1 >=lambda0){if (lambda <lambda0)lambda0 =lambda;if (lambda > lambda1)lambda1 =lambda;}else {if (lambda >lambda2){if (angle(lambda0,lambda)>angle(lambda0,lambda1))lambda1 =lambda;}else {if (angle(lambda,lambda1)>angle(             lambda0,                                                                                                                                                                                          lambda1)) lambda0 =lambda;}} } } else {ranges.  push(range =  [lambda0 =lambda, lambda1 =lambda]);} if  (phi <phi0)phi0 =phi;if ( phi  >phi1) phi1 = phi;p0  =p,  lambda2 =lambda;}function boundsLineStart(){boundsStream.point =linePoint;}function boundsLineEnd(){ range[0]=lambda0,range[1]= lambda1;boundsStream.point =boundsPoint;p0 =null;} function  boundsRingPoint(lambda,phi) {if (p0){var delta   =lambda  -lambda2;deltaSum.add(( 0,     _math__WEBPACK_IMPORTED_MODULE_3__.                                                                                         abs)(delta)>180 ?delta   +  (delta > 0  ? 360 : - 360) :delta) ;} else {  lambda00  = lambda,phi00 = phi;}_area__WEBPACK_IMPORTED_MODULE_1__.areaStream.  point(    lambda,phi);linePoint(lambda,phi) ;} function boundsRingStart(){ _area__WEBPACK_IMPORTED_MODULE_1__.areaStream.lineStart() ;} function boundsRingEnd( ){boundsRingPoint( lambda00,phi00);_area__WEBPACK_IMPORTED_MODULE_1__.areaStream. lineEnd();if  (( 0,                                                                                        _math__WEBPACK_IMPORTED_MODULE_3__. abs)(deltaSum)>_math__WEBPACK_IMPORTED_MODULE_3__.epsilon)lambda0 = -(lambda1 =180);range[ 0] =                                                                                                                                                                                                                                                          lambda0, range[ 1] =lambda1;p0 = null;} function angle(lambda0,lambda1){return  (lambda1 -=    lambda0)< 0  ?lambda1  + 360 :                                                                                                                                                                                                                                                         lambda1;}function rangeCompare(a,b){return  a[0] -b[0];}function   rangeContains(range,x){return range[0]<=range[1]?range[ 0]<=x &&x <=range[1]:x <range[0]||range[1]<x;}function __WEBPACK_DEFAULT_EXPORT__(feature){var i,n,a,b, merged, deltaMax,delta;phi1 =lambda1 = - (lambda0 =phi0 =Infinity);ranges =[];( 0,_stream__WEBPACK_IMPORTED_MODULE_4__["default"]) (feature,boundsStream);if (n  =ranges. length){ranges.sortrangeCompare);for (i =1,a =ranges[0],merged =[ a];i <n; ++i){b =ranges[i];if (  rangeContains( a,b
                                                                                                                      0])||rangeContains(a,b[1])){if (angle(a[0],b[1])>angle(a[0],a[1]) )a[1]=b[1];if (angle(b[0],a[1])>angle(a[0],a[1]))a[0]=b[0];}else {merged.push(a =b);}}for (deltaMax = -Infinity,n =merged.length -1,i =0,a =merged[n];i <=n;a =b, ++i){b =merged[i];if ((delta =angle(a[1],b[0]))>deltaMax)deltaMax =delta,lambda0 =b[0],lambda1 =a[1];}}ranges = range =null;return lambda0 ===Infinity ||phi0 ===Infinity ?[[NaN,NaN],[NaN,NaN]]:[[lambda0,phi0],[lambda1,phi1]];}},"../node_modules/d3-geo/src/cartesian.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"cartesian":() =>            cartesian,                                                                                                                                                                                       "cartesianAddInPlace":() =>cartesianAddInPlace,"cartesianCross":() =>cartesianCross,"cartesianDot":() =>cartesianDot,"cartesianNormalizeInPlace":() =>cartesianNormalizeInPlace,"cartesianScale":() =>cartesianScale,"spherical":() =>spherical });var _math__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/math.js");function spherical(cartesian){return [(0,_math__WEBPACK_IMPORTED_MODULE_0__.atan2)(cartesian[1]           ,                                                                                                                    cartesian[0]),(0,_math__WEBPACK_IMPORTED_MODULE_0__.asin)(cartesian[2])];}function cartesian(spherical){var lambda =spherical[0],phi =spherical[1],cosPhi =(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(phi);return [cosPhi *(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda),cosPhi *(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(lambda),(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(phi)];}function cartesianDot(a,b){return a[0]                                                                                       *b[0]+a[1]   *b[1]+a[2]*b[2];}function cartesianCross(a,b){return [a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]* b[     2],                                                                                                                                                                                                                                                                          a[0]*b[1]-a[1]*b[0] ];}function cartesianAddInPlace(a,b){a[0]+=b[0],a[1]+= b[1],a[2]+=b[2];}    function cartesianScale(vector,                                                                                                                                                                                                                                                         k){return [vector[0]*k,vector[1]*k,vector[2]*k];}function cartesianNormalizeInPlace(d){var l =(0,_math__WEBPACK_IMPORTED_MODULE_0__.sqrt)(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);d[0]/=l,d[1]/= l,d[2]/=l;}},"../node_modules/d3-geo/src/centroid.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__) ;__webpack_require__.d(__webpack_exports__,{"default} );var _math__WEBPACK_IMPORTED_MODULE_0__ =  __webpack_require
                                                                                                                    "../node_modules/d3-geo/src/math.js") ;var _noop__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__( "../node_modules/d3-geo/src/noop.js") ;var _stream__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-geo/src/stream.js");var W0,W1,X0,Y0,Z0,X1,Y1,Z1, X2,Y2, Z2,lambda00,phi00,x0,y0,z0;var centroidStream = {  sphere:_noop__WEBPACK_IMPORTED_MODULE_1__["default"],point: centroidPoint, lineStart:centroidLineStart,lineEnd:centroidLineEnd,polygonStart:function (){centroidStream.lineStart =centroidRingStart;centroidStream.lineEnd =centroidRingEnd;} ,polygonEnd:function ( ){centroidStream.lineStart  =centroidLineStart;centroidStream.lineEnd =centroidLineEnd;}};function         centroidPoint(                                                                                                                                                                                   lambda,phi){lambda *=_math__WEBPACK_IMPORTED_MODULE_0__.radians,phi *=_math__WEBPACK_IMPORTED_MODULE_0__.radians;var cosPhi =(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(phi);centroidPointCartesian(cosPhi *(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda),cosPhi *(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(lambda),(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(phi));}function centroidPointCartesian(x,y,z){ ++W0;X0 +=(x -X0)/W0;Y0 +=(y -Y0)    /W0;Z0 +=(                                                                                                                  z -Z0)/W0;}function centroidLineStart(){centroidStream.point =centroidLinePointFirst;}function centroidLinePointFirst(lambda,phi){lambda *= _math__WEBPACK_IMPORTED_MODULE_0__.radians,phi *=_math__WEBPACK_IMPORTED_MODULE_0__. radians;var cosPhi =(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(phi);x0 =cosPhi *(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda);y0 =cosPhi *(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(lambda)                                                                                      ;z0  = (0,     _math__WEBPACK_IMPORTED_MODULE_0__.  sin)     (    phi)         ;centroidStream. point    =    centroidLinePoint;centroidPointCartesian(                                                                                                                                                                                                                                     x0,     y0,   z0)  ;}   function      centroidLinePoint(    lambda,  phi)  {   lambda   *=   _math__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                       radians,phi *=_math__WEBPACK_IMPORTED_MODULE_0__.radians;var cosPhi =(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(phi),x =cosPhi *(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda),y =cosPhi *(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(lambda),z =(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(phi),w =(0,_math__WEBPACK_IMPORTED_MODULE_0__.atan2)((0,_math__WEBPACK_IMPORTED_MODULE_0__.sqrt)((w =y0 *z -z0 *y)*w +(w =z0 *x -xz)*w +(w =x0 *y  -y0 *x)*w),x0 *x +y0 *y +z0 * z);W1 +=w;X1 +=w *(x0 +(x0 =x))  ;Y1 +=w *(y0 +(y
                                                                                                                  y));Z1 +=w *(z0 + (z0 = z));centroidPointCartesian(x0,y0,z0);}function centroidLineEnd(){centroidStream.point =centroidPoint;}function centroidRingStart(){centroidStream.point =centroidRingPointFirst;}function centroidRingEnd(){centroidRingPoint(lambda00,phi00);centroidStream.point =centroidPoint;}function centroidRingPointFirst(lambda,phi){lambda00 =lambda,phi00 =phi;lambda *=_math__WEBPACK_IMPORTED_MODULE_0__.radians,phi *=_math__WEBPACK_IMPORTED_MODULE_0__.radians;centroidStream.point =centroidRingPoint;var cosPhi =( 0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(phi);x0 =cosPhi *(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda);y0 =cosPhi *(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(        lambda);z0 =(                                                                                                                                                                                  0,  _math__WEBPACK_IMPORTED_MODULE_0__. sin)(phi);centroidPointCartesian(x0,y0,z0);}function centroidRingPoint(lambda,phi){lambda *=_math__WEBPACK_IMPORTED_MODULE_0__.radians,phi   *=  _math__WEBPACK_IMPORTED_MODULE_0__. radians;var cosPhi =(0,_math__WEBPACK_IMPORTED_MODULE_0__. cos)   ( phi),x = cosPhi *(   0, _math__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda), y   = cosPhi *(0,_math__WEBPACK_IMPORTED_MODULE_0__.  sin) (lambda),z  = (0,    _math__WEBPACK_IMPORTED_MODULE_0__.                                                                                         sin)(phi),cx =y0 *z -z0 *y,cy =z0 *x -x0 *z,cz =x0 *y -y0 *x,m =(0,_math__WEBPACK_IMPORTED_MODULE_0__.sqrt)(cx *cx +cy *cy +cz *cz),w =(0,_math__WEBPACK_IMPORTED_MODULE_0__.asin)(m),v =m && -w /m;X2 +=v *cx;Y2 +=v *cy;Z2 +=v *cz;W1 +=w;X1 +=w *(x0 +(x0 =x));Y1 +=w *(y0 +(y0 =y));Z1 +=w *(z0 +(z0 =z));centroidPointCartesian(x0,y0,z0);}function __WEBPACK_DEFAULT_EXPORT__(object){W0 =W1 =X0 =Y0 =Z0 =X1 =Y1 =Z1 =X2 =Y2 =                                                                                     Z2  =0;( 0,   _stream__WEBPACK_IMPORTED_MODULE_2__["default"])(object,centroidStream);var x =X2,y = Y2,z =     Z2,m                                                                                                                                                                                                                                                                     =x *x +y *y +z *z;if (m <_math__WEBPACK_IMPORTED_MODULE_0__.epsilon2){x =X1,y =Y1,z =Z1;if (          W1                       <                                                                                                                                                                                                                                                          _math__WEBPACK_IMPORTED_MODULE_0__. epsilon) x  =X0,y =  Y0, z  = Z0;m  =x *x  +y * y + z *z;if  (  m <_math__WEBPACK_IMPORTED_MODULE_0__.epsilon2)return  [NaN,NaN];}  return [( 0,_math__WEBPACK_IMPORTED_MODULE_0__.atan2)( y,x)*_math__WEBPACK_IMPORTED_MODULE_0__.degrees, (0, _math__WEBPACK_IMPORTED_MODULE_0__. asin) (z /( 0,_math__WEBPACK_IMPORTED_MODULE_0__.sqrt)( m)) *_math__WEBPACK_IMPORTED_MODULE_0__. degrees];}}node_modules/d3-geo/src/circle.js"    :  (   __unused_webpack_module,  __webpack_exports__,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
                                                                                                                 __webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"circleStream":() => circleStream,"default":() =>__WEBPACK_DEFAULT_EXPORT__ } );var _cartesian__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/cartesian.js");var _constant__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-geo/src/constant.js");var _math__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-geo/src/math.js") ;var _rotation__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/d3-geo/src/rotation.js");function circleStream(stream,radius,delta,direction, t0,t1){if (!delta)          return ;var                                                                                                                                                                               cosRadius =(0,_math__WEBPACK_IMPORTED_MODULE_2__.cos)(radius),sinRadius =(0,_math__WEBPACK_IMPORTED_MODULE_2__.sin)(radius),step =direction *delta;if (t0 ==null){t0 =radius +direction *_math__WEBPACK_IMPORTED_MODULE_2__.tau;t1 =radius -step /2;}else {t0 =circleRadius(cosRadius,t0);t1 =circleRadius(cosRadius,t1);if (direction >0 ?t0 <t1 :t0 >t1)t0 +=direction *_math__WEBPACK_IMPORTED_MODULE_2__.tau;}for (var point,t =t0;direction >0 ?t >    t1 :t <t1;t -=                                                                                                               step){point  =(0, _cartesian__WEBPACK_IMPORTED_MODULE_0__.spherical)([cosRadius, -sinRadius *(0,_math__WEBPACK_IMPORTED_MODULE_2__. cos)(t)   ,   - sinRadius *(0,_math__WEBPACK_IMPORTED_MODULE_2__.sin)( t) ]);stream.point(point[0],point[1]);} }function circleRadius(cosRadius,point){point =(0, _cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesian) (point),point[ 0]-= cosRadius;( 0, _cartesian__WEBPACK_IMPORTED_MODULE_0__.                                                                                    cartesianNormalizeInPlace) (point);var radius =(0,_math__WEBPACK_IMPORTED_MODULE_2__. acos)( -  point[1]) ;return  (( - point[                                                                                                                                                                                                                                                             2]    <   0  ?   -   radius  :  radius)    +  _math__WEBPACK_IMPORTED_MODULE_2__. tau -    _math__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                                                                                         epsilon)%_math__WEBPACK_IMPORTED_MODULE_2__.tau;}function __WEBPACK_DEFAULT_EXPORT__(){var center =( 0,_constant__WEBPACK_IMPORTED_MODULE_1__["default"])([0,0]) ,radius  =(0,_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(90),precision = (0,_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(6),ring,rotate,stream ={point: point };function point(x,y){ring.push(x =rotate(x,y)) ;x[0]*=_mathdegrees,x[ 1]*=_math__WEBPACK_IMPORTED_MODULE_2__.degrees;}function circle(){   var   c  = center
                                                                                                                apply(this,arguments),r =radius.apply(this,arguments)*_math__WEBPACK_IMPORTED_MODULE_2__.radians,p =precision.apply(this,arguments)*_math__WEBPACK_IMPORTED_MODULE_2__.radians;ring =[];rotate =(0,_rotation__WEBPACK_IMPORTED_MODULE_3__.rotateRadians)( -c[0]*_math__WEBPACK_IMPORTED_MODULE_2__.radians,  -c[1]*_math__WEBPACK_IMPORTED_MODULE_2__.radians,0).invert;circleStream(stream,r,p,1);c ={type:"Polygon",coordinates:[ring]};ring =rotate =null;return c;}circle.center =function (_){return arguments.length ?(center =typeof _ ==="function"?_ :(0,_constant__WEBPACK_IMPORTED_MODULE_1__["default"])([  +_[0], +_[1]]),circle):center;};circle.radius =function (_){ return arguments.length ?(radius =         typeof _  ===                                                                                                                                                                            "function"?_ :(0,_constant__WEBPACK_IMPORTED_MODULE_1__["default" ])( +_) ,circle):radius;};circle.precision =function  (_){return arguments.length ?(precision =typeof _ ==="function"?_  :(0,_constant__WEBPACK_IMPORTED_MODULE_1__["default"])( +_),circle):precision;};return circle;} }, "../node_modules/d3-geo/src/clip/antimeridian.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(    __webpack_exports__)                                                                                                        ;__webpack_require__. d(__webpack_exports__, {"default":( ) =>__WEBPACK_DEFAULT_EXPORT__ }   );var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/d3-geo/src/clip/index.js") ;var  _math__WEBPACK_IMPORTED_MODULE_1__  =  __webpack_require__( "../node_modules/d3-geo/src/math.js");const __WEBPACK_DEFAULT_EXPORT__ =(0,_index__WEBPACK_IMPORTED_MODULE_0__["default"] )(function  ( ) {return true;}  ,                                                                                    clipAntimeridianLine,   clipAntimeridianInterpolate,    [ -     _math__WEBPACK_IMPORTED_MODULE_1__.    pi,      - _math__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                               halfPi]);function  clipAntimeridianLine( stream)  {var  lambda0 =NaN,phi0  =NaN, sign0 =NaN,    clean;return {lineStart:function (                                                                                                                                                                                                                                                           ){stream.lineStart();clean =1;},point:function (lambda1,phi1){var sign1 =lambda1 > 0 ? _math__WEBPACK_IMPORTED_MODULE_1__.pi :  -_math__WEBPACK_IMPORTED_MODULE_1__.pi,delta =(0,_math__WEBPACK_IMPORTED_MODULE_1__.abs)(lambda1 -lambda0);if  ((0,_math__WEBPACK_IMPORTED_MODULE_1__.abs) ( delta  - _math__WEBPACK_IMPORTED_MODULE_1__.pi)< _math__WEBPACK_IMPORTED_MODULE_1__.epsilon){stream.point(lambda0,phi0 =(phi0 +phimath__WEBPACK_IMPORTED_MODULE_1__.        halfPi           :       -  _math
                                                                                                              halfPi);stream.point(sign0,phi0);stream.lineEnd();stream.lineStart();stream.point(sign1,phi0);stream.point(lambda1,phi0);clean =0;}else if (sign0 !==sign1 &&delta >=_math__WEBPACK_IMPORTED_MODULE_1__.pi){if ((0,_math__WEBPACK_IMPORTED_MODULE_1__.abs)(lambda0 -sign0)<_math__WEBPACK_IMPORTED_MODULE_1__.epsilon)lambda0 -=sign0 *_math__WEBPACK_IMPORTED_MODULE_1__.epsilon;if ((0,_math__WEBPACK_IMPORTED_MODULE_1__.abs)(lambda1 -sign1)<_math__WEBPACK_IMPORTED_MODULE_1__.epsilon)lambda1 -=sign1 *_math__WEBPACK_IMPORTED_MODULE_1__.epsilon;phi0 =clipAntimeridianIntersect(lambda0,phi0,lambda1,phi1);stream.point(sign0,phi0);stream.lineEnd();stream.lineStart();stream.point(sign1,phi0);clean =0;}stream.               point(                                                                                                                                                                           lambda0 =lambda1,  phi0 = phi1) ;sign0  =sign1;},lineEnd: function (  ){stream.lineEnd( );lambda0 = phi0 =NaN;},clean:function () { return  2  - clean;}};} function clipAntimeridianIntersect( lambda0, phi0,lambda1, phi1){var cosPhi0,cosPhi1,sinLambda0Lambda1 =(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(lambda0 -lambda1) ;return  (0,_math__WEBPACK_IMPORTED_MODULE_1__. abs)( sinLambda0Lambda1) >_math__WEBPACK_IMPORTED_MODULE_1__.epsilon ?(0,    _math__WEBPACK_IMPORTED_MODULE_1__.                                                                                         atan)(((0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(phi0)*(cosPhi1 =(0,_math__WEBPACK_IMPORTED_MODULE_1__.cos)(phi1))*(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(lambda1)-(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(phi1)*(cosPhi0 =(0,_math__WEBPACK_IMPORTED_MODULE_1__.cos)(phi0))*(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(lambda0))/ (cosPhi0 *cosPhi1 *sinLambda0Lambda1)):(phi0 +phi1)/2;} function clipAntimeridianInterpolate(                                                                                    from,    to,     direction, stream){ var      phi;if   (       from    ==null)  {  phi    =  direction   *     _math__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                 halfPi;stream. point(  - _math__WEBPACK_IMPORTED_MODULE_1__. pi, phi);stream.point(0,phi)                ;stream.         point(                                                                                                                                                                                                                                                            _math__WEBPACK_IMPORTED_MODULE_1__.pi,phi) ;stream.point(_math__WEBPACK_IMPORTED_MODULE_1__.pi,0);stream.point(_math__WEBPACK_IMPORTED_MODULE_1__.pi, -phi);stream.point(0, -phi);stream. point( -_math__WEBPACK_IMPORTED_MODULE_1__.pi, -phi) ;stream.point( -_math__WEBPACK_IMPORTED_MODULE_1__.pi,0);stream.point(  -_math__WEBPACK_IMPORTED_MODULE_1__.pi,phi);}else if (( 0,_math__WEBPACK_IMPORTED_MODULE_1__.abs)(from[0]-tomath__WEBPACK_IMPORTED_MODULE_1__. epsilon) { var lambda =from[ 0]<to[ 0]  ?  _math__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
                                                                                                             pi : -_math__WEBPACK_IMPORTED_MODULE_1__. pi;phi =direction *lambda /2;stream.point( -lambda,phi);stream.point(0,phi);stream.point(lambda, phi) ;}else {stream.point(to[0],to[1]);}}},"../node_modules/d3-geo/src/clip/buffer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{ "use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__  });var _noop__WEBPACK_IMPORTED_MODULE_0__  =__webpack_require__("../node_modules/d3-geo/src/noop.js");function __WEBPACK_DEFAULT_EXPORT__(){var lines =[],line;return {point:function (x,y){line. push([x,y]);},lineStart: function (){lines.push(line =[] );},lineEnd:        _noop__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                  "default"],rejoin:function  (){if  (lines.length >1) lines.push(lines.pop().concat(lines.shift() ));}, result: function () {var result =lines;lines =[];line =null;return result;}};}},"../node_modules/d3-geo/src/clip/circle.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var    _cartesian__WEBPACK_IMPORTED_MODULE_0__                                                                                     = __webpack_require__("../node_modules/d3-geo/src/cartesian.js" );var _circle__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__( "../node_modules/d3-geo/src/circle.js") ;var  _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( "../node_modules/d3-geo/src/math.js"  );var _pointEqual__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/d3-geo/src/pointEqual.js") ;var _index__WEBPACK_IMPORTED_MODULE_4__ =                                                                                   __webpack_require__(  "../node_modules/d3-geo/src/clip/index.js")  ;function  __WEBPACK_DEFAULT_EXPORT__( radius, delta)                                                                                                                                                                                                                                                        {var cr =(0,_math__WEBPACK_IMPORTED_MODULE_2__.cos)(radius),smallRadius =cr >0,notHemisphere         =            (             0,                                                                                                                                                                                                                                                             _math__WEBPACK_IMPORTED_MODULE_2__.abs) (cr)>_math__WEBPACK_IMPORTED_MODULE_2__.epsilon;function interpolate(from,to, direction,stream){(0,_circle__WEBPACK_IMPORTED_MODULE_1__.circleStream)  (stream,radius,delta,direction,from,to) ;}function visible(lambda, phi) {return (0,_math__WEBPACK_IMPORTED_MODULE_2__.cos)( lambda) *(0,_math__WEBPACK_IMPORTED_MODULE_2__.cos) (phi)>cr;}  function clipLine(stream){var point0,c0,v0,vclean;return {lineStart:function (){v00 =v0 =false;clean =1;},point:function (   lambda, phi) { var
                                                                                                            point1 =[lambda,phi],point2,v =visible(lambda,phi),c  =smallRadius ?v ?0 :code(lambda,phi):v ?code(lambda +(lambda <0 ?_math__WEBPACK_IMPORTED_MODULE_2__.pi : -_math__WEBPACK_IMPORTED_MODULE_2__.pi),phi):0;if (!point0 &&(v00 =v0 =v))stream.lineStart();if (v !==v0){point2 =intersect(point0,point1);if (!point2 ||(0,_pointEqual__WEBPACK_IMPORTED_MODULE_3__["default"])(point0,point2)||(0,_pointEqual__WEBPACK_IMPORTED_MODULE_3__["default"])(point1,point2)){point1[0]+=_math__WEBPACK_IMPORTED_MODULE_2__.epsilon;point1[1]+=_math__WEBPACK_IMPORTED_MODULE_2__.epsilon;v =visible(point1[0],point1[1]);}}if (v !==v0){clean =0;if (v){stream.lineStart();point2 =intersect(point1,point0);stream.point(point2[0],          point2[1]) ;}                                                                                                                                                                     else {point2 =intersect(point0,point1);stream.point(point2[0],point2[1]);stream.lineEnd();}point0 =point2;}else if (notHemisphere &&point0 &&smallRadius ^v){var t;if (!(c &c0)&&(t =intersect(point1,point0,true))){clean =0;if (smallRadius){stream.lineStart();stream.point(t[0][0],t[0][1]);stream.point(t[1][0],t[1][1]);stream.lineEnd();}else {stream.point(t[1][0],t[1][1]);stream.lineEnd();stream.lineStart();stream.point(t[0][0],t[0][1]);}}}if (   v &&(!point0 ||!(                                                                                                           0,_pointEqual__WEBPACK_IMPORTED_MODULE_3__["default"])(point0,point1))){stream.point(point1[0],point1[1]);}point0 =point1,v0 =v,c0 =c;},lineEnd:function (){if (v0)stream.lineEnd();point0 =null;},clean:function (){ return clean |(v00 &&v0)<<1;}};}function intersect(a, b,two){ var pa =(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesian)(a),pb =( 0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesian)(b);var n1 =[1,0,0],n2 =(0,     _cartesian__WEBPACK_IMPORTED_MODULE_0__.                                      cartesianCross)  (pa,pb),n2n2 =(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesianDot)(n2,n2),n1n2 =n2[0],     determinant                                                                                                                                                                                                                                                    =n2n2 -n1n2 *n1n2;if (!determinant)return !two &&a;var c1 =cr *n2n2 /determinant,c2 = -cr *       n1n2   /determinant, n1xn2 =(0,                                                                                                                                                                                                                                                              _cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesianCross)(n1,n2),A =(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesianScale)(n1,c1),B =(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesianScale)(n2,c2);(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesianAddInPlace)(A,B);var u =n1xn2,w =(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesianDot)(A,u),uu =(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesianDot)(u,u),t2 =w *w -uucartesian__WEBPACK_IMPORTED_MODULE_0__.  cartesianDot)( A,A)-1);if (t2 <0)  return ;var t
                                                                                                           _math__WEBPACK_IMPORTED_MODULE_2__.sqrt)(t2),q =(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesianScale)(u,( -w -t)/uu);(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesianAddInPlace)(q,A);q =(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.spherical)(q);if (!two)return q;var lambda0 =a[0],lambda1 =b[0],phi0 =a[1],phi1 =b[1],z;if (lambda1 <lambda0)z =lambda0,lambda0 =lambda1,lambda1 =z;var delta =lambda1 -lambda0,polar =(0,_math__WEBPACK_IMPORTED_MODULE_2__.abs)(delta -_math__WEBPACK_IMPORTED_MODULE_2__.pi)<_math__WEBPACK_IMPORTED_MODULE_2__.epsilon,meridian =polar ||delta <_math__WEBPACK_IMPORTED_MODULE_2__.epsilon;if (!polar &&phi1 <phi0)z =phi0,phi0 =phi1,phi1 =z;if (meridian ?polar ?phi0 +phi1 >0         ^ q[1] <(( 0,                                                                                                                                                                  _math__WEBPACK_IMPORTED_MODULE_2__.abs)(q[0]-lambda0)<_math__WEBPACK_IMPORTED_MODULE_2__.epsilon ?phi0 :phi1):phi0 <=q[1]&&q[1]<=phi1 :delta >_math__WEBPACK_IMPORTED_MODULE_2__.pi ^(lambda0 <=q[0]&&q[0]<=lambda1)){var q1 =(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesianScale)(u,( -w +t)/uu);( 0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesianAddInPlace)(q1,A);return [q,(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.spherical)(q1)];}}function     code(lambda,phi){                                                                                                          var   r = smallRadius  ?radius : _math__WEBPACK_IMPORTED_MODULE_2__.  pi -radius,code =0;if  (lambda < -r)code |=1;else if  (lambda  >r)code |= 2;if (phi   <  - r)  code |=4;else if (phi >r)code |=8;return code;}return  ( 0, _index__WEBPACK_IMPORTED_MODULE_4__[ "default"])(visible,clipLine,interpolate, smallRadius  ?[0, - radius] :[ -_math__WEBPACK_IMPORTED_MODULE_2__.pi,radius  -_math__WEBPACK_IMPORTED_MODULE_2__.pi]);} },     "../node_modules/d3-geo/src/clip/extent.js"                                           :   (       __unused_webpack_module,  __webpack_exports__, __webpack_require__)     =>{ "use strict"     ;__webpack_require__.                                                                                                                                                                                                                                      r( __webpack_exports__)  ;__webpack_require__.d(  __webpack_exports__,{"clipExtent":(  ) =>     clipExtent, "default"   :  (  ) =>                                                                                                                                                                                                                                                               __WEBPACK_DEFAULT_EXPORT__    } ) ;var     _math__WEBPACK_IMPORTED_MODULE_0__  =__webpack_require__(  "../node_modules/d3-geo/src/math.js" );var   _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/d3-geo/src/clip/buffer.js")  ;var  _line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../node_modules/d3-geo/src/clip/line.js"  )   ;var _polygon__WEBPACK_IMPORTED_MODULE_3__ =  __webpack_require__(     "../node_modules/d3-geo/src/clip/polygon.jsvar     d3_array__WEBPACK_IMPORTED_MODULE_4__    = __webpack_require__(  "../node_modules/d3-array/src/index.js
                                                                                                          );var clipMax =1e9,clipMin = -clipMax;function clipExtent(x0,y0,x1,y1){function visible(x,y){return x0 <=x &&x <=x1 &&y0 <=y &&y <=y1;}function interpolate(from,to,direction,stream){var a =0,a1 =0;if (from ==null ||(a =corner(from,direction))!==(a1 =corner(to,direction))||comparePoint(from,to)<0 ^direction >0){do stream.point(a ===0 ||a ===3 ?x0 :x1,a >1 ?y1 :y0); while ((a =(a +direction +4)%4)!==a1);}else {stream.point(to[0],to[1]);}}function corner(p,direction){return (0,_math__WEBPACK_IMPORTED_MODULE_0__.abs)(p[0]-x0)<_math__WEBPACK_IMPORTED_MODULE_0__.epsilon ?direction >0 ?0 :3 :(0,_math__WEBPACK_IMPORTED_MODULE_0__.abs)(p[0]-x1)<_math__WEBPACK_IMPORTED_MODULE_0__.epsilon ?direction >0 ?2 :1 :              (    0,                                                                                                                                                                 _math__WEBPACK_IMPORTED_MODULE_0__.abs)(p[1] -y0) <_math__WEBPACK_IMPORTED_MODULE_0__.epsilon ?direction >0 ?1 :0 :direction >0 ?3 :2;} function compareIntersection(  a, b){ return comparePoint(a.x, b.x);}function comparePoint(a,b){var  ca =corner(a, 1),cb =corner( b,1) ;return ca !==cb ? ca -cb  :ca   ===0 ?b[ 1]-a[1] :ca === 1 ? a[0]- b[0] :ca === 2 ? a[1]- b[1] :b[0]-a[0];}return function (stream){var activeStream =stream,bufferStream =(0,    _buffer__WEBPACK_IMPORTED_MODULE_1__[                                                                                       "default"])(),segments,polygon,ring,x__,y__,v__,x_,y_,v_,first,clean;var clipStream ={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:polygonStart,polygonEnd:polygonEnd };function point(x,y){if (visible(x,y))activeStream.point(x,y);}function polygonInside(){var winding =0;for (var i =0,n =polygon.length;i <n; ++i){for (var ring =polygon[i],j =1,m =ring.length,point =ring[0],a0,a1,b0 =point[0],b1 =point[1];j <m;     ++j)                                                                           {a0 = b0,a1 =    b1,point =ring[j],b0 =point[0],b1 =point[1];if (a1 <=y1){if (b1 >y1 &&(b0 - a0)*(y1 -a1)>(     b1 -                                                                                                                                                                                                                                                      a1)* (x0   -a0) )  ++winding;}else {if (b1 <=y1  &&(b0 -a0)*(y1 -a1)<(b1 -a1)* (x0 -a0)) --    winding;}}}return winding;}function                                                                                                                                                                                                                                                                polygonStart(  ){activeStream =bufferStream,segments =[ ] ,polygon  = [] ,clean =true;} function polygonEnd(){ var startInside  = polygonInside(), cleanInside =clean  &&startInside, visible  =(segments =( 0,d3_array__WEBPACK_IMPORTED_MODULE_4__.merge) (segments)).length;if  (cleanInside || visible){stream. polygonStart();if ( cleanInside){stream.lineStart() ;interpolate(null, null,1,stream);stream.lineEnd();}if (visible){(0,     _polygondefault"]) (segments, compareIntersection,startInside, interpolate,stream);}  stream.polygonEnd
                                                                                                         ;}activeStream =stream,segments =polygon =ring =null;}function lineStart(){clipStream.point =linePoint;if (polygon)polygon.push(ring =[]);first = true;v_ =false;x_ =y_ =NaN;}function lineEnd(){if (segments){linePoint(x__,y__);if (v__ &&v_)bufferStream.rejoin();segments.push(bufferStream.result());}clipStream.point =point;if (v_) activeStream.lineEnd();}function linePoint(x,y){var v =visible(x,y);if (polygon)ring.push([x,y]);if  (first){x__ =x,y__ =y, v__ =v;first =false;if (v){activeStream.lineStart();activeStream.point(x,y);}}else {if (v &&v_) activeStream.point(x,y);else {var a =[x_ =Math.max(clipMin,Math.min(clipMax,x_)),y_ =Math.max(clipMin,Math.min(clipMax,y_))],b =[x =Math.max(clipMin,Math.min(         clipMax,x)),y                                                                                                                                                              =Math.max(clipMin,Math.min(clipMax,y))];if ((0,_line__WEBPACK_IMPORTED_MODULE_2__["default"] )(a,b,x0,y0,x1,y1)){if (!v_){activeStream. lineStart();activeStream.point(a[0] ,a[1]);}activeStream.point(b[0],b[1]);if (!v)activeStream.lineEnd();clean =false;}else if (v){activeStream.lineStart();activeStream.point(x,y);clean =false;}}}x_ =x,y_ =y,v_ =v;}return clipStream;};}function __WEBPACK_DEFAULT_EXPORT__(){var x0 =0,y0 = 0,x1 =960,y1 =500,cache,          cacheStream,                                                                                                          clip;return clip ={stream: function (stream){return cache &&cacheStream ===stream ?cache :cache =clipExtent(x0,y0,x1,y1)(cacheStream =stream);},extent:function (_){return  arguments.length ?(x0 = +_[0][ 0],y0 = +_[0][1],x1 = +_[1][0],y1 = +_[1][1],cache =cacheStream =null,clip):[[ x0,y0],[x1,y1]];}};}},"../node_modules/d3-geo/src/clip/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{ "use strict"    ;__webpack_require__.                                                                     r(    __webpack_exports__) ;__webpack_require__.d(    __webpack_exports__,  {"default" :  (  ) =>     __WEBPACK_DEFAULT_EXPORT__                                                                                                                                                                                                                                }      )    ;var      _buffer__WEBPACK_IMPORTED_MODULE_0__       =  __webpack_require__(    "../node_modules/d3-geo/src/clip/buffer.js"                                                                                                                                                                                                                                                          )   ;var    _polygon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(  "../node_modules/d3-geo/src/clip/polygon.js")  ;var     _math__WEBPACK_IMPORTED_MODULE_2__ =  __webpack_require__("../node_modules/d3-geo/src/math.js"  );var _polygonContains__WEBPACK_IMPORTED_MODULE_3__  =    __webpack_require__( "../node_modules/d3-geo/src/polygonContains.js"    ) ;var     d3_array__WEBPACK_IMPORTED_MODULE_4__ =   __webpack_require__(    "../node_modules/d3-array/src/index.jsfunction __WEBPACK_DEFAULT_EXPORT__(pointVisible,clipLine,interpolate,start)  {return function
                                                                                                       rotate,sink){var line =clipLine(sink),rotatedStart =rotate.invert(start[0],start[1]),ringBuffer =(0,_buffer__WEBPACK_IMPORTED_MODULE_0__["default"])(),ringSink =clipLine(ringBuffer),polygonStarted =false,polygon,segments,ring;var clip ={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function (){clip.point = pointRing;clip.lineStart =ringStart;clip.lineEnd =ringEnd;segments =[];polygon =[];},polygonEnd:function (){clip.point =point;clip.lineStart  =lineStart;clip.lineEnd =lineEnd;segments = (0,d3_array__WEBPACK_IMPORTED_MODULE_4__.merge)(segments);var startInside =(0,_polygonContains__WEBPACK_IMPORTED_MODULE_3__["default"])(polygon,rotatedStart);if (segments.length){if (!polygonStarted)sink.        polygonStart()                                                                                                                                                            ,polygonStarted =true;(0,_polygon__WEBPACK_IMPORTED_MODULE_1__["default" ])(segments,compareIntersection,startInside,interpolate,sink);}else if (startInside){if (!polygonStarted)sink.polygonStart(), polygonStarted =true;sink.lineStart();interpolate(null,null,1,sink);sink.lineEnd();}if (polygonStarted)sink.polygonEnd(),polygonStarted =false;segments =polygon =null;},sphere:function (){sink.polygonStart();sink.lineStart();interpolate(null,null,1,         sink)  ;sink.                                                                                                           lineEnd();sink. polygonEnd();}};function point(lambda,phi){var point =rotate(lambda,phi);if (pointVisible(lambda =point[0],phi =point[1]))sink.point(lambda,phi);}function pointLine(lambda,phi){var point =rotate(lambda,phi);line.point(point[ 0],point[1]);}function lineStart(){clip.point =pointLine;line.lineStart();}function lineEnd(){clip. point =point;line.lineEnd();}function pointRing(lambda,phi){ring.push([lambda,phi]);var     point                                                                            =    rotate(   lambda,phi);ringSink.point(point[0], point[1]);}function ringStart() {ringSink.lineStart( )     ;ring                                                                                                                                                                                                                                                = [];}function ringEnd(){ pointRing(ring[0][0],ring[ 0][1] );ringSink.lineEnd();var clean =     ringSink. clean(), ringSegments =                                                                                                                                                                                                                                                                   ringBuffer.result( ),i,n =ringSegments.length,m,segment,point;ring.pop();polygon.push(ring);ring =null;if (!n)return ;if (clean &1){segment =ringSegments[0];if ((m =segment.length -1)>0){if (!polygonStarted)sink.polygonStart(),polygonStarted =true;sink.lineStart();for (i =0;i <m; ++i)sink.point((point =segment[i])[0],point[1]);sink.lineEnd();}return ;}if (n >1 &&clean &2)ringSegments.push(ringSegments.pop().concat(ringSegments.    shiftsegments.push(ringSegments.filter(validSegment));}return clip;};}function        validSegment
                                                                                                      segment){return segment.length >1;}function compareIntersection(a,b){return ((a =a.x)[0]<0 ?a[1]-_math__WEBPACK_IMPORTED_MODULE_2__.halfPi - _math__WEBPACK_IMPORTED_MODULE_2__.epsilon :_math__WEBPACK_IMPORTED_MODULE_2__.halfPi -a[1])-((b =b.x)[0]<0 ?b[1]-_math__WEBPACK_IMPORTED_MODULE_2__.halfPi -_math__WEBPACK_IMPORTED_MODULE_2__.epsilon :_math__WEBPACK_IMPORTED_MODULE_2__.halfPi -b[1]);}},"../node_modules/d3-geo/src/clip/line.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(a,b,x0,y0,x1,y1){var ax =a[0],        ay =a[1], bx =                                                                                                                                                         b[0],by =b[1],t0 =0,t1 =1,dx =bx -ax,dy =by -ay,r;r =x0 -ax;if (!dx &&r >0)return ;r /=dx;if (dx <0){if (r <t0)return ;if (r <t1)t1 =r;}else if (dx >0){if (r >t1)return ;if (r >t0)t0 =r;}r =x1 -ax;if (!dx &&r <0)return ;r /=dx;if (dx <0){if (r >t1)return ;if (r >t0)t0 =r;}else if (dx >0){if (r <t0)return ;if (r <t1)t1 =r;}r =y0 -ay;if (!dy &&r >0)return ;r /=dy;if (dy <0){if (r <t0)return ;if (r <t1)t1 =r;}else if (dy >0){if (r >t1)return ;if (r >   t0)t0  =r;}r =y1 -                                                                                                          ay;if ( !dy &&r <0)return ;r /=dy;if (dy <0){if  (r > t1)return ;if (r >t0)t0 =r;}else if (dy >0){if (r <t0)return ;if (r <t1)t1 =r;}if ( t0 >0) a[0]=ax +t0  *dx,a[1]=ay +t0 *dy;if ( t1 <1)b[0]=ax +t1 *dx,b[1]=ay +t1 * dy;return true;}}, "../node_modules/d3-geo/src/clip/polygon.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__) ;__webpack_require__.d(   __webpack_exports__,                                                             {"default":(     )  =>     __WEBPACK_DEFAULT_EXPORT__ }) ;var    _pointEqual__WEBPACK_IMPORTED_MODULE_0__ =     __webpack_require__(                                                                                                                                                                                                                               "../node_modules/d3-geo/src/pointEqual.js");function Intersection(point,points,other,entry)   {this.x =point;this.z =points;this.                                                                                                                                                                                                                                                                    o =other;this.e =entry;this.v =false;this.n =this.p =null;}function __WEBPACK_DEFAULT_EXPORT__(segments,compareIntersection,startInside,interpolate,stream){var subject =[],clip =[],i,n;segments.forEach(function (segment){if ((n =segment.length -1)<=0)return ;var n,p0 =segment[0],p1 =segment[n],x;if ((0,_pointEqual__WEBPACK_IMPORTED_MODULE_0__["default"])(p0,p1)){stream.lineStart();for (i =0;i <n; ++i)stream.point((p0 =segment[ip0[1]);stream.lineEnd() ;return ;}subject.push(x =new Intersection(p0,segment,  null,true))  ;clip
                                                                                                     push(x.o =new Intersection(p0,null,x,false));subject.push(x =new Intersection(p1,segment,null,false));clip.push(x.o =new Intersection(p1,null,x,true));});if (!subject.length)return ;clip.sort(compareIntersection);link(subject);link(clip);for (i =0,n =clip.length;i <n; ++i){clip[i]. e =startInside =!startInside;}var start =subject[0] ,points,point;while  (1){var current =start,isSubject =true;while (current.v)if ((current =current.n)===start)return ;points =current.z;stream.lineStart();do {current.v =current.o.v =true;if (current.e){if (isSubject){for (i =0,n =points.length;i <n; ++i)stream.point((point =points[i])[0],point[1]);}else {interpolate(current.x,current.n.x,1,stream);}current =current.n;}else {if (        isSubject)   {                                                                                                                                                        points =current.p.z;for  (i =points. length -1; i  >=0; --i)stream. point((point = points[i])[ 0],point[ 1]) ;}else { interpolate(current.x, current.p.x, -1,stream);}current =current.p;}current  =current.o;points =current. z;isSubject =!isSubject;}while (! current.v);stream.lineEnd() ;} }function link(array){ if (!(n = array. length) )return ;var n, i =0,a =array[0],b;while ( ++i <n){ a.n =b =array[i];b.p =a;a =b;}a.n  =  b = array[0];b.p =a;} },    "../node_modules/d3-geo/src/compose.js"                                                                                     :(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(a,b){function compose(x,y){return x =a(x,y),b(x[0],x[1]);}if (a.invert &&b.invert)compose.invert =function (x,y){return x =b.invert(x,y),x &&a.invert(x[0],x[1]);};return compose;}},     "../node_modules/d3-geo/src/constant.js"                                             :      (    __unused_webpack_module,    __webpack_exports__, __webpack_require__)   =>{    "use strict"    ;__webpack_require__.                                                                                                                                                                                                                              r( __webpack_exports__);__webpack_require__.d( __webpack_exports__,{ "default" :( )    =>    __WEBPACK_DEFAULT_EXPORT__      })                                                                                                                                                                                                                                                                     ;function  __WEBPACK_DEFAULT_EXPORT__(x){ return function  ( ){  return  x;}  ;} } ,"../node_modules/d3-geo/src/contains.js" : ( __unused_webpack_module,__webpack_exports__,__webpack_require__)  => { "use strict"  ;__webpack_require__.r(__webpack_exports__) ;__webpack_require__.d(  __webpack_exports__, {"default" : (  )   => __WEBPACK_DEFAULT_EXPORT__  });var  _polygonContains__WEBPACK_IMPORTED_MODULE_0__ =  __webpack_require__(    "../node_modules/d3-geo/src/polygonContains.jsvar   _distance__WEBPACK_IMPORTED_MODULE_1__     =  __webpack_require__(  "../node_modules/d3-geo/src/distance.js
                                                                                                   );var _math__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-geo/src/math.js");var containsObjectType ={Feature:function (object,point){return containsGeometry(object.geometry,point);},FeatureCollection:function (object,point){var  features =object.features,i = -1,n =features.length;while ( ++i <n)if (containsGeometry(features[i].geometry,point))return true;return false;}};var containsGeometryType ={Sphere:function (){return true;},Point:function (object,point){return containsPoint(object.coordinates,point);},MultiPoint:function (object,point){var coordinates =object. coordinates,i = -1,n =coordinates.length;while ( ++i <n)if (containsPoint(coordinates[i], point))return true;return false;},            LineString:                                                                                                                                                     function (object,point){return containsLine(object.coordinates,point);},MultiLineString:function (object,point){var coordinates =object.coordinates,i = -1,n =coordinates.length;while ( ++i <n)if (containsLine(coordinates[i],point))return true;return false;},Polygon: function (object,point){return containsPolygon(object.coordinates,point);},MultiPolygon:function (object,point){var coordinates =object.coordinates,i = -1,n =coordinates.length;while (      ++ i  <n)  if  (                                                                                                          containsPolygon(coordinates[i],point))return true;return false;},GeometryCollection:function (object,point){var geometries =object.geometries,i = -1,n =geometries.length;while ( ++i <n)if (containsGeometry(geometries[i],point))return true;return false;}};function containsGeometry(geometry,point){return geometry &&containsGeometryType.hasOwnProperty(geometry.type)?containsGeometryType[geometry.type](geometry,point):false;}function   containsPoint(                                                                    coordinates,   point){return (0,_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates,point)===0;}    function                                                                                                                                                                                                                                      containsLine(coordinates,point){var ab =(0,_distance__WEBPACK_IMPORTED_MODULE_1__["default"]   )(coordinates[0],coordinates[1]),ao                                                                                                                                                                                                                                                                      =(0,_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[0],point),ob = (0,_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(point,coordinates[ 1]);return ao +ob <=ab +_math__WEBPACK_IMPORTED_MODULE_2__.epsilon;}function containsPolygon(coordinates,point){return !!(0,_polygonContains__WEBPACK_IMPORTED_MODULE_0__["default"])(coordinates.map(ringRadians),pointRadians(point));}function ringRadians(ring){return ring =ring.      map(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         pointRadians),ring.pop(),ring;}function pointRadians(point){return [point[0]*  _math
                                                                                                  radians,point[1]*_math__WEBPACK_IMPORTED_MODULE_2__.radians];}function __WEBPACK_DEFAULT_EXPORT__(object,point){return (object &&containsObjectType.hasOwnProperty(object.type)?containsObjectType[object.type]:containsGeometry)(object,point) ;}},"../node_modules/d3-geo/src/distance.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _length__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/length.js");var coordinates =[null,null],object ={type:"LineString",coordinates:coordinates };function __WEBPACK_DEFAULT_EXPORT__(a,b){        coordinates[0]                                                                                                                                                    =a;coordinates[  1] =b;return (0,_length__WEBPACK_IMPORTED_MODULE_0__[ "default"]  )(object) ;}} ,"../node_modules/d3-geo/src/graticule.js" : (__unused_webpack_module,__webpack_exports__, __webpack_require__)   => {"use strict";__webpack_require__. r(__webpack_exports__);__webpack_require__.d( __webpack_exports__,{  "default":( ) => graticule, "graticule10": (  ) => graticule10 }  );var d3_array__WEBPACK_IMPORTED_MODULE_0__  = __webpack_require__(    "../node_modules/d3-array/src/index.js"                                                                                     ) ;var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( "../node_modules/d3-geo/src/math.js");function graticuleX(y0,y1,dy) {var y  =(0, d3_array__WEBPACK_IMPORTED_MODULE_0__.range)   (y0, y1 -_math__WEBPACK_IMPORTED_MODULE_1__.epsilon,dy).concat(y1);return function ( x){return  y.map(function  (y)  {  return  [x,y]  ;} ) ;};} function graticuleY(x0,x1,dx){var  x   =(0,d3_array__WEBPACK_IMPORTED_MODULE_0__.range)(x0,x1 -    _math__WEBPACK_IMPORTED_MODULE_1__.                                               epsilon,dx).    concat(x1) ;return function  (y){ return  x.map(function (x){return [ x,y];} );};} function    graticule(                                                                                                                                                                                                                                   ){var x1,x0,X1,X0,y1,y0,Y1,Y0,dx =10,dy =dx,DX =90,DY =360,x,y,X,Y,precision =2.5;function    graticule(   ) {    return {  type:                                                                                                                                                                                                                                                                       "MultiLineString",coordinates:lines()};} function lines(){return (0,d3_array__WEBPACK_IMPORTED_MODULE_0__.range)((0, _math__WEBPACK_IMPORTED_MODULE_1__.ceil)(X0 /DX)*DX,X1,DX).map(X). concat((0,d3_array__WEBPACK_IMPORTED_MODULE_0__.range)((0,_math__WEBPACK_IMPORTED_MODULE_1__.ceil)(Y0 /DY)*DY,Y1,DY).map(Y)).concat((0,d3_array__WEBPACK_IMPORTED_MODULE_0__.range)((0,_math__WEBPACK_IMPORTED_MODULE_1__.ceil)(x0 /dx)* dx,x1,dx).filter(    functionx)  { return   (0, _math__WEBPACK_IMPORTED_MODULE_1__. abs)(x   %   DX)    >  _math
                                                                                                 epsilon;} ).map(x)). concat((0,d3_array__WEBPACK_IMPORTED_MODULE_0__.range)((0,_math__WEBPACK_IMPORTED_MODULE_1__.ceil)(y0 /dy)*dy,y1,dy).filter(function (y){return (0,_math__WEBPACK_IMPORTED_MODULE_1__.abs)(y %DY)>_math__WEBPACK_IMPORTED_MODULE_1__.epsilon;}).map(y)) ;}graticule.lines =function (){return lines().map(function (coordinates){return {type:"LineString",coordinates:coordinates };});};graticule.outline =function (){return {type:"Polygon",coordinates:[X(X0).concat(Y(Y1).slice(1),X(X1).reverse().slice(1),Y(Y0).reverse().slice(1))]};};graticule. extent =function (_){if (!arguments.length)return graticule.extentMinor();return graticule.extentMajor(_).extentMinor(_);};graticule.extentMajor =function (_){if (!             arguments.                                                                                                                                                  length)return [[X0,Y0],[X1,Y1]];X0 = +_[0][0],X1 = +_[1][0];Y0 = +_[0][1],Y1 = +_[1][1];if (X0 >X1)_ =X0,X0 =X1,X1 =_;if (Y0 >Y1)_ =Y0,Y0 =Y1,Y1 =_;return graticule.precision(precision);};graticule.extentMinor =function (_){if (!arguments.length)return [[x0,y0],[x1,y1]];x0 = +_[0][0],x1 = +_[1][0];y0 = +_[0][1],y1 = +_[1][1];if (x0 >x1)_ =x0,x0 =x1,x1 =_;if (y0 >y1)_ =y0,y0 =y1,y1 =_;return graticule.precision(precision);};graticule.step =function (   _){if (!arguments.                                                                                                          length)return graticule.stepMinor();return graticule.stepMajor(_).stepMinor(_);};graticule.stepMajor =function (_){if ( !arguments.length)return [DX,DY];DX = +_[0],DY = +_[1];return graticule;};graticule.stepMinor =function (_){if ( !arguments.length)return [dx,dy];dx = +_[0],dy = +_[1];return graticule;};graticule.precision =function (_){if (!arguments.length)return precision;precision = +_;x =graticuleX(y0,y1,90);y =graticuleY(     x0,x1,                                                                           precision);X =   graticuleX( Y0,Y1,90) ;Y =graticuleY(X0,X1,precision) ;return graticule;};return graticule.    extentMajor(                                                                                                                                                                                                                               [    [  -  180,  -  90   +  _math__WEBPACK_IMPORTED_MODULE_1__.   epsilon] ,    [ 180,90  -   _math__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                                        epsilon]]).extentMinor([[ -180, -80 -_math__WEBPACK_IMPORTED_MODULE_1__.epsilon],[180,80 +_math__WEBPACK_IMPORTED_MODULE_1__.epsilon]]);}function graticule10(){return graticule()();}},"../node_modules/d3-geo/src/identity.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ }function   __WEBPACK_DEFAULT_EXPORT__(     x)    {   return     x;}    } ,  "../node_modules/d3-geo/src/interpolate.js
                                                                                                :(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _math__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/math.js");function __WEBPACK_DEFAULT_EXPORT__(a,b){var x0 =a[0]*_math__WEBPACK_IMPORTED_MODULE_0__.radians,y0 =a[1]*_math__WEBPACK_IMPORTED_MODULE_0__.radians,x1 =b[0]*_math__WEBPACK_IMPORTED_MODULE_0__.radians,y1 =b[1]*_math__WEBPACK_IMPORTED_MODULE_0__.radians,cy0 =(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(y0),sy0 =(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(y0),cy1 =(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(y1),sy1 =(                    0,                                                                                                                                               _math__WEBPACK_IMPORTED_MODULE_0__. sin) (y1), kx0 =cy0 *(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(x0),ky0 =cy0 *(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(x0) ,kx1   =cy1   *(0, _math__WEBPACK_IMPORTED_MODULE_0__. cos)(x1),ky1 =cy1 *(0, _math__WEBPACK_IMPORTED_MODULE_0__.sin)(x1),d =2 *(0,_math__WEBPACK_IMPORTED_MODULE_0__.  asin)((0, _math__WEBPACK_IMPORTED_MODULE_0__.sqrt)((0, _math__WEBPACK_IMPORTED_MODULE_0__. haversin)( y1  -y0) +cy0 *cy1 *(0,    _math__WEBPACK_IMPORTED_MODULE_0__.                                                                                          haversin) (x1 -x0)) ),k =(0,_math__WEBPACK_IMPORTED_MODULE_0__. sin)(d);var interpolate  =d ?  function (t){var B =( 0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(t *=d)/k,A =(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(d -t)/k,x = A *kx0 +B *kx1,y = A *ky0  +B *ky1,z =A * sy0 +B *sy1;return [(0,_math__WEBPACK_IMPORTED_MODULE_0__.atan2)(y,x)*_math__WEBPACK_IMPORTED_MODULE_0__.degrees,(0, _math__WEBPACK_IMPORTED_MODULE_0__.atan2) ( z,(0,   _math__WEBPACK_IMPORTED_MODULE_0__.                                                sqrt)(x *x +     y *y)  ) * _math__WEBPACK_IMPORTED_MODULE_0__. degrees]  ;}:function () {  return   [ x0 *    _math__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                     degrees, y0   *   _math__WEBPACK_IMPORTED_MODULE_0__.degrees]  ;}  ;interpolate. distance =      d;return     interpolate;}  }  ,                                                                                                                                                                                                                                                                           "../node_modules/d3-geo/src/length.js":( __unused_webpack_module, __webpack_exports__, __webpack_require__)  => {  "use strict" ;__webpack_require__.r(__webpack_exports__) ;__webpack_require__.d( __webpack_exports__,{"default" :( )  => __WEBPACK_DEFAULT_EXPORT__  })   ;var  _adder__WEBPACK_IMPORTED_MODULE_0__  = __webpack_require__("../node_modules/d3-geo/src/adder.js") ;var _math__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__(    "../node_modules/d3-geo/src/math.jsvar    _noop__WEBPACK_IMPORTED_MODULE_2__   = __webpack_require__(  "../node_modules/d3-geo/src/noop.js
                                                                                               );var  _stream__WEBPACK_IMPORTED_MODULE_3__  =__webpack_require__("../node_modules/d3-geo/src/stream.js");var lengthSum  =(0,_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),lambda0,sinPhi0,cosPhi0;var  lengthStream ={sphere:_noop__WEBPACK_IMPORTED_MODULE_2__["default"] ,point:_noop__WEBPACK_IMPORTED_MODULE_2__["default"],lineStart:lengthLineStart,lineEnd:_noop__WEBPACK_IMPORTED_MODULE_2__["default"],polygonStart:_noop__WEBPACK_IMPORTED_MODULE_2__["default"],polygonEnd:_noop__WEBPACK_IMPORTED_MODULE_2__["default"]};function lengthLineStart(){lengthStream.point  =lengthPointFirst;lengthStream.lineEnd  =lengthLineEnd;}function lengthLineEnd( ){lengthStream.point =lengthStream.lineEnd =_noop__WEBPACK_IMPORTED_MODULE_2__[         "default" ] ;}                                                                                                                                               function   lengthPointFirst( lambda,   phi)    {lambda   *=      _math__WEBPACK_IMPORTED_MODULE_1__. radians,     phi      *=                                                                                                                                                                                                                                                                                                                                            _math__WEBPACK_IMPORTED_MODULE_1__.                                                                                          radians;lambda0 =lambda, sinPhi0  =(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(                                                                                                                                                                                                                                       phi), cosPhi0 =(0,_math__WEBPACK_IMPORTED_MODULE_1__.cos)(phi);lengthStream. point =lengthPoint;}function lengthPoint(lambda,      phi){                                                                              lambda  *=       _math__WEBPACK_IMPORTED_MODULE_1__.  radians, phi  *=_math__WEBPACK_IMPORTED_MODULE_1__.     radians;var                                                                                                                                                                                                                           sinPhi   = (    0, _math__WEBPACK_IMPORTED_MODULE_1__.   sin)  ( phi) ,    cosPhi   = ( 0,    _math__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                                          cos)(phi), delta =(0, _math__WEBPACK_IMPORTED_MODULE_1__. abs)(lambda -lambda0) ,                                                                                                                                                                                                                                     cosDelta =( 0,_math__WEBPACK_IMPORTED_MODULE_1__.cos) (delta),sinDelta =(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(delta),x =     cosPhisinDelta,y =cosPhi0 *sinPhi -sinPhi0 *cosPhi *cosDelta,z = sinPhi0  *sinPhi +   cosPhi0 * cosPhi
                                                                                              cosDelta;lengthSum.add((0, _math__WEBPACK_IMPORTED_MODULE_1__.atan2)((0, _math__WEBPACK_IMPORTED_MODULE_1__.sqrt)(x *x +y *y),z));lambda0 =lambda,sinPhi0 =sinPhi,cosPhi0 =cosPhi;}function __WEBPACK_DEFAULT_EXPORT__(object){lengthSum.reset();(0,_stream__WEBPACK_IMPORTED_MODULE_3__["default"])(object,lengthStream);return ( +lengthSum);}},"../node_modules/d3-geo/src/math.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"abs":() =>abs,"acos":() =>acos,"asin":() =>asin,"atan":() =>atan,"atan2":() =>atan2,"ceil":() =>ceil,"cos":() =>cos,"degrees":() =>degrees,"epsilon":() =>epsilon,"epsilon2":() =>epsilon2,         "exp" : () =>                                                                                                                                             exp,"floor":() =>floor,"halfPi":() =>halfPi,"haversin":() => haversin,"log": () =>log,"pi":() =>pi,"pow":( ) =>                                                                                                                                                                                                                                                                                                                                                           pow, "quarterPi":(                                                                                                          )  =>quarterPi, "radians":() =>radians,"sign":() =>sign,"sin":() =>sin,"sqrt":(                                                                                                                                                                                                                                                     ) =>sqrt,"tan":() =>tan,"tau":() =>tau });var epsilon =1e-6;var epsilon2 =1e-12;var pi =Math.PI;var halfPi =pi /      2;var                                                                            quarterPi =pi   / 4;var tau =pi *2;var degrees =180 /pi;var radians =pi /180;var  abs =Math. abs;var atan =     Math.                                                                                                                                                                                                                              atan;var atan2 =Math.atan2;var cos =Math.cos;var ceil =Math.ceil;var exp =Math.exp;var floor  =Math.floor;var log  = Math.log;var                                                                                                                                                                                                                                                                            pow =Math.pow;var sin =Math.sin;var sign =Math.sign ||function (x){return x >0 ?1                                                                                                                                                                                                                                                    :x <0 ? - 1 :0;};var sqrt =Math.sqrt;var tan =Math.tan;function acos(x){return x >1 ?0 :x < -1 ?pi :Math.acos(x)          ;}function asin(x){return x >1 ?halfPi :x < -1 ? -halfPi :Math.asin(x);}function      haversin( x)  {
                                                                                              return (x =sin(x /2))*x;}},"../node_modules/d3-geo/src/noop.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>noop });function noop(){}},"../node_modules/d3-geo/src/path/area.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{ "default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _adder__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/adder.js");var _math__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-geo/src/math.js");var         _noop__WEBPACK_IMPORTED_MODULE_2__                                                                                                                           =  __webpack_require__(    "../node_modules/d3-geo/src/noop.js"  )    ;var       areaSum   =  (     0,                                                                                                                                                                                                                                                                                                                                                                 _adder__WEBPACK_IMPORTED_MODULE_0__[                                                                                        "default"])(),areaRingSum =(0,_adder__WEBPACK_IMPORTED_MODULE_0__["default"])()                                                                                                                                                                                                                                                           ,x00, y00,x0,    y0;var    areaStream = {  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default" ],lineStart:   _noop__WEBPACK_IMPORTED_MODULE_2__[                                                   "default"],    lineEnd:_noop__WEBPACK_IMPORTED_MODULE_2__["default"],polygonStart:function (){areaStream.     lineStart                                                                                                                                                                                                                        = areaRingStart;areaStream.lineEnd   =areaRingEnd;},polygonEnd:function   (  ){ areaStream.      lineStart =areaStream.lineEnd  =                                                                                                                                                                                                                                                                             areaStream.point  =_noop__WEBPACK_IMPORTED_MODULE_2__[ "default"];areaSum.add((0,                                                                                                                                                                                                                                                           _math__WEBPACK_IMPORTED_MODULE_1__.abs)(areaRingSum));areaRingSum.reset();},result:function (){var area =    areaSumareaSum. reset();return area;}};function areaRingStart() {areaStream.point =     areaPointFirst;}
                                                                                            function areaPointFirst(x,y){areaStream.point =areaPoint;x00 =x0 =x,y00 =y0 = y;}function areaPoint(x,y){areaRingSum.add(y0 *x -x0 *y);x0 =x,y0  =y;}function areaRingEnd(){areaPoint(x00,y00);}const __WEBPACK_DEFAULT_EXPORT__ =areaStream;},"../node_modules/d3-geo/src/path/bounds.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _noop__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/noop.js");var x0 =Infinity,y0 =x0,x1 = -x0,y1 =x1;var boundsStream ={point:boundsPoint,lineStart:_noop__WEBPACK_IMPORTED_MODULE_0__["default"],lineEnd:        _noop__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                      "default" ] , polygonStart:  _noop__WEBPACK_IMPORTED_MODULE_0__[    "default"    ]  ,     polygonEnd:            _noop__WEBPACK_IMPORTED_MODULE_0__[ "default"],result:function (){var bounds =[[x0,y0] ,[x1,y1]];x1 =y1 =  -(y0 =x0 =Infinity);return bounds;}  };function boundsPoint(x,y){if (x <x0)x0 =x;if (x >x1)x1   =x;if  (y <y0)y0 =y;if (y > y1)y1 =y;}const  __WEBPACK_DEFAULT_EXPORT__  =boundsStream;},"../node_modules/d3-geo/src/path/centroid.js":(__unused_webpack_module,                                                                                                          __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(    __webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _math__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/math.js");var X0 =0,Y0 =0,Z0 =0,X1 =0,Y1 =              0, Z1  = 0, X2 =0,  Y2 =0, Z2  = 0,x00,y00, x0,y0;var centroidStream ={point:centroidPoint,lineStart:   centroidLineStart,                                                                        lineEnd:         centroidLineEnd, polygonStart:  function     (  ) {     centroidStream.   lineStart  =    centroidRingStart;centroidStream.                                                                                                                                                                                              lineEnd   = centroidRingEnd;} ,polygonEnd: function   (   )  {  centroidStream. point    =          centroidPoint;centroidStream.                                                                                                                                                                                                                                                                               lineStart =centroidLineStart;centroidStream.lineEnd = centroidLineEnd;} ,result:   function (){var centroid =Z2 ?[X2 /Z2,Y2 /Z2]:Z1  ?[X1 /Z1,Y1 /Z1]:Z0 ?[X0 /Z0,Y0 /Z0]:[NaN,NaN];X0 = Y0 = Z0  =X1 =Y1 =Z1   =X2 =Y2 = Z2 =0;return centroid;}};function centroidPoint(x,y){X0 +=x;Y0 +=y; ++Z0;}function centroidLineStart( ){            centroidStream.point = centroidPointFirstLine;}function  centroidPointFirstLine(x,y)  {centroidStream.      pointcentroidPointLine;centroidPoint(x0 =x,y0 =y);}function centroidPointLine(x,y){  var dx =x -x0,dy =y
                                                                                          -y0,z =(0,_math__WEBPACK_IMPORTED_MODULE_0__.sqrt)(dx *dx +dy *dy);X1 +=z *(x0 +x)/2;Y1 += z *(y0 +y)/2;Z1 +=z;centroidPoint(x0 =x,y0  =y);}function centroidLineEnd(){centroidStream.point =centroidPoint;}function centroidRingStart(){centroidStream.point = centroidPointFirstRing;}function centroidRingEnd(){centroidPointRing(x00,y00);}function centroidPointFirstRing(x,y){centroidStream.point =centroidPointRing;centroidPoint(x00 =x0 =x,y00 =y0 =y);}function centroidPointRing(x,y){var dx =x -x0,dy =y -y0,z =(0,_math__WEBPACK_IMPORTED_MODULE_0__.sqrt) (dx *dx +dy *dy);X1 +=z *( x0 +x) /2;Y1 +=z *(y0 +y)/2;Z1 +=z;z =y0 *x -x0 *y;X2 += z *(x0 + x);Y2 +=z *(y0 +y);Z2 +=z *3;centroidPoint(x0 = x,y0 =y);}const __WEBPACK_DEFAULT_EXPORT__ =         centroidStream;}                                                                                                                                      , "../node_modules/d3-geo/src/path/context.js" :  (  __unused_webpack_module,  __webpack_exports__,        __webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>PathContext });var _math__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/math.js");var _noop__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-geo/src/noop.js");function PathContext(                                                                                                          context)  { this.  _context =context;}PathContext.prototype = {  _radius:  4.5,    pointRadius:function (_){return  this. _radius =_,this;},polygonStart:function  (){this._line = 0;},polygonEnd:function (){ this._line =NaN;},lineStart:function (){this._point =0;},lineEnd:function (){if (this._line ===0)this._context.closePath()        ;this._point =NaN;},point:function (x,y){switch (this._point){case 0:{this._context.moveTo(x,y);this.     _point =                                                                             1;break  ;}    case 1:{this._context.lineTo(x,y);break ;}default:{this._context.moveTo(x +this._radius,y)     ;this.                                                                                                                                                                                                                       _context. arc(x,y,this._radius,0,_math__WEBPACK_IMPORTED_MODULE_0__.tau);break ;}}},result:   _noop__WEBPACK_IMPORTED_MODULE_1__[                                                                                                                                                                                                                                                                                  "default"   ] }   ;}   ,  "../node_modules/d3-geo/src/path/index.js"  :      (     __unused_webpack_module,  __webpack_exports__, __webpack_require__) =>    {"use strict" ;__webpack_require__. r(      __webpack_exports__);__webpack_require__. d( __webpack_exports__,{  "default" :  ( )   => __WEBPACK_DEFAULT_EXPORT__    }) ;var       _identity__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/identity.js")        ;varstream__WEBPACK_IMPORTED_MODULE_1__       =   __webpack_require__(  "../node_modules/d3-geo/src/stream.js
                                                                                          );var _area__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-geo/src/path/area.js");var _bounds__WEBPACK_IMPORTED_MODULE_3__  =__webpack_require__("../node_modules/d3-geo/src/path/bounds.js") ;var  _centroid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../node_modules/d3-geo/src/path/centroid.js");var _context__WEBPACK_IMPORTED_MODULE_5__  =  __webpack_require__("../node_modules/d3-geo/src/path/context.js" );var   _measure__WEBPACK_IMPORTED_MODULE_6__ =__webpack_require__( "../node_modules/d3-geo/src/path/measure.js");var _string__WEBPACK_IMPORTED_MODULE_7__ =__webpack_require__( "../node_modules/d3-geo/src/path/string.js" );function __WEBPACK_DEFAULT_EXPORT__(projection,context) {var pointRadius =4.5,        projectionStream,                                                                                                                                     contextStream;function  path(  object)  { if (object)  { if ( typeof pointRadius  ==="function")        contextStream.  pointRadius( +pointRadius.apply(this, arguments)) ;(0, _stream__WEBPACK_IMPORTED_MODULE_1__["default" ]   )(  object,  projectionStream(   contextStream) ) ;}return  contextStream.result(  );} path.area  = function  ( object) {( 0,_stream__WEBPACK_IMPORTED_MODULE_1__[ "default" ] )( object,projectionStream(_area__WEBPACK_IMPORTED_MODULE_2__["default"  ] ) )                                                                                                        ;return _area__WEBPACK_IMPORTED_MODULE_2__["default"].result();};path.measure =    function (object){(0, _stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object,projectionStream(_measure__WEBPACK_IMPORTED_MODULE_6__["default"]) );return _measure__WEBPACK_IMPORTED_MODULE_6__[  "default"].result();};path. bounds =function (object){(0,            _stream__WEBPACK_IMPORTED_MODULE_1__[      "default"    ]  )  (     object, projectionStream(  _bounds__WEBPACK_IMPORTED_MODULE_3__[                                                 "default"]) )    ;return _bounds__WEBPACK_IMPORTED_MODULE_3__["default"].result();};path.centroid =function (    object)                                                                                                                                                                                                                   { (   0, _stream__WEBPACK_IMPORTED_MODULE_1__["default"]     )(  object, projectionStream(    _centroid__WEBPACK_IMPORTED_MODULE_4__[                                                                                                                                                                                                                                                                             "default"]));return _centroid__WEBPACK_IMPORTED_MODULE_4__["default"].result();}    ;path. projection =function (_){return  arguments.length ?(projectionStream =_ ==null ?(projection = null,_identity__WEBPACK_IMPORTED_MODULE_0__[ "default"]):(projection =_).stream,path) :projection;};path.context =function (_){if (!arguments.length)      return context;contextStream = _ ==null ?(context =null,new  _string__WEBPACK_IMPORTED_MODULE_7__[    "defaultnew _context__WEBPACK_IMPORTED_MODULE_5__[ "default"] (context = _);if (   typeof pointRadius                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
                                                                                        !=="function") contextStream.pointRadius(pointRadius);return path;};path.pointRadius =function (_){if (!arguments.length) return pointRadius;pointRadius =typeof _ ==="function"?_ :(contextStream.pointRadius( +_), +_);return path;};return path.projection(projection).context(context);}},"../node_modules/d3-geo/src/path/measure.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ }) ;var _adder__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/adder.js");var _math__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-geo/src/math.js")                   ;var                                                                                                                                    _noop__WEBPACK_IMPORTED_MODULE_2__  = __webpack_require__("../node_modules/d3-geo/src/noop.js")     ;var lengthSum =( 0,_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),lengthRing,x00, y00,x0,y0;var lengthStream ={point:_noop__WEBPACK_IMPORTED_MODULE_2__["default"],lineStart: function (){lengthStream.point =lengthPointFirst;},lineEnd:function ( ){if (lengthRing)lengthPoint(x00,y00);lengthStream.point =_noop__WEBPACK_IMPORTED_MODULE_2__["default"];},polygonStart:function (){                                                                                                          lengthRing =true;},polygonEnd:function (){lengthRing =null;},result:function ()    {var length = +lengthSum;lengthSum.reset();return length;}};function lengthPointFirst(x,y){lengthStream.point =lengthPoint;x00 =x0 =x,y00 =y0 =y;}function lengthPoint(x,y){x0 -=x,y0 -=y;lengthSum.add((0,_math__WEBPACK_IMPORTED_MODULE_1__.sqrt)(x0 *x0 +y0 *      y0)  )    ;x0  =   x, y0    = y;} const   __WEBPACK_DEFAULT_EXPORT__       = lengthStream;}  ,   "../node_modules/d3-geo/src/path/string.js"                                                 :      (   __unused_webpack_module, __webpack_exports__, __webpack_require__)   =>      { "use strict"     ;__webpack_require__.                                                                                                                                                                                                  r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>PathString   } );function PathString(  ) { this.                                                                                                                                                                                                                                                                                  _string =[];}PathString.prototype  ={_radius:4.5,_circle:circle(4.5),pointRadius:   function (_) {if ((_ =  +_)!==this._radius)this._radius =_, this._circle =null;return this;},polygonStart:function (){this._line =0;},polygonEnd:function (){this._line =NaN;},lineStart:function (){this._point =0;}, lineEnd:function (){if (this._line ===0)     this._string.push("Z");this._point = NaN;},point:function ( x,y){switch (this. _point){case 0:{         thisstring.push("M",x,",",y);this._point =1;break ;}case 1:{this._string.push("L"  , x,",",y);break ;}
                                                                                       default:{if (this._circle  ==null)this. _circle =circle(this._radius) ;this._string. push("M",x,",",y,this._circle) ;break ;}}}, result: function  (){ if ( this._string.length) {var result =this._string.join("") ;this._string =[];return result;} else { return null;}}};function circle(radius){return "m0,"+radius +"a" +radius +","+radius +" 0 1,1 0,"+ -2  *radius +"a"+ radius + ","+radius +" 0 1,1 0,"+2 * radius + "z";}} ,"../node_modules/d3-geo/src/pointEqual.js":( __unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d( __webpack_exports__, {"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var  _math__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__(        "../node_modules/d3-geo/src/math.js"                                                                                                              );function __WEBPACK_DEFAULT_EXPORT__(a,b){return (0,_math__WEBPACK_IMPORTED_MODULE_0__.abs)     (a[0]-b[0])<_math__WEBPACK_IMPORTED_MODULE_0__.epsilon &&(0,_math__WEBPACK_IMPORTED_MODULE_0__.abs)(a[1]-b[1])<_math__WEBPACK_IMPORTED_MODULE_0__.epsilon;}},"../node_modules/d3-geo/src/polygonContains.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default"                                                                                                          :() =>__WEBPACK_DEFAULT_EXPORT__  }) ;var _adder__WEBPACK_IMPORTED_MODULE_0__ =      __webpack_require__(  "../node_modules/d3-geo/src/adder.js"   ) ;var _cartesian__WEBPACK_IMPORTED_MODULE_1__   =  __webpack_require__(       "../node_modules/d3-geo/src/cartesian.js"    )   ;var _math__WEBPACK_IMPORTED_MODULE_2__    =  __webpack_require__(      "../node_modules/d3-geo/src/math.js" );var   sum  =( 0, _adder__WEBPACK_IMPORTED_MODULE_0__[    "default"]                                                                             )();function    __WEBPACK_DEFAULT_EXPORT__(polygon,point){var lambda =point[0] , phi =point[1],normal =[(0,     _math__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                  sin)(lambda), -(0,_math__WEBPACK_IMPORTED_MODULE_2__.cos)(lambda) ,0], angle = 0, winding =   0;sum.reset() ;for   ( var  i =0,n =                                                                                                                                                                                                                                                                                  polygon.length;i <n; ++i){if (!(m =(ring =polygon[i]).length))continue ;var ring,   m,point0 =ring[m -1],lambda0 = point0[0],phi0 =point0[1]/2  +_math__WEBPACK_IMPORTED_MODULE_2__.quarterPi,sinPhi0 =( 0,_math__WEBPACK_IMPORTED_MODULE_2__.sin)(phi0) ,cosPhi0 =(0,_math__WEBPACK_IMPORTED_MODULE_2__.cos)(phi0);for (var j =0;j <m;  ++j,lambda0 =     lambda1,sinPhi0 =sinPhi1,cosPhi0 =cosPhi1,point0 =point1){var point1 =ring[j],lambda1 =point1[  0], phipoint1[ 1]   /2  +   _math__WEBPACK_IMPORTED_MODULE_2__.quarterPi,sinPhi1 =(0,  _math
                                                                                      sin)(phi1),cosPhi1 =(0,_math__WEBPACK_IMPORTED_MODULE_2__.cos)(phi1),delta =lambda1 -lambda0,sign =delta >=0 ?1 : -1,absDelta =sign *delta,antimeridian =absDelta >_math__WEBPACK_IMPORTED_MODULE_2__. pi,k =sinPhi0 *sinPhi1;sum.add(( 0,_math__WEBPACK_IMPORTED_MODULE_2__.atan2)(k *sign *(0,_math__WEBPACK_IMPORTED_MODULE_2__.sin)(absDelta),cosPhi0 *cosPhi1 +k *(0,_math__WEBPACK_IMPORTED_MODULE_2__.cos)( absDelta)));angle +=antimeridian ?delta +sign *_math__WEBPACK_IMPORTED_MODULE_2__.tau :delta;if (antimeridian ^lambda0 >=lambda ^lambda1 >=lambda){var arc =(0,_cartesian__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)((0,_cartesian__WEBPACK_IMPORTED_MODULE_1__.cartesian)(point0),(0,_cartesian__WEBPACK_IMPORTED_MODULE_1__.cartesian)(point1));(0,        _cartesian__WEBPACK_IMPORTED_MODULE_1__.                                                                                                           cartesianNormalizeInPlace)     (         arc) ;var     intersection      =        (   0,    _cartesian__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)(normal,arc) ;(0,_cartesian__WEBPACK_IMPORTED_MODULE_1__.cartesianNormalizeInPlace) ( intersection);var phiArc  =(antimeridian ^delta  >=0 ? - 1 :1)*(0,_math__WEBPACK_IMPORTED_MODULE_2__.asin)(intersection[ 2]);if (phi >phiArc ||phi ===phiArc &&(arc[0]||arc[  1])){winding +=antimeridian ^delta >= 0 ?1 : -1;}}}}return  (angle < -                                                                                                                _math__WEBPACK_IMPORTED_MODULE_2__.       epsilon    ||     angle       <    _math__WEBPACK_IMPORTED_MODULE_2__.epsilon &&sum  <  - _math__WEBPACK_IMPORTED_MODULE_2__. epsilon) ^ winding  &    1;} } ,"../node_modules/d3-geo/src/projection/albers.js" :( __unused_webpack_module, __webpack_exports__,__webpack_require__)  => {  "use strict"     ;__webpack_require__. r(__webpack_exports__);__webpack_require__.d(   __webpack_exports__,{   "default":(                                                                                     )  =>    __WEBPACK_DEFAULT_EXPORT__   } )  ;var   _conicEqualArea__WEBPACK_IMPORTED_MODULE_0__    =     __webpack_require__(                                                                                                                                                                                                      "../node_modules/d3-geo/src/projection/conicEqualArea.js"        )        ;function     __WEBPACK_DEFAULT_EXPORT__(   )  {                                                                                                                                                                                                                                                                                    return (0,_conicEqualArea__WEBPACK_IMPORTED_MODULE_0__["default"])().parallels( [   29.5, 45.5] ).scale( 1070) .translate([480,250]). rotate([ 96,0])  . center( [ -0.6,38.7]);} } , "../node_modules/d3-geo/src/projection/albersUsa.js": (__unused_webpack_module, __webpack_exports__,__webpack_require__)  =>{ "use strict"  ;__webpack_require__.r(      __webpack_exports__)  ;__webpack_require__. d( __webpack_exports__,   {"default}   )    ;var  _math__WEBPACK_IMPORTED_MODULE_0__    =   __webpack_require__(  "../node_modules/d3-geo/src/math.js"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
                                                                                     );var _albers__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-geo/src/projection/albers.js");var _conicEqualArea__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-geo/src/projection/conicEqualArea.js");var _fit__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/d3-geo/src/projection/fit.js");function multiplex(streams){var n =streams.length;return {point:function (x,y){var i = -1;while ( ++i <n)streams[i].point(x,y);},sphere:function (){var i = -1;while ( ++i <n)streams[i].sphere() ;},lineStart:function (){var i = -1;while ( ++i <n)streams[i].lineStart();},lineEnd:function (){var i = -1;while ( ++i <n)streams[i].lineEnd();},polygonStart:function (){var i = -1;while ( ++i <n)streams[       i].polygonStart(                                                                                                                              ) ;},polygonEnd:function (){var i = -1;while ( ++i <n)streams[i].polygonEnd();}};}function    __WEBPACK_DEFAULT_EXPORT__(){var cache,cacheStream,lower48 =(0,_albers__WEBPACK_IMPORTED_MODULE_1__["default"])(),lower48Point,alaska =(0,_conicEqualArea__WEBPACK_IMPORTED_MODULE_2__["default"])().rotate([154,0]). center([ -2,58.5]).parallels([55,65]),alaskaPoint,hawaii =(0,_conicEqualArea__WEBPACK_IMPORTED_MODULE_2__["default"])().rotate([157,0]).center([ -3,19.9]).parallels([8,18]),                                                                                                          hawaiiPoint, point,pointStream ={point:function (x,y){point =[x,y] ;}};function    albersUsa(coordinates){ var  x =coordinates[0],y =coordinates[1];return point = null,(lower48Point. point(x,y), point)||(alaskaPoint.point(x,y), point)||(hawaiiPoint.point(x,y),point) ;}albersUsa.invert =function ( coordinates){var k =lower48.scale() ,t =lower48.    translate(),x =(coordinates[0] -t[0])/k,y =(coordinates[1]-t[1])/k;return (y >=0.120 &&y <   0.234 &&x >=                                                                             -0.425 &&x < -  0.214  ? alaska : y >=0.166  &&y <0.234 &&x >= -0.214 &&x < -0.115 ?hawaii :lower48).invert(    coordinates)                                                                                                                                                                                                    ;};albersUsa.stream =function (stream){return cache &&cacheStream ===stream ?cache :cache  =      multiplex(  [  lower48.  stream(                                                                                                                                                                                                                                                                                     cacheStream =stream), alaska.stream(stream) ,hawaii.stream(stream)]);};albersUsa.   precision = function (_) {if (!arguments.length)return lower48.precision();lower48.precision(_),alaska.precision(_) , hawaii.precision(_);return reset();};albersUsa.scale =function (_){if (!arguments.length)return lower48.scale();lower48.scale(_),alaska.scale(_ *    0.35), hawaii.scale( _);return  albersUsa.   translate( lower48. translate());};albersUsa.   translatefunction (_){if (!arguments.length)return lower48.translate();var k =lower48.  scale(),x = +_[0],y
                                                                                    = +_[1];lower48Point =lower48.translate(_).clipExtent([[x -0.455 *k,y -0.238 *k],[x +0.455 *k,y +0.238 *k]]).stream( pointStream);alaskaPoint =alaska.translate([x -0.307 *k,y +0.201 *k]).clipExtent([[x -0.425 *k +_math__WEBPACK_IMPORTED_MODULE_0__.epsilon,y +0.120 *k +_math__WEBPACK_IMPORTED_MODULE_0__.epsilon],[x -0.214 *k -_math__WEBPACK_IMPORTED_MODULE_0__.epsilon,y +0.234 *k -_math__WEBPACK_IMPORTED_MODULE_0__. epsilon]]).stream(pointStream);hawaiiPoint =hawaii.translate([x -0.205 *k,y +0.212 *k]).clipExtent([[x -0.214 *k +_math__WEBPACK_IMPORTED_MODULE_0__.epsilon,y +0.166 *k + _math__WEBPACK_IMPORTED_MODULE_0__.epsilon],[x -0.115 *k -_math__WEBPACK_IMPORTED_MODULE_0__.epsilon,y +0.234 *k -_math__WEBPACK_IMPORTED_MODULE_0__.epsilon]]).                 stream(                                                                                                                             pointStream);return reset();};albersUsa.fitExtent =function  (extent,object){return ( 0,     _fit__WEBPACK_IMPORTED_MODULE_3__.fitExtent)( albersUsa,extent,object);} ;albersUsa.fitSize =function  (size,object){return (0,_fit__WEBPACK_IMPORTED_MODULE_3__.fitSize) (albersUsa,size, object);};function reset(){cache =cacheStream =null;return albersUsa;} return albersUsa.scale(1070);}},"../node_modules/d3-geo/src/projection/azimuthal.js":(__unused_webpack_module,__webpack_exports__,                                                                                                          __webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__)    ;__webpack_require__.d(__webpack_exports__,{"azimuthalInvert":() =>azimuthalInvert,"azimuthalRaw":() =>azimuthalRaw });var _math__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/math.js");function azimuthalRaw(scale){return function (x,     y)  { var   cx   =(    0,  _math__WEBPACK_IMPORTED_MODULE_0__.cos) (  x)  ,  cy   = (0,    _math__WEBPACK_IMPORTED_MODULE_0__.                                                        cos)(y),k =     scale(cx * cy);return [ k *cy  *(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)( x)  , k  *(0,     _math__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                             sin)(y) ];} ;} function azimuthalInvert(   angle)  {return function  (x, y){ var z =(  0,    _math__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                                                      sqrt) (x *x +y *y),c =angle(z),sc =(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(c),   cc =(0, _math__WEBPACK_IMPORTED_MODULE_0__.cos) ( c);return [   (0, _math__WEBPACK_IMPORTED_MODULE_0__. atan2)( x   *sc, z *cc) ,( 0,_math__WEBPACK_IMPORTED_MODULE_0__.asin) ( z &&y *sc  /z) ] ;};} } ,"../node_modules/d3-geo/src/projection/azimuthalEqualArea.js": (   __unused_webpack_module,   __webpack_exports__,   __webpack_require__) =>  { "use strict"    ;__webpack_require__.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   r(   __webpack_exports__)     ;__webpack_require__.d( __webpack_exports__, {  "azimuthalEqualAreaRaw
                                                                                   :() =>azimuthalEqualAreaRaw,"default" :() =>__WEBPACK_DEFAULT_EXPORT__ });var _math__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/math.js");var  _azimuthal__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__( "../node_modules/d3-geo/src/projection/azimuthal.js");var _index__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-geo/src/projection/index.js");var azimuthalEqualAreaRaw =(0, _azimuthal__WEBPACK_IMPORTED_MODULE_1__.azimuthalRaw)(function (cxcy){return ( 0,_math__WEBPACK_IMPORTED_MODULE_0__.sqrt)( 2 /(1 +cxcy) );});azimuthalEqualAreaRaw.invert = (0, _azimuthal__WEBPACK_IMPORTED_MODULE_1__.azimuthalInvert)( function (z){return 2 *(0,_math__WEBPACK_IMPORTED_MODULE_0__.asin)(z /2);});function       __WEBPACK_DEFAULT_EXPORT__(                                                                                                                  ){ return (0,_index__WEBPACK_IMPORTED_MODULE_2__["default"]) ( azimuthalEqualAreaRaw).    scale( 124.75) .clipAngle(  180 -1e-3) ;}},"../node_modules/d3-geo/src/projection/azimuthalEquidistant.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)  => { "use strict" ;__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"azimuthalEquidistantRaw":  (  ) =>azimuthalEquidistantRaw, "default":()  => __WEBPACK_DEFAULT_EXPORT__ }) ;var                                                                                                                _math__WEBPACK_IMPORTED_MODULE_0__          =        __webpack_require__(    "../node_modules/d3-geo/src/math.js");var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-geo/src/projection/azimuthal.js");var _index__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-geo/src/projection/index.js"     );var azimuthalEquidistantRaw =(0,_azimuthal__WEBPACK_IMPORTED_MODULE_1__.azimuthalRaw)    (function (                                                                               c){return (c   =(0,_math__WEBPACK_IMPORTED_MODULE_0__.acos)(c))&&c /( 0,_math__WEBPACK_IMPORTED_MODULE_0__.    sin)                                                                                                                                                                                                         ( c);} ) ;azimuthalEquidistantRaw.  invert  =(  0,_azimuthal__WEBPACK_IMPORTED_MODULE_1__.    azimuthalInvert) ( function  ( z){                                                                                                                                                                                                                                                                                          return    z;} )  ;function __WEBPACK_DEFAULT_EXPORT__(   )  {    return    ( 0,   _index__WEBPACK_IMPORTED_MODULE_2__["default"])(azimuthalEquidistantRaw) .scale(79.4188).clipAngle(180 -1e-3);}},"../node_modules/d3-geo/src/projection/conic.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(    __webpack_exports__);__webpack_require__.d(__webpack_exports__,{"conicProjection": () =>   conicProjection} )   ;var    _math__WEBPACK_IMPORTED_MODULE_0__   =   __webpack_require__(  "../node_modules/d3-geo/src/math.js
                                                                                  );var _index__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-geo/src/projection/index.js");function conicProjection(projectAt){var phi0 =0,phi1 =_math__WEBPACK_IMPORTED_MODULE_0__.pi /3,m =(0,_index__WEBPACK_IMPORTED_MODULE_1__.projectionMutator)(projectAt),p =m(phi0,phi1);p.parallels =function (_){return arguments.length ?m(phi0 =_[0]*_math__WEBPACK_IMPORTED_MODULE_0__.radians,phi1 =_[1]*_math__WEBPACK_IMPORTED_MODULE_0__.radians):[phi0 *_math__WEBPACK_IMPORTED_MODULE_0__.degrees,phi1 *_math__WEBPACK_IMPORTED_MODULE_0__.degrees];};return p;}},"../node_modules/d3-geo/src/projection/conicConformal.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__)        ;__webpack_require__.                                                                                                                     d(__webpack_exports__,{"conicConformalRaw"  :()  =>conicConformalRaw, "default": ()  =>   __WEBPACK_DEFAULT_EXPORT__ }) ;var  _math__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/math.js") ;var  _conic__WEBPACK_IMPORTED_MODULE_1__  =__webpack_require__("../node_modules/d3-geo/src/projection/conic.js");var _mercator__WEBPACK_IMPORTED_MODULE_2__  = __webpack_require__( "../node_modules/d3-geo/src/projection/mercator.js") ;function tany(y){return (0,                                                                                                          _math__WEBPACK_IMPORTED_MODULE_0__.tan) ((  _math__WEBPACK_IMPORTED_MODULE_0__.    halfPi +y)/2);}function conicConformalRaw(y0,y1){var cy0 =(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(y0),n  =y0 ===y1 ?(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(y0):(0,_math__WEBPACK_IMPORTED_MODULE_0__.log)( cy0 / (0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(y1)) /(0,    _math__WEBPACK_IMPORTED_MODULE_0__. log) (tany( y1) / tany( y0)  ) ,  f  = cy0 *  (  0,   _math__WEBPACK_IMPORTED_MODULE_0__.                                                        pow) ( tany(    y0),n)/n;if (!n)return _mercator__WEBPACK_IMPORTED_MODULE_2__.mercatorRaw;function project(    x,y)                                                                                                                                                                                                       {   if    (  f  >    0)   { if  ( y    < - _math__WEBPACK_IMPORTED_MODULE_0__.   halfPi  +    _math__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                                                           epsilon)   y       =   -  _math__WEBPACK_IMPORTED_MODULE_0__.      halfPi    +    _math__WEBPACK_IMPORTED_MODULE_0__.epsilon;}else  { if (y   >_math__WEBPACK_IMPORTED_MODULE_0__. halfPi   -_math__WEBPACK_IMPORTED_MODULE_0__.epsilon)  y   = _math__WEBPACK_IMPORTED_MODULE_0__. halfPi  - _math__WEBPACK_IMPORTED_MODULE_0__. epsilon;} var   r  = f /(0,       _math__WEBPACK_IMPORTED_MODULE_0__.  pow) ( tany(y) ,  n);return     [  r    * (  0,  _math__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   sin)(n * x),f -r *(0, _math__WEBPACK_IMPORTED_MODULE_0__.cos)(n *x)];}project.  invert = function
                                                                                 x,y){var fy =f  -y,r =( 0, _math__WEBPACK_IMPORTED_MODULE_0__. sign)(n)*(0,_math__WEBPACK_IMPORTED_MODULE_0__.sqrt) (x * x +fy  * fy);return [(0,_math__WEBPACK_IMPORTED_MODULE_0__. atan2)(x,(0,_math__WEBPACK_IMPORTED_MODULE_0__.abs)(fy))/n *(0,  _math__WEBPACK_IMPORTED_MODULE_0__.sign)(fy),2 *(0,_math__WEBPACK_IMPORTED_MODULE_0__.atan)((0,_math__WEBPACK_IMPORTED_MODULE_0__.pow)( f /r,1 /n) )- _math__WEBPACK_IMPORTED_MODULE_0__.halfPi];};return project;}function __WEBPACK_DEFAULT_EXPORT__(){ return  (0,_conic__WEBPACK_IMPORTED_MODULE_1__.conicProjection)(conicConformalRaw).scale(109.5).parallels([30,30] );}} ,"../node_modules/d3-geo/src/projection/conicEqualArea.js":(__unused_webpack_module,__webpack_exports__, __webpack_require__) => {"use strict"       ;__webpack_require__.                                                                                                                   r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"conicEqualAreaRaw":(    )  =>  conicEqualAreaRaw,   "default" : ( )  => __WEBPACK_DEFAULT_EXPORT__   }  );var   _math__WEBPACK_IMPORTED_MODULE_0__   =__webpack_require__( "../node_modules/d3-geo/src/math.js");var    _conic__WEBPACK_IMPORTED_MODULE_1__    =   __webpack_require__("../node_modules/d3-geo/src/projection/conic.js"   ) ;var    _cylindricalEqualArea__WEBPACK_IMPORTED_MODULE_2__ =   __webpack_require__(                                                                                                               "../node_modules/d3-geo/src/projection/cylindricalEqualArea.js" ) ;function    conicEqualAreaRaw(y0,y1)  {var  sy0 = (  0,_math__WEBPACK_IMPORTED_MODULE_0__.sin) (  y0),n =(sy0   +  (0,_math__WEBPACK_IMPORTED_MODULE_0__. sin)( y1))/2;if  (( 0, _math__WEBPACK_IMPORTED_MODULE_0__.abs)( n) < _math__WEBPACK_IMPORTED_MODULE_0__.  epsilon)  return  (0,    _cylindricalEqualArea__WEBPACK_IMPORTED_MODULE_2__.cylindricalEqualAreaRaw)(y0);var c =  1 +sy0 *(2 *                                                                                n -sy0),r0 =      (0,  _math__WEBPACK_IMPORTED_MODULE_0__. sqrt)(c)/  n;function  project(x,y) {var  r =(0,     _math__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                     sqrt)(c  -  2 *n *(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(y) ) /n;return    [ r   *( 0,    _math__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                                                         sin)(x *=n),r0 -r *(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(x)];}project.invert   =function (x,y){var r0y =r0 -y;return [(0,_math__WEBPACK_IMPORTED_MODULE_0__.atan2)(x,(0,_math__WEBPACK_IMPORTED_MODULE_0__.abs)( r0y))/n *(0,_math__WEBPACK_IMPORTED_MODULE_0__.sign)(r0y),(0,_math__WEBPACK_IMPORTED_MODULE_0__.asin)((c -(x *x +r0y *r0y)*n *n)/(2 *n))];}      ;return  project;}  function     __WEBPACK_DEFAULT_EXPORT__(   ) {  return    (   0,   _conicconicProjection)(conicEqualAreaRaw).scale(155.424). center([0,33.6442]  );} },  "../node_modules/d3-geo/src/projection/conicEquidistant.js
                                                                                 :(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"conicEquidistantRaw":() =>conicEquidistantRaw,"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _math__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/math.js");var _conic__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-geo/src/projection/conic.js");var _equirectangular__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-geo/src/projection/equirectangular.js");function conicEquidistantRaw(y0,y1){var cy0 =(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(y0),n =y0 ===y1 ?(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(y0):(cy0             -  (    0,                                                                                                                        _math__WEBPACK_IMPORTED_MODULE_0__.cos)( y1)) /(y1    -y0) ,  g =cy0 / n + y0;if ((0,    _math__WEBPACK_IMPORTED_MODULE_0__.abs)(n)<_math__WEBPACK_IMPORTED_MODULE_0__.epsilon)return  _equirectangular__WEBPACK_IMPORTED_MODULE_2__. equirectangularRaw;function project( x,y){var gy =g  -y,nx =  n  *x;return [gy  *(0, _math__WEBPACK_IMPORTED_MODULE_0__.sin) (nx),g  -gy *( 0,_math__WEBPACK_IMPORTED_MODULE_0__.cos) (nx)];}project. invert  = function (  x,y) {var gy = g -y;return  [(0,                                                                                                             _math__WEBPACK_IMPORTED_MODULE_0__.     atan2)       (     x,    (         0,    _math__WEBPACK_IMPORTED_MODULE_0__.abs)(gy))/n *(0,_math__WEBPACK_IMPORTED_MODULE_0__.sign)(gy),g -(0,_math__WEBPACK_IMPORTED_MODULE_0__.sign)(n)* (0,_math__WEBPACK_IMPORTED_MODULE_0__.sqrt)(x *x +gy *gy)];};return project;}function __WEBPACK_DEFAULT_EXPORT__(){return (      0,_conic__WEBPACK_IMPORTED_MODULE_1__.conicProjection)( conicEquidistantRaw).scale(      131.154).                                                                                 center( [  0,       13.9389])   ;}   },"../node_modules/d3-geo/src/projection/cylindricalEqualArea.js":  (     __unused_webpack_module,                                                                                                                                                                               __webpack_exports__,__webpack_require__)  =>{ "use strict"    ;__webpack_require__.    r(                   __webpack_exports__)                                                                                                                                                                                                                                                                                           ;__webpack_require__.d( __webpack_exports__,  { "cylindricalEqualAreaRaw":()   =>   cylindricalEqualAreaRaw });var _math__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/math.js");function cylindricalEqualAreaRaw(phi0){var cosPhi0 =(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(phi0);function forward(lambda,phi){return [lambda *    cosPhi0,( 0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)(phi)/cosPhi0] ;}forward.invert =    function (xy){return [x /cosPhi0,(0,_math__WEBPACK_IMPORTED_MODULE_0__.asin)(y *cosPhi0)]  ;};return forward;}
                                                                               },"../node_modules/d3-geo/src/projection/equirectangular.js":  ( __unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__. r(__webpack_exports__);__webpack_require__.d( __webpack_exports__,{"default":( )  => __WEBPACK_DEFAULT_EXPORT__,"equirectangularRaw":() =>equirectangularRaw });var  _index__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/projection/index.js" );function  equirectangularRaw(lambda,phi){ return [lambda,phi] ;}equirectangularRaw.invert =equirectangularRaw;function  __WEBPACK_DEFAULT_EXPORT__() {return  (0,_index__WEBPACK_IMPORTED_MODULE_0__["default"])(equirectangularRaw) .scale(152.63);}},  "../node_modules/d3-geo/src/projection/fit.js":(__unused_webpack_module,        __webpack_exports__,                                                                                                                   __webpack_require__)  => { "use strict";__webpack_require__. r(__webpack_exports__)  ;__webpack_require__.d(__webpack_exports__,{"fitExtent":() =>fitExtent,"fitSize": () =>fitSize });var _stream__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/stream.js");var _path_bounds__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-geo/src/path/bounds.js");function  fitExtent(projection,extent,object){var w =extent[1][0]-extent[0][0],h =                                                                                                            extent[1][1]-extent[0][1],clip =projection.clipExtent &&projection.clipExtent()     ;projection.scale(150).translate([ 0,0]);if (clip  !=  null) projection.clipExtent(null);(0,_stream__WEBPACK_IMPORTED_MODULE_0__["default"])(object,projection.stream(_path_bounds__WEBPACK_IMPORTED_MODULE_1__["default"] ));var b =_path_bounds__WEBPACK_IMPORTED_MODULE_1__[   "default"].result(),k =Math.min(w /(b[1][0] -b[0][0]),h /(b[1][  1]-b[0][1] )),x = +    extent[0][0]                                                                                 +(w -k *(b[1]    [0]+b[0][0]))/2,y = +extent[0][1]+(h -k *(b[1][1]+b[0][1])) /2;if (clip !=null)projection.     clipExtent(                                                                                                                                                                                        clip);return projection.scale(k  *150).translate([x,y]);} function fitSize(projection,size,      object)   {   return  fitExtent(                                                                                                                                                                                                                                                                                               projection,   [  [     0,   0]   ,    size]    ,      object)    ;}      }   ,   "../node_modules/d3-geo/src/projection/gnomonic.js":(__unused_webpack_module,__webpack_exports__, __webpack_require__)  =>{ "use strict";__webpack_require__. r(__webpack_exports__) ;__webpack_require__.d( __webpack_exports__, { "default":() => __WEBPACK_DEFAULT_EXPORT__,   "gnomonicRaw" :()     => gnomonicRaw } )  ;var  _math__WEBPACK_IMPORTED_MODULE_0__  =    __webpack_requirenode_modules/d3-geo/src/math.js"                )            ;var  _azimuthal
                                                                                =__webpack_require__("../node_modules/d3-geo/src/projection/azimuthal.js");var _index__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-geo/src/projection/index.js");function gnomonicRaw(x,y){var cy = ( 0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(y) , k =(0,_math__WEBPACK_IMPORTED_MODULE_0__.cos)(x)*cy;return [cy *(0,_math__WEBPACK_IMPORTED_MODULE_0__.sin)( x)/k,(0, _math__WEBPACK_IMPORTED_MODULE_0__.sin)( y)/k] ;}gnomonicRaw.invert =(0,_azimuthal__WEBPACK_IMPORTED_MODULE_1__.azimuthalInvert)(_math__WEBPACK_IMPORTED_MODULE_0__.atan) ;function __WEBPACK_DEFAULT_EXPORT__(){return (  0,_index__WEBPACK_IMPORTED_MODULE_2__["default" ])(  gnomonicRaw).scale(144.049).clipAngle(60) ;}} ,"../node_modules/d3-geo/src/projection/identity.js": (        __unused_webpack_module,                                                                                                              __webpack_exports__, __webpack_require__) => {"use strict";__webpack_require__. r(     __webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _clip_extent__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/clip/extent.js");var _identity__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-geo/src/identity.js");var _transform__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__(                                                                                                             "../node_modules/d3-geo/src/transform.js");var _fit__WEBPACK_IMPORTED_MODULE_3__   =__webpack_require__("../node_modules/d3-geo/src/projection/fit.js") ;function scaleTranslate(kx,ky,tx, ty){return kx ===1 && ky === 1 &&tx ===0 &&ty ===0 ?_identity__WEBPACK_IMPORTED_MODULE_1__[ "default"]: (0,_transform__WEBPACK_IMPORTED_MODULE_2__.transformer) ({point:    function ( x, y) {this.stream.point(x   * kx  +tx, y  *ky +  ty);}} )  ;}  function    __WEBPACK_DEFAULT_EXPORT__(                                                                   ){var k =1,tx    =0,ty  =0, sx =1,sy =1,transform = _identity__WEBPACK_IMPORTED_MODULE_1__["default" ],x0 =     null,                                                                                                                                                                                              y0,x1,y1,clip = _identity__WEBPACK_IMPORTED_MODULE_1__[  "default" ],cache, cacheStream,    projection;function reset(){cache =                                                                                                                                                                                                                                                                                             cacheStream =null;return projection;}return projection ={stream:function (stream)    {return  cache   && cacheStream === stream ?cache  :cache  = transform( clip( cacheStream =stream) );},clipExtent:function ( _)   { return arguments. length  ?  ( clip  =_ ==null ?  ( x0 =   y0 = x1 =y1  = null, _identity__WEBPACK_IMPORTED_MODULE_1__[  "default"] ) : (0,    _clip_extent__WEBPACK_IMPORTED_MODULE_0__.clipExtent)(x0 = +_[0][0],y0 = +_[0][1],x1   = +_[1][0],yreset()):x0 ==null ? null :[[x0,y0],[x1,y1]];},scale:function (_){    return arguments
                                                                             length ?(transform = scaleTranslate((k = +_)*sx,k *sy,tx,ty),reset()):k;},translate:function (_){return arguments.length ?(transform =scaleTranslate(k *sx,k *sy,tx = +_[0] ,ty = + _[1]),reset()):[tx,ty];}, reflectX:function (_){return arguments.length ?(transform =scaleTranslate(k *(sx =_ ? -1 :1),k *sy,tx,ty) ,reset()):sx <0;},reflectY:function (_){return arguments.length ?(transform =scaleTranslate(k *sx,k *(sy = _ ? -1 :1) ,tx,ty),reset() ):sy <0;},fitExtent:function (extent,object){ return (0,_fit__WEBPACK_IMPORTED_MODULE_3__.fitExtent)(projection,extent,object);},fitSize: function (size,object){return (0,_fit__WEBPACK_IMPORTED_MODULE_3__.fitSize)(projection,size,object);}} ;}},"../node_modules/d3-geo/src/projection/index.js":(__unused_webpack_module,       __webpack_exports__,                                                                                                              __webpack_require__)   =>{"use strict"   ;__webpack_require__.r( __webpack_exports__)   ;__webpack_require__.  d(__webpack_exports__, { "default"   :    (   )   =>projection,"projectionMutator"  :(  ) => projectionMutator   });var  _clip_antimeridian__WEBPACK_IMPORTED_MODULE_0__  =__webpack_require__(   "../node_modules/d3-geo/src/clip/antimeridian.js" );var _clip_circle__WEBPACK_IMPORTED_MODULE_1__    = __webpack_require__("../node_modules/d3-geo/src/clip/circle.js" )   ;var                                                                                                                   _clip_extent__WEBPACK_IMPORTED_MODULE_2__          =   __webpack_require__(    "../node_modules/d3-geo/src/clip/extent.js"  );var _compose__WEBPACK_IMPORTED_MODULE_3__ =  __webpack_require__( "../node_modules/d3-geo/src/compose.js"   )  ;var _identity__WEBPACK_IMPORTED_MODULE_4__  =__webpack_require__(   "../node_modules/d3-geo/src/identity.js" );var            _math__WEBPACK_IMPORTED_MODULE_5__             =        __webpack_require__(  "../node_modules/d3-geo/src/math.js"                                                                )   ;var              _rotation__WEBPACK_IMPORTED_MODULE_6__          =           __webpack_require__(     "../node_modules/d3-geo/src/rotation.js"                                                                                                                                                            )      ;var  _transform__WEBPACK_IMPORTED_MODULE_7__        =     __webpack_require__(   "../node_modules/d3-geo/src/transform.js"                                                                                                                                                                                                                                                                                               )    ;var     _fit__WEBPACK_IMPORTED_MODULE_8__   =   __webpack_require__(   "../node_modules/d3-geo/src/projection/fit.js");var _resample__WEBPACK_IMPORTED_MODULE_9__ =__webpack_require__("../node_modules/d3-geo/src/projection/resample.js");var transformRadians  =( 0,_transform__WEBPACK_IMPORTED_MODULE_7__.transformer)({point:function (x,y) {this.    stream.    point(  x      *    _math__WEBPACK_IMPORTED_MODULE_5__. radians,  y     *  _math__WEBPACK_IMPORTED_MODULE_5__.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 radians);}});function projection(project){return projectionMutator(function ()  {return project;}
                                                                             );}function projectionMutator(projectAt){var project,k =150,x =480,y =250,dx,dy,lambda =0,phi =0,deltaLambda = 0,deltaPhi =0,deltaGamma =0,rotate,projectRotate, theta =null,preclip  =_clip_antimeridian__WEBPACK_IMPORTED_MODULE_0__["default" ],x0 =null,y0,x1,y1,postclip =_identity__WEBPACK_IMPORTED_MODULE_4__["default"],delta2  =0.5,projectResample =(0,_resample__WEBPACK_IMPORTED_MODULE_9__["default"] )(projectTransform,delta2), cache,cacheStream;function projection(point) {point =projectRotate(point[0]* _math__WEBPACK_IMPORTED_MODULE_5__. radians,point[1]*_math__WEBPACK_IMPORTED_MODULE_5__. radians) ;return [point[ 0]*k +dx,dy - point[1] *k];} function invert(point) {point =projectRotate. invert((point[0]-dx)/k,(dy -point[1])/k);return point && [point[0]*        _math__WEBPACK_IMPORTED_MODULE_5__.                                                                                               degrees, point[  1]*  _math__WEBPACK_IMPORTED_MODULE_5__.  degrees]  ;}   function     projectTransform(x,y) {return  x =project(x,y), [x[0]*k +dx,dy - x[1]*k];}projection.stream =function (stream){return cache &&cacheStream ===stream ?cache :cache  =transformRadians(preclip(rotate,projectResample(postclip(cacheStream =stream))));};projection.clipAngle =function (_){return arguments.length ?(preclip = +_ ?(0,_clip_circle__WEBPACK_IMPORTED_MODULE_1__["default" ])(theta =_ *                                                                                                                            _math__WEBPACK_IMPORTED_MODULE_5__.         radians,     6         *    _math__WEBPACK_IMPORTED_MODULE_5__.radians):(theta =null,_clip_antimeridian__WEBPACK_IMPORTED_MODULE_0__["default"]),reset()):theta *_math__WEBPACK_IMPORTED_MODULE_5__.degrees;};projection.clipExtent =function (_){return arguments.length ?(postclip = _ ==null ?(x0 =y0 =x1 =   y1   =    null,  _identity__WEBPACK_IMPORTED_MODULE_4__[ "default"   ] )  :    (  0,   _clip_extent__WEBPACK_IMPORTED_MODULE_2__.                                                      clipExtent)(    x0 = +_[0][0],y0 = +_[0][1],x1 = +_[1][0],y1 = +_[1][1]),reset()):x0 ==null ?null :[[x0,y0]     , [                                                                                                                                                                                         x1,y1]];};projection.scale =function (_){return arguments.length ?(k =  +_,recenter()):k;}     ;projection.translate =function (                                                                                                                                                                                                                                                                                                _){return arguments.length  ?(x = +_[0],y = +_[1],recenter()):[x,y];};projection.    center =function (_){return arguments.length ?(lambda =_[ 0]%360 *_math__WEBPACK_IMPORTED_MODULE_5__.radians,phi =_[1] %360 *_math__WEBPACK_IMPORTED_MODULE_5__.radians,recenter()):[lambda *_math__WEBPACK_IMPORTED_MODULE_5__.degrees,phi * _math__WEBPACK_IMPORTED_MODULE_5__.   degrees];};projection.rotate =function (_){return arguments.length ?(deltaLambdamath__WEBPACK_IMPORTED_MODULE_5__.radians,  deltaPhi     = _[  1] %  360   *  _math
                                                                           radians,deltaGamma =_.length >2 ?_[2]%360 *_math__WEBPACK_IMPORTED_MODULE_5__.radians :0,recenter()):[deltaLambda *_math__WEBPACK_IMPORTED_MODULE_5__.degrees,deltaPhi *_math__WEBPACK_IMPORTED_MODULE_5__.degrees,deltaGamma *_math__WEBPACK_IMPORTED_MODULE_5__.degrees];};projection.precision =function (_){return arguments.length ?(projectResample =(0,_resample__WEBPACK_IMPORTED_MODULE_9__["default"])(projectTransform,delta2 =_ *_),reset()):(0,_math__WEBPACK_IMPORTED_MODULE_5__.sqrt) (delta2);};projection.fitExtent =function (extent,object){return (0,_fit__WEBPACK_IMPORTED_MODULE_8__.fitExtent)(projection,extent,object);};projection.fitSize =function (size,object){return (0,_fit__WEBPACK_IMPORTED_MODULE_8__.fitSize)(projection,size,object);};function recenter(){        projectRotate =(                                                                                                                   0,   _compose__WEBPACK_IMPORTED_MODULE_3__["default"])  (     rotate  =   (   0,    _rotation__WEBPACK_IMPORTED_MODULE_6__.rotateRadians)(deltaLambda,deltaPhi,deltaGamma)  , project);var  center =project(lambda,phi) ;dx  =x -center[0] *k;dy =y  +center[ 1]*k;return reset() ;}function  reset(){cache =cacheStream =null;return projection;}return function ( ){project  =projectAt.apply( this, arguments);projection.invert  =project.invert && invert;return recenter();};}},                                                                                                                       "../node_modules/d3-geo/src/projection/mercator.js": (__unused_webpack_module,    __webpack_exports__,__webpack_require__)  =>{"use strict" ;__webpack_require__.r( __webpack_exports__) ;__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__,"mercatorProjection" :() =>mercatorProjection,"mercatorRaw" : () =>mercatorRaw }) ;var          _math__WEBPACK_IMPORTED_MODULE_0__           =          __webpack_require__(   "../node_modules/d3-geo/src/math.js"                                                                 )    ;var               _rotation__WEBPACK_IMPORTED_MODULE_1__         =           __webpack_require__(    "../node_modules/d3-geo/src/rotation.js"                                                                                                                                                        )         ;var       _index__WEBPACK_IMPORTED_MODULE_2__     =   __webpack_require__(   "../node_modules/d3-geo/src/projection/index.js"                                                                                                                                                                                                                                                                                       )  ;function    mercatorRaw(  lambda, phi)    {  return       [lambda, (    0,   _math__WEBPACK_IMPORTED_MODULE_0__.log)((0,_math__WEBPACK_IMPORTED_MODULE_0__.tan)((_math__WEBPACK_IMPORTED_MODULE_0__.halfPi +phi)/2))];}mercatorRaw.invert =function (x,y){return [x,2 *(0,_math__WEBPACK_IMPORTED_MODULE_0__.atan)((0,_math__WEBPACK_IMPORTED_MODULE_0__.exp)(y)   )-_math__WEBPACK_IMPORTED_MODULE_0__.halfPi];};function __WEBPACK_DEFAULT_EXPORT__(        )      {return      mercatorProjection(  mercatorRaw).      scale(     961      /  _math__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
                                                                           tau);}function mercatorProjection(project){var m =(0,_index__WEBPACK_IMPORTED_MODULE_2__["default"])(project),center =m.center,scale =m.scale,translate =m. translate,clipExtent =m.clipExtent,x0 =null,y0,x1,y1;m. scale =function ( _){return arguments.length ?(scale(_),reclip()):scale();};m.translate =function (_){return arguments.length ?(translate(_),reclip()):translate();};m.center =function (_){return arguments.length ?(center( _),reclip()):center();};m.clipExtent =function (_){return arguments.length ?(_ ==null  ?x0 =y0 =x1 =y1 =null :(x0 = +_[0][0],y0 = +_[0][1],x1 = +_[1][0],y1 = +_[1][1]),reclip()) :x0 ==null ?null :[[x0,y0],[x1,y1]];};function reclip(){var k =_math__WEBPACK_IMPORTED_MODULE_0__.pi *scale(),t =m((0,_rotation__WEBPACK_IMPORTED_MODULE_1__[        "default" ]) (m.                                                                                                               rotate()).invert([0,0]));return clipExtent(x0 ==null ?[[t[0]-k,t[1]-k],[t[0]+k,t[1]   +k]]: project ===mercatorRaw ?[[Math.max(t[0]-k,x0),    y0]                                                                                                                                                                                                                                                                                                                                                                                                                                                              ,[Math.min(t[0]+k,x1),y1]]:[[x0,Math.max(t[1]-k,y0)],[x1,Math.min(t[1]+k,y1)]])    ;}return  reclip();}},                                                                                                                                                                                                                             "../node_modules/d3-geo/src/projection/naturalEarth1.js" :(__unused_webpack_module,__webpack_exports__,__webpack_require__) => {"use strict" ;__webpack_require__.                                                                    r(     __webpack_exports__);__webpack_require__.  d( __webpack_exports__,   { "default":  ( ) =>    __WEBPACK_DEFAULT_EXPORT__,                                                                                                                                                              "naturalEarth1Raw":( )  =>  naturalEarth1Raw });var _index__WEBPACK_IMPORTED_MODULE_0__  =                  __webpack_require__(                                                                                                                                                                                                                                                                                                            "../node_modules/d3-geo/src/projection/index.js"         )         ;var   _math__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                                                      =      __webpack_require__(   "../node_modules/d3-geo/src/math.js");function naturalEarth1Raw(lambda,phi){var phi2  =phi *phi,phi4                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     =phi2 *phi2;return [lambda *(0.8707 -0.131979 *phi2 +phi4 *( -0.013791 +phi4 *  ( 0.003971 *phi
                                                                         0.001529 *phi4))),phi *(1.007226 +phi2 *(0.015085 +phi4 *( -0.044475 +0.028874 *phi2 -0.005916 *phi4)))];}naturalEarth1Raw.invert =function (x,y){var phi =y,i =25,delta;do {var phi2 =phi *phi,phi4 =phi2 *phi2;phi -=delta =(phi *(1.007226 +phi2 *(0.015085 +phi4 *( -0.044475 +0.028874 *phi2 -0.005916 *phi4)))-y)/(1.007226 +phi2 *(0.015085 *3 +phi4 *( -0.044475 *7 +0.028874 *9 *phi2 -0.005916 *11 *phi4)));}while ((0,_math__WEBPACK_IMPORTED_MODULE_1__.abs)(delta)>_math__WEBPACK_IMPORTED_MODULE_1__.epsilon && --i >0);return [x /(0.8707 +(phi2 =phi *phi)*( -0.131979 +phi2 *( -0.013791 +phi2 *phi2 *phi2 *(0.003971 -0.001529 *phi2)))),phi];};function __WEBPACK_DEFAULT_EXPORT__(){return (0,_index__WEBPACK_IMPORTED_MODULE_0__["default"])(naturalEarth1Raw).scale(175.295);}              }         ,                                                                                                             "../node_modules/d3-geo/src/projection/orthographic.js" :(__unused_webpack_module,   __webpack_exports__,__webpack_require__) =>{                                                                                                                                                                                                                                                                                                                                                                                                                                                                              "use strict";__webpack_require__. r(__webpack_exports__);__webpack_require__.d(    __webpack_exports__,                                                                                                                                                                                                                                           { "default": (  )  =>     __WEBPACK_DEFAULT_EXPORT__, "orthographicRaw"  : (  ) =>orthographicRaw   });var   _math__WEBPACK_IMPORTED_MODULE_0__                                                                             =           __webpack_require__(          "../node_modules/d3-geo/src/math.js"    )        ;var     _azimuthal__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                  =   __webpack_require__( "../node_modules/d3-geo/src/projection/azimuthal.js"  )  ;var    _index__WEBPACK_IMPORTED_MODULE_2__                                                                                                                                                                                                                                                                                                   =__webpack_require__(  "../node_modules/d3-geo/src/projection/index.js");function   orthographicRaw(x,y)                                                                                                                                                                                                                                            {  return [     ( 0,   _math__WEBPACK_IMPORTED_MODULE_0__.cos)( y)*(0,_math__WEBPACK_IMPORTED_MODULE_0__.     sin) (xmath__WEBPACK_IMPORTED_MODULE_0__. sin)(  y)];} orthographicRaw. invert  =(0,  _azimuthal
                                                                        azimuthalInvert)(_math__WEBPACK_IMPORTED_MODULE_0__.asin);function __WEBPACK_DEFAULT_EXPORT__(  ){ return (0,_index__WEBPACK_IMPORTED_MODULE_2__["default"])(orthographicRaw).   scale(249.5). clipAngle(90 +_math__WEBPACK_IMPORTED_MODULE_0__.epsilon) ;}},"../node_modules/d3-geo/src/projection/resample.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__. d(__webpack_exports__, {"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _cartesian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/d3-geo/src/cartesian.js" );var _math__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-geo/src/math.js") ;var _transform__WEBPACK_IMPORTED_MODULE_2__ =        __webpack_require__(                                                                                                          "../node_modules/d3-geo/src/transform.js");var maxDepth =16, cosMinDistance =(0,   _math__WEBPACK_IMPORTED_MODULE_1__. cos)(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      30      *      _math__WEBPACK_IMPORTED_MODULE_1__.    radians)    ;function    __WEBPACK_DEFAULT_EXPORT__(                                                                                                                                                                                                                                         project,delta2){     return  ( + delta2 ?resample(project,delta2): resampleNone( project)) ;}function     resampleNone(                                                                                      project)   {   return (0, _transform__WEBPACK_IMPORTED_MODULE_2__. transformer)({point:function (x, y){x =     project(                                                                                                                                                                           x,y);this.stream.point(x[ 0],  x[1]);}} ) ;}function  resample(project, delta2) {  function   resampleLineTo(x0,y0,lambda0,a0,b0,                                                                                                                                                                                                                                                                                                    c0,x1,y1,lambda1,a1,b1,c1,depth,stream){var dx =x1 -x0,dy =y1 -y0,d2 =dx *dx +dy *   dy;if (d2   >  4 *                                                                                                                                                                                                                                                delta2 &&depth-- )  {var a =a0 +a1,b =b0 +b1,c =c0 +c1,m =(0,_math__WEBPACK_IMPORTED_MODULE_1__.sqrt)(    a *a +b *b +cc),phi2 = ( 0,_math__WEBPACK_IMPORTED_MODULE_1__.  asin)(c /=m)  ,lambda2 =(0,  _math
                                                                        abs)(( 0,_math__WEBPACK_IMPORTED_MODULE_1__.abs)(c)-1)< _math__WEBPACK_IMPORTED_MODULE_1__.epsilon  ||(0,_math__WEBPACK_IMPORTED_MODULE_1__.abs)(lambda0 - lambda1)<_math__WEBPACK_IMPORTED_MODULE_1__.epsilon ?(lambda0 + lambda1)/2 :(0,_math__WEBPACK_IMPORTED_MODULE_1__.atan2) (b,a),p =project(lambda2,phi2),x2 =p[ 0],y2 =p[1],dx2 =x2 -x0,dy2 =y2 -y0,dz =dy *dx2 -dx *dy2;if (dz *dz /d2 >delta2 ||(0,_math__WEBPACK_IMPORTED_MODULE_1__. abs)((dx *dx2 +dy *dy2)/d2 -0.5)>0.3 ||a0 *a1 +b0 *b1 +c0 *c1 <cosMinDistance){resampleLineTo(x0,y0,lambda0,a0,b0,c0,x2,y2,lambda2,a /=m,b /=m,c,depth,stream);stream.point(x2,y2);resampleLineTo(x2,y2,lambda2,a,b, c,x1,y1,lambda1,a1,b1,c1,depth,stream);}}}return function (stream){var lambda00,x00,y00,a00,b00,c00, lambda0,x0,y0,a0,b0,c0;var       resampleStream ={                                                                                                            point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function (){ stream.      polygonStart( )   ;resampleStream.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       lineStart  =  ringStart;},  polygonEnd:function ( ) {  stream.   polygonEnd( )       ;resampleStream.                                                                                                                                                                                                                                                       lineStart =   lineStart;}};function point( x, y) {x =  project(x, y);stream.point(x[0],x[1] );}          function                                                                                       lineStart(){    x0 =NaN;resampleStream.point =linePoint;stream.lineStart();}function linePoint(lambda,phi)     {var                                                                                                                                                                             c =(0,_cartesian__WEBPACK_IMPORTED_MODULE_0__.cartesian)([lambda,phi]), p =project(lambda,     phi);resampleLineTo(x0,y0,lambda0,                                                                                                                                                                                                                                                                                                     a0,b0,c0,x0 =p[0],y0 =p[  1],lambda0 =lambda,a0 =c[0],b0 =c[1],c0 =c[2],maxDepth,     stream)  ;stream.                                                                                                                                                                                                                                                   point(x0,y0) ;}   function lineEnd() { resampleStream.point    =point;stream.lineEnd(  ) ;} function     ringStart(){lineStart();resampleStream.point =ringPoint;resampleStream.lineEnd =ringEnd;}  function ringPoint
                                                                       lambda,phi) {linePoint( lambda00 =lambda,phi),x00 =x0, y00 =y0, a00  =a0,b00 = b0,c00 =c0;resampleStream.point =linePoint;}function ringEnd(){resampleLineTo(x0,y0,lambda0,a0,b0,c0,x00,y00,lambda00,a00,b00,c00,maxDepth,stream);resampleStream.lineEnd  =lineEnd;lineEnd();}return  resampleStream;};}} ,"../node_modules/d3-geo/src/projection/stereographic.js":( __unused_webpack_module,__webpack_exports__,__webpack_require__) => {"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__,"stereographicRaw":() =>stereographicRaw }) ;var _math__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/math.js");var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__(        "../node_modules/d3-geo/src/projection/azimuthal.js"                                                                              )     ;var   _index__WEBPACK_IMPORTED_MODULE_2__   =   __webpack_require__(   "../node_modules/d3-geo/src/projection/index.js"                                                                                                                                                                                                                                                                                                                                                                                                                                                                           );function stereographicRaw(x,y){var cy =(0,_math__WEBPACK_IMPORTED_MODULE_0__.    cos)(y),k = 1 +( 0,                                                                                                                                                                                                                                                      _math__WEBPACK_IMPORTED_MODULE_0__.  cos)(x)* cy;return [cy  *( 0, _math__WEBPACK_IMPORTED_MODULE_0__.  sin)(x)/k,(0, _math__WEBPACK_IMPORTED_MODULE_0__.                                                sin)( y)/k];}      stereographicRaw.invert =(0,   _azimuthal__WEBPACK_IMPORTED_MODULE_1__. azimuthalInvert)(    function                                                                                                                                                                       (z)  {return    2   *( 0,   _math__WEBPACK_IMPORTED_MODULE_0__.atan) ( z) ;}  )  ;function        __WEBPACK_DEFAULT_EXPORT__() {                                                                                                                                                                                                                                                                                                       return  ( 0,_index__WEBPACK_IMPORTED_MODULE_2__[ "default"] ) (stereographicRaw).   scale(    250)    .                                                                                                                                                                                                                                                        clipAngle(     142)  ;}  }  , "../node_modules/d3-geo/src/projection/transverseMercator.js":  (   __unused_webpack_modulewebpack_exports__, __webpack_require__) =>{"use strict";__webpack_require__.                   r
                                                                      __webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__,"transverseMercatorRaw" :() =>transverseMercatorRaw });var  _math__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-geo/src/math.js");var _mercator__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-geo/src/projection/mercator.js");function  transverseMercatorRaw(lambda,phi){return [(0,_math__WEBPACK_IMPORTED_MODULE_0__.log)((0,_math__WEBPACK_IMPORTED_MODULE_0__.tan)((_math__WEBPACK_IMPORTED_MODULE_0__.halfPi +phi)/2) ), -lambda];}transverseMercatorRaw. invert =function (x,y){ return [ -y,2  *( 0,_math__WEBPACK_IMPORTED_MODULE_0__.atan)((0,_math__WEBPACK_IMPORTED_MODULE_0__.exp)(x))-_math__WEBPACK_IMPORTED_MODULE_0__.halfPi];}               ;function                                                                                                        __WEBPACK_DEFAULT_EXPORT__() { var  m =(0,_mercator__WEBPACK_IMPORTED_MODULE_1__.            mercatorProjection)    (                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            transverseMercatorRaw),center =m.center,rotate =m.rotate;m.center =function (_)    {return  arguments.                                                                                                                                                                                                                                                         length  ?     center([ -_[1],_[0]]):(_ =center( ),[_[1], -_[0]] );}  ;m.rotate = function (_) {  return arguments.                                                                                          length ?    rotate([_[ 0],_[ 1] ,_.length >2 ?_[ 2]+90 :90]) :  (_ =rotate(),[_[ 0] ,_[1] ,_[2]-90]);}     ;return rotate(                                                                                                                                                              [0,   0,  90]   )   .  scale(159.155);}} ,   "../node_modules/d3-geo/src/rotation.js"  : (               __unused_webpack_module,                                                                                                                                                                                                                                                                                                        __webpack_exports__,__webpack_require__) =>{ "use strict";__webpack_require__.r(   __webpack_exports__)                                                                                                                                                                                                                                                        ;__webpack_require__. d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__,"rotateRadiansrotateRadians   } )    ;var       _compose__WEBPACK_IMPORTED_MODULE_0__      =  __webpack_require
                                                                      "../node_modules/d3-geo/src/compose.js");var _math__WEBPACK_IMPORTED_MODULE_1__  =__webpack_require__("../node_modules/d3-geo/src/math.js");function rotationIdentity( lambda,phi){return  [lambda  > _math__WEBPACK_IMPORTED_MODULE_1__. pi ?lambda -_math__WEBPACK_IMPORTED_MODULE_1__.tau :lambda < -_math__WEBPACK_IMPORTED_MODULE_1__.pi ?lambda +_math__WEBPACK_IMPORTED_MODULE_1__.tau  :lambda,phi];}rotationIdentity.invert =rotationIdentity;function rotateRadians( deltaLambda,deltaPhi,deltaGamma){return (deltaLambda %=_math__WEBPACK_IMPORTED_MODULE_1__.tau)?deltaPhi ||deltaGamma ?(0,_compose__WEBPACK_IMPORTED_MODULE_0__["default"])(rotationLambda(deltaLambda),rotationPhiGamma(deltaPhi,deltaGamma)):rotationLambda(deltaLambda):deltaPhi ||deltaGamma ? rotationPhiGamma(deltaPhi,           deltaGamma)  :                                                                                                       rotationIdentity;}  function forwardRotationLambda(deltaLambda){return function (     lambda,phi){ return lambda  +=                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               deltaLambda,   [lambda >   _math__WEBPACK_IMPORTED_MODULE_1__.pi   ?lambda  -    _math__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                           tau   :      lambda         <   - _math__WEBPACK_IMPORTED_MODULE_1__.   pi     ?   lambda   +  _math__WEBPACK_IMPORTED_MODULE_1__.                                                                     tau :lambda,       phi] ;};}  function rotationLambda( deltaLambda){var  rotation  = forwardRotationLambda(    deltaLambda)                                                                                                                                                              ;rotation.  invert  = forwardRotationLambda(    - deltaLambda) ;return   rotation;}function       rotationPhiGamma(      deltaPhi,                                                                                                                                                                                                                                                                                                        deltaGamma){var cosDeltaPhi =(0,_math__WEBPACK_IMPORTED_MODULE_1__.cos)(deltaPhi)    ,sinDeltaPhi =(0,                                                                                                                                                                                                                                                            _math__WEBPACK_IMPORTED_MODULE_1__. sin) ( deltaPhi), cosDeltaGamma =(  0, _math__WEBPACK_IMPORTED_MODULE_1__.cos)  (  deltaGammasinDeltaGamma =(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(deltaGamma);function  rotation(   lambda
                                                                    phi){var cosPhi =(0,_math__WEBPACK_IMPORTED_MODULE_1__.cos)( phi),x =(0,_math__WEBPACK_IMPORTED_MODULE_1__.cos)( lambda)*cosPhi,y =(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin) (lambda)*cosPhi,z =(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(phi),k =z *cosDeltaPhi +x * sinDeltaPhi;return [(0,_math__WEBPACK_IMPORTED_MODULE_1__.atan2) (y *cosDeltaGamma -k *sinDeltaGamma,x *cosDeltaPhi -z *sinDeltaPhi),(0,_math__WEBPACK_IMPORTED_MODULE_1__.asin)(k *cosDeltaGamma +y *sinDeltaGamma)];}rotation. invert =function ( lambda, phi){var cosPhi =(0,_math__WEBPACK_IMPORTED_MODULE_1__.cos)(phi),x =(0,_math__WEBPACK_IMPORTED_MODULE_1__. cos)(lambda) *cosPhi, y  =(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(lambda)*cosPhi,z =(0,_math__WEBPACK_IMPORTED_MODULE_1__.sin)(phi),k =z *cosDeltaGamma -y *        sinDeltaGamma;return [                                                                                                 (0,_math__WEBPACK_IMPORTED_MODULE_1__.atan2)(y *cosDeltaGamma +z *sinDeltaGamma,x   *cosDeltaPhi +k *sinDeltaPhi),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               (0,_math__WEBPACK_IMPORTED_MODULE_1__.asin)(k  *cosDeltaPhi -x *sinDeltaPhi)];}     ;return rotation;}                                                                                                                                                                                                                                                            function    __WEBPACK_DEFAULT_EXPORT__(rotate)  { rotate   =   rotateRadians(rotate[   0]  *  _math__WEBPACK_IMPORTED_MODULE_1__.                                                                           radians,    rotate[1] *_math__WEBPACK_IMPORTED_MODULE_1__.radians, rotate.length > 2  ? rotate[ 2]  *     _math__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                        radians :0) ;function forward(coordinates){  coordinates     = rotate(  coordinates[0]*    _math__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                                                                           radians,  coordinates[1]       *     _math__WEBPACK_IMPORTED_MODULE_1__.radians)   ;return coordinates[                                                                                                                                                                                                                                                             0] *=    _math__WEBPACK_IMPORTED_MODULE_1__.         degrees,     coordinates[    1]    *=  _mathdegrees, coordinates;}forward.invert =function  (coordinates) { coordinates =     rotate.  invert(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
                                                                    coordinates[0]*_math__WEBPACK_IMPORTED_MODULE_1__.radians,coordinates[1]*_math__WEBPACK_IMPORTED_MODULE_1__.radians);return coordinates[0]*=_math__WEBPACK_IMPORTED_MODULE_1__.degrees,coordinates[1]*=_math__WEBPACK_IMPORTED_MODULE_1__.degrees,coordinates;};return forward;}},"../node_modules/d3-geo/src/stream.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function streamGeometry(geometry,stream){if (geometry &&streamGeometryType.hasOwnProperty(geometry.type)) {streamGeometryType[geometry.type](geometry,stream);}}var streamObjectType ={Feature:function (object,stream){streamGeometry(object.geometry,stream);},        FeatureCollection:                                                                                                     function  (object, stream){var features   =object. features,i = -1,n = features.     length;while   ( ++ i  <n)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 streamGeometry(features[i].geometry,stream);}};var streamGeometryType ={Sphere:     function ( object,                                                                                                                                                                                                                                                              stream)   {  stream. sphere( );} ,Point:function   (  object, stream){ object   =  object.   coordinates;stream.                                                                                      point(object[   0],object[1], object[2]);}  ,MultiPoint:function  (object,stream){var coordinates = object.     coordinates,                                                                                                                                                          i = -1,n =coordinates.length;while ( ++i <n)object =coordinates[i],stream.point(object[0],    object[1],object[2]);},LineString:                                                                                                                                                                                                                                                                                                           function ( object,   stream) {   streamLine( object. coordinates, stream, 0) ;} ,     MultiLineString:                                                                                                                                                                                                                                                               function  (object,stream){ var coordinates = object. coordinates,  i = -1, n = coordinates. length;whilei  <n)streamLine(coordinates[i],stream,0);},Polygon:function  (object,stream){       streamPolygon
                                                                  object.coordinates,stream);},MultiPolygon:function (object,stream){var coordinates =object.coordinates,i = -1,n =coordinates.length;while ( ++i <n)streamPolygon(coordinates[i],stream);},GeometryCollection:function (object,stream){var geometries =object.geometries,i = -1,n =geometries.length;while ( ++i <n)streamGeometry(geometries[i],stream);}};function streamLine(coordinates,stream,closed){var i = -1,n =coordinates.length -closed,coordinate;stream.lineStart();while ( ++i <n)coordinate =coordinates[i],stream.point(coordinate[0],coordinate[1],coordinate[2]);stream.lineEnd();}function streamPolygon(coordinates,stream){var i = -1,n =coordinates.length;stream.polygonStart();while ( ++i <n)streamLine(coordinates[i],stream,1);stream.polygonEnd();}function __WEBPACK_DEFAULT_EXPORT__(      object,stream){if                                                                                                     (object &&streamObjectType.hasOwnProperty(object.type)) {streamObjectType[object.   type](object,stream);}else {                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 streamGeometry(object,stream) ;} }},"../node_modules/d3-geo/src/transform.js":(    __unused_webpack_module,                                                                                                                                                                                                                                                          __webpack_exports__, __webpack_require__) =>{"use strict" ;__webpack_require__.r( __webpack_exports__) ;__webpack_require__.                                                                                     d(    __webpack_exports__,{ "default" : () =>__WEBPACK_DEFAULT_EXPORT__, "transformer":  ( )  =>     transformer                                                                                                                                                        }  );function  __WEBPACK_DEFAULT_EXPORT__(methods){return {stream:transformer(methods) };}      function  transformer( methods) {                                                                                                                                                                                                                                                                                                             return function (stream){var s =new TransformStream();for (var key in methods)s[    key]= methods[key]                                                                                                                                                                                                                                                                ;s.    stream =stream;return s;};}function TransformStream(){}TransformStream.prototype =  {  constructorransformStream,point:function (x,y){this.stream.point(x,y);},sphere:function (  ) { this.  stream
                                                                  sphere();},lineStart:function (){this.stream.lineStart();},lineEnd:function (){this.stream.lineEnd();},polygonStart:function (){this.stream.polygonStart();},polygonEnd:function (){this.stream.polygonEnd();}};},"../node_modules/d3-voronoi/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"voronoi":() =>_src_voronoi__WEBPACK_IMPORTED_MODULE_0__["default"]});var _src_voronoi__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-voronoi/src/voronoi.js");},"../node_modules/d3-voronoi/src/Beach.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.                       d(                                                                                                   __webpack_exports__,{"addBeach":() =>addBeach,"removeBeach":()  =>removeBeach  })                         ;var                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__        =     __webpack_require__(    "../node_modules/d3-voronoi/src/RedBlackTree.js"                                                                                                                                                                                                                                     )          ;var      _Cell__WEBPACK_IMPORTED_MODULE_1__       =   __webpack_require__(   "../node_modules/d3-voronoi/src/Cell.js"                                                                         )  ;var                 _Circle__WEBPACK_IMPORTED_MODULE_2__          =          __webpack_require__(     "../node_modules/d3-voronoi/src/Circle.js"                                                                                                                             )   ;var         _Edge__WEBPACK_IMPORTED_MODULE_3__        =     __webpack_require__(   "../node_modules/d3-voronoi/src/Edge.js"                                                                                                                                                                                                                                                                                                             )  ;var  _Diagram__WEBPACK_IMPORTED_MODULE_4__      =   __webpack_require__(   "../node_modules/d3-voronoi/src/Diagram.js"                                                                                                                                                                                                                                          )      ;var     beachPool      =   [    ]   ;function     Beach(      )    {     (  0,   _RedBlackTreeedBlackNode)( this);this. edge = this.site =this. circle =  null;} function  createBeach( site){
                                                                 var beach  =beachPool.pop()||new Beach();beach.site =site;return beach;}function detachBeach( beach){(0,_Circle__WEBPACK_IMPORTED_MODULE_2__.detachCircle)(beach);_Diagram__WEBPACK_IMPORTED_MODULE_4__.beaches.remove(beach);beachPool.push(beach);(0,_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__.RedBlackNode)(beach);}function removeBeach(beach){var  circle =beach.circle, x =circle.x,y =circle.cy, vertex =[x,y],previous  = beach. P,next = beach. N,disappearing = [beach];detachBeach(beach);var lArc =previous;while (lArc.circle  &&Math.abs(x -lArc.circle.x)< _Diagram__WEBPACK_IMPORTED_MODULE_4__.epsilon &&Math.abs(y -lArc.circle.cy)< _Diagram__WEBPACK_IMPORTED_MODULE_4__.epsilon){previous =lArc.P;disappearing. unshift(lArc);detachBeach(lArc) ;lArc =previous;}disappearing.unshift(lArc);(0,       _Circle__WEBPACK_IMPORTED_MODULE_2__.                                                                               detachCircle)(lArc);var rArc  =next;while (rArc.circle &&Math.abs(x -rArc.circle.                 x)        <                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     _Diagram__WEBPACK_IMPORTED_MODULE_4__.epsilon &&Math. abs(y -rArc.circle. cy)<    _Diagram__WEBPACK_IMPORTED_MODULE_4__.                                                                                                                                                                                                                                                     epsilon){next  =rArc.N;disappearing.push(rArc);detachBeach(rArc) ;rArc =  next;}      disappearing.                                                                                             push(rArc);(    0,_Circle__WEBPACK_IMPORTED_MODULE_2__.detachCircle)(rArc);var nArcs =disappearing.length,     iArc;for                                                                                                                                                       (iArc =1;iArc < nArcs; ++iArc){ rArc =disappearing[iArc];lArc =disappearing[iArc -  1];(0,    _Edge__WEBPACK_IMPORTED_MODULE_3__.                                                                                                                                                                                                                                                                                                              setEdgeEnd)( rArc.edge,lArc.site,rArc.site,vertex);} lArc =disappearing[0];rArc =   disappearing[nArcs -                                                                                                                                                                                                                                                                1]     ;rArc.edge =(  0,_Edge__WEBPACK_IMPORTED_MODULE_3__.createEdge) (lArc.site,rArc.       site,  nullvertex);( 0,_Circle__WEBPACK_IMPORTED_MODULE_2__.attachCircle)   (   lArc);(0,  _Circle
                                                                attachCircle)(rArc);}function addBeach(site){var x =site[0],directrix =site[1],lArc,rArc,dxl,dxr,node =_Diagram__WEBPACK_IMPORTED_MODULE_4__.beaches. _;while (node){dxl =leftBreakPoint(node,directrix)-x;if (dxl >_Diagram__WEBPACK_IMPORTED_MODULE_4__.epsilon)node =node.L;else {dxr =x -rightBreakPoint(node,directrix);if (dxr >_Diagram__WEBPACK_IMPORTED_MODULE_4__.epsilon){if (!node.R){lArc =node;break ;}node =node.R;}else {if (dxl > -_Diagram__WEBPACK_IMPORTED_MODULE_4__.epsilon){lArc =node.P;rArc =node;}else if (dxr > -_Diagram__WEBPACK_IMPORTED_MODULE_4__.epsilon){lArc =node;rArc =node.N;}else {lArc =rArc =node;}break ;}}}(0,_Cell__WEBPACK_IMPORTED_MODULE_1__.createCell)(site);var newArc =createBeach(site);_Diagram__WEBPACK_IMPORTED_MODULE_4__.beaches.insert(lArc,newArc);if (!lArc        &&   !     rArc)                                                                                                  return ;if (lArc ===rArc) {(0,_Circle__WEBPACK_IMPORTED_MODULE_2__.detachCircle)(   lArc);rArc =createBeach(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     lArc.site) ;_Diagram__WEBPACK_IMPORTED_MODULE_4__.beaches.insert( newArc, rArc)    ;newArc.edge =rArc.                                                                                                                                                                                                                                                                       edge =( 0,_Edge__WEBPACK_IMPORTED_MODULE_3__.createEdge)(lArc.site,newArc.site);(                 0,                                                                                              _Circle__WEBPACK_IMPORTED_MODULE_2__. attachCircle)(lArc);(0,_Circle__WEBPACK_IMPORTED_MODULE_2__.attachCircle)(rArc);return ;}if  ( !                                                                                                                                     rArc){newArc.edge =(0,_Edge__WEBPACK_IMPORTED_MODULE_3__.createEdge)(lArc.site,newArc.site)          ;return        ;}   (     0,                                                                                                                                                                                                                                                                                                                   _Circle__WEBPACK_IMPORTED_MODULE_2__.  detachCircle)      (   lArc)   ;(    0,   _Circle__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                                                                                      detachCircle)(rArc);var lSite =lArc.site,ax =lSite[0],ay =lSite[1],bx = site[0]-    ax,by =siteay,rSite =rArc.site,cx =rSite[0]-ax,cy =rSite[1]-ay,d =2 *(bx *cy -by *cx),hb = bx *bx +by *by,hc
                                                                cx  *cx +cy *cy,vertex =[(cy *hb -by *hc)/d +ax,(bx *hc -cx *hb)/d +ay];(0,_Edge__WEBPACK_IMPORTED_MODULE_3__.setEdgeEnd)(rArc.edge,lSite,rSite,vertex);newArc.edge =(0,_Edge__WEBPACK_IMPORTED_MODULE_3__.createEdge)(lSite,site,null,vertex);rArc.edge =(0,_Edge__WEBPACK_IMPORTED_MODULE_3__.createEdge)(site,rSite,null,vertex);(0,_Circle__WEBPACK_IMPORTED_MODULE_2__.attachCircle)(lArc);(0,_Circle__WEBPACK_IMPORTED_MODULE_2__.attachCircle)(rArc);}function leftBreakPoint(arc,directrix){var site =arc.site, rfocx =site[0],rfocy =site[1],pby2 =rfocy -directrix;if (!pby2)return rfocx;var lArc =arc.P;if (!lArc)return ( -Infinity);site =lArc.site;var lfocx =site[0],lfocy =site[1],plby2 =lfocy -directrix;if (!plby2)return lfocx;var hl =lfocx -rfocx,aby2 =1 /pby2 -1 /plby2,b =hl /plby2;if (aby2)        return  ( - b   +                                                                                                 Math.sqrt(b *b -2 *aby2 *(hl *hl /( -2 *plby2)-lfocy +plby2 /2 +rfocy -pby2 /2)))     /aby2 +rfocx;return  (                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      rfocx +lfocx)/2;}function rightBreakPoint(arc,directrix){var rArc =arc.N;if  (                  rArc)                                                                                                                                                                                                                                                                        return  leftBreakPoint( rArc,directrix);var  site =arc. site;return  site[ 1]===   directrix  ?site[                                                                                              0]:Infinity;}   },"../node_modules/d3-voronoi/src/Cell.js" :( __unused_webpack_module,__webpack_exports__,     __webpack_require__) =>                                                                                                                                    {"use strict" ;__webpack_require__.  r(  __webpack_exports__)    ;__webpack_require__.  d(          __webpack_exports__,       {                                                                                                                                                                                                                                                                                                                  "cellHalfedgeEnd"  : ( )  => cellHalfedgeEnd,   "cellHalfedgeStart"   :(  )   =>    cellHalfedgeStart,                                                                                                                                                                                                                                                                        "clipCells": () => clipCells,"createCell" :() =>createCell,"sortCellHalfedgessortCellHalfedges }    )     ;var     _Edge__WEBPACK_IMPORTED_MODULE_0__    =  __webpack_require
                                                              "../node_modules/d3-voronoi/src/Edge.js");var _Diagram__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/d3-voronoi/src/Diagram.js");function createCell( site){return _Diagram__WEBPACK_IMPORTED_MODULE_1__.cells[site.index]={site:site,halfedges:[]};}function cellHalfedgeAngle(cell,edge){var site =cell.site,va =edge.left,vb =edge.right;if (site ===vb)vb =va,va =site;if (vb)return Math.atan2(vb[1]-va[1],vb[0]-va[0]);if (site ===va)va =edge[1], vb =edge[0];else va =edge[0],vb =edge[1];return Math.atan2(va[0]-vb[0],vb[1]-va[1]);}function cellHalfedgeStart(cell,edge){return edge[ +(edge.left !==cell.site)];}function cellHalfedgeEnd(cell,edge){return edge[ +(edge.left ===cell.site)];}function sortCellHalfedges(){for (var  i =0,n =_Diagram__WEBPACK_IMPORTED_MODULE_1__.cells.           length,  cell,                                                                                                halfedges,j,m;i <n; ++i){if ((cell =_Diagram__WEBPACK_IMPORTED_MODULE_1__.cells[    i] )&&(m =(halfedges =                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       cell.halfedges).length)){var index =new Array(m),array =new Array(m);for (j =0;    j <m; ++j)index[j]=                                                                                                                                                                                                                                                                       j, array[ j]=cellHalfedgeAngle(cell, _Diagram__WEBPACK_IMPORTED_MODULE_1__.edges[    halfedges[j]]  )                                                                                               ;index. sort(    function (i,j){return array[j]-array[i];});for (j =0;j <m; ++j)array[j]=halfedges[index[j]       ]                                                                                                                                                    ;for (j  =0;j <m; ++j)halfedges[j]=array[j];}}}function clipCells(x0,y0,x1,y1){var nCells =   _Diagram__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                                                                               cells.length,iCell, cell,site,iHalfedge,halfedges,nHalfedges,start,startX,startY,   end,endX,endY,cover                                                                                                                                                                                                                                                                          =true;for     (  iCell   =  0;iCell  <nCells; ++ iCell) {     if   (  cell   =    _Diagramcells[iCell]){site =cell.site;halfedges =cell.halfedges;iHalfedge =halfedges.    length;while
                                                              iHalfedge-- ){if  (!_Diagram__WEBPACK_IMPORTED_MODULE_1__.edges[halfedges[ iHalfedge]] ) {halfedges.splice(iHalfedge,  1);}}iHalfedge =  0,nHalfedges =halfedges.length;while (  iHalfedge <nHalfedges)  {end =cellHalfedgeEnd(cell,_Diagram__WEBPACK_IMPORTED_MODULE_1__.edges[halfedges[iHalfedge] ]) ,endX  =end[ 0],endY =end[1];start =cellHalfedgeStart(cell, _Diagram__WEBPACK_IMPORTED_MODULE_1__.edges[halfedges[ ++iHalfedge %nHalfedges]]),startX  =start[0],startY =start[1];if (Math.abs(endX - startX)>_Diagram__WEBPACK_IMPORTED_MODULE_1__.epsilon ||Math.abs(endY -startY)>_Diagram__WEBPACK_IMPORTED_MODULE_1__.  epsilon){halfedges. splice(  iHalfedge,0,_Diagram__WEBPACK_IMPORTED_MODULE_1__.edges.push(  (0,_Edge__WEBPACK_IMPORTED_MODULE_0__.  createBorderEdge)(site,end, Math.abs(  endX  -x0) <       _Diagram__WEBPACK_IMPORTED_MODULE_1__.                                                                           epsilon &&y1 -endY >_Diagram__WEBPACK_IMPORTED_MODULE_1__.epsilon ?[x0,Math.abs(       startX   -  x0)  <                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        _Diagram__WEBPACK_IMPORTED_MODULE_1__. epsilon ?startY :y1]:Math.abs(endY -y1)<    _Diagram__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                     epsilon  &&x1 -endX >_Diagram__WEBPACK_IMPORTED_MODULE_1__. epsilon ?[Math. abs(     startY   - y1)<                                                                                                _Diagram__WEBPACK_IMPORTED_MODULE_1__. epsilon ?startX :x1,y1]:Math.abs(endX -x1)<_Diagram__WEBPACK_IMPORTED_MODULE_1__.epsilon && endY                                                                                                                               -   y0  >  _Diagram__WEBPACK_IMPORTED_MODULE_1__. epsilon ? [x1,  Math. abs(startX  -x1)<    _Diagram__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                                                                                epsilon ?startY : y0]:Math.abs(endY -y0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__.   epsilon &&endX -x0 >                                                                                                                                                                                                                                                                       _Diagram__WEBPACK_IMPORTED_MODULE_1__.  epsilon    ?[ Math. abs(startY    - y0) <   _Diagramepsilon ?startX :x0,y0]:null))- 1);  ++nHalfedges;}}if  ( nHalfedges) cover  =  false;}}if (cover){
                                                             var  dx,dy,d2,dc  =Infinity;for (iCell =0,cover =null;iCell <nCells; ++iCell){if (cell =_Diagram__WEBPACK_IMPORTED_MODULE_1__.cells[iCell]){site =cell.site;dx =site[0]-x0;dy =site[1]-y0;d2 =dx * dx +dy *dy;if ( d2 <dc)dc =d2,cover =cell;}}if (cover){var v00 =[x0,y0],v01 =[x0,y1],v11 =[x1,y1],v10 =[x1,y0];cover.halfedges.push(_Diagram__WEBPACK_IMPORTED_MODULE_1__. edges.push((0,_Edge__WEBPACK_IMPORTED_MODULE_0__.createBorderEdge)(site =cover.site,v00,v01))-1,_Diagram__WEBPACK_IMPORTED_MODULE_1__.  edges. push((0,_Edge__WEBPACK_IMPORTED_MODULE_0__.createBorderEdge)(site,v01,v11))-1,_Diagram__WEBPACK_IMPORTED_MODULE_1__.edges.push(( 0,_Edge__WEBPACK_IMPORTED_MODULE_0__.createBorderEdge)(site,v11,v10))-1,_Diagram__WEBPACK_IMPORTED_MODULE_1__.edges.push((0,_Edge__WEBPACK_IMPORTED_MODULE_0__.       createBorderEdge)(                                                                                               site,  v10,v00)) - 1);}}  for  (iCell =0;iCell < nCells; ++iCell)  {if  (cell =    _Diagramcells[   iCell]   ) {    if    (  ! cell.     halfedges. length){   delete    _Diagram__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                        cells[ iCell]   ;}   }  }}   } ,"../node_modules/d3-voronoi/src/Circle.js": (    __unused_webpack_module,                                                                                         __webpack_exports__,    __webpack_require__) => {"use strict";__webpack_require__.    r(   __webpack_exports__) ;__webpack_require__.                                                                                                                              d(__webpack_exports__,{"attachCircle":()  =>attachCircle,"detachCircle":() =>detachCircle,    "firstCircle": ( ) =>firstCircle })                                                                                                                                                                                                                                                                                                                       ;var   _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__      =  __webpack_require__(   "../node_modules/d3-voronoi/src/RedBlackTree.js"                                                                                                                                                                                                                                             )  ;var    _Diagram__WEBPACK_IMPORTED_MODULE_1__      =    __webpack_require__(   "../node_modules/d3-voronoi/src/Diagram.jsvar     circlePool = [ ];var  firstCircle;function Circle(     ) {  ( 0,  _RedBlackTree
                                                            RedBlackNode)(this);this.x =this.y =this.arc =this.site =this.cy =null;}function attachCircle(arc){var lArc =arc.P,rArc =arc.N;if (!lArc ||!rArc)return ;var lSite =lArc.site,cSite =arc.site,rSite =rArc.site;if (lSite ===rSite)return ;var bx =cSite[0],by =cSite[1],ax =lSite[0]-bx,ay =lSite[1]-by,cx =rSite[0]-bx,cy =rSite[1]-by;var d =2 *(ax *cy -ay *cx);if (d >= -_Diagram__WEBPACK_IMPORTED_MODULE_1__.epsilon2)return ;var ha =ax *ax +ay *ay,hc =cx *cx +cy *cy,x =(cy *ha -ay *hc)/d,y =(ax *hc -cx *ha)/d;var circle =circlePool.pop()||new Circle();circle.arc =arc;circle.site =cSite;circle.x =x +bx;circle.y =(circle.cy =y +by)+Math.sqrt(x *x +y *y);arc.circle =circle;var before =null,node =_Diagram__WEBPACK_IMPORTED_MODULE_1__.circles._;while (node){if (circle.y <node.y ||circle.y ===node.y &&        circle.x  <=node.                                                                                              x){if (node.L)node =node.L;else {before =node.P;break ;}}else {if (node.R)node =    node.R;else {before =                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        node;break ;} }} _Diagram__WEBPACK_IMPORTED_MODULE_1__.circles. insert( before,     circle) ;if    ( !                                                                                                                                                                                                                                                                          before)firstCircle  = circle;}function  detachCircle(arc)  {var  circle = arc.       circle;if   (                                                                                                   circle){if (     !circle.  P)firstCircle =circle.N;_Diagram__WEBPACK_IMPORTED_MODULE_1__. circles. remove(    circle)                                                                                                                                           ;circlePool.push(circle) ;(0,  _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__. RedBlackNode) (     circle);arc. circle = null;} } },                                                                                                                                                                                                                                                                                                                         "../node_modules/d3-voronoi/src/Diagram.js"   :   (   __unused_webpack_module,   __webpack_exports__,                                                                                                                                                                                                                                                                       __webpack_require__) => {"use strict";__webpack_require__.r( __webpack_exports__)   ;__webpack_required(__webpack_exports__,{"beaches":()   =>beaches,"cells":() =>cells,"circles":(    )     => circles,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
                                                            "default":() =>Diagram,"edges":() =>edges,"epsilon":() => epsilon,"epsilon2":() =>epsilon2 });var _Beach__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-voronoi/src/Beach.js");var _Cell__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__( "../node_modules/d3-voronoi/src/Cell.js");var _Circle__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-voronoi/src/Circle.js");var _Edge__WEBPACK_IMPORTED_MODULE_3__  =__webpack_require__("../node_modules/d3-voronoi/src/Edge.js");var _RedBlackTree__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__("../node_modules/d3-voronoi/src/RedBlackTree.js");var epsilon =1e-6;var epsilon2 =1e-12;var beaches;var cells;var circles;var edges;function triangleArea(a,b,c){return (a[0]-c[0])*(b[1]-a[1])-( a[0] -b[0])* (c[1]-a[1]);}                   function                                                                                            lexicographic(a,b){return b[1] -a[1]||b[0]-a[0];}function Diagram(sites,extent){    var site  =   sites.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         sort(lexicographic).pop(),x,y,circle;edges   =[];cells =new Array(sites.length)     ;beaches   =   new                                                                                                                                                                                                                                                                          _RedBlackTree__WEBPACK_IMPORTED_MODULE_4__[   "default"]()  ;circles    =  new    _RedBlackTree__WEBPACK_IMPORTED_MODULE_4__[                                                                          "default"]()   ;while (true){circle =_Circle__WEBPACK_IMPORTED_MODULE_2__.firstCircle;if (site &&(!circle       ||                                                                                                                                           site[1]<circle.y ||site[1]===circle.y &&site[0]<circle.x)){if (site[0]!==x ||site[1]!==y)                  {         (         0,                                                                                                                                                                                                                                                                                                                      _Beach__WEBPACK_IMPORTED_MODULE_0__.addBeach)(site);x =site[0],y =site[1];}site =    sites.pop();}else                                                                                                                                                                                                                                                                         if (circle){(0,_Beach__WEBPACK_IMPORTED_MODULE_0__.removeBeach)(circle.arc);}else   {break   ;}}ell__WEBPACK_IMPORTED_MODULE_1__.sortCellHalfedges)();if (extent){var x0 = +  extent[0][0],y
                                                           extent[0][1],x1 = + extent[1][0],y1 = +extent[1][1];(0,_Edge__WEBPACK_IMPORTED_MODULE_3__.clipEdges)(x0,y0,x1,y1);(0,_Cell__WEBPACK_IMPORTED_MODULE_1__.clipCells)(x0,y0,x1,y1);}this.edges =edges;this.cells =cells;beaches =circles =edges =cells =null;}Diagram.prototype ={constructor:Diagram,polygons:function (){var edges =this.edges;return this.cells.map(function (cell) {var polygon =cell.halfedges.map(function (i){return (0,_Cell__WEBPACK_IMPORTED_MODULE_1__.cellHalfedgeStart)(cell,edges[i]);});polygon.data =cell. site.data;return polygon;});},triangles:function (){var triangles =[],edges =this.edges;this.cells.forEach(function (cell,i){if (!(m =(halfedges =cell.halfedges).length))return ;var site =cell.site,halfedges,j = -1,m,s0,e1 =edges[halfedges[m -1]],s1 =e1.left ===site ?e1.right :e1.       left;while ( ++j <                                                                                            m){ s0 =s1;e1 =edges[halfedges[j]];s1 =e1.left ===site ?e1.right :e1.left;if (s0    &&s1 &&i <s0.index &&                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        i <s1.index &&triangleArea(site,s0,s1)<0){triangles.push([site.data,s0.data,s1.     data] )  ;} } }  )                                                                                                                                                                                                                                                                         ;return triangles;},links:function (){return this.edges.filter(function (edge){       return   edge.                                                                                                      right;} ).    map(function   (edge) {return {source:edge.left.data,target: edge. right.data };});},find:     function                                                                                                                                     (x,y,radius){var that =this,i0,i1 =that._found ||0,n =that.cells.length,cell;while (!(cell    =that.cells[i1] ))if ( ++i1  >= n)                                                                                                                                                                                                                                                                                                                        return null;var dx =x -cell.site[0],dy =y -cell.site[1],d2  =dx * dx +dy *dy;do {    cell =that.cells[                                                                                                                                                                                                                                                                         i0 =i1],i1 =null;cell.halfedges.forEach(function (e){var edge  =that.edges[e],v =   edge.left;if (( vcell.site ||!v)&&!(v  =edge.right))return ;var vx =x -v[0],vy =y -v[1],v2 =  vx *vx +vy *vy;if
                                                          v2 < d2)d2 =v2,i1 =v.index;});}while (i1 !==null);that._found =i0;return radius ==null ||d2 <=radius *radius ?cell.site :null;}};},"../node_modules/d3-voronoi/src/Edge.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"clipEdges":() =>clipEdges,"createBorderEdge":() =>createBorderEdge,"createEdge":() =>createEdge,"setEdgeEnd":() =>setEdgeEnd });var _Diagram__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/d3-voronoi/src/Diagram.js");function createEdge(left,right,v0,v1){var edge =[null,null],index =_Diagram__WEBPACK_IMPORTED_MODULE_0__.edges.push(edge)-1;edge.left =left;edge.right =right;if (v0)setEdgeEnd(edge,left,right,v0);if (v1)setEdgeEnd(edge,right,             left,     v1)                                                                                           ;_Diagram__WEBPACK_IMPORTED_MODULE_0__.  cells[left.index].halfedges.push(index)    ;_Diagramcells[right.index].halfedges.push(index);return edge;}function createBorderEdge(   left,v0,v1){var edge                                                                                                                                                                                                                                                                        =[v0,v1];edge.left = left;return edge;}   function setEdgeEnd(edge, left,right,     vertex){ if  ( !                                                                                                      edge[ 0]&& !    edge[1]){edge[0]=vertex;edge.left =left;edge.right =right;}else if (edge.left  ===right){     edge[                                                                                                                                      1] =vertex;}else {edge[0]=vertex;}}function clipEdge(edge,x0,y0,x1,y1){var a =edge[0],b =    edge[1],ax =a[0],ay =a[1],bx =b[0],                                                                                                                                                                                                                                                                                                                         by =b[1],t0 =0,t1 =1,dx =bx -ax,dy =by -ay,r;r =x0 -ax;if (!dx &&r >0)return ;r /=  dx;if (dx <0){if (r                                                                                                                                                                                                                                                                        <t0)return ;if (r <t1)t1 =r;}else if (dx >0){if (r >t1)return ;if (r >t0)t0 =r;}r   =x1 -ax;if (!dxr <0)return ;r /=dx;if (dx <0){if (r >t1)return ;if (r >t0)t0 =r;}else if (dx >   0){ if (r   < t
                                                         return ;if (r <t1)t1 =r;}r =y0 -ay;if (!dy &&r >0)return ;r /=dy;if (dy <0){if (r <t0)return ;if (r <t1)t1 =r;}else if (dy >0){if (r >t1)return ;if (r >t0)t0  =r;}r =y1 -ay;if (!dy &&r <0)return ;r /=dy;if (dy <0){if (r >t1)return ;if (r >t0)t0 =r;}else if (dy >0){if (r <t0)return ;if (r <t1)t1 =r;}if ( !(t0 >0)&&!( t1 <1))return true;if (t0 >0)edge[0]=[ax +t0 *dx,ay +t0 *dy];if (t1 <1)edge[1]=[ax +t1 *dx,ay +t1 *dy];return true;}function connectEdge(edge,x0,y0,x1,y1){var v1 =edge[1];if (v1)return true;var v0 =edge[0],left =edge.left,right =edge.right,lx =left[0], ly =left[1],rx =right[0],ry =right[1],fx =(lx +rx)/2,fy =(ly +ry)/2,fm,fb;if (ry ===ly){if (fx <x0 ||fx >=x1)return ;if (lx >rx){if (!v0)v0 =[fx,y0];else if (v0[1]>=y1)return ;v1 =[fx,y1];}else {if (!v0)v0 =[fx,y1];else if (v0[1]<y0)       return ;v1 =[fx,y0]                                                                                          ;}}else {fm =(lx -rx)/(ry -ly);fb =fy -fm *fx;if ( fm < -1 ||fm >1){if (lx >rx){    if ( !v0)v0 =[(y0 -                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          fb)/fm,y0];else if (v0[1]>=y1)return ;v1 =[(y1 -fb)/fm,y1];}else {if (!v0)v0 =[     (y1 -fb)/ fm,  y1]                                                                                                                                                                                                                                                                         ;else if (v0[1]<y0)return ;v1 =[(y0 -fb)/fm,y0];}}else {if (ly <ry){if (!v0)v0 =   [x0,fm  *x0  +fb]                                                                                                      ;else if (v0[   0]>=x1)return ;v1 =[x1, fm *x1 +fb];}else {if (!v0)v0 = [x1,fm *x1 +fb] ;else if (v0[0]<x0)    return ;v1                                                                                                                               =[x0,fm *x0 +fb];}}}edge[0]=v0;edge[1]=v1;return true;}function clipEdges(x0,y0,x1,y1){var                         i           =                                                                                                                                                                                                                                                                                                                           _Diagram__WEBPACK_IMPORTED_MODULE_0__.edges.length,edge;while ( i-- ) {if     (!   connectEdge(edge  =                                                                                                                                                                                                                                                                         _Diagram__WEBPACK_IMPORTED_MODULE_0__. edges[i],x0,y0,x1,y1)||!clipEdge(edge,x0,     y0, x1,y1) ||ath.abs(edge[ 0][0]-edge[1][0])>_Diagram__WEBPACK_IMPORTED_MODULE_0__.epsilon  ||Math.abs(edge
                                                         1]-edge[1][1])>_Diagram__WEBPACK_IMPORTED_MODULE_0__.epsilon)){delete _Diagram__WEBPACK_IMPORTED_MODULE_0__.edges[i];}}}},"../node_modules/d3-voronoi/src/RedBlackTree.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"RedBlackNode":()  =>RedBlackNode,"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function RedBlackTree(){this._ =null;}function RedBlackNode(node){node.U =node.C =node.L =node.R = node.P =node.N =null;}RedBlackTree.prototype ={constructor:RedBlackTree,insert:function (after,node){var parent,grandpa,uncle;if (after){node.P =after;node.N =after.N;if (after.N)after.N.P =node;after.N =node;if (after.R){after =after.R;while (after.L)after =after.L;after.L =node;}else {         after.R  = node;}                                                                                         parent =after;}else if (this._){after =RedBlackFirst(this._);node.P =null;node.N    =  after;after. P =                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          after.L = node;parent  =after;}else {node.P =node.N =null;this._ =node;parent =    null;}node.L =node.                                                                                                                                                                                                                                                                         R =null;node.U =parent;node.C  = true;after  = node;while ( parent &&parent.C){     grandpa =parent.                                                                                                        U;if (parent    ===grandpa.L){uncle =grandpa.R;if (uncle && uncle.C){parent.C  =uncle.C =false;grandpa.C =    true;after                                                                                                                             = grandpa;} else {if (  after ===parent.R){ RedBlackRotateLeft(this,    parent);after   =    parent;parent =after. U;}parent.C =                                                                                                                                                                                                                                                                                                                           false;grandpa.C =true;RedBlackRotateRight(this,grandpa);} }else  {uncle =grandpa.    L;if   (uncle   &&                                                                                                                                                                                                                                                                        uncle.C){parent.C =uncle.C =false;grandpa.C =true;after =grandpa;}else {if (after   === parent. L)  {edBlackRotateRight(this,parent) ;after = parent;parent  =after.U;} parent.C =  false;grandpa
                                                         true;RedBlackRotateLeft(this,grandpa);}}parent =after.U;}this._.C =false;},remove:function (node){if (node.N)node.N.P =node.P;if (node.P)node.P.N =node.N;node.N =node.P =null;var parent =node.U,sibling,left =node.L,right =node.R,next,red;if (!left)next =right;else if (!right)next =left;else next =RedBlackFirst(right);if (parent){if (parent.L ===node)parent.L =next;else parent.R =next;}else {this._ =next;}if (left &&right){red =next.C;next.C =node.C;next.L =left;left.U =next;if (next !==right){parent =next.U;next.U =node.U;node =next.R;parent.L =node;next.R =right;right.U =next;}else {next.U =parent;parent =next;node =next.R;}}else {red =node.C;node =next;}if (node)node.U =parent;if (red)return ;if (node &&node.C){node.C =false;return ;}do {if (node ===this._)break ;if (node ===parent.L){sibling =       parent.  R;if   (                                                                                         sibling.C){sibling.  C  = false;parent.C = true;RedBlackRotateLeft( this,parent)     ;sibling  =parent.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          R;}if (sibling.L  &&sibling.L.C ||sibling.R  &&sibling.R.C){if (!sibling.R  ||!    sibling.    R.  C){                                                                                                                                                                                                                                                                         sibling.L.C =false;sibling. C =true;RedBlackRotateRight(this,sibling);sibling =    parent.R;}sibling.                                                                                                         C = parent.   C;parent.C =sibling.R.C =false;RedBlackRotateLeft(this,parent);node =this._;break ;}}else {     sibling                                                                                                                             =parent.L;if (sibling.C){sibling.C =false;parent.C =true;RedBlackRotateRight(this,parent)    ;sibling =parent.L;}if (sibling.L &&                                                                                                                                                                                                                                                                                                                           sibling.L.C ||sibling.R &&sibling.R.C){if (!sibling.L ||!sibling.L.C){sibling.R.C    =false;sibling.C =                                                                                                                                                                                                                                                                        true;RedBlackRotateLeft( this,sibling);sibling = parent. L;} sibling.C   =parent.    C;parentsibling.L.C =false;RedBlackRotateRight(this,  parent);node =this._;break   ;}}     sibling
                                                       true;node =parent;parent =parent.U;}while (!node.C);if (node)node. C =false;} };function RedBlackRotateLeft(tree,node){var  p =node,q =node.R,parent =p.U;if (parent){if (parent.L ===p)parent.L =q;else parent.R  =q;}else {tree._ =q;}q.U = parent;p.U =q;p.R =q.L;if (p.R)p.R.U =p;q.L =p;}function RedBlackRotateRight(tree,node){var p =node,q =node.L,parent =p.U;if (parent){if (parent.L ===p)parent.L =q;else parent.R  =q;}else {tree._  =q;}q.U =parent;p.U =q;p. L =q.R;if (p.L)p. L.U = p;q.R =p;}function RedBlackFirst(node){while (node.L)node =node.L;return node;}const __WEBPACK_DEFAULT_EXPORT__ =RedBlackTree;} ,"../node_modules/d3-voronoi/src/constant.js":( __unused_webpack_module,__webpack_exports__,__webpack_require__) =>{ "use strict";__webpack_require__.r( __webpack_exports__);__webpack_require__.d(      __webpack_exports__,                                                                                            { "default" :   ( ) =>     __WEBPACK_DEFAULT_EXPORT__      }    ) ;functionx){return function (){return x;};}},"../node_modules/d3-voronoi/src/point.js":(    __unused_webpack_module,                                                                                                                                                                                                                                                                    __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(    __webpack_exports__)                                                                                                       ;__webpack_require__. d(__webpack_exports__,{ "x":() =>x,"y":() =>y });function x(d){return d[0];}function y(d){ return d[                                                                                                                        1]   ;} },  "../node_modules/d3-voronoi/src/voronoi.js"  :(     __unused_webpack_module,                  __webpack_exports__, __webpack_require__) =>                                                                                                                                                                                                                                                                                                       {"use strict" ;__webpack_require__.r(__webpack_exports__);__webpack_require__.d(   __webpack_exports__,                                                                                                                                                                                                                                                                           { "default" :    (      )    =>    __WEBPACK_DEFAULT_EXPORT__  }    )    ;var   _constantwebpack_require__(  "../node_modules/d3-voronoi/src/constant.js" )   ;var  _point
                                                       =__webpack_require__("../node_modules/d3-voronoi/src/point.js");var  _Diagram__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-voronoi/src/Diagram.js");function __WEBPACK_DEFAULT_EXPORT__(){var x =_point__WEBPACK_IMPORTED_MODULE_1__. x,y = _point__WEBPACK_IMPORTED_MODULE_1__.y,extent =null;function voronoi(data){return new _Diagram__WEBPACK_IMPORTED_MODULE_2__["default"](data. map(function (d,i){var s =  [Math.round(x(d,i,data)/_Diagram__WEBPACK_IMPORTED_MODULE_2__.epsilon)* _Diagram__WEBPACK_IMPORTED_MODULE_2__.epsilon,Math.round(y(d,i,data)/_Diagram__WEBPACK_IMPORTED_MODULE_2__.epsilon)*_Diagram__WEBPACK_IMPORTED_MODULE_2__. epsilon];s.index =i;s.data =d;return  s;}),extent);}voronoi.polygons =function (data){return voronoi(data).polygons() ;};voronoi.links =function  (data){           return voronoi(                                                                                       data).links() ;};voronoi.triangles =function ( data){  return voronoi(   data) .     triangles( )   ;}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ;voronoi.x =function (_){return arguments.length ?(x =typeof _ ==="function"?_ :          (         0,                                                                                                                                                                                                                                                                         _constant__WEBPACK_IMPORTED_MODULE_0__["default"])( +_),voronoi):x;};voronoi.y =    function (  _)  {                                                                                                          return arguments. length ?(y =typeof _ ==="function"?_ :(0,_constant__WEBPACK_IMPORTED_MODULE_0__["default"    ])( +                                                                                                                          _),voronoi):y;};voronoi.extent =function ( _){return arguments.length ?(extent =_ ==null ?   null :[[ +_[0][0] , +_[0][1]],[ +_[                                                                                                                                                                                                                                                                                                                               1][0], +_[1][1]]],voronoi):extent &&[[extent[ 0][0] ,extent[0][1]],[extent[1][0],   extent[ 1][ 1] ]];}                                                                                                                                                                                                                                                                        ;voronoi.size =function (_){ return arguments.length ?(extent =_ ==null ?nullvoronoi):extent &&[extent[1][0]-extent[0][0],extent[1][1]-extent[0][1]];}  ;return voronoi;}}
                                                      "../node_modules/deep-equal/index.js":(module,__unused_webpack_exports,__webpack_require__) =>{var objectKeys =__webpack_require__("../node_modules/object-keys/index.js");var isArguments =__webpack_require__("../node_modules/is-arguments/index.js");var is =__webpack_require__("../node_modules/object-is/index.js");var isRegex =__webpack_require__("../node_modules/is-regex/index.js");var flags  =__webpack_require__("../node_modules/regexp.prototype.flags/index.js");var isDate =__webpack_require__("../node_modules/is-date-object/index.js");var getTime =Date.prototype.getTime;function deepEqual(actual,expected,options){var opts =options ||{};if (opts.strict ?is(actual,expected):actual ===expected){return true;}if (!actual ||!expected ||typeof actual !=='object'&&typeof expected !== 'object'){return opts.       strict ?is(actual,                                                                                       expected) : actual == expected;}return objEquiv( actual,expected,opts);}function    isUndefinedOrNull(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           value){return value ===null ||value ===undefined;}function isBuffer(x){if (!x ||      typeof   x   !==                                                                                                                                                                                                                                                                         'object'||typeof x.length  !== 'number')  {return false;}if  (typeof x.copy !==    'function'||typeof                                                                                                             x.slice !==   'function'){return false;}if   ( x. length  >0  &&typeof x[0]!=='number' ) {return false;}     return true;}                                                                                                                function objEquiv(a, b,opts)  { var i,key;if  (typeof a !==typeof  b){return  false;}if  (     isUndefinedOrNull(   a)        ||                                                                                                                                                                                                                                                                                                                                isUndefinedOrNull(b) ){   return    false;} if  ( a. prototype !== b.prototype) {   return  false;}if (                                                                                                                                                                                                                                                                        isArguments(a)!== isArguments(b)) {  return false;}var  aIsRegex  =isRegex(a);var   bIsRegex =isRegexb);if (aIsRegex !==bIsRegex){return false;}if (aIsRegex ||bIsRegex){return  a.   source ===b.source
                                                     &&flags(a)===flags( b);}if (isDate(a)&&isDate(b)){return getTime.call(a)===getTime.call(b);}var aIsBuffer =isBuffer(a);var bIsBuffer =isBuffer(b);if (aIsBuffer !==bIsBuffer){return false;}if (aIsBuffer ||bIsBuffer){if ( a.length !== b.length){return false;}for (i =0;i  <a.length;i++ ){if (a[i]!==b[i]){return false;}}return true;}if (typeof a !==typeof b){return false;}try {var ka =objectKeys(a);var kb =objectKeys(b);}catch (e){return false;}if (ka.length !==kb.length){return false;}ka.sort();kb.sort();for (i =ka.length -1;i >=0;i-- ){if (ka[i]!=kb[i]){return false;}}for (i =ka. length -1;i >=0;i-- ){key =ka[i];if (!deepEqual(a[key],b[key],opts)){return false;}}return true;}module.exports =deepEqual;},"../node_modules/define-properties/index.js":(module, __unused_webpack_exports,__webpack_require__) =>{        "use strict" ;var                                                                                      keys =__webpack_require__("../node_modules/object-keys/index.js");var hasSymbols    =typeof Symbol  ===                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'function'  &&  typeof Symbol('foo')=== 'symbol' ;var toStr =Object. prototype.    toString;var concat                                                                                                                                                                                                                                                                         =Array.  prototype. concat;var origDefineProperty   =Object. defineProperty;var      isFunction     =                                                                                                            function (fn)    { return  typeof fn   ===  'function'&& toStr.  call( fn)===  '[object Function]'  ;} ;var    hasPropertyDescriptors                                                                                                       = __webpack_require__(  "../node_modules/has-property-descriptors/index.js"  )    ();var         supportsDescriptors         =                                                                                                                                                                                                                                                                                                                                 origDefineProperty &&hasPropertyDescriptors;var defineProperty =function (object,        name,   value,                                                                                                                                                                                                                                                                        predicate){if (name in object &&(!isFunction(predicate)||!predicate())){return ;}       ifsupportsDescriptors)  {origDefineProperty( object, name,{ configurable:  true,   enumerable: false,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
                                                     value: value,writable:true });}else  {object[name]=value;}};var defineProperties =function (object,map){var predicates =arguments.length >2 ?arguments[2]:{};var props =keys(map);if (hasSymbols){props =concat.call(props,Object.getOwnPropertySymbols(map));}for (var i =0;i  <props.length;i +=1){defineProperty(object,props[i],map[props[i]],predicates[props[i]]);}};defineProperties.supportsDescriptors =! !supportsDescriptors;module.exports  = defineProperties;},"../node_modules/density-clustering/lib/DBSCAN.js":module => {function DBSCAN(dataset,epsilon,minPts,distanceFunction){this.dataset =[];this.epsilon =1;this.minPts =2;this.distance =this._euclideanDistance;this.clusters =[];this.noise =[];this._visited =[];this._assigned =[];this._datasetLength =0;this._init(dataset,epsilon,minPts,distanceFunction);}        ;DBSCAN.prototype.                                                                                     run =function (dataset,epsilon, minPts,  distanceFunction)  {this._init(dataset,      epsilon, minPts,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           distanceFunction);for (var pointId =0;pointId <this._datasetLength;pointId++ ){     if (this._visited[                                                                                                                                                                                                                                                                         pointId]!==1){this. _visited[pointId]= 1;var  neighbors   =this.  _regionQuery(      pointId)  ;if  (                                                                                                                neighbors.     length  <this. minPts) {this. noise.push(pointId);}else { var  clusterId =this.clusters.     length;this.                                                                                                            clusters. push([ ]);this.  _addToCluster(pointId,clusterId);this._expandCluster(clusterId,         neighbors) ;} } } return this.                                                                                                                                                                                                                                                                                                                                  clusters;};DBSCAN.prototype._init =function (dataset,epsilon,minPts,distance){if (  dataset)  {if  (! (                                                                                                                                                                                                                                                                        dataset instanceof Array)){throw  Error('Dataset must be of type array, '+ typeof   dataset +' given}this.dataset =dataset;this.clusters =[];this.noise =[];this._datasetLength =             dataset
                                                    length;this._visited =new Array(this._datasetLength);this._assigned =new Array(this._datasetLength);}if (epsilon){this.epsilon =epsilon;}if (minPts){this.minPts =minPts;}if  (distance){this.distance =distance;}};DBSCAN.prototype._expandCluster =function (clusterId,neighbors){for (var i =0;i <neighbors.length;i++ ){var pointId2 =neighbors[i];if (this._visited[pointId2]!==1){this._visited[pointId2]=1;var neighbors2 =this._regionQuery(pointId2);if (neighbors2.length >=this.minPts){neighbors =this._mergeArrays(neighbors,neighbors2);}}if (this._assigned[pointId2]!==1){this._addToCluster(pointId2,clusterId);}}};DBSCAN.prototype._addToCluster = function (pointId,clusterId){this.clusters[clusterId].push(pointId);this._assigned[pointId]=1;};DBSCAN.prototype._regionQuery =function (pointId){var neighbors =[];for (       var id   =0; id  <                                                                                     this._datasetLength; id++ ){var dist =this.distance(this.dataset[ pointId],this.    dataset[id]);if  (                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           dist <this.epsilon){neighbors.push(id);}}return  neighbors;};DBSCAN. prototype.     _mergeArrays     =                                                                                                                                                                                                                                                                          function (a,b){var len =b.length;for (var i =0;i <len;i++ ){var P =b[i];if (a.     indexOf(P)< 0){a.                                                                                                              push(   P);}}    return a;};DBSCAN.prototype._euclideanDistance =function (p,q){var sum =0;var i =Math.min(       p.                                                                                                                 length,q.length);while (i-- ){sum +=(p[i]-q[i])*(p[i]-q[i]);}return Math. sqrt(sum);};if (    true  &&module. exports) {  module.                                                                                                                                                                                                                                                                                                                                   exports =DBSCAN;}},"../node_modules/density-clustering/lib/KMEANS.js":module => {     function  KMEANS(                                                                                                                                                                                                                                                                          dataset,k, distance){this. k =3;this.  dataset =[];this. assignments =[ ];this.     centroidsthis.init( dataset,k,distance);}KMEANS.prototype. init =function ( dataset,k,  distance)  {  this
                                                   assignments =[];this.centroids =[];if (typeof dataset !=='undefined'){this.dataset =dataset;}if (typeof k !=='undefined'){this.k =k;}if (typeof distance !=='undefined'){this.distance =distance;}};KMEANS.prototype.run =function (dataset,k){ this.init(dataset,k);var len =this.dataset.length;for (var i =0;i <this.k;i++ ){this.centroids[i]=this.randomCentroid();}var change =true;while ( change){change =this.assign();for (var centroidId =0;centroidId <this.k;centroidId++ ){var mean =new Array(maxDim);var count =0;for (var dim =0;dim <maxDim;dim++ ){mean[dim]=0;}for (var j =0;j <len;j++ ){var maxDim =this.dataset[j].length;if (centroidId ===this.assignments[j]){for (var dim =0;dim <maxDim;dim++ ){mean[dim]+=this.dataset[j][dim];}count++ ;}}if (count >0){for (var dim =0;dim <maxDim;dim++ ){mean[dim]/=count;}this.               centroids[                                                                                    centroidId]=mean;}else {this.centroids[centroidId]=this.randomCentroid();change =        true;}    } }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           return this.getClusters();};KMEANS. prototype. randomCentroid = function (){var      maxId  =    this.                                                                                                                                                                                                                                                                          dataset.length -1;var centroid;var id;do {id =Math.round(Math.random() *maxId)     ;centroid = this.                                                                                                                 dataset[id]    ;}while (this.centroids.indexOf(centroid)>=0);return centroid;};KMEANS.prototype.assign =     function                                                                                                            () {var change =false;var len =this.dataset.length;var closestCentroid;for (var i =0; i  <    len; i++  ){closestCentroid =this.                                                                                                                                                                                                                                                                                                                                     argmin(this.dataset[i],this.centroids,this.distance) ;if (closestCentroid !=this.    assignments[i])  {                                                                                                                                                                                                                                                                         this. assignments[ i]= closestCentroid;change =true;}}   return change;};KMEANS.           prototype.                                                                                                                                                                                          getClusters = function (){var clusters =new Array(this.k);var  centroidId;for (var pointId =0;pointId <this.assignments.length;pointId++ ){centroidId =this.assignments[                                                                                                                                                                                                                           pointId];if (typeof clusters[centroidId]==='undefined'){clusters[centroidId]=[ ];}clusters[centroidId].push(pointId);}return clusters;};KMEANS.prototype.argmin =function ( point,set,f){var min =Number.MAX_VALUE;var arg =0;var  len =set.length;var d;for ( var i  =0;i <len;i++ ){d =f(                                                                                                                                                                                                                      point, set[i] );if (d  <min)  {min  =d;arg =i;}}return arg;};KMEANS.prototype.  distance =function (                                                                                                                                                                      p,q){var sum  =0;var i =Math.min(p.length,q.length);while (i-- ){var diff =p[i]-q[ i];sum +=diff *diff;}return Math.sqrt(sum);};if (true &&module. exports){module.exports  = KMEANS;}} ,                                                                                                                                                                                 "../node_modules/density-clustering/lib/OPTICS.js"  : ( module,                                                                                                                                                                                                                                                                                                             __unused_webpack_exports, __webpack_require__) =>{ if (true  &&                                                                              
                                                   module.exports){var PriorityQueue =__webpack_require__("../node_modules/density-clustering/lib/PriorityQueue.js");}function OPTICS(dataset,epsilon,minPts,distanceFunction){this.epsilon =1;this.minPts =1;this.distance =this._euclideanDistance;this. _reachability =[] ;this._processed =[];this._coreDistance =0;this._orderedList =[] ;this._init(dataset,epsilon,minPts,distanceFunction);}OPTICS.prototype.run =function (dataset,epsilon,minPts,distanceFunction){this._init(dataset,epsilon, minPts,distanceFunction);for (var pointId =0,l =this.dataset.length;pointId <l;pointId++ ){if ( this._processed[pointId]!==1){this._processed[pointId]=1;this.clusters.push( [pointId]);var clusterId =this. clusters.length -1;this._orderedList.push(pointId);var priorityQueue =new  PriorityQueue(null,null,'asc');var neighbors =this.             _regionQuery(                                                                                   pointId);if (  this._distanceToCore( pointId) !==  undefined){this._updateQueue(    pointId,neighbors,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            priorityQueue);this._expandCluster( clusterId,priorityQueue);}}} return  this.     clusters;};OPTICS.                                                                                                                                                                                                                                                                         prototype.getReachabilityPlot =function (){var reachabilityPlot =[];for (var i =    0,   l    = this.                                                                                                                 _orderedList.   length;i  <l;  i++ )  {var pointId =this._orderedList[i];var distance =this._reachability[     pointId]                                                                                                          ;reachabilityPlot.push([pointId,distance]);}return reachabilityPlot;} ;OPTICS.prototype.     _init =function (dataset, epsilon,                                                                                                                                                                                                                                                                                                                                      minPts,distance){ if ( dataset){ if (!(dataset  instanceof Array) ){ throw Error(   'Dataset must be of type array, '                                                                                                                                                                                                                                                           +typeof   dataset +' given'  );}this.dataset =dataset;this. clusters  = [];this.   _reachability =new                                                                                                                                                                                    Array(this.dataset.length);this._processed =new Array(this.dataset.length);this._coreDistance =0;this._orderedList =[];}if (epsilon){this.epsilon =epsilon;}if (minPts){this.minPts =                                                                                                                                                                                                                   minPts;}if (distance){this.distance =distance;}};OPTICS.prototype._updateQueue =function (pointId,neighbors,queue){var self =this;this._coreDistance =this._distanceToCore(pointId);neighbors.forEach(function (pointId2){if (self._processed[pointId2] ===undefined){var dist =self.distance(self.                                                                                                                                                                                                               dataset[pointId],self.dataset[pointId2] );var  newReachableDistance =Math.max(  self._coreDistance,                                                                                                                                                                    dist) ;if  (self._reachability[pointId2]===  undefined){self._reachability[pointId2]=newReachableDistance;queue.insert( pointId2,newReachableDistance) ;} else { if  (newReachableDistance  < self.                                                                                                                                                                        _reachability[   pointId2] ) {self.   _reachability[    pointId2] =                                                                                                                                                                                                                                                                                                       newReachableDistance;queue. remove( pointId2);queue.insert(pointId2,                                                                             
                                                  newReachableDistance);}}}});};OPTICS.prototype._expandCluster =function (clusterId,queue){var queueElements =queue.getElements();for (var p =0,l =queueElements.length;p <l;p++ ){var pointId =queueElements[p];if (this._processed[pointId]===undefined){var neighbors =this._regionQuery(pointId) ;this._processed[pointId]=1;this.clusters[clusterId].push(pointId);this._orderedList.push(pointId);if (this._distanceToCore(pointId)!==undefined){this._updateQueue(pointId,neighbors,queue);this._expandCluster(clusterId,queue);}}}};OPTICS.prototype._distanceToCore =function (pointId){var l =this.epsilon;for (var coreDistCand  =0;coreDistCand <l;coreDistCand++ ){var neighbors =this._regionQuery(pointId,coreDistCand);if (neighbors.length >=this.minPts){return coreDistCand;}}return ;};OPTICS.prototype._regionQuery =function (       pointId,  epsilon){                                                                                   epsilon =epsilon || this.epsilon;var neighbors   = [];for  (var id =0,l  =this.    dataset.length;id <                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          l;id++  ){if (this. distance(this.dataset[pointId],this.dataset[id])< epsilon){    neighbors.push( id)                                                                                                                                                                                                                                                                         ;}}return neighbors;};OPTICS.prototype. _euclideanDistance =function  (p,q){var     sum =  0;var i  =                                                                                                                   Math.min(p.    length,q. length);while (i-- ){sum +=(p[i]-q[i])*(p[i]-q[i]);}return Math.sqrt(sum);};if (     true                                                                                                              &&    module.    exports)     {   module.         exports     =     OPTICS;}     }    ,   "../node_modules/density-clustering/lib/PriorityQueue.js"                                                                                                                                                                                                                                                                                                                 : module =>{function  PriorityQueue(elements,priorities,sorting){ this._queue =[]   ;this._priorities =[                                                                                                                                                                                                                                                                       ];this._sorting ='desc';this._init(elements,priorities,sorting) ;};PriorityQueue.   prototype.insert =                                                                                                                                                                          function (ele,priority){var indexToInsert =this._queue.length;var  index =indexToInsert;while (index-- ){ var   priority2 =this._priorities[index];if (this._sorting  ==='desc'){if (priority >priority2){                                                                                                                                                                                                        indexToInsert =index;}}else {if (priority <priority2) {indexToInsert =index;}}}this._insertAt(ele, priority,indexToInsert);};PriorityQueue.prototype.remove =function  ( ele){var index =this. _queue.length;while (index-- ){var ele2 =this._queue[index];if (ele  ===ele2){this._queue.splice(index,1);this.                                                                                                                                                                                                    _priorities.splice( index,1) ;break  ;}} } ;PriorityQueue.prototype. forEach =    function  (func){                                                                                                                                                                 this._queue.forEach(func);};PriorityQueue.prototype.getElements  =function ( ){return this._queue;};PriorityQueue. prototype.getElementPriority =function (index){return this._priorities[index];};PriorityQueue.                                                                                                                                                           prototype.getPriorities   = function   () { return this._priorities;}                                                                                                                                                                                                                                                                                                       ;PriorityQueue.prototype.getElementsWithPriorities  = function  (){var                                                                           
                                                 result =[];for (var i =0,l =this._queue.length;i <l;i++ ){result.push([this._queue[i],this._priorities[i]]);}return result;};PriorityQueue.prototype._init =function (elements,priorities,sorting){if (elements &&priorities){this._queue =[];this._priorities =[];if (elements.length !==priorities.length){throw new Error('Arrays must have the same length');}for (var i =0;i <elements.length;i++ ){this.insert(elements[i],priorities[i]);}}if (sorting){this._sorting =sorting;}};PriorityQueue.prototype._insertAt =function (ele,priority,index){if (this._queue.length ===index){this._queue.push(ele);this._priorities.push(priority);}else {this._queue.splice(index,0,ele);this._priorities.splice(index,0,priority);}};if (true &&module.exports){module.exports =PriorityQueue;}},"../node_modules/density-clustering/lib/index.js":(                   module,                                                                                  __unused_webpack_exports,__webpack_require__) =>{if (true   && module.exports) {    module.exports  ={                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           DBSCAN:__webpack_require__("../node_modules/density-clustering/lib/DBSCAN.js"),                KMEANS:                                                                                                                                                                                                                                                                         __webpack_require__("../node_modules/density-clustering/lib/KMEANS.js"),OPTICS:    __webpack_require__(                                                                                                                 "../node_modules/density-clustering/lib/OPTICS.js"         )            ,                PriorityQueue:                 __webpack_require__( "../node_modules/density-clustering/lib/PriorityQueue.js"                       )} ;}}, "../node_modules/earcut/src/earcut.js":module  =>{"use strict" ;module.exports =     earcut;module. exports[ "default"]=                                                                                                                                                                                                                                                                                                                                        earcut;function  earcut( data,holeIndices,dim){dim   = dim  || 2;var  hasHoles =       holeIndices  &&                                                                                                                                                                                                                                                                        holeIndices.length,outerLen =hasHoles ?holeIndices[0]*dim :data.length,outerNode =  linkedList( data,0,                                                                                                                                                               outerLen,dim,true),triangles =[];if (!outerNode ||outerNode.next ===outerNode.prev) return  triangles;var minX,minY,maxX,maxY,x,y, invSize;if (hasHoles)outerNode =eliminateHoles( data,holeIndices,outerNode,dim);if ( data.                                                                                                                                                                                               length >80 *dim){minX =maxX =data[0];minY =maxY =data[1] ;for (var i =dim;i <outerLen;i +=dim){x =data[i];y =data[i +1];if (x  <minX)minX =x;if (y <minY)minY =y;if (x >maxX)maxX =x;if (y >maxY)maxY =y;}invSize =Math.max(maxX -minX,maxY  -minY);invSize  =invSize !==0 ?32767 /invSize :0;}earcutLinked( outerNode,                                                                                                                                                                                           triangles,dim,minX,minY,invSize,0);return triangles;}function linkedList(data,  start,  end,   dim,                                                                                                                                                               clockwise){var i,last;if (clockwise ===signedArea(data,start,end,dim)>0){for (i =start;i <end;i +=dim)last =insertNode(i,data[i],data[i +1],last);}else {for (i =end -dim;i >=start;i -=dim)last =insertNode(i,data[i],data[                                                                                                                                                i +1],last);}if (last &&equals(last,last.next)){removeNode(last);last =                                                                                                                                                                                                                                                                                                       last. next;} return last;} function filterPoints(start,end){if (!start)                                                                          
                                                 return start;if (!end)end =start;var p =start,again;do {again  =false;if (!p.steiner &&(equals(p,p.next)||area( p.prev,p,p.next)===0)){removeNode(p);p =end =p.prev;if (p ===p.next)break ;again =true;}else {p =p.next;}}while (again ||p !==end);return end;}function earcutLinked(ear,triangles,dim,minX,minY,invSize,pass){if (!ear)return  ;if (!pass && invSize)indexCurve(ear,minX,minY,invSize);var stop =ear,prev,next;while ( ear.prev !==ear.next){prev =ear.prev;next =ear.next;if (invSize ?isEarHashed(ear,minX,minY,invSize):isEar(ear) ){triangles.push(prev.i /dim |0);triangles.push( ear.i /dim |0);triangles.push(next.i /dim |0);removeNode(ear);ear =next.next;stop =next.next;continue ;}ear =next;if (ear ===stop){if  (!pass) {earcutLinked(filterPoints(ear),triangles,dim,minX,minY,invSize,1);} else if (pass ===1){ear =       cureLocalIntersections(                                                                              filterPoints( ear)  ,triangles,dim);earcutLinked(ear,triangles,dim,  minX,minY,    invSize,2);}else if                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          (pass ===2){   splitEarcut(ear,triangles,dim, minX,minY,invSize);}break ;} }  }    function isEar(ear)                                                                                                                                                                                                                                                                         {var a =ear. prev,b =ear,c =ear.next;if (area(a,b,c)>=0)return false;var ax =a.    x,bx =b.x,cx =c.x,                                                                                                                     ay =a.y,by =   b.y,cy =c.y;var x0 =ax <bx ?ax <cx ?ax :cx :bx <cx ?bx :cx,y0 =ay <by ?ay <cy ?ay :cy :by <    cy ?                                                                                                       by :cy,x1 =ax >bx ?ax >cx ?ax :cx :bx >cx ?bx :cx,y1 =ay >by ?ay >cy ?ay :cy :by >cy ?by :   cy;var p =c.next;while (p !==a){if (                                                                                                                                                                                                                                                                                                                                        p.x >=x0 && p.x <=x1 &&p.y >=y0 &&p.y <=y1 &&pointInTriangle(ax,ay,bx,by,cx,cy,p.   x, p. y) && area(p.                                                                                                                                                                                                                                                                        prev,p,p.next)>=0)return false;p =p.next;}return true;}function  isEarHashed(ear,   minX,minY,invSize){                                                                                                                                                        var a =ear.prev,b =ear,c =ear.next;if (area(a,b,c)>=0)return false;var ax =a.x,bx =b.x,cx =c.x,ay =a.y,by =b.y,cy =c.y;var x0 =ax <bx ?ax <cx ?ax :cx :bx <cx ?bx :cx,y0 =ay <by ?ay <cy ?ay :cy :by <cy ?by :cy,x1 =ax >bx ?ax >cx  ?ax :                                                                                                                                                                                         cx :bx >cx ?bx :cx,y1 =ay >by ?ay >cy ?ay :cy :by >cy ?by :cy;var minZ =zOrder(x0,y0,minX,minY,invSize),maxZ =zOrder(x1,y1,minX,minY,invSize);var p =ear.prevZ,n =ear.nextZ;while (p &&p.z >=minZ &&n &&n.z <=maxZ){if (p.x >=x0 &&p.x <=x1 &&p.y >=y0 &&p.y <=y1 &&p !==a &&p !==c &&pointInTriangle(ax,ay,bx,by,cx,cy,p.x,p.                                                                                                                                                                                    y)&&area(p.prev,p,p.next)>=0)return false;p =p.prevZ;if (n.x >=x0 &&n.x <=x1 && n.y >=y0 &&n.y <=y1                                                                                                                                                             &&n !==a &&n !==c &&pointInTriangle(ax,ay,bx,by,cx,cy,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n =n.nextZ;}while (p &&p.z >=minZ){if (p.x >=x0 &&p.x <=x1 &&p.y >=y0 &&p.y <=y1 &&p !==a &&p !==c &&pointInTriangle(ax,ay,bx,                                                                                                                                         by,cx,cy,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p =p.prevZ;}while                                                                                                                                                                                                                                                                                                    (n &&n.z <=maxZ){if (n.x >=x0 &&n.x <=x1 &&n.y >=y0 &&n.y <=y1 &&n !==a &&                                                                        
                                                n !==c  &&pointInTriangle(ax,ay,bx,by,cx,cy,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n =n.nextZ;}return  true;}function cureLocalIntersections(start,triangles,dim){var p =start;do {var a =p.prev,b =p.next.next;if (! equals(a,b)&&intersects(a,p,p.next,b)&&locallyInside(a,b)&&locallyInside(b,a)){ triangles.push(a.i /dim  |0);triangles.push(p.i /dim |0);triangles.push(b.i /dim |0);removeNode(p);removeNode(p.next);p =start =b;}p =p.next;}while (p !==start);return filterPoints(p);}function  splitEarcut(start,triangles,dim,minX,minY,invSize){var a =start;do {var b =a.next.next;while (b !==a.prev){if  (a.i !== b.i &&isValidDiagonal(a,b)){var  c =splitPolygon(a,b);a =filterPoints(a,a.next);c =filterPoints(c,c.next);earcutLinked(a,triangles,dim,minX,minY,invSize,0);earcutLinked(c,triangles,dim,minX,minY,invSize,0)       ;return  ;}b =   b.                                                                                 next;}a =a.next;}while ( a !==start);}function eliminateHoles(data,holeIndices,    outerNode,dim){var                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           queue =[],i,len,start,end,list;for (i  =0,len =holeIndices.length;i <len;i++ ){    start =holeIndices[                                                                                                                                                                                                                                                                         i] *dim;end =i < len -1 ?holeIndices[ i +1]* dim :data.length;list =linkedList(     data,  start,end,                                                                                                                     dim,false);if    (list ===list.next) list.steiner =true;queue.push(getLeftmost(list));}queue.sort(compareX)    ;for                                                                                                    ( i  =  0;i  < queue.length;i++  ){ outerNode =eliminateHole(   queue[  i]  , outerNode);}   return outerNode;}function compareX(                                                                                                                                                                                                                                                                                                                                          a,b) { return a. x - b.x;}function  eliminateHole(hole,outerNode) {var   bridge =       findHoleBridge(                                                                                                                                                                                                                                                                        hole,outerNode);if  (! bridge){return outerNode;}var bridgeReverse =splitPolygon(     bridge,    hole)                                                                                                                                                    ;filterPoints(bridgeReverse,bridgeReverse.next);return filterPoints(bridge,bridge. next);}function findHoleBridge(hole,outerNode){var p =outerNode,hx =hole.x,hy =hole.y,qx = -Infinity,m;do {if (hy <=p.y &&hy >=p.next.y &&p.next.y !==p.y){var x =                                                                                                                                                                                   p.x +(hy -p.y)*(p.next.x -p.x)/(p.next.y -p.y);if (x <=hx &&x >qx){qx =x;m =p.x <p.next.x ?p :p.next;if (x ===hx)return m;}}p =p.next;}while (p !==outerNode);if (!m)return null;var stop =m,mx =m.x,my =m.y,tanMin =Infinity,tan;p =m;do {if (hx >=p.x &&p.x >=mx &&hx !==p.x &&pointInTriangle(hy <my ?hx :qx,hy,mx,my,hy <my ?qx                                                                                                                                                                               :hx,hy,p.x,p.y)){tan =Math.abs(hy -p.y)/(hx -p.x);if (locallyInside(p,hole)&&(   tan  <tanMin ||tan                                                                                                                                                          ===tanMin &&(p.x >m.x ||p.x ===m.x &&sectorContainsSector(m,p)))){m =p;tanMin =tan;}}p =p.next;}while (p !==stop);return m;}function sectorContainsSector(m,p){return area(m.prev,m,p.prev)<0 &&area(p.next,m,m.next)<0;}function indexCurve(                                                                                                                                 start,minX,minY,invSize){var p =start;do {if  (p.z ===0)p.z =zOrder(p.x,p.y,                                                                                                                                                                                                                                                                                                   minX,minY,invSize);p.prevZ =p.prev;p.nextZ =p.next;p =p.next;} while (p !==                                                                        
                                               start);p.prevZ.nextZ =null;p.prevZ =null;sortLinked(p);}function sortLinked(list){var i,p,q,e,tail,numMerges,pSize,qSize,inSize =1;do {p =list;list =null;tail =null;numMerges =0;while (p){numMerges++ ;q =p;pSize =0;for (i =0;i <inSize;i++ ){pSize++ ;q =q.nextZ;if (!q)break ;}qSize =inSize;while (pSize >0 ||qSize >0 &&q){if (pSize !==0 &&(qSize ===0 ||!q ||p.z <=q.z)){e =p;p =p.nextZ;pSize-- ;}else {e =q;q =q.nextZ;qSize-- ;}if (tail)tail.nextZ =e;else list =e;e.prevZ =tail;tail =e;}p =q;}tail.nextZ =null;inSize *=2;}while (numMerges >1);return list;}function zOrder(x,y,minX,minY,invSize){x =(x -minX)*invSize |0;y =(y -minY)*invSize |0;x =(x |x <<8)&0x00FF00FF;x =(x |x <<4)&0x0F0F0F0F;x =(x |x <<2)&0x33333333;x =(x |x <<1)&0x55555555;y =(y |y <<8)&0x00FF00FF;y =(y |y <<4)&0x0F0F0F0F;y =(y |y <<2)&0x33333333;y =(y |           y   <<     1) &                                                                               0x55555555;return x |y <<1;}function getLeftmost(start) {var p =start,leftmost =    start;do {if (p.x <                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          leftmost.x ||p.x ===leftmost.x &&p.y <leftmost.y)leftmost =p;p =p.next;}while (      p      !== start)                                                                                                                                                                                                                                                                         ;return leftmost;}function pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return (cx -   px)*(ay -py)>=(ax -                                                                                                                     px)*( cy -py)   &&( ax -px)*(by -py)>=(bx  -px)*(ay -py)&&(bx - px)*(cy -py)>= (cx -px)*(by -py);}function     isValidDiagonal(                                                                                       a,b){return a.next.i !==b.i  &&a.prev.i !==b.i &&!intersectsPolygon(a,b)&&(locallyInside(      a, b)&& locallyInside(  b, a)  &&                                                                                                                                                                                                                                                                                                                                           middleInside(a,b)&&(area(a.prev,a,b.prev)||area(a, b.prev,b))||equals(a,b)&&area(   a.prev, a,a.next)>0                                                                                                                                                                                                                                                                        &&area(b.prev,b,b.next)>0);}function area(p,q,r){return (q.y -p.y)*(r.x -q.x)-(q.   x -p.x)*(r.y -q.y)                                                                                                                                              ;}function equals(p1,p2){return p1.x ===p2.x &&p1.y ===p2.y;}function intersects(p1,q1,p2,q2){var o1 =sign(area(p1,q1,p2));var o2 =sign(area(p1,q1,q2));var o3 =sign(area(p2,q2,p1));var o4 =sign(area(p2,q2,q1));if (o1 !==o2 &&o3 !==o4)return true;if (o1 ===                                                                                                                                                                              0 &&onSegment(p1,p2,q1))return true;if (o2 ===0 &&onSegment(p1,q2,q1))return true;if (o3 ===0 &&onSegment(p2,p1,q2))return true;if (o4 ===0 &&onSegment(p2,q1,q2))return true;return false;}function onSegment(p,q,r){return q.x <=Math.max(p.x,r.x)&&q.x >=Math.min(p.x,r.x)&&q.y <=Math.max(p.y,r.y)&&q.y >=Math.min(p.y,r.y);}function                                                                                                                                                                         sign(num){return num >0 ?1  :num <0 ?  -1 :0;}function intersectsPolygon(a,b){  var p =a;do {if (p.                                                                                                                                                        i !==a.i &&p.next.i !==a.i && p.i  !== b.i &&p.next.i !==b.i && intersects(p,p.next,a,b))return true;p =p.next;}while (p !==a);return false;}function locallyInside(a,b){return area(a.prev,a,a.next)<0 ?area(a,b,a.next)>=0 &&area(a,a.prev,b)>=0 :                                                                                                                           area(a,b,a.prev)<0 ||area(a,a.next,b)<0;}function middleInside(a,b){var p =a,                                                                                                                                                                                                                                                                                                   inside =false,px =(a.x +b.x)/2,py =(a.y +b.y)/2;do {if (p.y >py !==p.next.y >                                                                      
                                               py &&p.next.y !== p.y &&px <(p.next.x -p.x)*(py -p.y)/(p.next.y -p.y)+p.x)inside =!inside;p  =p.next;}while (p !==a);return inside;}function splitPolygon(a,b){var a2 =new Node(a.i,a.x,a.y),b2 =new Node(b.i,b.x,b.y),an =a.next,bp =b.prev;a.next =b;b.prev =a;a2.next =an;an.prev =a2;b2.next =a2;a2.prev =b2;bp.next =b2;b2.prev =bp;return b2;}function insertNode(i,x, y,last){ var p =new Node(i,x,y);if (!last){p.prev =p;p.next =p;}else {p.next =last.next;p.prev =last;last.next.prev =p;last.next =p;}return p;}function removeNode(p){p.next.prev =p.prev;p.prev.next =p.next;if (p.prevZ)p.prevZ.nextZ =p.nextZ;if (p.nextZ)p.nextZ.prevZ =p.prevZ;}function Node(i,x,y){this.i =i;this.x =x;this.y =y;this.prev =null;this.next =null;this.z =0;this.prevZ =null;this.nextZ =null;this.steiner =false;} earcut.deviation =function (data,          holeIndices,  dim,                                                                              triangles){var hasHoles =holeIndices &&holeIndices.length;var outerLen =hasHoles    ? holeIndices[ 0]*                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           dim :data.length;var polygonArea =Math.abs(signedArea(data,0,outerLen,dim));if (   hasHoles){for (var i                                                                                                                                                                                                                                                                        =0,len =holeIndices.length;i <len;i++ ){var start =holeIndices[i]*dim;var end =     i <   len  - 1  ?                                                                                                                        holeIndices[i   +1] *dim :data. length;polygonArea -= Math.abs(signedArea( data, start,end,dim))  ;} } var     trianglesArea                                                                                      =0;for (i = 0;i <triangles.length;i +=3){var a =triangles[i]* dim;var b =triangles[i +1] *    dim;var  c   = triangles[ i + 2] *                                                                                                                                                                                                                                                                                                                                             dim;trianglesArea +=Math.abs((data[a]-data[c])*(data[b +1]-data[a +1])-(data[ a]-   data[b])* (data[c +                                                                                                                                                                                                                                                                        1] -data[a +1]) );}return polygonArea ===0  && trianglesArea ===0 ?0 : Math.abs((     trianglesArea  -                                                                                                                                          polygonArea) /polygonArea);};function signedArea(data,start,end,dim){ var sum =0;for (var i =start,j =end -dim;i <end;i +=dim){sum  +=(data[j]-data[ i])*(data[i +1]+data[j +1]) ;j =i;}return sum;}earcut.flatten =function (data){var dim =data[0][0].length,result ={                                                                                                                                                                          vertices:[],holes:[],dimensions:dim },holeIndex =0;for (var i  =0;i <data.length;i++ ){for (var  j = 0;j <data[i].length; j++ ){for (var d =0;d <dim;d++ )result.vertices.push( data[i][j][d] );}if (i >0){holeIndex +=data[i -1].length;result.holes.push(holeIndex);}}return result;};},"../node_modules/function-bind/implementation.js":                                                                                                                                                                           module      =>   {       "use strict"       ;var      ERROR_MESSAGE     =  'Function.prototype.bind called on incompatible '                                                                                                                        ;var slice = Array.prototype.slice;var toStr =Object.prototype.toString;var  funcType  ='[object Function]';module.exports =function bind(that){var target  =this;if (typeof  target  !== 'function'||toStr. call(target)!==funcType){throw new TypeError(                                                                                                                      ERROR_MESSAGE +target);}var args =slice.call(arguments,1);var bound;var binder =                                                                                                                                                                                                                                                                                                function ( ){if  (this instanceof  bound){var result =target. apply(this,args.                                                                      
                                              concat(slice.call(arguments)));if (Object(result)===result){return result;}return this;}else {return target.apply(that,args.concat(slice.call(arguments)));}};var boundLength =Math.max(0,target.length -args. length);var boundArgs =[];for (var i =0;i <boundLength;i++ ){boundArgs. push('$'+i);}bound =Function('binder','return function ('+boundArgs.join(',')+'){ return binder.apply(this,arguments); }')(binder);if (target.prototype){var Empty =function Empty(){};Empty.prototype =target.prototype;bound.prototype =new Empty();Empty.prototype =null;}return bound;};},"../node_modules/function-bind/index.js":(module, __unused_webpack_exports,__webpack_require__) =>{"use strict";var implementation =__webpack_require__("../node_modules/function-bind/implementation.js");module.exports =Function.prototype.bind ||implementation;},      "../node_modules/functions-have-names/index.js"                                                    :module =>{"use strict";var functionsHaveNames  =function functionsHaveNames(){        return  typeof                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           function f(){}.name ==='string';};var gOPD =Object.getOwnPropertyDescriptor;if (   gOPD){try {gOPD([],                                                                                                                                                                                                                                                                           'length'   )  ;}     catch    ( e) {  gOPD   =  null;}   }functionsHaveNames.    functionsHaveConfigurableNames                                                                                                                =function     functionsHaveConfigurableNames(){if (!functionsHaveNames()||!gOPD){return false;}var desc       =                                                                                              gOPD(function (){},'name' );return  !!  desc &&!!desc. configurable;};var $bind =Function.   prototype. bind;functionsHaveNames.                                                                                                                                                                                                                                                                                                                                                boundFunctionsHaveNames    =     function       boundFunctionsHaveNames(  )   {   return functionsHaveNames(                                                                                                                                                                                                                                                                 )&&typeof $bind ==='function'&&function f(){}.bind().name !=='';};module.exports =  functionsHaveNames;}                                                                                                                                    ,"../node_modules/geojson-equality/index.js":( module,__unused_webpack_exports,__webpack_require__) =>{var deepEqual =__webpack_require__("../node_modules/deep-equal/index.js"  ) ;var Equality =function (opt) {this.precision =opt   &&opt. precision ?opt.precision :17;this.                                                                                                                                                                     direction =opt &&opt.direction ?opt.direction :false;this.pseudoNode =opt &&opt.pseudoNode ?opt.pseudoNode :false;this.objectComparator =opt &&opt.objectComparator ?opt.objectComparator :objectComparator;};Equality.prototype.compare =function (g1,g2){if (g1.type !==g2.type ||!sameLength(g1,g2))return false;switch (g1.type){case 'Point'                                                                                                                                                                  :   return  this.compareCoord( g1.coordinates, g2.coordinates)  ;break  ;case    'LineString'    :                                                                                                                                                    return this.compareLine(g1.coordinates,g2.coordinates,0,false);break ;case 'Polygon' :return this.comparePolygon(g1,g2);break ;case 'Feature':return this.compareFeature(g1,g2);default:if (g1.type.indexOf('Multi')===0){var  context =this;var g1s =explode(g1)                                                                                                                  ;var g2s = explode(g2) ;return  g1s.every(function (  g1part){return this.some(    function                                                                                                                                                                                                                                                                                   (g2part){ return context. compare(g1part,g2part);}  );} , g2s);}}return false;}                                                                      
                                              ;function explode(g){return g.coordinates.map(function (part){return {type:g.type.replace('Multi',''),coordinates:part };});}function sameLength(g1,g2){return g1.hasOwnProperty('coordinates')?g1.coordinates.length ===g2.coordinates.length :g1.length ===g2.length;}Equality.prototype.compareCoord =function (c1,c2){if (c1.length !==c2.length){return false;}for (var i =0;i <c1. length;i++ ){if (c1[i].toFixed(this.precision)!==c2[i].toFixed(this.precision)){return false;}}return true;};Equality.prototype.compareLine =function (path1,path2,ind,isPoly){if  (!sameLength(path1,path2))return false;var p1 =this.pseudoNode ?path1 :this.removePseudo(path1);var p2 =this.pseudoNode ?path2 :this.removePseudo(path2);if (isPoly &&!this.compareCoord(p1[0],p2[0])){p2 =this.fixStartIndex(p2,p1);if (!p2)return  ;}var sameDirection =this.       compareCoord(p1[ind]                                                                             ,p2[ind]);if (this.direction ||sameDirection) {return this.comparePath( p1,p2);}    else   {if  (this.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           compareCoord(p1[ind],p2[p2.length -(1 + ind)] )) { return  this.comparePath(p1.    slice(). reverse(),                                                                                                                                                                                                                                                                         p2);} return false;}} ;Equality.prototype.fixStartIndex = function (sourcePath,    targetPath)   {var                                                                                                                           correctPath,   ind = -1;for (var i =0;i  <sourcePath.length;i++  ) {if (this.compareCoord(sourcePath[ i],     targetPath[                                                                                    0])){ind =i;break ;}}if (ind >=0){correctPath =[].concat(sourcePath.slice(ind,sourcePath.    length),sourcePath.slice(1,ind +1))                                                                                                                                                                                                                                                                                                                                               ;}return correctPath;};Equality.prototype.comparePath =function (p1,p2){var cont =     this;return  p1.                                                                                                                                                                                                                                                                        every(function  ( c,i) { return   cont.compareCoord(c,this[i]);}, p2);};Equality.            prototype.                                                                                                                                 comparePolygon =function (g1,g2) {if   (this.compareLine(g1.coordinates[0],g2.coordinates[0],1,true)){var holes1 =g1.coordinates.slice(1,g1.coordinates.length);var holes2 =g2.coordinates.slice(1,g2.coordinates.length);var cont =this;return holes1.every(function ( h1){return this.                                                                                                                                                                  some( function ( h2){return cont.compareLine(h1,h2,1,true);});},holes2);}else {return false;}};Equality.prototype.compareFeature =function (g1,g2){if (g1.id !==g2.id ||!this.objectComparator(g1.properties,g2.properties)||!this.compareBBox(g1,g2)){return false;}return this.compare(g1.geometry,g2.geometry);};Equality.prototype.compareBBox =                                                                                                                                                               function  (g1,g2){if (! g1. bbox &&!g2. bbox || g1.  bbox && g2.bbox  &&this.    compareCoord( g1.                                                                                                                                                 bbox,g2.bbox)){return true;}return false;};Equality.prototype.removePseudo =function (path){return path;};function objectComparator(obj1,obj2){return deepEqual(obj1,obj2,{strict:true });}module.exports =Equality;},"../node_modules/geojson-rbush/index.js":(module,                                                                                                              __unused_webpack_exports,__webpack_require__) =>{var rbush =__webpack_require__(    "../node_modules/geojson-rbush/node_modules/rbush/rbush.min.js"                                                                                                                                                                                                                                     )           ;var         helpers     =            __webpack_require__(     "../node_modules/@turf/helpers/dist/js/index.js"                 
                                             );var meta =__webpack_require__("../node_modules/@turf/meta/dist/js/index.js");var turfBBox =__webpack_require__("../node_modules/@turf/bbox/dist/js/index.js")["default"];var featureEach =meta.featureEach;var coordEach =meta.coordEach;var polygon =helpers.polygon;var featureCollection =helpers.featureCollection;function geojsonRbush(maxEntries){var tree =new rbush(maxEntries);tree.insert =function (feature){if (feature.type !=='Feature')throw new Error('invalid feature');feature.bbox =feature.bbox ?feature.bbox :turfBBox(feature);return rbush.prototype.insert.call(this,feature);};tree.load =function (features){var load =[];if (Array.isArray(features)){features.forEach(function (feature){if (feature.type !=='Feature')throw new Error('invalid features');feature.bbox =feature.bbox ?feature.bbox :turfBBox(feature) ;load.        push(feature) ;}) ;}                                                                            else {featureEach(  features,function (feature){ if (feature. type !=='Feature')     throw new  Error(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           'invalid features');feature.bbox =feature.bbox ?feature.bbox :turfBBox(feature)    ;load.push(feature)                                                                                                                                                                                                                                                                         ;});}return rbush.  prototype.load. call(this,load);};tree. remove  =function (    feature,equals){if                                                                                                                            (   feature.   type !=='Feature')throw new Error('invalid feature' );feature.bbox =feature.bbox  ?feature.   bbox :                                                                                        turfBBox(feature);return rbush.prototype.remove.call(this,feature, equals) ;};tree.clear =   function (){return rbush.prototype.                                                                                                                                                                                                                                                                                                                                                clear.call(this);};tree.search =function (geojson){var features =rbush.prototype.    search. call(this,                                                                                                                                                                                                                                                                         this.  toBBox(geojson));return  featureCollection(features)  ;};tree.collides  =   function ( geojson){                                                                                                                              return rbush.prototype.collides.call( this,this. toBBox(geojson));};tree.all =function  (){var features =rbush.prototype.all.call(this);return featureCollection(features);};tree.toJSON =function (){return rbush.prototype.toJSON.call(this);};tree.fromJSON =function (json){return rbush.                                                                                                                                                               prototype.fromJSON.call(this,json);};tree.toBBox =function  (geojson){var bbox;if (geojson.bbox)bbox =geojson.bbox;else if (Array.isArray(geojson)&& geojson.length ===4)bbox =geojson;else if (Array.isArray(geojson)&&geojson. length ===6)bbox =[geojson[ 0] ,geojson[1],geojson[3],geojson[4]];else if (geojson.type  ==='Feature')bbox  =turfBBox(                                                                                                                                                           geojson);else if (geojson.type  ==='FeatureCollection')bbox =turfBBox(geojson)  ;else     throw new                                                                                                                                              Error('invalid geojson');return {minX:bbox[0],minY:bbox[1],maxX:bbox[2],maxY:bbox[3]};};return tree;}module.exports =geojsonRbush;module.exports["default"]=geojsonRbush;},"../node_modules/geojson-rbush/node_modules/rbush/rbush.min.js":function (module){!function (t,i){                                                                                                           true ?module.exports =i():0;}(this,function (){"use strict";function t(t,r,e,a,h)         { !                                                                                                                                                                                                                                                                                 function t(n,r,e,a,h){for (;a > e;){if (a -e >600){var o =a -e +1,s =r -e +1,l =       Math.                                                          
                                             log(o),f =.5 *Math.exp(2 *l /3),u =.5 *Math.sqrt(l *f *(o -f)/o)*(s -o /2 <0 ? -1 :1),m =Math.max(e,Math.floor(r -s *f /o +u)),c =Math.min(a,Math.floor(r +(o -s)*f /o +u));t(n,r,m,c,h);}var p =n[r],d =e,x =a;for (i(n,e,r),h(n[a],p)>0 &&i(n,e,a);d <x;){for (i(n,d,x),d++ ,x-- ;h(n[d],p)<0;)d++ ;for (;h(n[x],p)>0;)x-- ;}0 ===h(n[e],p)?i(n,e,x):i(n, ++x,a),x <=r &&(e =x +1),r <=x &&(a =x -1);}}(t,r,e ||0,a ||t.length -1,h ||n);}function i(t,i,n){var r =t[i];t[i]=t[n],t[n]=r;}function n(t,i){return t <i ? -1 :t >i ?1 :0;}var r =function (t){void 0 ===t &&(t =9),this._maxEntries =Math.max(4,t),this._minEntries =Math.max(2,Math.ceil(.4 *this._maxEntries)),this.clear();};function e(t,i,n){if (!n)return i.indexOf(t);for (var r =0;r <i.length;r++ )if (n(t,i[r]))return r;return ( -1);}function a(t,i){h(t,0,t.children.length,i,t)       ;}function h(t, i,n,                                                                            r,e){e ||(e =p( null)) ,e.minX =1 /0,e.minY =1 /0,e.maxX = -1  /0, e.maxY = -1 /    0;for (var a =i;a <                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          n;a++ ){var h =t.children[a];o(e,t. leaf ?r(h):h) ;}return e;} function o(t,i){     return  t.  minX =                                                                                                                                                                                                                                                                          Math.min(t.minX, i.minX),t.minY =Math.min(t. minY,i.minY),t.maxX =Math.max( t.     maxX,i. maxX), t.                                                                                                                             maxY  =Math.    max(t. maxY,i.maxY),t;}function s( t,i){return  t.minX -i.minX;}function l(t,i){return t.     minY                                                                                       -i.minY;}function f(t){return (t.maxX -t.minX)*(t.maxY -t.minY);}function u(t){return  t.    maxX  -t.minX  +(t. maxY -t.minY);}                                                                                                                                                                                                                                                                                                                                                 function m(t,i) {return t.minX  <=i.minX &&t.minY <=i.minY &&i.maxX <=t.maxX &&i.      maxY  <=t.maxY;}                                                                                                                                                                                                                                                                        function c(t,i){return i.minX <= t.maxX &&i.minY <=t.maxY &&i.maxX >=t. minX &&i.    maxY >=t.  minY;}                                                                                                                            function p(t){return {children:t,height:1,leaf:!0,minX:1 /0,minY:1 /0, maxX:  -1 /0,maxY: -1  /0 };}function d(i,n,r,e,a){for   (var h =[n,r];h.length;)if (!((r =h.pop())-(n =h.pop()) <=e)){var o =n +Math.ceil((r -n)/e /2)*e;t(i,o,n,r,a),h.push(n,o,o,r);}}return r.prototype.all =function (){                                                                                                                                                            return this._all(this.data,[]);},r.prototype.search =function (t){var i =this.data,n =[];if (!c(t,i))return n;for (var r =this.toBBox,e =[];i;){for (var a =0;a <i.children.length;a++ ){var h =i.children[a],o =i.leaf ?r(h):h;c(t,o)&&(i.leaf ?n.push(h):m(t,o)?this._all(h,n):e.push(h));}i =e.pop();}return n;},r.prototype.collides =function (t){var                                                                                                                                                        i =this.data;if ( !c(t,i))return !1;for (var  n =[];i;  ){for  (var r =0;r <i.  children.length;r++                                                                                                                                            ){var e =i.children[r],a =i.leaf ?this.toBBox( e):e;if (c(t,a)){if (i.leaf ||m(t,a))return !0;n.push(e);}}i =n.pop();}return !1;},r.prototype.load =function (t){if (!t ||!t.length)return this;if (t.length <this._minEntries) {for (var i = 0;i <t.length;i++ )this.insert(t[i])                                                                                                         ;return this;}  var  n =this._build(t.slice( ),0,t.length - 1,0);if  (this.data.    children.                                                                                                                                                                                                                                                                               length){if (this.data. height ===n.height)this._splitRoot(this.data,n);else {if (   this.data.                                                         
                                            height <n.height){var r =this.data;this.data =n,n =r;}this._insert(n,this.data.height -n.height -1,!0);}}else this.data =n;return this;},r.prototype.insert =function (t){return t &&this._insert(t,this.data.height -1),this;},r.prototype.clear =function  () {return this.data =p([]),this;},r.prototype.remove =function (t,i){if (!t)return this;for (var n,r,a,h =this.data,o =this.toBBox(t),s =[],l =[];h ||s.length;){if (h || (h =s.pop(),r =s[s.length -1],n =l.pop(),a =!0),h.leaf){var f =e(t,h.children,i);if ( -1 !==f)return  h.children.splice(f,1), s.push(h),this._condense(s),this;}a ||h.leaf ||!m(h,o)?r ?(n++ ,h =r.children[n],a =!1):h =null :(s.push(h),l.push(n),n =0,r =h,h =h.children[0]);}return this;},r.prototype.toBBox =function (t){return t;},r.prototype.compareMinX =function (t,i){return t.minX -i.minX;},r.prototype.        compareMinY      =                                                                            function ( t,i) {return  t.minY - i.minY;}, r.prototype.toJSON =  function  ( ){    return this.data;}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ,r.prototype.fromJSON =function (t){return this.data =t,this;},r.prototype._all    =function (t,i){for                                                                                                                                                                                                                                                                         (var n =[];t;)t.leaf ?i.push.apply(i,t.children):n.push.apply(n,t.children),t =    n.pop();return i;}                                                                                                                             ,r.prototype.    _build =function (t,i,n,r){var e,h =n -i +1,o =this._maxEntries;if (h <=o)return a(e =p(t.    slice(                                                                                   i,n +1)),this.toBBox),e;r ||(r =Math.ceil(Math.log(h)/Math.log(o)),o =Math.ceil(h /Math.     pow(o,r -1))),(e =p( [])).leaf =!1,                                                                                                                                                                                                                                                                                                                                                  e.height =r;var  s =Math.ceil(h /o),l =s *Math.ceil(Math.sqrt(o));d(t,i,n,l,this.   compareMinX);for (                                                                                                                                                                                                                                                                         var f =i;f <=n;f +=l){var u =Math.min(f +l -1,n);d(t,f,u,s,this.compareMinY);for (  var m =f;m <=u;m +=                                                                                                                         s){var c =Math.min(m +s -1,u);e.children.push(this._build(t,m,c,r -1));}}return  a(e,this.toBBox),e;},r.prototype._chooseSubtree =function (t,i,n,r){for (;r.push(i),!i.leaf &&r.length -1 !==n;){for (var e =1 /0,a =1 /0,h =void 0,o =0;o <i.children.length;o++ ){var s =i.children[o],l =f(s),u =(m =                                                                                                                                                         t,c =s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u <a ?(a =u,e =l <e ?l :e,h =s): u ===a &&l <e &&(e =l,h =s);}i =h ||i.children[0];}var m,c;return i;},r.prototype._insert =function (t,i,n){var r =n ?t :this.toBBox(t),e =[],a =this._chooseSubtree(r,this.data,i,e);for (a.children.push(t),                                                                                                                                                     o(a,r);i >=0 &&e[i] .children.length >this._maxEntries;) this._split(e,i), i--               ;this.                                                                                                                                          _adjustParentBBoxes(r,e,i);},r.prototype._split =function (t,i){var n =t[i],r =n.children.length,e =this._minEntries;this._chooseSplitAxis(n,e,r);var h =this. _chooseSplitIndex(n,e,r),o =p(n. children.splice( h,n.children.length -h)) ;o.height =n.height,o.leaf =n.leaf,a(n,this.                                                                                                        toBBox),a( o,this.toBBox),i ?t[ i -1].children.push(o):this._splitRoot(n,o);},r.    prototype.                                                                                                                                                                                                                                                                             _splitRoot = function (t,i){this.data  =p([t,i]), this.data.height =t.height +1,    this.  data.                                                       
                                            leaf =!1,a(this.data,this.toBBox);},r.prototype._chooseSplitIndex =function (t,i,n){for (var r,e,a,o,s,l,u,m =1 /0,c =1 /0,p =i;p <=n -i;p++ ){var d =h(t,0,p,this.toBBox),x =h(t,p,n,this.toBBox),v =(e =d,a =x,o =void 0,s =void 0,l =void 0,u =void 0,o =Math.max(e.minX,a.minX),s =Math.max(e.minY,a.minY),l =Math.min(e.maxX,a.maxX),u =Math.min(e.maxY,a.maxY),Math.max(0,l -o)*Math.max(0,u -s)),M =f(d)+f(x);v <m ?(m =v,r =p,c =M <c ?M :c):v ===m &&M <c &&(c =M,r =p);}return r ||n -i;},r.prototype._chooseSplitAxis =function (t,i,n){var r =t.leaf ?this.compareMinX :s,e =t.leaf ?this.compareMinY :l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r);},r.prototype._allDistMargin =function (t,i,n,r){t.children.sort(r);for (var e =this.toBBox,a =h(t,0,i,e),s =h(t,n -i,n,e),l =u(a) +u(s),f =i;f <n -i;f++ ){        var  m =t.children[                                                                           f];o(a,t.leaf  ? e(m):m),l +=u( a);}for (var c = n - i -1;c >= i;c-- ){var p =t.    children[c];o(s,t.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           leaf ?e(p): p),l +=u(s);}return l;},r.prototype._adjustParentBBoxes =function (    t,i,n){for (var r =                                                                                                                                                                                                                                                                         n;r >=0;r-- )o( i[r] ,t);}, r.prototype._condense =function (t){for  (var i =t.    length - 1,n =void                                                                                                                              0;i >=0;i-- )    0 ===t[i].children.length ?i >0 ?(n  =t[ i -1].children).splice( n.indexOf(t[i]),1):this.     clear(                                                                                  ): a(t[i],  this.  toBBox);},r;});} , "../node_modules/get-intrinsic/index.js": (module,              __unused_webpack_exports,                                                                                                                                                                                                                                                                                                                                                    __webpack_require__)  =>     {   "use strict";var undefined;var   $SyntaxError =       SyntaxError;var                                                                                                                                                                                                                                                                        $Function =Function;var $TypeError =TypeError;var getEvalledConstructor =function   (expressionSyntax)                                                                                                                        {try {return $Function('"use strict"; return ('+expressionSyntax +').constructor;')();}catch (e){}};var $gOPD =Object.getOwnPropertyDescriptor;if ($gOPD){try {$gOPD({}, '');}catch (e){$gOPD =null;}}var throwTypeError =function (){throw new $TypeError() ;};var ThrowTypeError =$gOPD ?function (){try {                                                                                                                                                        arguments.callee;return throwTypeError;}catch (calleeThrows){try {return $gOPD(arguments,'callee').get;}catch (gOPDthrows){return throwTypeError;}}}():throwTypeError;var hasSymbols =__webpack_require__("../node_modules/has-symbols/index.js")();var getProto =Object.getPrototypeOf ||function (x){return x.__proto__;};var needsEval ={};var TypedArray =                                                                                                                                                    typeof Uint8Array ==='undefined'?undefined :getProto(Uint8Array);var INTRINSICS            =      {                                                                                                                                           '%AggregateError%': typeof AggregateError  ===    'undefined'?undefined :AggregateError, '%Array%': Array,'%ArrayBuffer%' :  typeof ArrayBuffer  ==='undefined'? undefined : ArrayBuffer, '%ArrayIteratorPrototype%' :hasSymbols ?  getProto([ ][  Symbol. iterator] ( )  ): undefined,                                                                                                        '%AsyncFromSyncIteratorPrototype%' :undefined, '%AsyncFunction%'  : needsEval,    '%AsyncGenerator%'                                                                                                                                                                                                                                                                      :needsEval, '%AsyncGeneratorFunction%' :needsEval, '%AsyncIteratorPrototype%' :       needsEval,                                                      
                                            '%Atomics%':typeof Atomics ==='undefined'?undefined :Atomics,'%BigInt%':typeof BigInt ==='undefined'?undefined :BigInt,'%Boolean%':Boolean,'%DataView%':typeof DataView === 'undefined'?undefined :DataView,'%Date%':Date,'%decodeURI%':decodeURI,'%decodeURIComponent%':decodeURIComponent,'%encodeURI%':encodeURI, '%encodeURIComponent%':encodeURIComponent,'%Error%':Error,'%eval%':eval,'%EvalError%' : EvalError,'%Float32Array%':typeof Float32Array ==='undefined'?undefined :Float32Array,'%Float64Array%':typeof Float64Array === 'undefined'?undefined :Float64Array,'%FinalizationRegistry%':typeof FinalizationRegistry ==='undefined' ?undefined :FinalizationRegistry,'%Function%':$Function,'%GeneratorFunction%':needsEval,'%Int8Array%':typeof Int8Array ==='undefined'?undefined :Int8Array,'%Int16Array%':typeof Int16Array ==='undefined'?             undefined     :                                                                           Int16Array,'%Int32Array%'  :  typeof Int32Array  ==='undefined' ? undefined   :            Int32Array,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            '%isFinite%' : isFinite,'%isNaN%':isNaN, '%IteratorPrototype%': hasSymbols  ?    getProto(getProto([                                                                                                                                                                                                                                                                         ][Symbol.iterator] ())) : undefined, '%JSON%': typeof JSON  ==='object'?JSON  :    undefined,'%Map%':                                                                                                                                typeof Map ===    'undefined' ? undefined :Map,'%MapIteratorPrototype%': typeof  Map ===  'undefined'  ||!    hasSymbols                                                                           ? undefined :getProto(new Map()[Symbol.iterator]  ()),'%Math%' :Math,'%Number%': Number,     '%Object%':Object, '%parseFloat%':                                                                                                                                                                                                                                                                                                                                                      parseFloat,'%parseInt%'  :parseInt,'%Promise%':typeof  Promise ===  'undefined'?   undefined :Promise,                                                                                                                                                                                                                                                                        '%Proxy%':typeof Proxy ==='undefined'?undefined :Proxy,'%RangeError%':RangeError,   '%ReferenceError%'                                                                                                                      :ReferenceError,'%Reflect%':typeof Reflect ==='undefined'?undefined :Reflect,'%RegExp%':RegExp,'%Set%':typeof Set ==='undefined'?undefined :Set,'%SetIteratorPrototype%':typeof Set ==='undefined'||!hasSymbols ?undefined :getProto(new Set()[Symbol.iterator]()),'%SharedArrayBuffer%':typeof SharedArrayBuffer                                                                                                                                                     ==='undefined' ?undefined :SharedArrayBuffer,'%String%':String, '%StringIteratorPrototype%':hasSymbols ?getProto(''[Symbol.iterator]()) :undefined,'%Symbol%':hasSymbols ?Symbol :undefined,'%SyntaxError%' :$SyntaxError,'%ThrowTypeError%':ThrowTypeError,'%TypedArray%':TypedArray,'%TypeError%': $TypeError,'%Uint8Array%':typeof Uint8Array === 'undefined'?                                                                                                                                                    undefined : Uint8Array,'%Uint8ClampedArray%'  :typeof Uint8ClampedArray ===    'undefined'     ?                                                                                                                                      undefined :Uint8ClampedArray,'%Uint16Array%':typeof Uint16Array ==='undefined'?undefined :Uint16Array,'%Uint32Array%':typeof Uint32Array ==='undefined'?undefined :Uint32Array,'%URIError%':URIError,'%WeakMap%':typeof WeakMap ==='undefined'?undefined :WeakMap,'%WeakRef%':typeof WeakRef ===                                                                                                   'undefined'  ? undefined :WeakRef,'%WeakSet%':typeof   WeakSet  === 'undefined'?   undefined :                                                                                                                                                                                                                                                                            WeakSet }   ;var doEval =function  doEval(   name) { var  value;if    (name ===   '%AsyncFunction%'                                                    
                                          ){value =getEvalledConstructor('async function () {}');}else if (name ==='%GeneratorFunction%'){value =getEvalledConstructor('function* () {}');}else if (name ==='%AsyncGeneratorFunction%'){value =getEvalledConstructor('async function* () {}');}else if (name ==='%AsyncGenerator%'){var fn =doEval('%AsyncGeneratorFunction%');if (fn){value =fn.prototype;}}else if (name ==='%AsyncIteratorPrototype%'){var gen =doEval('%AsyncGenerator%');if (gen){value =getProto(gen.prototype);}}INTRINSICS[name]=value;return value;};var LEGACY_ALIASES ={'%ArrayBufferPrototype%':['ArrayBuffer','prototype'],'%ArrayPrototype%':['Array','prototype'],'%ArrayProto_entries%':['Array', 'prototype','entries'],'%ArrayProto_forEach%':['Array','prototype','forEach'],'%ArrayProto_keys%': ['Array','prototype','keys'],'%ArrayProto_values%':['Array','prototype',            'values'   ]  ,                                                                          '%AsyncFunctionPrototype%':  ['AsyncFunction','prototype'],'%AsyncGenerator%':[    'AsyncGeneratorFunction'                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ,'prototype'],'%AsyncGeneratorPrototype%':['AsyncGeneratorFunction','prototype'    ,'prototype'   ]  ,                                                                                                                                                                                                                                                                         '%BooleanPrototype%':['Boolean','prototype'],'%DataViewPrototype%':['DataView',       'prototype'  ],                                                                                                                                 '%DatePrototype%' :['Date','prototype'] ,'%ErrorPrototype%' :['Error','prototype' ],'%EvalErrorPrototype%':[   'EvalError'                                                                       ,   'prototype'  ]   ,  '%Float32ArrayPrototype%' :  ['Float32Array'   ,  'prototype'  ],   '%Float64ArrayPrototype%'       : [                                                                                                                                                                                                                                                                                                                                                       'Float64Array' ,'prototype' ],'%FunctionPrototype%' :['Function'  ,'prototype'],   '%Generator%'   : [                                                                                                                                                                                                                                                                        'GeneratorFunction',   'prototype'],'%GeneratorPrototype%': ['GeneratorFunction',     'prototype'    ,                                                                                                                   'prototype'],'%Int8ArrayPrototype%': ['Int8Array','prototype'],'%Int16ArrayPrototype%': [ 'Int16Array', 'prototype'],'%Int32ArrayPrototype%':['Int32Array', 'prototype' ],'%JSONParse%' :['JSON', 'parse'],'%JSONStringify%':[ 'JSON','stringify'], '%MapPrototype%':['Map','prototype'],'%NumberPrototype%':['Number',                                                                                                                                                  'prototype' ],'%ObjectPrototype%':[ 'Object','prototype'],'%ObjProto_toString%' :['Object' ,'prototype','toString'] ,'%ObjProto_valueOf%' :['Object','prototype','valueOf'], '%PromisePrototype%':['Promise', 'prototype'],'%PromiseProto_then%':['Promise','prototype','then'],'%Promise_all%' :[ 'Promise',  'all'  ],'%Promise_reject%' :[ 'Promise' ,'reject' ],                                                                                                                                               '%Promise_resolve%' :  [   'Promise'  ,'resolve'],  '%RangeErrorPrototype%':[     'RangeError'   ,                                                                                                                                    'prototype'],'%ReferenceErrorPrototype%':['ReferenceError','prototype'],'%RegExpPrototype%':['RegExp','prototype'],'%SetPrototype%':['Set','prototype'] ,'%SharedArrayBufferPrototype%':['SharedArrayBuffer','prototype'],'%StringPrototype%':['String','prototype'],'%SymbolPrototype%':['Symbol',                                                                                                    'prototype' ],'%SyntaxErrorPrototype%'   :['SyntaxError' ,   'prototype'  ]  ,    '%TypedArrayPrototype%'                                                                                                                                                                                                                                                             :['TypedArray','prototype'], '%TypeErrorPrototype%' :['TypeError','prototype'] ,    '%Uint8ArrayPrototype%'                                              
                                           :['Uint8Array' ,'prototype'] ,'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray' ,'prototype'],'%Uint16ArrayPrototype%':['Uint16Array', 'prototype'] ,'%Uint32ArrayPrototype%':[  'Uint32Array','prototype' ],'%URIErrorPrototype%' :['URIError','prototype'],'%WeakMapPrototype%' :['WeakMap','prototype'],'%WeakSetPrototype%' :['WeakSet','prototype']};var bind = __webpack_require__("../node_modules/function-bind/index.js");var hasOwn =  __webpack_require__("../node_modules/has/src/index.js");var $concat =bind.call( Function.call, Array.prototype.concat);var  $spliceApply =bind.call(Function.apply,Array.prototype. splice);var $replace =bind.call(Function. call,String.prototype.replace);var $strSlice  =bind.call(Function.call,String.prototype.slice);var $exec  = bind.call( Function.  call,RegExp. prototype.exec);var rePropName  =       /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;var  reEscapeChar =/\\(\\)?/g;var stringToPath =function  stringToPath(string)  {var  first =$strSlice(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  string, 0,1);var last =$strSlice(string, -1) ;if (first === '%'&&last !== '%'){        throw       new                                                                                                                                                                                                                                                                         $SyntaxError( 'invalid intrinsic syntax, expected closing `%`' );}else if (last     ==='%'&&first !==                                                                                                                                     '%')     {    throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');}var result =[]     ;$replace(                                                                      string,rePropName, function  (match,number,quote,subString){result[result.length]=quote ?     $replace(  subString,reEscapeChar,                                                                                                                                                                                                                                                                                                                                                        '$1'  ):  number ||match;});return  result;} ;var getBaseIntrinsic  =   function    getBaseIntrinsic(                                                                                                                                                                                                                                                                         name,allowMissing){var intrinsicName = name;var  alias;if (hasOwn(LEGACY_ALIASES,     intrinsicName)){                                                                                                                  alias   = LEGACY_ALIASES[ intrinsicName];intrinsicName ='%'+ alias[ 0]+'%';}   if (hasOwn(INTRINSICS,intrinsicName) ){ var   value =INTRINSICS[intrinsicName];if (value ===needsEval){value =doEval(intrinsicName);}  if  (  typeof value ===  'undefined' &&!allowMissing) { throw   new  $TypeError( 'intrinsic '+name +                                                                                                                                                ' exists, but is not available. Please file an issue!');}return {alias:alias,name:intrinsicName,value:value } ;}throw new   $SyntaxError( 'intrinsic '+name +' does not exist!');};module.exports =function GetIntrinsic(name,allowMissing){if (typeof name !=='string'  ||name.length ===0){ throw new $TypeError('intrinsic name must be a non-empty string');}if (                                                                                                                                             arguments.length >1 &&typeof allowMissing !=='boolean'){ throw new $TypeError(  '"allowMissing" argument must be a boolean'                                                                                                         );}if ($exec(/^%?[^%]*%?$/,name)=== null) {throw  new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');}var parts =stringToPath(name);var intrinsicBaseName =parts.length >0 ?parts[0]:'';var intrinsic =getBaseIntrinsic('%'+intrinsicBaseName + '%',                                                                                                  allowMissing)  ;var intrinsicRealName =intrinsic. name;var  value = intrinsic.       value;var                                                                                                                                                                                                                                                                         skipFurtherCaching  = false;var   alias  =   intrinsic. alias;if     ( alias) {   intrinsicBaseName =                                                   
                                          alias[0];$spliceApply(parts,$concat([0,1],alias));}for (var i =1,isOwn =true;i <parts.length;i += 1){var part =parts[i];var first =$strSlice(part,0,1);var last =$strSlice(part, -1);if ((first ==='"'||first ==="'"||first ==='`'||last ==='"'||last ==="'"||last ==='`')&&first !==last){throw new $SyntaxError('property names with quotes must have matching quotes');}if (part ==='constructor'||!isOwn){skipFurtherCaching =true;}intrinsicBaseName +='.'+part;intrinsicRealName ='%'+intrinsicBaseName +'%';if (hasOwn(INTRINSICS,intrinsicRealName)){value =INTRINSICS[intrinsicRealName];}else  if (value !=null){if (!(part  in value)){if (!allowMissing){throw new $TypeError('base intrinsic for '+name +' exists, but the property is not available.');}return void undefined;}if ($gOPD &&i +1 >=parts.length){var desc =$gOPD(value,part);isOwn =!!          desc;if (isOwn  &&                                                                        'get'in desc  &&! ( 'originalValue'in desc.get)){value =desc.get;}else { value =    value[part];}}else                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           {isOwn =hasOwn(value,part);value =value[part];}if (isOwn &&!skipFurtherCaching)     {      INTRINSICS[                                                                                                                                                                                                                                                                            intrinsicRealName]    =    value;}    }  }        return    value;}   ;}   ,    "../node_modules/has-property-descriptors/index.js"                                                                                                  :    (module,   __unused_webpack_exports,  __webpack_require__)    => {  "use strict"  ;var GetIntrinsic =     __webpack_require__(                                                         "../node_modules/get-intrinsic/index.js"  )     ;var  $defineProperty  =    GetIntrinsic(    '%Object.defineProperty%',true);var                                                                                                                                                                                                                                                                                                                                                        hasPropertyDescriptors =function  hasPropertyDescriptors() {if ($defineProperty){           try       {                                                                                                                                                                                                                                                                        $defineProperty({}  ,'a',{ value:1 }  );return  true;}catch (e) {return false;} }      return  false;}                                                                                                               ;hasPropertyDescriptors. hasArrayLengthDefineBug =function hasArrayLengthDefineBug( ){ if (!hasPropertyDescriptors()){return null;}try   {return $defineProperty([ ],'length', {value:1 }) .length !==1;}catch (e){   return  true;}};module.exports = hasPropertyDescriptors;},"../node_modules/has-symbols/index.js":(module,                                                                                                                                              __unused_webpack_exports,__webpack_require__) =>{"use strict";var origSymbol =typeof  Symbol !=='undefined'&&Symbol;var hasSymbolSham = __webpack_require__("../node_modules/has-symbols/shams.js");module.exports =function hasNativeSymbols(){if (typeof origSymbol !=='function'){return false;}if (typeof Symbol !=='function' ){return false;}if (typeof origSymbol(                                                                                                                                          'foo')!=='symbol') {  return  false;} if (typeof Symbol('bar'  )!=='symbol'){     return   false;}                                                                                                                                 return hasSymbolSham();};},"../node_modules/has-symbols/shams.js":module =>{"use strict";module.exports =function hasSymbols(){if (typeof Symbol !=='function'||typeof Object.getOwnPropertySymbols !=='function'){return false;}if (typeof Symbol.iterator ==='symbol'){return true;}var obj ={};var sym =                                                                                              Symbol('test');var symObj =Object(sym);if (typeof sym ==='string'){return false;}   if (Object.                                                                                                                                                                                                                                                                        prototype. toString.call( sym)!=='[object Symbol]') {return  false;}if  (Object.   prototype. toString.                                                  
                                        call(symObj)!=='[object Symbol]'){return false;}var symVal =42;obj[sym]=symVal;for (sym  in obj){return false;}if (typeof  Object.keys ==='function'&&Object.keys( obj).length !==0){return false;}if (typeof Object.getOwnPropertyNames ==='function'&&Object.getOwnPropertyNames(obj).length !==0){return false;}var syms =Object.getOwnPropertySymbols(obj);if (syms.length !==1 ||syms[0]!==sym){return false;}if (!Object.prototype.propertyIsEnumerable.call(obj,sym)){return false;}if   (typeof Object.getOwnPropertyDescriptor ==='function'){var descriptor =Object.getOwnPropertyDescriptor( obj,sym);if (descriptor.value !==symVal ||descriptor.enumerable  !==true){return false;}}return true;};},"../node_modules/has-tostringtag/shams.js":(module,__unused_webpack_exports,__webpack_require__) =>{"use strict";var hasSymbols =__webpack_require__(       "../node_modules/has-symbols/shams.js"                                                       );module.exports =function hasToStringTagShams(){return hasSymbols()&&!!Symbol.    toStringTag;} ;}node_modules/has/src/index.js"  :  (    module,__unused_webpack_exports,    __webpack_require__) =>                                                                                                                                                                                                                                                                         {          "use strict"      ;var       bind      =    __webpack_require__(    "../node_modules/function-bind/index.js"                                                                                                                 ) ;module.      exports  = bind. call(    Function.    call, Object.  prototype. hasOwnProperty)    ;} ,    "../node_modules/is-arguments/index.js"                                   :(module,__unused_webpack_exports,__webpack_require__) =>{"use strict";var hasToStringTag =                  __webpack_require__(                                                                                                                                                                                                                                                                                                                                                         "../node_modules/has-tostringtag/shams.js")();var callBound =__webpack_require__(   "../node_modules/call-bind/callBound.js"                                                                                                                                                                                                                                                   );var $toString =callBound('Object.prototype.toString');var isStandardArguments =             function                                                                                                             isArguments(value){if (hasToStringTag &&value &&typeof value ==='object'&&Symbol.toStringTag in value){return false;}return $toString(value)==='[object Arguments]';};var isLegacyArguments =function isArguments(value){if (isStandardArguments(value)){return true;}return value !==null &&typeof value ==='object'&&typeof value.                                                                                                                                           length ==='number' &&value.length >=0 &&$toString( value)  !=='[object Array]'&&$toString(value.callee)==='[object Function]' ;};var  supportsStandardArguments  =function  (){ return isStandardArguments(arguments) ;}();isStandardArguments.isLegacyArguments =isLegacyArguments;module.exports =supportsStandardArguments ?  isStandardArguments :isLegacyArguments;},                                                                                                                                        "../node_modules/is-date-object/index.js" : (module, __unused_webpack_exports,  __webpack_require__) =>                                                                                                                              {"use strict" ;var  getDay = Date. prototype.getDay;var tryDateObject  =function tryDateGetDayCall(  value){ try  {getDay.call( value);return  true;}catch  ( e)   { return  false;}} ;var  toStr  =Object. prototype.toString;var dateClass ='[object Date]'  ;var   hasToStringTag   =__webpack_require__(                                                                                                "../node_modules/has-tostringtag/shams.js") ( )  ;module. exports  = function   isDateObject(                                                                                                                                                                                                                                                                     value){if  (typeof  value   !== 'object' ||value  ===null) {    return   false;}   return hasToStringTag ?                                                
                                        tryDateObject(value):toStr.call(value)===dateClass;};},"../node_modules/is-regex/index.js":(module,__unused_webpack_exports,__webpack_require__)  =>{"use strict" ;var callBound =__webpack_require__("../node_modules/call-bind/callBound.js");var hasToStringTag = __webpack_require__("../node_modules/has-tostringtag/shams.js")();var has;var $exec;var isRegexMarker;var badStringifier;if (hasToStringTag){has =callBound('Object.prototype.hasOwnProperty');$exec =callBound('RegExp.prototype.exec');isRegexMarker ={};var throwRegexMarker =function (){throw isRegexMarker;};badStringifier ={toString:throwRegexMarker,valueOf:throwRegexMarker };if (typeof Symbol.toPrimitive ==='symbol' ){badStringifier[Symbol.toPrimitive]=throwRegexMarker;} } var $toString =callBound( 'Object.prototype.toString' );var gOPD =Object.getOwnPropertyDescriptor;var           regexClass     =                                                                       '[object RegExp]';module.exports = hasToStringTag ?function isRegex(value){if (!     value   || typeof                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           value !=='object') {return false;}var  descriptor =gOPD(value,'lastIndex') ;var    hasLastIndexDataProperty                                                                                                                                                                                                                                                                     =descriptor &&   has( descriptor,'value' ) ;if (  ! hasLastIndexDataProperty){    return false;}try {                                                                                                                                     $exec(value,    badStringifier);}catch (e){return  e  ===isRegexMarker;}}:  function isRegex(value){if (!     value                                                                    ||typeof value !=='object'&&typeof value  !=='function'){return false;} return $toString(       value)=== regexClass;}     ;}  ,                                                                                                                                                                                                                                                                                                                                                              "../node_modules/object-assign/index.js"  :  module =>     { "use strict"   ;   /*
object-assign
(c) Sindre Sorhus
@license MIT
*/var                                                                                                                                                                                                                                      getOwnPropertySymbols = Object. getOwnPropertySymbols;var hasOwnProperty =Object.           prototype.                                                                                                          hasOwnProperty;var propIsEnumerable =Object.prototype.propertyIsEnumerable;function toObject(val){if (val ===null ||val ===undefined) {throw new TypeError('Object.assign cannot be called with null or undefined' );}return Object(val);}function shouldUseNative(){try {if (!Object.assign){return false;}var test1 =new String('abc')                                                                                                                                          ;test1[5]='de';if  (Object.getOwnPropertyNames(test1)[0]==='5'){return false;}var test2 ={};for (var i =0;i <10;i++  ) {test2['_'+String.fromCharCode(i)]=i;}var order2  =Object.getOwnPropertyNames(test2).map(function (n){return  test2[n];});if (order2.join('')!=='0123456789'){return false;}var test3 ={};'abcdefghijklmnopqrst'.split('').forEach(function (letter){                                                                                                                                      test3[letter]= letter;});if (Object. keys(Object.assign({},test3)).join('')!==  'abcdefghijklmnopqrst'                                                                                                                              ){return false;}return true;}catch (err){return false;}}module.exports =shouldUseNative()?Object.assign :function (target,source){var from;var to =toObject(target);var symbols;for (var s =1;s <arguments.length;s++ ){from =Object(arguments[s]);for (var key in from){if (hasOwnProperty.call(from,key)){to[                                                                                             key]=from[key];}}if (getOwnPropertySymbols) { symbols  =getOwnPropertySymbols(    from);for (                                                                                                                                                                                                                                                                     var i =0;i <symbols.length;i++ ){if (propIsEnumerable.call(from,symbols[i])){to[    symbols[  i]   ]=from[                                                 
                                        symbols[i]];}}}}return to;};},"../node_modules/object-is/implementation.js":module =>{"use strict";var numberIsNaN =function (value){return value !==value;};module.exports =function is(a,b){if (a ===0 &&b ===0){return 1 /a ===1 /b;}if (a ===b) {return true;}if (numberIsNaN(a)&&numberIsNaN(b) ){return true;}return false;};},"../node_modules/object-is/index.js":(module,__unused_webpack_exports,__webpack_require__) =>{"use strict" ;var define =__webpack_require__("../node_modules/define-properties/index.js");var callBind =__webpack_require__("../node_modules/call-bind/index.js");var implementation =__webpack_require__("../node_modules/object-is/implementation.js");var getPolyfill =__webpack_require__("../node_modules/object-is/polyfill.js");var shim =__webpack_require__("../node_modules/object-is/shim.js");var polyfill  =callBind(           getPolyfill( ) ,                                                                       Object) ;define(polyfill,{getPolyfill:getPolyfill,implementation:implementation,    shim:  shim   }  )                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ;module.exports  =polyfill;} ,"../node_modules/object-is/polyfill.js": (module,    __unused_webpack_exports,                                                                                                                                                                                                                                                                    __webpack_require__) => {"use strict";var implementation =__webpack_require__(    "../node_modules/object-is/implementation.js"                                                                                                               ) ;module.   exports  =function getPolyfill()  { return typeof  Object. is ==='function' ? Object. is :    implementation;}                                                        ;}  ,     "../node_modules/object-is/shim.js"  :  (   module,  __unused_webpack_exports,   __webpack_require__) =>{"use strict"                                                                                                                                                                                                                                                                                                                                                           ;var  getPolyfill   =__webpack_require__("../node_modules/object-is/polyfill.js")     ;var   define  =                                                                                                                                                                                                                                                                         __webpack_require__("../node_modules/define-properties/index.js");module.exports =            function                                                                                                         shimObjectIs(){var polyfill =getPolyfill();define(Object,{is:polyfill },{is:function testObjectIs(){return Object.is !== polyfill;}});return polyfill;} ;},"../node_modules/object-keys/implementation.js":(module,__unused_webpack_exports,__webpack_require__) =>{"use strict";var  keysShim;if (!Object.keys){var has =Object.prototype.                                                                                                                                        hasOwnProperty;var toStr =Object.prototype.toString;var isArgs =__webpack_require__("../node_modules/object-keys/isArguments.js");var isEnumerable =Object.prototype.propertyIsEnumerable;var hasDontEnumBug =! isEnumerable.call({toString:null },'toString');var hasProtoEnumBug =isEnumerable.call(function (){}, 'prototype');var dontEnums =['toString','toLocaleString',                                                                                                                                       'valueOf',  'hasOwnProperty'   ,'isPrototypeOf',  'propertyIsEnumerable'  ,  'constructor'] ;var                                                                                                                                 equalsConstructorPrototype =function  (o){var ctor   =o.constructor;return ctor &&ctor.prototype ===o;};var excludedKeys ={$applicationCache:true, $console:true,$external:true,$frame:true,$frameElement:true,$frames:true,$innerHeight:true,$innerWidth:true,$onmozfullscreenchange:true,$onmozfullscreenerror:                                                                                           true, $outerHeight: true,$outerWidth:true,$pageXOffset: true, $pageYOffset:true,      $parent:                                                                                                                                                                                                                                                                    true, $scrollLeft:true,$scrollTop:true, $scrollX:true, $scrollY:true,$self:true,  $webkitIndexedDB:  true,                                                 
                                        $webkitStorageInfo:true,$window:true };var hasAutomationEqualityBug =function (){if (typeof window ==='undefined'){return false;}for (var k in window){try {if (!excludedKeys['$'+k]&&has.call(window,k)&&window[k]!==null &&typeof window[k]==='object'){try {equalsConstructorPrototype(window[k]);}catch (e){return true;}}}catch (e){return true;}}return false;}();var equalsConstructorPrototypeIfNotBuggy =function (o){if (typeof window ==='undefined'||!hasAutomationEqualityBug){return equalsConstructorPrototype(o);}try {return equalsConstructorPrototype(o);}catch (e){return false;}};keysShim =function keys(object){var isObject =object !==null &&typeof object ==='object';var isFunction =toStr.call(object)==='[object Function]';var isArguments =isArgs(object);var isString =isObject &&toStr.call(object)==='[object String]';var theKeys =[        ] ;if (!isObject &&!                                                                        isFunction       &&    !    isArguments)  {    throw       new      TypeError(    'Object.keys called on a non-object'                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         );}var skipProto = hasProtoEnumBug &&isFunction;if (isString &&object.length >0    &&!has.call(object,                                                                                                                                                                                                                                                                         0)  ) { for (var i =0; i <object.length; ++i){theKeys.push(String(i));}} if   (    isArguments     &&                                                                                                                                             object.    length >0){for (var j =0;j <object.length; ++j){theKeys.push( String(j));}} else {for (var    name                                                                in object){if (!(skipProto && name ==='prototype')&&has.call(object,name)) { theKeys.push(     String(   name)    );}}  } if   (                                                                                                                                                                                                                                                                                                                                                             hasDontEnumBug){var skipConstructor =equalsConstructorPrototypeIfNotBuggy(object)   ;for (var k =0;k <                                                                                                                                                                                                                                                                         dontEnums.length; ++k){if (!(skipConstructor && dontEnums[ k] ==='constructor')&&    has.call( object,                                                                                                       dontEnums[k])){theKeys.push(dontEnums[k] );}}}return  theKeys;};}module.exports  =keysShim;},"../node_modules/object-keys/index.js":(module,__unused_webpack_exports,__webpack_require__) =>{"use strict";var slice = Array.prototype.slice;var isArgs =__webpack_require__("../node_modules/object-keys/isArguments.js");var origKeys =Object.                                                                                                                                      keys;var keysShim =origKeys ?function  keys(o){return origKeys( o);}  :__webpack_require__("../node_modules/object-keys/implementation.js");var originalKeys =  Object.keys;keysShim.shim =function shimObjectKeys(){if  (Object.keys){var keysWorksWithArguments =function (){var args =Object. keys(arguments) ;return args &&args.length === arguments.length;}(1, 2);if  ( !                                                                                                                                  keysWorksWithArguments){Object.keys =function keys(object){if (isArgs(object))                    {                                                                                                                                 return originalKeys( slice.call(object));}return originalKeys(object);};}}else {Object.keys =keysShim;}return Object.keys ||keysShim;};module. exports =keysShim;},"../node_modules/object-keys/isArguments.js":module =>{"use strict";var toStr  =Object.prototype.toString;module.exports =function isArguments(                                                                                          value){var str =toStr.call(value);var isArgs =str === '[object Arguments]';if (!      isArgs) {                                                                                                                                                                                                                                                                  isArgs =  str !== '[object Array]'&&value !==null  && typeof value ==='object'&&   typeof value. length  ===                                                
                                      'number'&&value.length >=0 &&toStr.call(value.callee)==='[object Function]';}return  isArgs;};},"../node_modules/point-in-polygon/flat.js":module =>{module.exports =function pointInPolygonFlat(point,vs,start,end){var x =point[0],y =point[1];var inside =false;if (start ===undefined)start =0;if (end ===undefined)end =vs.length;var len =(end -start)/2;for (var i =0,j =len -1;i <len;j =i++ ){var xi =vs[start +i *2 +0],yi =vs[start +i *2 +1];var xj  =vs[start +j *2  +0],yj =vs[start +j *2 +1];var intersect =yi >y !==yj >y &&x <(xj -xi)*(y -yi) /(yj -yi)+xi;if (intersect)inside =!inside;}return inside;};},"../node_modules/point-in-polygon/index.js":(module,__unused_webpack_exports,__webpack_require__) =>{var pointInPolygonFlat =__webpack_require__("../node_modules/point-in-polygon/flat.js");var pointInPolygonNested =__webpack_require__(       "../node_modules/point-in-polygon/nested.js"                                              );module.exports =function pointInPolygon(point,vs,start,end){if (vs.length >0 &&   Array.isArray( vs{  return  pointInPolygonNested(   point, vs,start, end);}  else   {    return pointInPolygonFlat(                                                                                                                                                                                                                                                                  point,vs, start, end);}};module.exports.nested  =  pointInPolygonNested;module.     exports.  flat  =                                                                                                                                          pointInPolygonFlat;} ,"../node_modules/point-in-polygon/nested.js":   module =>  {   module. exports =function pointInPolygonNested(                                           point,vs,start,end){var x =point[0],y =point[1];var inside =false;if (start ===undefined)    start =0;if (end ===undefined)end =                                                                                                                                                                                                                                                                                                                                                              vs.length;var len =end -start;for (var i =0,j =len -1;i <len;j =i++ ){var xi =vs[   i  +start][0] ,yi =                                                                                                                                                                                                                                                                        vs[i +start][1];var  xj =vs[j +start][0],yj =vs[j +start][1];var intersect =yi >y   !==yj >y &&x <(xj -                                                                                                     xi)*(y -yi)/(yj -yi)+xi;if (intersect)inside =!inside;}return inside;};},"../node_modules/polygon-clipping/dist/polygon-clipping.umd.js":function (module){(function (global,factory){true ?module.exports =factory():0;})(this, function (){'use strict';function _classCallCheck(instance,Constructor){if (!(instance instanceof Constructor)){                                                                                                                                      throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for (var i  =0;i <props.length;i++  ) {var descriptor =props[ i];descriptor.enumerable =descriptor.enumerable ||false;descriptor. configurable =true;if ( "value"in descriptor) descriptor.writable =true;Object.defineProperty(target,descriptor.key,descriptor);}}function                                                                                                                                    _createClass(  Constructor,  protoProps,staticProps) {    if (  protoProps)   _defineProperties(                                                                                                                                 Constructor.prototype,protoProps);if (staticProps)_defineProperties(Constructor,staticProps);return Constructor;}/**
   * splaytree v3.1.0
   * Fast Splay tree for Node and browser
   *
   * @author Alexander Milevski <info@w8r.name>
   * @license MIT
   * @preserve
   */var Node =function (){function Node(                                                                                         key,data) {this.next =null;this.key =key;this.data =data;this.left = null;this.      right   =                                                                                                                                                                                                                                                                  null;}return Node;}();function DEFAULT_COMPARE(a,b){return a >b ?1 :a <b ? -1 :     0;} function  splay(i,t,                                                
                                      comparator){var N =new Node(null,null);var l =N;var r =N;while (true){var cmp =comparator(i,t.key);if (cmp  <0){ if (t.left ===null)break ;if (comparator(i,t.left. key)<0){var y =t.left;t.left =y.right;y.right = t;t =y;if (t.left === null)break ;}r.left =t;r =t;t =t.left;}else if (cmp >0){if (t.right ===null)break ;if (comparator(i,t.right.key)>0){var y =t.right;t.right = y.left;y.left =t;t =y;if  (t.right ===null)break ;}l.right =t;l =t;t =t.right;}else break ;}l.right =t.left;r.left =t.right;t.left =N.right;t.right =N.left;return t;}function insert(i,data,t,comparator){ var node =new Node(i,data);if (t ===null){node.left =node.right =null;return node;}t  =splay(i,t,comparator);var  cmp =comparator(i,t.key);if (cmp <0){node.left =t. left;node.right =t;t.left =null;}else if (cmp >=0){node.right =t.right;node.left =t;t.right =null;}       return node;}function                                                                    split(key,v, comparator){var left   =null;var right =null;if (v){v =splay(key,v,    comparator);var cmp                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          =comparator(v.key,key);if (cmp ===0){left =v.left;right =v.right;}else if (cmp <   0) {    right =  v.                                                                                                                                                                                                                                                                         right;v.right =null;left  =v;}else  {left =v.left;v. left  =null;right = v;}  }    return {left:left,                                                                                                                                          right:right }    ;} function merge(left,right,comparator){if (right === null)return left;if (left ===null)    return right;right                                               =splay(left.key,right,comparator) ;right.left =left;return right;}function printRow(root,   prefix,isTail,out,printNode) {if  (                                                                                                                                                                                                                                                                                                                                                               root){out(""+prefix + (isTail ? '└── ':'├── ')+printNode(root)+"\n");var indent =   prefix +(  isTail ?                                                                                                                                                                                                                                                                        '    ':'│   ');if (root.left)printRow(root.left,indent,false, out,printNode);if (          root. right)                                                                                                   printRow(root.right,indent,true,out,printNode);}} var Tree =function (){function Tree(comparator){if (comparator ===void 0){comparator =DEFAULT_COMPARE;}this._root =null;this._size =0;this._comparator =comparator;}Tree.prototype.insert =function  (key,data){this._size++ ;return  this._root =insert(key,data, this._root,this._comparator) ;}                                                                                                                                    ;Tree.prototype.add =function (key,data){var node =new Node(key,data);if (this._root ===null){node.left =node.right =null;this._size++ ;this._root =node;}var comparator =this._comparator;var t =splay(key,this._root,comparator);var cmp =comparator(key,t.key);if (cmp ===0)this._root =t;else {if (cmp <0){node.left =t.left;node.right =t;t.left =null;}else if (cmp >0){node.                                                                                                                               right =t.right;node. left = t;t.right =null;}this._size++ ;this. _root =node;}  return this._root;}                                                                                                                                 ;Tree.prototype.remove =function (key){this._root =this._remove(key,this._root,this._comparator);};Tree.prototype._remove = function (i,t,comparator){var x;if (t ===null)return null;t =splay(i, t,comparator);var cmp =comparator(i, t.key);if (cmp ===0){if (t.left === null){x =t.right;}else {x =splay(i,t.left,                                                                                  comparator)  ;x.right  =  t.right;}this._size-- ;return x;} return t;};Tree. prototype.pop = function (){                                                                                                                                                                                                                                                            var  node =this._root;if (node){while  (node.left){node =node.left;}this._root =    splay(node.  key,  this.                                                 
                                      _root,this._comparator);this._root =this._remove(node.key,this._root,this._comparator);return {key:node.key,data:node.data };}return null;};Tree.prototype.findStatic =function (key){var current =this._root;var compare =this._comparator;while (current){var cmp =compare(key,current.key);if (cmp ===0)return current;else if (cmp <0)current =current.left;else current = current.right;}return null;};Tree.prototype.find =function (key){if (this._root){this._root =splay(key,this._root,this._comparator);if (this._comparator(key,this._root.key)!==0)return null;}return this._root;};Tree.prototype.contains =function (key){var current =this._root;var compare =this._comparator;while (current){var cmp =compare(key,current.key);if (cmp ===0)return true;else if (cmp <0)current =current.left;else current =current.right;}return false;};Tree.prototype.        forEach =function  (                                                                    visitor,ctx){var current =this._root;var Q =[];var done =false;while (!done){if (   current !== null){                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Q.push(current);current =current.left;}else {if (Q.length !==0){current =Q.pop(    );visitor.call(ctx,                                                                                                                                                                                                                                                                          current) ;current  = current. right;}else  done  =true;} }return this;} ;Tree.    prototype. range =                                                                                                                                              function (    low,high,fn, ctx) {var  Q =[];var compare   =this._comparator;var node =  this. _root;var     cmp;while                                                     (Q.length !==0 ||node){if (node){Q.push(node);node =node.left;}else {node =Q.pop();cmp =    compare(node.key,high);if (cmp >0){                                                                                                                                                                                                                                                                                                                                                                break ;}else  if (compare( node.key,low)>=0){if (fn.call(ctx,node) )return this;}   node =node.right;}}                                                                                                                                                                                                                                                                        return this;};Tree.prototype.keys =function (){var keys =[];this.forEach(function   (_a) {var key =_a.                                                                                                    key;return keys.push(key);});return keys;};Tree.prototype.values =function (){var values =[];this.forEach(function (_a){var data =_a.data;return values.push(data);});return  values;};Tree.prototype.min =function (){if (this._root)return this.minNode(this._root).key;return null;};Tree.prototype.max  =function  (){if (this._root) return this.                                                                                                                                  maxNode(this._root).key;return null;};Tree.prototype.minNode =function (t){if (t ===void 0){t =this._root;}if (t)while (t.left){t =t.left;}return t;};Tree.prototype.maxNode =function (t){if (t ===void 0){t =this._root;}if (t)while (t.right){t =t.right;}return t;};Tree.prototype.at =function (index){var current =this._root;var done =false;var i =0;var Q =[];while (!done)                                                                                                                              {if (current){Q.push(current);current =current. left;}else {if (Q.length  >0){  current =Q.pop();if                                                                                                                                 (i ===index)return current;i++ ;current =current.right;}else done =true;}} return null;} ;Tree.prototype.next =function (d){var root =this._root;var successor =null;if (d.right){successor =d.right;while (successor.left){successor =successor.left;}return successor;}var comparator =this._comparator;while (root){                                                                                var    cmp =comparator(d.key,root.key);if (cmp ===0)break ;else if (cmp <0){successor =   root;root =                                                                                                                                                                                                                                                               root.left;} else root =root. right;}return successor;} ;Tree.prototype.  prev  =   function ( d){ var  root =                                                 
                                      this._root;var predecessor =null;if (d.left !==null){predecessor =d.left;while (predecessor.right){predecessor =predecessor.right;}return predecessor;}var comparator =this._comparator;while (root){var cmp =comparator(d.key,root.key);if (cmp ===0)break ;else if (cmp <0)root =root.left;else {predecessor =root;root =root.right;}}return predecessor;};Tree.prototype.clear =function (){this._root =null;this._size =0;return this;};Tree.prototype.toList =function (){return toList(this._root);};Tree.prototype.load =function (keys,values,presort){if (values ===void 0){values =[];}if (presort ===void 0){presort =false;}var size =keys.length;var comparator =this._comparator;if (presort)sort(keys,values,0,size -1,comparator);if (this._root ===null){this._root =loadRecursive(keys,values,0,size);this._size =size;}else {var mergedList =mergeLists(          this.  toList( ) ,                                                                     createList(keys,values)  ,  comparator);size =this.  _size +size;this. _root  =     sortedListToBST({                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           head:mergedList },0,size);}return this;};Tree.prototype.isEmpty  =function () {    return this.  _root                                                                                                                                                                                                                                                                         ===null;} ;Object. defineProperty(Tree.prototype, "size" ,{get:function  get(){       return    this.                                                                                                                                              _size;}   ,    enumerable:true,configurable:true } );Object.defineProperty(Tree.prototype,  "root",{get:     function                                                   get(){return this._root;},enumerable:true,configurable:true });Tree.prototype.toString =     function (printNode){if (printNode                                                                                                                                                                                                                                                                                                                                                                  ===void 0){printNode = function printNode(n){return String(n.key);};}var  out =[]     ;printRow(  this.                                                                                                                                                                                                                                                                        _root, '',true,function (v){return out.push(v);},printNode);return out.join('');}    ;Tree. prototype.                                                                                                  update =function (key,newKey,newData){var comparator =this._comparator;var _a =split(key,this._root,comparator),left =_a.left,right  =_a. right;if (comparator(key,newKey)<0){right =insert(newKey,newData,right,comparator);}else  { left =insert(newKey,newData,left,comparator) ;}this._root =merge(left,right, comparator);};Tree.prototype.split  =                                                                                                                                  function (key){return split(key,this._root,this._comparator);};return Tree;} ();function loadRecursive(keys,values,start,end){var size =end -start;if (size >0){var middle =start +Math.floor(size /2);var key =keys[middle];var data =values[middle];var node =new Node(key,data);node.left =loadRecursive(keys,values,start,middle);node.right =loadRecursive(keys,values,middle +                                                                                                                              1,end);return node;}return null;}function createList( keys, values){var head =  new Node(null,null)                                                                                                                                 ;var p =head;for (var i =0;i <keys.length;i++ ){p =p.next =new Node(keys[i],values[i]);}p.next =null;return head.next;}function toList(root){var current =root;var Q =[];var done =false;var head =new Node(null,null);var p =head;while (!done){if (current){Q.push(current);current =current.left;}else {if (Q.length                                                                                >0)     {current =p =p.next =Q.pop();current =current.right;}else done =true;}}p.next =   null;return head.                                                                                                                                                                                                                                                         next;}function sortedListToBST(list,start, end){var size =end -start;if (size >    0) {var middle = start   +                                                 
                                     Math.floor(size /2);var left =sortedListToBST(list,start,middle);var root =list.head;root.left =left;list.head =list.head.next;root.right =sortedListToBST(list,middle +1,end);return root;}return null;}function mergeLists(l1,l2,compare){var head =new Node(null,null);var p =head;var p1 =l1;var p2 =l2;while (p1 !==null &&p2 !==null){if (compare(p1.key,p2.key)<0){p.next =p1;p1 =p1.next;}else {p.next = p2;p2 =p2.next;}p =p.next;}if (p1 !==null){p.next =p1;}else if (p2 !==null){p.next =p2;}return head.next;}function sort(keys,values,left,right,compare){if (left >=right)return ;var pivot =keys[left +right >>1];var i =left -1;var j =right +1;while (true){do {i++ ;}while (compare(keys[i],pivot)<0);do {j-- ;}while (compare(keys[j],pivot)>0);if (i >=j)break ;var tmp =keys[i];keys[i]=keys[j];keys[j]=tmp;tmp =values[i];values[i]=values[j];values[       j] =tmp;} sort(keys,                                                                    values,left, j,compare);sort(keys,values,  j +1,right,compare);}var isInBbox   =     function isInBbox(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           bbox,point){return  bbox.ll.x <=point.x &&point.x <=bbox.ur.x  &&bbox.ll.y  <=    point.y &&point.y <=                                                                                                                                                                                                                                                                        bbox.ur.y;};var getBboxOverlap =function getBboxOverlap(b1,b2){if (b2.ur.x <b1.    ll.x ||b1.ur.x   <                                                                                                                                               b2. ll.x ||    b2.ur.y <b1.ll.y ||b1.ur.y <b2.ll.y)return null;var lowerX   =b1.ll.x <b2.ll.x ?b2.ll.x :      b1.                                                     ll.x;var upperX =b1.ur.x <b2.ur.x ?b1.ur.x :b2.ur.x;var lowerY =b1.ll.y <b2.ll.y ?b2.ll.y    :b1.ll.y;var upperY =b1. ur.y <b2.                                                                                                                                                                                                                                                                                                                                                                   ur.y ?b1.ur.y :b2.ur.y;return {ll:{x:lowerX,y:lowerY },ur:{x:upperX,y:upperY }};}    ;var  epsilon    =                                                                                                                                                                                                                                                                        Number.EPSILON;if (epsilon ===undefined)epsilon =Math.pow(2, -52);var EPSILON_SQ =       epsilon     *                                                                                                epsilon;var cmp =function cmp( a,b){if ( -epsilon <a &&a <epsilon){if ( -epsilon <b &&b <epsilon){return 0;}}var ab =a -b;if (ab *ab <EPSILON_SQ *a *b){return 0;}return a <b ? - 1 :1;};var PtRounder =function  (){function PtRounder(){_classCallCheck(this,PtRounder);this. reset();}_createClass(PtRounder,[{key:"reset",value:function reset(){  this.                                                                                                                                xRounder  =new CoordRounder();this.yRounder =new CoordRounder();}},{key:"round" ,value:function round(x,y) { return {x:this.xRounder.round(x),y:this.yRounder.round(y)};}}]);return PtRounder;}();var CoordRounder =function (){function CoordRounder(){_classCallCheck(this,CoordRounder);this.tree =new Tree();this.round(0);}_createClass(CoordRounder,[{key:"round",value:function                                                                                                                            round(coord){var node =this.tree.add(coord);var prevNode =this.tree.prev(node)   ;if (prevNode  !==                                                                                                                                 null &&cmp(node.key,prevNode.key)===0){this.tree.remove(coord);return prevNode.key;}var nextNode = this.tree.next(node) ;if (nextNode !==null &&cmp(node.key,nextNode. key)===0){this.tree.remove( coord);return nextNode.key;}return coord;}}]);return CoordRounder;}();var rounder =new PtRounder();var  crossProduct =                                                                               function  crossProduct( a, b){ return  a.x  *b.   y -a.y *b.x;};var dotProduct = function dotProduct(                                                                                                                                                                                                                                                               a,b) {return  a.x * b. x + a.  y *b. y;};var compareVectorAngles  =   function   compareVectorAngles(basePt,                                                 
                                    endPt1,endPt2){var v1 ={x:endPt1.x -basePt.x,y:endPt1.y -basePt.y };var v2 ={x:endPt2.x -basePt.x,y:endPt2.y -basePt.y };var kross =crossProduct(v1,v2);return cmp(kross,0);};var length =function length(v){return Math.sqrt(dotProduct(v,v));};var sineOfAngle =function sineOfAngle(pShared,pBase,pAngle){var vBase ={x:pBase.x -pShared.x,y:pBase.y -pShared.y };var vAngle ={x:pAngle.x -pShared.x,y:pAngle.y -pShared.y };return crossProduct(vAngle,vBase)/length(vAngle)/length(vBase);};var cosineOfAngle =function cosineOfAngle(pShared,pBase,pAngle){var vBase ={x:pBase.x -pShared.x,y:pBase.y -pShared.y };var vAngle ={x:pAngle.x -pShared.x,y:pAngle.y -pShared.y };return dotProduct(vAngle,vBase)/length(vAngle)/length(vBase);};var horizontalIntersection =function horizontalIntersection(pt,v,y){if (v.y ===0)return null;return {x:pt.x +v.x /v.y *(y -       pt. y),y:y };}   ;var                                                                   verticalIntersection  =function verticalIntersection(pt,v,x){if   (v. x   === 0)    return null;return {                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         x:x,y:pt.y +v.y /v.x *(x -pt.x)};};var intersection =function intersection(pt1,    v1,pt2,v2){if (v1.x                                                                                                                                                                                                                                                                          ===0)  return verticalIntersection(   pt2,  v2,pt1.x);if  (    v2.  x  ===  0)    return verticalIntersection(                                                                                                                                     pt1,v1, pt2.     x);if (   v1.  y ===  0)return  horizontalIntersection(pt2, v2,pt1.y)  ;if (v2.y  === 0)     return horizontalIntersection(                         pt1,v1,pt2.y);var kross =crossProduct(v1,v2);if (kross ==0)return null;var ve ={x:pt2.x -     pt1.x,y:pt2.  y -pt1.y };var d1 =                                                                                                                                                                                                                                                                                                                                                                    crossProduct(ve, v1)/kross;var  d2 =crossProduct(ve,v2)/kross;var x1 =pt1.x +d2 *   v1.x,x2 =pt2.x +d1 *                                                                                                                                                                                                                                                                       v2.x;var y1  =pt1.y +d2 *v1.y,y2 =pt2.y +d1 *v2.y;var x =(x1  +x2)/2;var y =(y1 +   y2)/ 2;return {x:x,                                                                                              y:y };};var SweepEvent =function  (){_createClass(SweepEvent,null,[{key:"compare",value:function compare(a,b){var ptCmp =SweepEvent.comparePoints(a.point, b.point);if (ptCmp !==0)return ptCmp;if (a.point !==b.point)a.link(b);if (a.isLeft !==b.isLeft)return a. isLeft ?1 : -1;return Segment.compare(a. segment,b.segment);}}, {key:"comparePoints",value:                                                                                                                              function comparePoints(aPt,bPt){if (aPt.x <bPt.x) return ( -1);if (aPt.x >bPt.x)return 1;if (aPt.y <bPt.y)return ( -1);if (aPt.y >bPt.y)return 1;return 0;}}]);function SweepEvent(point,isLeft){_classCallCheck(this,SweepEvent);if (point.events ===undefined)point.events =[this];else point.events.push(this);this.point  =point;this.isLeft =isLeft;}_createClass(SweepEvent,[{key:                                                                                                                          "link", value:function link( other){ if (other.point ===this.point){throw  new               Error(                                                                                                                                 'Tried to link already linked events');}var otherEvents =other.point.events;for (var i =0,iMax =otherEvents.length;i <iMax;i++ ){var evt =otherEvents[i];this.point.events.push(evt);evt.point =this.point;}this.checkForConsuming();} },{key:"checkForConsuming",value: function checkForConsuming(){var numEvents  =this.                                                                             point.  events.length;for (var i =0;i <numEvents;i++ ){var evt1 =this.point.events[i];if   (     evt1.                                                                                                                                                                                                                                                           segment.consumedBy !==undefined)continue ;for (var j  =i +1; j <numEvents;j++ ){     var   evt2  =this. point.                                                  
                                    events[j];if (evt2.consumedBy !==undefined)continue ;if (evt1.otherSE.point.events !==evt2.otherSE.point.events)continue ;evt1.segment.consume(evt2.segment);}}}},{key:"getAvailableLinkedEvents",value:function getAvailableLinkedEvents(){var events =[];for (var i =0,iMax =this.point.events.length;i <iMax;i++ ){var evt =this.point.events[i];if (evt !==this &&!evt.segment.ringOut &&evt.segment.isInResult()){events.push(evt);}}return events;}},{key:"getLeftmostComparator",value:function getLeftmostComparator(baseEvent){var _this =this;var cache =new Map();var fillCache =function fillCache(linkedEvent){var nextEvent =linkedEvent.otherSE;cache.set(linkedEvent,{sine:sineOfAngle(_this.point,baseEvent.point,nextEvent.point),cosine:cosineOfAngle(_this.point,baseEvent.point,nextEvent.point)});};return function (a,b){if (!cache.has(a))fillCache(a)        ;if  (! cache.has(b))                                                                    fillCache( b);var _cache$get =cache. get(a), asine =_cache$get.sine, acosine =           _cache$get.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           cosine;var _cache$get2 =  cache.get(b) , bsine  = _cache$get2.sine,  bcosine  =           _cache$get2.                                                                                                                                                                                                                                                                         cosine;if (asine >=0 &&bsine >=0){if (acosine <bcosine)return 1;if  ( acosine >    bcosine)return ( -                                                                                                                                                1);return 0;}   if (asine   <  0 &&bsine  <0){ if ( acosine <bcosine) return (  -1);if  (acosine >bcosine)    return 1;return 0;}                                  if  (    bsine   < asine)return  ( -1);if  (bsine > asine)  return   1;return 0;};}   }])   ;return SweepEvent;}();var segmentId                                                                                                                                                                                                                                                                                                                                                                    = 0;var Segment  = function  (){_createClass(Segment,null,[{key:"compare", value:   function compare(a,                                                                                                                                                                                                                                                                        b){var alx =a.leftSE.point.x;var blx =b.leftSE.point.x;var arx =a. rightSE.point.      x;var   brx  =b.                                                                                            rightSE.point.x;if (brx <alx)return 1;if (arx <blx)return ( -1);var aly =a.leftSE.point.y;var bly =b.leftSE.point.y;var ary  =a.rightSE.point.y;var bry =b.rightSE.point.y;if (alx <blx){if (bly <aly &&bly <ary)return 1;if (bly >aly &&bly >ary)return ( -1);var aCmpBLeft =a.comparePoint(b.leftSE.point);if (aCmpBLeft <0)return 1;if (aCmpBLeft >0)return ( -                                                                                                                             1);var bCmpARight =b.comparePoint(a.rightSE.point) ;if (bCmpARight  !==0)return bCmpARight;return ( -1);}if (alx >blx){if (aly <bly &&aly <bry)return ( -1);if (aly >bly &&aly >bry)return 1;var bCmpALeft =b.comparePoint(a.leftSE.point);if (bCmpALeft !==0)return bCmpALeft;var aCmpBRight =a.comparePoint(b.rightSE.point);if (aCmpBRight <0)return 1;if (aCmpBRight >0) return ( -1)                                                                                                                         ;return 1;}if (aly <bly)return  ( -1);if (aly >bly)return 1;if (arx  <brx){var    _bCmpARight  = b.                                                                                                                                 comparePoint(a.rightSE.point);if (_bCmpARight !==0)return _bCmpARight;}if (arx >brx){var _aCmpBRight =a.comparePoint(b.rightSE.point);if (_aCmpBRight <0)return 1;if (_aCmpBRight >0)return ( -1);}if (arx !==brx){var ay =ary -aly;var ax =arx -alx;var by =bry -bly;var bx =brx -blx;if (ay >ax &&by <bx)return 1;if (ay <                                                                              ax    &&by >bx)return ( -1);}if (arx >brx)return 1;if (arx <brx)return ( -1);if (ary <          bry)                                                                                                                                                                                                                                                           return ( -1);if (ary >bry)return 1;if (a.id < b.id)return ( -1);if (a.id >b.id)    return 1;return 0;} } ]  )                                                   
                                    ;function Segment(leftSE,rightSE,rings,windings){_classCallCheck(this,Segment);this.id = ++segmentId;this.leftSE =leftSE;leftSE.segment =this;leftSE.otherSE =rightSE;this.rightSE =rightSE;rightSE.segment =this;rightSE.otherSE =leftSE;this.rings =rings;this.windings =windings;}_createClass(Segment,[{key:"replaceRightSE",value:function replaceRightSE(newRightSE){this.rightSE =newRightSE;this.rightSE.segment =this;this.rightSE.otherSE =this.leftSE;this.leftSE.otherSE =this.rightSE;}},{key:"bbox",value:function bbox(){var y1 =this.leftSE.point.y;var y2 =this.rightSE.point.y;return {ll:{x:this.leftSE.point.x,y:y1 <y2 ?y1 :y2 },ur:{x:this.rightSE.point.x,y:y1 >y2 ?y1 :y2 }};}},{key:"vector",value: function vector(){return {x:this.rightSE.point.x -this.leftSE.point.x,y:this.rightSE.point.y -this.leftSE.point.y } ;}},{key:"isAnEndpoint",value:       function isAnEndpoint(                                                                 pt){return pt.x ===this.leftSE.point.x &&pt.y ===this.leftSE.point.y ||pt.x  ===        this. rightSE.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           point.x &&pt.y  === this.rightSE. point.y;}},{key:"comparePoint",value:function    comparePoint(point)                                                                                                                                                                                                                                                                         { if ( this.isAnEndpoint(point))return  0;var lPt =this.leftSE. point;var rPt =       this.  rightSE.                                                                                                                                                 point;var v =    this.vector();if (lPt.x ===rPt.x){if (point.x ===lPt.x)return 0;return point.x <lPt.x ?1     :  -                                               1;}var yDist =(point. y -lPt.y)/v.y;var xFromYDist =lPt. x +yDist *v. x;if  (point. x ===    xFromYDist)return 0;var  xDist  =(                                                                                                                                                                                                                                                                                                                                                                      point.x -lPt.x)/v.x;var yFromXDist =lPt. y +xDist *v.y;if (point.y ===yFromXDist)   return 0;return point.                                                                                                                                                                                                                                                                     y <yFromXDist ? -1 :1;}},{ key:"getIntersection",value: function getIntersection(   other){var tBbox =                                                                                              this.bbox( );var oBbox =other.bbox();var bboxOverlap =getBboxOverlap(tBbox,oBbox);if (bboxOverlap ===null) return null;var tlp = this.leftSE.point;var  trp =this.rightSE.point;var olp  =other. leftSE.point;var  orp =other.rightSE.point;var touchesOtherLSE =isInBbox(tBbox,olp)&&this.comparePoint(olp) === 0;var touchesThisLSE =isInBbox(oBbox,tlp)&&other.                                                                                                                            comparePoint(tlp)===0;var touchesOtherRSE =isInBbox(tBbox,orp)&&this.comparePoint(orp)===0;var touchesThisRSE =isInBbox(oBbox,trp)&&other.comparePoint(trp)===0;if (touchesThisLSE &&touchesOtherLSE){if (touchesThisRSE &&!touchesOtherRSE)return trp;if (!touchesThisRSE &&touchesOtherRSE)return orp;return null;}if (touchesThisLSE) {if (touchesOtherRSE){if (tlp.x  ===orp.x &&tlp.y                                                                                                                        ===orp.y)return null;}return tlp;}if (touchesOtherLSE){if (touchesThisRSE){if ( trp.x === olp.x  &&                                                                                                                                 trp.y ===olp.y)return null;}return olp;}if (touchesThisRSE &&touchesOtherRSE)return null;if (touchesThisRSE)return trp;if (touchesOtherRSE)return orp;var pt =intersection(tlp,this.vector(),olp,other.vector());if (pt ===null)return null;if (! isInBbox(bboxOverlap,pt)) return  null;return rounder.round(pt.x,pt.y);}},{                                                                            key:   "split",value:function split(point){var newEvents =[ ];var alreadyLinked =point.     events !==                                                                                                                                                                                                                                                           undefined;var newLeftSE  = new   SweepEvent( point, true);var newRightSE  =new   SweepEvent(point,false);var                                                   
                                   oldRightSE =this.rightSE;this.replaceRightSE(newRightSE);newEvents.push(newRightSE);newEvents.push(newLeftSE) ;var newSeg =new Segment(newLeftSE,oldRightSE,this.rings.slice(),this.windings.slice());if (SweepEvent.comparePoints(newSeg.leftSE.point,newSeg.rightSE.point)>0){newSeg.swapEvents();}if (SweepEvent.comparePoints(this.leftSE.point,this.rightSE.point)>0) {this.swapEvents();}if (alreadyLinked){newLeftSE.checkForConsuming();newRightSE.checkForConsuming();}return newEvents;}},{key:"swapEvents",value:function swapEvents(){var tmpEvt =this.rightSE;this.rightSE =this.leftSE;this.leftSE =tmpEvt;this.leftSE. isLeft =true;this.rightSE.isLeft =false;for (var i =0,iMax =this.windings.length;i <iMax;i++ ) {this.windings[i]*= -1;}}},{ key:"consume",value:function consume(other){var consumer =this;var consumee =other;while (consumer.consumedBy){        consumer  =consumer.                                                                 consumedBy;}while (consumee.consumedBy){consumee =consumee.consumedBy;}var cmp =      Segment.compare(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           consumer,consumee);if (cmp ===0)return ;if (cmp >0){var tmp =consumer;consumer =   consumee;consumee =                                                                                                                                                                                                                                                                            tmp;} if (  consumer. prev   ===consumee)  { var  _tmp =consumer;consumer  =    consumee;consumee =                                                                                                                                                 _tmp;}for   (   var i =0,iMax =consumee.rings.length;i <iMax;i++ ){var ring =consumee.rings[i];var winding       =                                            consumee.windings[i];var index =consumer. rings.indexOf(ring) ;if (index === -1){consumer.   rings.push(ring);consumer.windings.                                                                                                                                                                                                                                                                                                                                                                       push(  winding) ;}else  consumer.windings[index] +=     winding;}consumee.rings =        null;consumee.                                                                                                                                                                                                                                                                          windings =null;consumee.consumedBy   =consumer;consumee.  leftSE.  consumedBy =            consumer.                                                                                           leftSE;consumee.rightSE.consumedBy =consumer.rightSE;}},{key:"prevInResult",value: function prevInResult(){if (this._prevInResult !==undefined)return this._prevInResult;if  (!this.prev)this._prevInResult =null;else if (this.prev.isInResult())this._prevInResult =this. prev;else  this._prevInResult =this.prev.prevInResult();return this._prevInResult;} },{key:     "beforeState"                                                                                                        ,value:function beforeState(){if ( this._beforeState !==undefined) return this._beforeState;if  (!this.prev)this._beforeState ={rings:[ ],windings:[],multiPolys:[] } ;else  {var seg =this.prev.consumedBy  ||this.prev;this._beforeState =seg.afterState();}return this._beforeState;}} , {key: "afterState", value:function afterState(){if (this._afterState !== undefined)return  this.                                                                                                                       _afterState;var  beforeState  =this.beforeState() ;this._afterState ={ rings:  beforeState. rings.                                                                                                                                 slice(0),windings:beforeState.windings.slice(0),multiPolys:[]};var ringsAfter =this._afterState.rings;var windingsAfter = this. _afterState.windings;var mpsAfter =this._afterState.multiPolys;for (var i =0,iMax =this.rings.length;i <iMax;i++ ){var ring =this.rings[i];var winding =this.windings[i];var index =ringsAfter.                                                                           indexOf( ring);if (index  === -1){ringsAfter.push(ring);windingsAfter.push(winding);}else windingsAfter[                                                                                                                                                                                                                                                     index]+=winding;}var polysAfter =[];var polysExclude =[] ;for ( var _i =0,_iMax =    ringsAfter. length;  _i <                                                    
                                  _iMax;_i++ ){if (windingsAfter[_i]===0)continue ;var _ring =ringsAfter[_i];var poly =_ring.poly;if (polysExclude.indexOf(poly)!== -1)continue ;if (_ring.isExterior)polysAfter.push(poly);else {if (polysExclude.indexOf(poly)=== -1)polysExclude.push(poly);var _index =polysAfter.indexOf(_ring.poly);if (_index !== -1)polysAfter.splice(_index,1);}}for (var _i2 =0,_iMax2 =polysAfter.length;_i2 <_iMax2;_i2++ ){var mp =polysAfter[_i2].multiPoly;if (mpsAfter.indexOf(mp)=== -1)mpsAfter.push(mp);}return this._afterState;}},{key:"isInResult",value:function isInResult(){if (this.consumedBy)return false;if (this._isInResult !==undefined)return this._isInResult;var mpsBefore =this.beforeState().multiPolys;var mpsAfter =this.afterState().multiPolys;switch (operation.type){case 'union':{var noBefores =mpsBefore.length ===0;var noAfters =mpsAfter.length ===       0;this. _isInResult =                                                                  noBefores !== noAfters;break ;}  case 'intersection':  {var least;var most;if (    mpsBefore.length <                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           mpsAfter.length){least =mpsBefore. length;most = mpsAfter.length;}else {least =              mpsAfter.                                                                                                                                                                                                                                                                          length;most   = mpsBefore. length;} this. _isInResult  = most ===   operation.      numMultiPolys &&                                                                                                                                                        least   <   most;break ;}case  'xor':{var  diff =Math.  abs(mpsBefore.length -mpsAfter.length) ;this.    _isInResult                                   =diff %2 ===1;break ;}case  'difference':{var isJustSubject = function isJustSubject(mps){   return mps.length  ===1 &&  mps[0].                                                                                                                                                                                                                                                                                                                                                                         isSubject;};this._isInResult =isJustSubject(mpsBefore)!==isJustSubject(mpsAfter)    ;break  ;}default:                                                                                                                                                                                                                                                                        throw  new Error( "Unrecognized operation type found " .concat(operation.type));}     return     this.                                                                                          _isInResult;}}],[{key:"fromRing",value:function fromRing(pt1,pt2,ring){var leftPt,rightPt,winding;var cmpPts =SweepEvent.comparePoints(pt1, pt2);if (cmpPts <0){leftPt =pt1;rightPt =pt2;winding =1;}else if (cmpPts >0){leftPt =pt2;rightPt =pt1;winding = -1;}else throw new Error("Tried to create degenerate segment at [".concat(pt1.x,", ").concat(pt1.y,"]"));var      leftSE                                                                                                              =new SweepEvent(leftPt,true);var rightSE =new SweepEvent(rightPt,false);return new Segment(leftSE,rightSE,[ring],[winding]);}}]) ;return Segment;}();var RingIn =function (){function RingIn(geomRing,poly,isExterior){_classCallCheck(this,RingIn);if (!Array.isArray(geomRing)||geomRing.length ===0){throw new Error('Input geometry is not a valid Polygon or MultiPolygon');}this.poly =                                                                                                                     poly;this.isExterior =isExterior;this.segments =[];if  (typeof  geomRing[0][0]  !=='number'||typeof                                                                                                                                 geomRing[0][1]!=='number'){throw new Error('Input geometry is not a valid Polygon or MultiPolygon');}var firstPoint =rounder.round(geomRing[0][0],geomRing[0] [1]);this.bbox ={ll:{x:firstPoint.x,y:firstPoint.y },ur: {x:firstPoint.x,y:firstPoint.y }};var prevPoint =firstPoint;for (var i =1,iMax =geomRing.length;i <iMax;                                                                           i++     ) {if  ( typeof geomRing[i][ 0]!=='number'||typeof   geomRing[i][1]!=='number'){   throw   new                                                                                                                                                                                                                                                        Error( 'Input geometry is not a valid Polygon or MultiPolygon') ;} var point  =   rounder.round(geomRing[ i][                                                    
                                  0],geomRing[i][1]);if (point.x ===prevPoint.x &&point.y ===prevPoint.y)continue ;this.segments.push(Segment.fromRing(prevPoint,point,this));if (point.x <this.bbox.ll.x)this.bbox.ll.x =point.x;if (point.y <this.bbox.ll.y)this.bbox.ll.y =point.y;if (point.x >this.bbox.ur.x)this.bbox.ur.x =point.x;if (point.y >this.bbox.ur.y)this.bbox.ur.y =point.y;prevPoint =point;}if (firstPoint.x !==prevPoint.x ||firstPoint.y !==prevPoint.y){this.segments.push(Segment.fromRing(prevPoint,firstPoint,this));}} _createClass(RingIn,[{key: "getSweepEvents",value:function getSweepEvents( ){var  sweepEvents =[];for (var i =0, iMax =this.segments.length;i <iMax;i++ ){var segment =this.segments[i];sweepEvents.push(segment.leftSE);sweepEvents.push(segment.rightSE);}return sweepEvents;}}]);return RingIn;}();var PolyIn =function (){function PolyIn(geomPoly,multiPoly){       _classCallCheck(this,                                                                  PolyIn)    ;if  (  !Array.  isArray(       geomPoly))  { throw    new    Error(    'Input geometry is not a valid Polygon or MultiPolygon'                                                                                                                                                                                                                                                                                                                                                                                                                                                                      );}this.exteriorRing =new RingIn(geomPoly[0],this,true);this.bbox ={ll:{x:this.     exteriorRing.bbox.                                                                                                                                                                                                                                                                         ll.x,y:this.exteriorRing.bbox.ll.y },ur:{ x:this.exteriorRing.bbox.ur.x,y:this.    exteriorRing.bbox.                                                                                                                                                      ur.   y  }}    ;this.interiorRings =[];for (var i =1,iMax =geomPoly.length; i <iMax;i++ ){var  ring =new     RingIn(                                    geomPoly[i],this,false);if (ring.bbox.ll.x <this.bbox.ll.x)this.bbox.ll.x = ring.bbox.ll.   x;if (ring.bbox.ll.y <this.bbox.ll.                                                                                                                                                                                                                                                                                                                                                                          y)this.bbox.ll.y =ring.bbox.ll.y;if (ring.bbox.ur.x >this.bbox.ur.x)this.bbox.ur.   x = ring. bbox. ur.                                                                                                                                                                                                                                                                        x;if   (ring. bbox.ur.   y  >this.bbox.ur.y)this.bbox. ur.y =ring.bbox.ur.y;this.       interiorRings.                                                                                         push(ring);}this.multiPoly =multiPoly;}_createClass(PolyIn,[{ key:"getSweepEvents",value:function getSweepEvents(){var sweepEvents =this.exteriorRing.getSweepEvents();for (var i =0,iMax =this.interiorRings.length;i <iMax;i++ ){var ringSweepEvents =this.interiorRings[i].getSweepEvents();for (var j =0,jMax = ringSweepEvents.length;j <jMax;j++  ){sweepEvents.push(     ringSweepEvents[                                                                                                   j]);}}return sweepEvents;}}]);return PolyIn;}();var MultiPolyIn =function (){function MultiPolyIn(geom,isSubject){_classCallCheck(this,MultiPolyIn);if (!Array.isArray(geom)){throw new Error('Input geometry is not a valid Polygon or MultiPolygon');}try {if (typeof geom[0][0][0]==='number')geom =[geom];}catch (ex){}this.polys =[];this.bbox ={ll:{x:Number.POSITIVE_INFINITY,y:Number.     POSITIVE_INFINITY                                                                                              } ,ur:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY }};for (var i =0,  iMax =geom.length;i                                                                                                                                 <iMax;i++ ){var poly =new PolyIn(geom[i],this);if (poly.bbox.ll.x <this.bbox.ll.x)this.bbox.ll.x =poly.bbox.ll.x;if (poly.bbox.ll.y <this.bbox.ll.y) this.bbox.ll.y =poly.bbox.ll.y;if (poly.bbox.ur.x  >this.bbox.ur.x)this.bbox.ur. x =poly.bbox.ur.x;if ( poly.bbox.ur.y >this.bbox.ur.y)this.bbox.ur.y =poly.bbox.ur.y;this.     polys.                                                                push(    poly);}  this. isSubject  = isSubject;} _createClass(  MultiPolyIn,  [  { key:    "getSweepEvents"                                                                                                                                                                                                                                                 ,value:function getSweepEvents(){var sweepEvents =[];for (var i  =0,iMax =this.   polys.length;i <iMax;i++ ){                                                     
                                  var polySweepEvents =this.polys[i].getSweepEvents();for (var j =0,jMax =polySweepEvents.length;j <jMax;j++ ){sweepEvents.push(polySweepEvents[j]);}}return sweepEvents;}}]);return MultiPolyIn;}();var RingOut =function (){_createClass(RingOut,null,[{key:"factory",value:function factory(allSegments){var ringsOut =[];for (var i =0,iMax =allSegments.length; i <iMax;i++ ){var segment =allSegments[i];if (!segment.isInResult()||segment.ringOut)continue ;var prevEvent =null;var event =segment.leftSE;var nextEvent =segment.rightSE;var events =[event];var startingPoint =event.point;var intersectionLEs =[];while (true){prevEvent =event;event =nextEvent;events.push(event);if (event.point ===startingPoint)break ;while (true){var availableLEs =event.getAvailableLinkedEvents();if (availableLEs.length ===0){var firstPt =events[0].point;var lastPt =events[          events.length  -1].                                                                point;throw  new   Error("Unable to complete output ring starting at [". concat(    firstPt.xconcat(firstPt.y,"]. Last matching segment found ends at")+" [".concat(lastPt.     x, ", " ) .concat(                                                                                                                                                                                                                                                                          lastPt.y, "].") ) ;}if (availableLEs.length  ===1){nextEvent =availableLEs[0].    otherSE;break   ;}                                                                                                                                                      var indexLE =   null;for (var j =0,jMax =intersectionLEs.length;j <jMax;j++ ){if (intersectionLEs[j].point     ===                                       event. point) {indexLE = j;break  ;}} if ( indexLE !== null)  { var  intersectionLE   =   intersectionLEs.splice( indexLE) [0]                                                                                                                                                                                                                                                                                                                                                                           ;var ringEvents  = events. splice( intersectionLE.index) ;ringEvents.   unshift(    ringEvents[ 0]   .                                                                                                                                                                                                                                                                         otherSE) ;ringsOut. push(new RingOut( ringEvents.  reverse(  )  ));continue   ;}     intersectionLEs.                                                                                        push({index:events.length,point:event.point });var comparator  =event.getLeftmostComparator(prevEvent);nextEvent =availableLEs. sort(comparator) [0].otherSE;break ;}}ringsOut.push(new RingOut(events));}return ringsOut;}}]);function RingOut(events) {_classCallCheck(this,RingOut);this.events =events;for (var i =0,iMax =events.length;i <iMax;i++ ){events[i].segment.    ringOut                                                                                                             =this;}this.poly =null;} _createClass(RingOut,[{key:"getGeom",value:function getGeom(){var  prevPt =this.events[0].point;var points =[prevPt];for (var i =1,iMax =this.events.length -1;i <iMax; i++ ){var _pt =this.events[ i].point;var _nextPt =this.events[  i +1].point;if (compareVectorAngles( _pt,prevPt,_nextPt)===0)continue ;points.push(_pt);prevPt  =_pt;}if (points.length ===1)     return null;var                                                                                               pt =points[0];var  nextPt =points[1];if (compareVectorAngles(pt,prevPt,nextPt)  ===0)points.shift()                                                                                                                                 ;points.push(points[0] );var step =this.isExteriorRing()?1  : -1;var iStart  =this.isExteriorRing()? 0 :points.length -1;var iEnd =this.isExteriorRing()?points. length  : - 1;var orderedPoints =[];for (var _i =iStart;_i != iEnd;_i +=step) {orderedPoints. push([points[_i].x,points[_i].y]) ;}return orderedPoints;} }, {key:    "isExteriorRing"                                                        ,      value: function isExteriorRing(  ){if ( this._isExteriorRing ===undefined){var   enclosing =                                                                                                                                                                                                                                                     this.enclosingRing();this._isExteriorRing =enclosing ?!enclosing.isExteriorRing(   )  :  true;} return   this.                                                     
                                  _isExteriorRing;}},{key:"enclosingRing",value:function enclosingRing(){if (this._enclosingRing ===undefined){this._enclosingRing =this._calcEnclosingRing();}return this._enclosingRing;}},{key:"_calcEnclosingRing",value:function _calcEnclosingRing(){var leftMostEvt =this.events[0];for (var i =1,iMax =this.events.length;i <iMax;i++ ){var evt =this.events[i];if (SweepEvent.compare(leftMostEvt,evt)>0)leftMostEvt =evt;}var prevSeg =leftMostEvt.segment.prevInResult();var prevPrevSeg =prevSeg ?prevSeg.prevInResult():null;while (true){if (!prevSeg)return null;if (!prevPrevSeg)return prevSeg.ringOut;if (prevPrevSeg.ringOut !==prevSeg.ringOut){if (prevPrevSeg.ringOut.enclosingRing()!==prevSeg.ringOut){return prevSeg.ringOut;}else return prevSeg.ringOut.enclosingRing();}prevSeg =prevPrevSeg.prevInResult();prevPrevSeg =prevSeg ?prevSeg.prevInResult():        null;}  }   }     ])                                                                ;return RingOut;}() ;var PolyOut = function (){ function PolyOut( exteriorRing){      _classCallCheck(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            this,PolyOut);this. exteriorRing =exteriorRing;exteriorRing.  poly =this;this.    interiorRings =[];}                                                                                                                                                                                                                                                                         _createClass(PolyOut,[{key:"addInterior",value:function addInterior(ring){this.        interiorRings.                                                                                                                                                         push( ring)   ;ring.poly =this;}},{key:"getGeom",value:function getGeom(){var geom =[this.exteriorRing.     getGeom(                              )];if (geom[0]===null)return null;for (var i  =0,iMax =this. interiorRings.length;i <iMax;    i++  ){  var    ringGeom   = this.                                                                                                                                                                                                                                                                                                                                                                             interiorRings[i].getGeom();if (ringGeom ===null)continue ;geom. push(ringGeom);}    return geom;} }] )                                                                                                                                                                                                                                                                        ;return PolyOut;}();var MultiPolyOut =function (){function  MultiPolyOut( rings){      _classCallCheck(                                                                                      this,MultiPolyOut);this.rings =rings;this.polys = this._composePolys(rings);}_createClass(MultiPolyOut,[{key:"getGeom",value:function getGeom(){var geom =[];for (var i  =0,iMax =this.polys.length;i <iMax;i++ ){var polyGeom =this.polys[i].getGeom();if (polyGeom ===null)continue ;geom. push(polyGeom);}return geom;}},{key:"_composePolys",value:function _composePolys(     rings)                                                                                                            {var polys =[];for (var i = 0,iMax =rings. length;i <iMax;i++ ){var  ring =rings[i];if (ring.poly)continue ;if (ring.isExteriorRing())polys.push( new PolyOut(ring));else { var enclosingRing =ring.enclosingRing();if (!enclosingRing.poly)polys.push(new PolyOut(enclosingRing));enclosingRing.poly.addInterior(ring);}}return polys;}}]);return MultiPolyOut;}();var SweepLine =function (){     function                                                                                                       SweepLine(queue){var  comparator  =arguments.length  >1   &&arguments[1]  !==      undefined     ?                                                                                                                                 arguments[1]:Segment.compare;_classCallCheck( this,SweepLine);this.queue =queue;this.tree =new Tree(comparator);this.segments =[] ;}_createClass(SweepLine,[{key:"process",value:function process(event){var segment =event.segment;var newEvents =[];if (event.consumedBy){if (event.isLeft)this.queue.remove(event.otherSE);else     this.                                                                tree.    remove(segment);return newEvents;}var node  =event.isLeft  ?this.tree. insert(    segment)  :                                                                                                                                                                                                                                                    this.tree. find(segment);if (!node)throw  new Error("Unable to find segment #".    concat(segment.id," ")+"["                                                      
                                 .concat(segment.leftSE.point.x,", ").concat(segment.leftSE.point.y,"] -> ")+"[".concat(segment.rightSE.point.x,", ").concat(segment.rightSE.point.y,"] ")+'in SweepLine tree. Please submit a bug report.');var prevNode =node;var nextNode =node;var prevSeg =undefined;var nextSeg =undefined;while (prevSeg ===undefined){prevNode =this.tree.prev(prevNode);if (prevNode ===null)prevSeg =null;else if (prevNode.key.consumedBy ===undefined)prevSeg =prevNode.key;}while (nextSeg ===undefined){nextNode =this.tree.next(nextNode);if (nextNode ===null)nextSeg =null;else if (nextNode.key.consumedBy ===undefined)nextSeg =nextNode.key;}if (event.isLeft){var prevMySplitter =null;if (prevSeg){var prevInter =prevSeg.getIntersection(segment);if (prevInter !==null){if (!segment.isAnEndpoint(prevInter))prevMySplitter =prevInter;if (!prevSeg.isAnEndpoint(prevInter)) {      var newEventsFromSplit                                                               =this._splitSafely( prevSeg,prevInter) ;for ( var i =0,iMax =newEventsFromSplit.    length;i <iMax;i++                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ) { newEvents.push(newEventsFromSplit[i]);}}} } var nextMySplitter = null;if  (       nextSeg)   { var                                                                                                                                                                                                                                                                          nextInter     =nextSeg. getIntersection(segment);if (nextInter !==null){if ( !              segment.                                                                                                                                                        isAnEndpoint(     nextInter) ) nextMySplitter = nextInter;if  ( ! nextSeg. isAnEndpoint( nextInter)){  var    _newEventsFromSplit                  =this._splitSafely( nextSeg,nextInter);for (var _i =0,_iMax =_newEventsFromSplit.length;      _i <_iMax;_i++  ){newEvents.push(                                                                                                                                                                                                                                                                                                                                                                             _newEventsFromSplit[_i]);}}}}if (prevMySplitter !==null ||nextMySplitter !==null)    {var mySplitter  =                                                                                                                                                                                                                                                                         null;if  (prevMySplitter === null)  mySplitter    =  nextMySplitter;else   if  (   nextMySplitter  ===                                                                                      null)mySplitter = prevMySplitter;else {var cmpSplitters =SweepEvent.comparePoints(prevMySplitter,nextMySplitter);mySplitter =cmpSplitters <=0 ?prevMySplitter :nextMySplitter;}this.queue.remove(segment.rightSE);newEvents.push(segment.rightSE);var _newEventsFromSplit2 =segment.split(mySplitter);for (var _i2 =0,_iMax2 =_newEventsFromSplit2.length;_i2 <_iMax2;_i2++ ) {     newEvents.                                                                                                       push(_newEventsFromSplit2[_i2]);}}if (newEvents.length >0){this.tree. remove(segment);newEvents.push(event);}else {this.segments.push(segment) ;segment.prev  = prevSeg;}}else  {if (prevSeg  &&nextSeg){ var inter =prevSeg.getIntersection(nextSeg);if (inter !==null){if (!prevSeg.isAnEndpoint( inter)){ var _newEventsFromSplit3 =this._splitSafely(prevSeg,inter);for (var _i3 = 0,_iMax3 =    _newEventsFromSplit3.                                                                                        length;_i3 <_iMax3;_i3++ ){newEvents.push( _newEventsFromSplit3[_i3]);} }if (!             nextSeg.                                                                                                                                 isAnEndpoint(inter)){var _newEventsFromSplit4 =this._splitSafely(nextSeg,inter);for (var _i4 =0,_iMax4 =_newEventsFromSplit4.length;_i4 <_iMax4;_i4++ ){newEvents.push(_newEventsFromSplit4[_i4]);}}}}this.tree.remove(segment);}return newEvents;}},{key:"_splitSafely",value:function _splitSafely(seg,pt){this.tree. remove(seg)     ;var                                                                 rightSE = seg.rightSE;this.queue.remove(rightSE);var newEvents =seg.split(pt);newEvents.         push(                                                                                                                                                                                                                                                  rightSE)   ;if      ( seg.  consumedBy  === undefined)  this.  tree.insert( seg)  ;return  newEvents;} } ]  )                                                       
                                 ;return SweepLine;}();var POLYGON_CLIPPING_MAX_QUEUE_SIZE =typeof process !=='undefined'&&process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE ||1000000;var POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS =typeof process !=='undefined'&&process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS ||1000000;var Operation =function (){function Operation(){_classCallCheck(this,Operation);}_createClass(Operation,[{key:"run",value:function run(type,geom,moreGeoms){operation.type =type;rounder.reset();var multipolys =[new MultiPolyIn(geom,true)];for (var i =0,iMax =moreGeoms.length;i <iMax;i++ ){multipolys.push(new MultiPolyIn(moreGeoms[i],false));}operation.numMultiPolys =multipolys.length;if (operation.type ==='difference'){var subject =multipolys[0];var _i =1;while (_i <multipolys.length){if (getBboxOverlap(multipolys[_i].bbox,subject.bbox)!==null)_i++ ;else multipolys.       splice(_i,1) ;} }if (                                                               operation.type ==='intersection'){for (var _i2 =0,_iMax =multipolys.length;_i2 <    _iMax; _i2++ ){var                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           mpA =multipolys[_i2];for (var j =_i2 +1,jMax =multipolys.length;j  <jMax;j++ ){    if (getBboxOverlap(                                                                                                                                                                                                                                                                         mpA. bbox,multipolys[j].bbox)=== null) return [];}} } var queue     = new Tree(           SweepEvent.                                                                                                                                                         compare);for (  var _i3 =0,_iMax2 =multipolys.length;_i3 <_iMax2;_i3++ ){var sweepEvents =multipolys[_i3].    getSweepEvents(                   );for (var _j =0,_jMax =sweepEvents.length;_j <_jMax;_j++ ){queue.insert(sweepEvents[_j])      ;if    (       queue.    size   >                                                                                                                                                                                                                                                                                                                                                                                     POLYGON_CLIPPING_MAX_QUEUE_SIZE)   {    throw          new          Error(   'Infinite loop when putting segment endpoints in a priority queue '                                                                                                                                                                                                                           +'(queue size too big). Please file a bug report.' ) ;}}} var sweepLine =  new   SweepLine(  queue)                                                                                     ;var prevQueueSize =queue.size;var node =queue.pop();while (node){var evt =node.key;if (queue.size ===prevQueueSize){var seg =evt.segment;throw new Error("Unable to pop() ".concat(evt.isLeft ?'left':'right'," SweepEvent ")+"[".concat(evt.point.x,", ").concat(evt.point.y,"] from segment #").concat(seg.id," ")+"[".concat(seg.leftSE.point.x,", ").concat(seg.leftSE.point.       y,                                                                                                            "] -> ")+"[".concat(seg.rightSE.point.x,", ").concat( seg.rightSE. point.y,"] from queue. ")+'Please file a bug report.');}if (queue.size >POLYGON_CLIPPING_MAX_QUEUE_SIZE){ throw new Error('Infinite loop when passing sweep line over endpoints '+'(queue size too big). Please file a bug report.');}if (sweepLine.segments.length >POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS){throw new Error(     'Infinite loop when passing sweep line over endpoints '                                                     +'(too many sweep line segments). Please file a bug report.');}var newEvents =   sweepLine.process(                                                                                                                                 evt);for (var _i4 =0,_iMax3 =newEvents.length;_i4 <_iMax3;_i4++ ){var _evt =newEvents[_i4];if (_evt.consumedBy ===undefined)queue.insert(_evt);}prevQueueSize =queue.size;node =queue.pop() ;}rounder.reset() ;var ringsOut =RingOut.factory(sweepLine.segments);var result =new MultiPolyOut(ringsOut);return result.getGeom();}}])     ;return Operation;}                                                 (  )    ;var operation =new Operation( );var union =function union(geom){for (var _len =    arguments.                                                                                                                                                                                                                                                  length,moreGeoms =new  Array( _len >1 ?_len -1 :0),_key =1;_key <_len;_key++ ){     moreGeoms[   _key -  1] =                                                       
                                 arguments[_key];}return operation.run('union',geom,moreGeoms);};var intersection$1 =function intersection(geom){for (var _len2 =arguments.length,moreGeoms =new Array(_len2 >1 ?_len2 -1 :0),_key2 =1;_key2 <_len2;_key2++ ){moreGeoms[_key2 -1]=arguments[_key2];}return operation.run('intersection',geom,moreGeoms);};var xor =function  xor(geom){for (var _len3 =arguments.length,moreGeoms =new Array(_len3 >1 ?_len3 -1 :0),_key3 =1;_key3 <_len3;_key3++ ){moreGeoms[_key3 -1]=arguments[_key3];}return operation.run('xor',geom,moreGeoms);};var difference =function difference(subjectGeom){for (var _len4 =arguments.length,clippingGeoms =new Array(_len4 >1 ?_len4 -1 :0),_key4 =1;_key4 <_len4;_key4++ ){clippingGeoms[_key4 -1]=arguments[_key4];}return operation.run('difference',subjectGeom,clippingGeoms);};var index ={union:union,intersection:intersection$1,        xor:xor, difference:                                                                difference  } ;return index;})   ;} ,"../node_modules/rbush/index.js" :(module,    __unused_webpack_exports,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __webpack_require__) => { "use strict";module. exports =rbush;module.  exports[        "default"   ] =                                                                                                                                                                                                                                                                                     rbush;var       quickselect         =          __webpack_require__(    "../node_modules/rbush/node_modules/quickselect/quickselect.js"                                                                                                                );function    rbush(maxEntries,format){if (!(this instanceof rbush))return new rbush(maxEntries,format)    ;this.                           _maxEntries  =Math.max(4,maxEntries ||9);this._minEntries   = Math.max(2,Math.ceil(this.     _maxEntries * 0.4) );if ( format){                                                                                                                                                                                                                                                                                                                                                                               this._initFormat(format);}this. clear();}   rbush. prototype ={all: function  (){   return this. _all(                                                                                                                                                                                                                                                                         this.data,[]);},search:function  (bbox){var node =this.data,result  =[], toBBox =   this. toBBox;if (!                                                                                     intersects(bbox,node))return result;var nodesToSearch =[],i,len,child,childBBox;while (node){for (i =0,len =node.children.length;i <len;i++ ){child =node.children[i];childBBox =node.leaf ?toBBox(child):child;if (intersects(bbox,childBBox)){if (node.leaf)result.push(child);else if (contains(bbox,childBBox))this._all(child,result);else nodesToSearch.push(child);}}node =     nodesToSearch.                                                                                                  pop(  );}return result;},collides:function (bbox) {var node =this.data,toBBox  =this.toBBox;if  (!intersects(bbox,node))return false;var  nodesToSearch =[],i,len, child,childBBox;while (node){for (i  =0,len =node.  children.length;i <len;i++ ){child =node.children[i]  ;childBBox =node.leaf ?toBBox(child):child;if (intersects(bbox,childBBox)){if (node.leaf ||contains(bbox,childBBox))     return true;nodesToSearch.                                                                                  push(child);}}node =nodesToSearch.pop();}return false;},load:function  (data){  if (!(data  &&data.                                                                                                                                 length))return this;if (data.length <this._minEntries){for (var i  =0,len =data.length;i <len;i++ ){this.insert(data[i]);}return this;}var node =this._build(data.slice(),0,data.length -1,0);if (!this.data.children.length){this.data =node;}else if (this.data.height ===node.height){this._splitRoot(this.data,node);}else {if (      this.                                                               data.   height <node.height){var   tmpNode =this. data;this. data =node;node =tmpNode;}          this.                                                                                                                                                                                                                                                _insert(node,this. data. height  -node. height -1, true);}return this;},insert:    function ( item){if (item)                                                        
                                this._insert(item,this.data.height -1);return this;},clear:function (){this.data =createNode([]);return this;},remove:function (item,equalsFn){if (!item)return this;var node =this.data,bbox =this.toBBox(item),path =[],indexes =[],i,parent,index,goingUp;while (node ||path.length){if (!node){node =path.pop();parent =path[path.length -1];i =indexes.pop();goingUp =true;}if (node.leaf){index =findItem(item,node.children,equalsFn);if (index !== -1){node.children.splice(index,1);path.push(node);this._condense(path);return this;}}if (!goingUp &&!node.leaf &&contains(node,bbox)){path.push(node);indexes.push(i);i =0;parent =node;node =node.children[0];}else if (parent){i++ ;node =parent.children[i];goingUp =false;}else node =null;}return this;},toBBox:function (item){return item;},compareMinX:compareNodeMinX,compareMinY:compareNodeMinY,toJSON:function (       ){return  this.data;},                                                             fromJSON:function (data){this.data  =  data;return  this;}, _all:function (node,      result)   {  var                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           nodesToSearch = [];while  (node) {if (node. leaf)result.push.apply(result,node.      children)   ;else                                                                                                                                                                                                                                                                         nodesToSearch.push.apply(nodesToSearch,node.children);node =nodesToSearch.pop()    ;}return result;},                                                                                                                                                                 _build:     function (items,left,right,height){var N  =right -left +1,M =this._maxEntries,node;if (N      <=                          M){node =createNode(items.slice(left,right +1));calcBBox(node,this.toBBox);return  node;}     if (! height) {height  =Math.ceil(                                                                                                                                                                                                                                                                                                                                                                                Math.log(N)/ Math. log( M) ) ;M = Math.ceil(N  /Math.pow(M,height - 1)  );}node =   createNode(  [ ] )                                                                                                                                                                                                                                                                         ;node.leaf =false;node.height =height;var N2 =Math.ceil(N /M),N1  =N2 *Math.ceil(   Math.sqrt(M)),i,j,                                                                                    right2,right3;multiSelect(items,left,right,N1,this.compareMinX);for (i =left;i <=right;i += N1){right2 =Math.min(i +N1 -1,right);multiSelect(items,i,right2,N2,this.compareMinY);for  (j =i;j <=right2;j +=N2){right3 =Math.min(j +N2 - 1,right2);node.children.push(this._build(items,j,right3,height -1));}}calcBBox(node,this.toBBox);return node;},_chooseSubtree:function (bbox,     node,                                                                                                         level,path){var i,len, child,targetNode,area,enlargement,minArea, minEnlargement;while (true) { path.push(node);if  ( node.leaf ||path. length -1 ===level)break ;minArea = minEnlargement =Infinity;for (i =0,len =node.children.length;i <len;i++ ){child =node. children[i];area =bboxArea(child);enlargement =enlargedArea(bbox,child)-area;if (enlargement < minEnlargement) {minEnlargement =    enlargement;minArea                                                                                        = area <minArea  ?area  : minArea;targetNode =child;}else if ( enlargement ===  minEnlargement){if (                                                                                                                                area <minArea){ minArea =area;targetNode =child;}}}node =targetNode ||node.children[0];}return node;},_insert:function (item,level,isNode){ var toBBox =this.toBBox,bbox =isNode ?item :toBBox(item),insertPath =[];var node =this._chooseSubtree(bbox,this.data,level,insertPath);node.children.push(item);extend(node,bbox);while  (    level                                                               >=0)     { if ( insertPath[ level].children.length   > this._maxEntries) {this. _split(    insertPath,                                                                                                                                                                                                                                               level);level-- ;}else break ;}this._adjustParentBBoxes(bbox,insertPath,level);},     _split:     function   (                                                         
                                insertPath,level){var node =insertPath[level],M =node.children.length,m =this._minEntries;this._chooseSplitAxis( node,m,M);var splitIndex =this._chooseSplitIndex(node,m,M);var newNode =createNode(node.children.splice(splitIndex,node.children.length -splitIndex));newNode.height =node.height;newNode.leaf =node.leaf;calcBBox(node,this. toBBox);calcBBox(newNode,this.toBBox);if (level)insertPath[level -1].children.push(newNode);else this._splitRoot(node,newNode);},_splitRoot:function (node,newNode){this.data =createNode([node,newNode]);this.data.height =node.height +1;this.data.leaf =false;calcBBox(this.data,this.toBBox);},_chooseSplitIndex:function  (node,m,M){var i,bbox1,bbox2,overlap,area,minOverlap,minArea,index;minOverlap =minArea = Infinity;for (i =m;i  <=M -m;i++ ){bbox1 =distBBox(node,0,i,this.toBBox) ;bbox2 =distBBox(node,i,M,this.toBBox)              ;overlap       =                                                             intersectionArea(bbox1,bbox2);area =bboxArea(bbox1)+bboxArea(bbox2);if (overlap <    minOverlap)     {                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           minOverlap =overlap;index =i;minArea =area <minArea  ?area :minArea;}else  if (       overlap      ===                                                                                                                                                                                                                                                                          minOverlap){if  ( area < minArea) { minArea =area;index =i;}}} return index;},     _chooseSplitAxis:                                                                                                                                                               function (     node,m,M){var  compareMinX =node.leaf ?this. compareMinX :compareNodeMinX,compareMinY =      node.                      leaf    ? this.compareMinY :compareNodeMinY, xMargin  =this._allDistMargin(node,  m,  M,    compareMinX)    , yMargin   =  this.                                                                                                                                                                                                                                                                                                                                                                                 _allDistMargin(node, m,M,compareMinY)  ;if (xMargin <yMargin)node.children. sort(      compareMinX);} ,                                                                                                                                                                                                                                                                        _allDistMargin:function (node,m,M,compare){node.children.sort(compare);var toBBox     = this.   toBBox,                                                                                  leftBBox  =distBBox(node,0,m,toBBox),rightBBox =distBBox(node,M -m,M,toBBox),margin =bboxMargin(leftBBox)+bboxMargin(rightBBox),i,child;for (i =m;i <M -m;i++ ){child =node.children[i];extend(leftBBox,node.leaf ?toBBox(child) :child);margin +=bboxMargin(leftBBox);}for (i =M -m -1;i >=m;i-- ){child =node.children[i];extend(rightBBox,node.leaf ?toBBox(child):child);margin +=     bboxMargin(                                                                                                   rightBBox);}return margin;},_adjustParentBBoxes:function ( bbox,path,level){for (var i =level;i  >=0;i-- ){extend(path[ i],bbox);}},_condense:function ( path){for (var i  =path.length -1,siblings;i >=0;i--  ){if (path[i].children.length ===0){if (i >0){siblings =path[i -1].children;siblings.splice(siblings.indexOf(path[i]),1) ;}else this.clear();}else calcBBox(path[i],this.toBBox);}},     _initFormat:                                                                                              function (format){ var compareArr =['return a' ,' - b',';'];this.compareMinX =  new Function( 'a' ,                                                                                                                                  'b',compareArr.join(format[0]));this.compareMinY =new Function('a','b',compareArr.join(format[1]));this.toBBox =new Function('a','return {minX: a'+format[0]+', minY: a'+format[1]+', maxX: a'+format[2]+', maxY: a'+format[3]+'};');}};function findItem(item,items,equalsFn){if (!equalsFn)return items.indexOf(item);for (var  i =     0; i <                                                              items.  length;i++ ) { if  ( equalsFn(item,items[i]))return i;}return ( - 1);} function     calcBBox(                                                                                                                                                                                                                                               node,toBBox){distBBox( node,0, node.children.length,  toBBox,   node);} function   distBBox(node,k, p,toBBox,                                                         
                               destNode){if (!destNode)destNode =createNode(null);destNode. minX =Infinity;destNode.minY =Infinity;destNode.maxX = -Infinity;destNode.maxY = -Infinity;for (var i =k,child;i <p;i++ ){child =node.children[i];extend(destNode,node.leaf ?toBBox(child):child);}return destNode;}function extend(a,b){a.minX =Math.min(a.minX,b.minX);a.minY =Math.min(a.minY,b.minY);a.maxX =Math.max(a.maxX,b.maxX);a.maxY =Math.max(a.maxY,b.maxY);return a;}function compareNodeMinX(a,b){return a.minX -b.minX;}function compareNodeMinY(a,b){return a.minY -b.minY;}function bboxArea(a){return (a.maxX -a.minX)*(a.maxY -a.minY);}function bboxMargin(a){return a.maxX -a.minX +(a.maxY -a.minY);}function enlargedArea(a,b){return (Math.max(b.maxX,a.maxX)-Math.min(b.minX,a.minX))*(Math.max(b.maxY,a.maxY)-Math.min(b.minY,a.minY));}function intersectionArea(a,b){var minX =Math.max(a.minX,       b.minX),  minY =Math.                                                             max(a.minY,b.minY),maxX =Math.min(a.maxX,b.maxX),maxY = Math. min(a.maxY,b.maxY)    ;return  Math.max(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           0,maxX -minX)*Math.max(0,maxY -minY);}function contains(a,b){return a.minX <=b.     minX &&a.minY <=b.                                                                                                                                                                                                                                                                         minY &&b.maxX  <=a.maxX &&b.maxY <=a. maxY;}function intersects(a, b){return b.    minX <=a.maxX &&b.                                                                                                                                                               minY <=  a.    maxY &&b.maxX >=a.minX &&b.maxY >=a.minY;}function createNode(children){return {children:     children,                height:1,leaf:true, minX: Infinity, minY:Infinity,maxX: -   Infinity,maxY: - Infinity };}     function  multiSelect( arr, left,                                                                                                                                                                                                                                                                                                                                                                                   right,n, compare){var  stack =[left,right],mid;while (stack.length){right =stack.   pop();left =stack.                                                                                                                                                                                                                                                                         pop();if (right -left <=n)continue ;mid =left +Math.ceil((right - left) /n / 2) *   n;quickselect( arr,                                                                                  mid,     left,    right,       compare)    ;stack.     push( left,   mid,        mid,    right)  ;}     }        }   ,                                                                                                                                           "../node_modules/rbush/node_modules/quickselect/quickselect.js": function (module) {( function  (global,factory){true ?   module.                                                                                                       exports =factory(): 0;})(this,function () {'use strict';function quickselect(                                                                                                                                                                                                arr,k,left,right,  compare){ quickselectStep(arr, k,left ||0,right ||arr. length -1, compare ||defaultCompare);}function   quickselectStep(                                                                                          arr,k,left,right,compare){while (right >left) {if (right -left >600){  var n =  right -left +1;var m                                                                                                                                                                                                                                                                                                                                                =k -left +1;var z =Math.log(n);var s =0.5 *Math.exp(2 *z /3);var sd =0.5 *Math.sqrt(z *s *(n -s)/n)*(m -n /2 <0 ? -1 :1)      ;var                                                              newLeft  =Math.max(left,Math.floor(k - m *s /n +sd));var newRight =Math.min(right,Math.   floor(k +(n                                                                                                                                                                                                                                             -m) *s /n +sd));quickselectStep(arr,k,newLeft,newRight,compare);}var t =arr[ k]      ;var    i =left;var  j  =                                                         
                               right;swap(arr,left,k);if (compare(arr[right],t)>0)swap(arr,left,right);while (i <j){swap(arr, i, j);i++ ;j-- ;while (compare(arr[i],t)<0)i++ ;while (compare(arr[j],t) >0)j-- ;}if (compare(arr[left],t)===0)swap(arr,left,j);else {j++  ;swap(arr,j,right);}if (j <=k)left =j +1;if (k <=j)right =j -1;}}function swap(arr,i,j){var tmp =arr[i];arr[i]=arr[j];arr[j]= tmp;}function defaultCompare(a,b){return  a <b ? -1 :a >b ?1 :0;}return quickselect;});},"../node_modules/regexp.prototype.flags/implementation.js":(module,__unused_webpack_exports,__webpack_require__) =>{"use strict";var functionsHaveConfigurableNames =__webpack_require__("../node_modules/functions-have-names/index.js").functionsHaveConfigurableNames();var $Object =Object;var $TypeError =TypeError;module.exports =function flags(){if (this !=null &&this !==$Object(this)){throw new $TypeError(      'RegExp.prototype.flags getter called on non-object'                               );}var result ='' ;if (this.hasIndices){result +='d';}if (this.global){result +=      'g';} if  (this.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ignoreCase){result +='i';}if (this.multiline){result +='m';} if  (this.dotAll){    result +='s' ;}if (                                                                                                                                                                                                                                                                         this.unicode){result +='u';}if (this.sticky){result +='y';}return result;};if (    functionsHaveConfigurableNames                                                                                                                                                    &&   Object.    defineProperty){Object. defineProperty(module.exports,  "name",{value:  'get flags'});}},    "../node_modules/regexp.prototype.flags/index.js"  : ( module,__unused_webpack_exports,__webpack_require__) =>{ "use strict" ;var define  =                __webpack_require__(                                                                                                                                                                                                                                                                                                                                                            "../node_modules/define-properties/index.js");var callBind =__webpack_require__(   "../node_modules/call-bind/index.js"                                                                                                                                                                                                                                                                  )          ;var         implementation         =  __webpack_require__(   "../node_modules/regexp.prototype.flags/implementation.js"                                          );var  getPolyfill = __webpack_require__("../node_modules/regexp.prototype.flags/polyfill.js");var  shim  =                                                                                                                                                                  __webpack_require__("../node_modules/regexp.prototype.flags/shim.js");var flagsBound =callBind(getPolyfill()          )                                                                                                      ;define( flagsBound,{ getPolyfill:getPolyfill,implementation: implementation,                                                                                                                                                                                                             shim:shim } ) ;module.exports =flagsBound;} ,"../node_modules/regexp.prototype.flags/polyfill.js": (module,    __unused_webpack_exports,                                                                                __webpack_require__)  =>{"use strict";var implementation =__webpack_require__(  "../node_modules/regexp.prototype.flags/implementation.js"                                                                                                                                                                                                                                                                                                                        );var  supportsDescriptors   =  __webpack_require__(  "../node_modules/define-properties/index.js"     ) .    supportsDescriptors;var                                              $gOPD  = Object.getOwnPropertyDescriptor;module.exports  =function  getPolyfill(){if (    supportsDescriptors                                                                                                                                                                                                                                    &&/a/mig.flags ==='gim' ){var  descriptor =$gOPD(RegExp.prototype,'flags');if (       descriptor    && typeof                                                          
                               descriptor.get ==='function'&&typeof RegExp.prototype.dotAll ==='boolean'&&typeof RegExp.prototype.hasIndices ==='boolean'){var calls ='';var o ={};Object.defineProperty(o,'hasIndices',{get:function (){calls +='d';}});Object.defineProperty(o,'sticky',{get:function (){calls +='y';}});if (calls ==='dy'){return descriptor.get;}}}return implementation;};},"../node_modules/regexp.prototype.flags/shim.js":(module,__unused_webpack_exports,__webpack_require__) =>{"use strict";var supportsDescriptors =__webpack_require__("../node_modules/define-properties/index.js").supportsDescriptors;var getPolyfill =__webpack_require__("../node_modules/regexp.prototype.flags/polyfill.js");var gOPD =Object.getOwnPropertyDescriptor;var defineProperty =Object.defineProperty;var TypeErr =TypeError;var getProto =Object.getPrototypeOf;var regex =/a/;module.exports =function       shimFlags(  ) {if  ( !                                                                  supportsDescriptors  ||   !     getProto)   {     throw    new    TypeErr(    'RegExp.prototype.flags requires a true ES5 environment that supports property descriptors'                                                                                                                                                                                                                                                                                                                                                                                                                                  );}var polyfill =getPolyfill();var proto =getProto(regex);var descriptor =gOPD(    proto,'flags');if (                                                                                                                                                                                                                                                                         !   descriptor || descriptor.get  !==polyfill){defineProperty(proto, 'flags' ,{    configurable:true,                                                                                                                                                                  enumerable:        false,     get:       polyfill   }  )     ;}     return   polyfill;}       ;}      ,     "../node_modules/robust-predicates/umd/orient2d.min.js" :function (__unused_webpack_module, exports){!function (t,e){true ?e(  exports):0;}(this, function (t){"use strict";const e =                                                                                                                                                                                                                                                                                                                                                    134217729,n =33306690738754706e-32;function r(t,e,n,r,o){let f,i,u,c,s  =e[0],a =   r[0],d =0,l =0;a >s                                                                                                                                                                                                                                                                        ==a > -s ?(f =s,s =e[ ++d]):(f =a,a =r[ ++l]);let p =0;if (d <t &&l <n)for (a  >s   ==a > -s ?(u =f -(                                                                                 (i =s  +f)-s),s =e[ ++d]):(u =f -((i =a +f)-a),a =r[ ++l]),f =i,0 !==u &&(o[p++ ]=u);d <t &&l <n;)a >s          ==a > -s ?(u =f -((i =f +s)-(c =i -f))+(s -c),s =e[ ++d]):(u =f -((i =f +a)-(c =i -f))+(a -c),a =r[ ++l]),f =i,0 !==u &&(o[p++ ]=u);for (;d <t;)u =f -((i =          f +s)-(c =i -f))+(s -c),s =e[ ++d],f =i,0 !==u &&(o[p++ ]=u);for (;l <n;)u =f -((i =f +a)-(c =i -f))+(   a -c),a =                                                                                                    r[ ++l], f =i,0 !==u &&(o[p++ ]=u);return  0 ===f &&0 !==p ||(o[p++ ]=f), p;}   function o(t){return new Float64Array(t) ;}const f =33306690738754716e-32,i =22204460492503146e-32,u =11093356479670487e-47,c =o(4),s =o(8),a =o(12),d =o(16),l =o(4);t.orient2d =function (t,o,p,b,y,          h){const M =(o -h)*(p -y),x =(t -y)*(b -h),j =M -x;if (0 ===M ||0 ===x ||M >0 !=x >0)return j;const m =     Math.                                                                                                 abs(M +x);return Math.abs(j)>=f *m ?j : -function (t,o,f,p,b,y,h){let M,x,j,m,  _,v, w,A,F,O,P,g,k,                                                                                                                                   q,z,B,C,D;const E =t -b,G =f -b,H =o -y,I =p -y;_ =(z =(A =E -(w =(v =e *E)-(v -E)))*(O =I -(F =(v =e *I)-(v -I)))-((q =E *I)-w *F -A *F -w *O))-(P =z -(C =(A =H -(w =(v =e *H)-(v -H)))*(O =G -(F =(v =e *G)-(v -G)))          -((B =H *G)-w *F -A *F -w *O))),c[0]=z -(P +_)+(_ -C),_ =(k =q -((g =q +P)-(_ =g -q))+(P -_))-(P =k -    B),c[1]=                                                             k -    (P +_)+(_ -B),_ =(D =g +P)-g,c[2]=g -(D -_)+(P -_),c[3]=D;let J =function (t,e){   let n =e[0]                                                                                                                                                                                                                                           ;for (let r =1;r < t;r++ )n +=e[r];return n;}(4,c),K  =i *h;if (J >=K || -J >=K)  return J;if (M =t -(E +(_ =                                                           
                               t -E))+(_ -b),j =f -(G +(_ =f -G))+(_ -b),x =o -(H +(_ =o -H))+(_ -y),m =p -(I +(_ =p -I))+(_ -y),0 ===M &&0 ===x &&0 ===j &&0 ===m)return J;if (K =u *h +n *Math.abs(J),(J +=E *m +I *M -(H *j +G *x))>=K || -J >=K)return J;_ =(z =(A =M -(w =(v =e *M)-(v -M)))*(O =I -(F =(v =e *I)-(v -I)))-((q =M *I)-w *F -A *F -w *O))-(P =z -(C =(A =x -(w =(v =e *x)-(v -x)))*(O =G -(F =(v =e *G)-(v -G)))-((B =x *G)-w *F -A *F -w *O))),l[0]=z -(P +_)+(_ -C),_ =(k =q -((g =q +P)-(_ =g -q))+(P -_))-(P =k -B),l[1]=k -(P +_)+(_ -B),_ =(D =g +P)-g,l[2]=g -(D -_)+(P -_),l[3]=D;const L =r(4,c,4,l,s);_ =(z =(A =E -(w =(v =e *E)-(v -E)))*(O =m -(F =(v =e *m)-(v -m)))-((q =E *m)-w *F -A *F -w *O))-(P =z -(C =(A =H -(w =(v =e *H)-(v -H)))*(O =j -(F =(v =e *j)-(v -j)))-((B =H *j)-w *F -A *F -w *O))),l[0]=z -(P +_)+(_ -C),_ =(k =q -((g =q +P)-(_ =g -q))+(P -_))-(P =k -B),l[1]=       k -(P +_)+(_ -B),_ =(D =                                                          g +P)-g,l[2]=g -(D -_)+(P -_),l[3]=D;const N =r(L,s,4,l,a);_ =(z =(A =M -(w =(v =   e *M)-(vm -(F =(v =e *m)-(v -m)))-((q =M *m)-w *F -A *F -w *O))-(P =z -(C =(A =x -(w =(    v =e *x)-(v -x)))*(                                                                                                                                                                                                                                                                         O =j -(F =(v =e *j)-(v -j)))-((B =x *j)-w *F -A *F -w *O))),l[0]=z -(P +_)+(_ -    C),_ =(k =q -((g =                                                                                                                                                                  q +P)-(_ =g -  q) )+(P -_))-(P =k -B),l[1]=k -(P +_)+(_  -B),_  =(D =g +P)-g,l[2]= g -(D -_)+(P -_),l[3]=    D;const           Q =r(N,a,4,l,d);return d[Q -1];}(t,o,p,b,y,h,m);},t.orient2dfast =function (t,e,n,r,o,f){    return (e -f)*(n -o)-(t -o) *(r -f)                                                                                                                                                                                                                                                                                                                                                                                      ;} , Object.  defineProperty(   t, "__esModule" ,   {value:! 0  }  ) ;}   ) ;}  ,   "../node_modules/skmeans/dist/node/distance.js"                                                                                                                                                                                                                                            :module =>{"use strict";module.exports  ={ eudist:function eudist(v1,v2,sqrt){var   len =v1.length;var                                                                                sum =0;for (var i =0;i <len;i++ ){var d =(v1[i]||0)-(v2[i]||0);sum +=d *d;}return sqrt ?Math.sqrt(       sum):sum;},mandist:function mandist(v1,v2,sqrt){var len =v1.length;var sum  =0;for (var i =0;i <len;i++ ){sum +=Math.abs((v1[i]||0) -( v2[i]||0));}return sqrt ?Math.sqrt(        sum):sum;},  dist:function dist(v1, v2,sqrt){var d  =Math.abs(v1 -v2);return sqrt ?d : d *d;}};} ,   "../node_modules/skmeans/dist/node/kinit.js"                                                                : (module,__unused_webpack_exports,__webpack_require__) =>{ "use strict" ;var   Distance =__webpack_require__("../node_modules/skmeans/dist/node/distance.js"),eudist =Distance.eudist,dist =Distance.dist;module.exports ={kmrand:function kmrand(data,k){var map ={},ks =[],t =k <<2;var len       =data.length;var multi =data[0].length >0;while ( ks.length <k &&t-- >0){var d =data[ Math. floor(      Math.                                                                                                random() *len)] ;var  key =multi ? d.join("_"):""+d;if (!map[key] ){map[ key]=  true;ks.push(d);} }                                                                                                                                 if (ks.length <k)throw  new Error("Error initializating clusters");else return ks;},kmpp:function kmpp(data,k){var distance =data[ 0].length ?eudist :dist;var ks =[],len =data.length;var multi =data[0].length >0;var map  ={}        ;var c =data[Math.floor(Math.random()*len)];var key  =multi ?c.join("_"):""+c;ks.push(c);map[key]=   true;while                                                          (ks.     length <k){ var dists =[ ],lk =ks.length;var dsum =0,prs =[];for (var  i =0;i <   len;i++ ) {                                                                                                                                                                                                                                         var min =Infinity;for ( var j =0;j <lk;j++ ) {var _dist =distance(data[i],ks[j])   ;if  (_dist  <=min)  min  =                                                           
                               _dist;}dists[i]=min;}for (var _i =0;_i <len;_i++ ){dsum +=dists[_i];}for (var _i2 =0;_i2 <len;_i2++ ){prs[_i2]={i:_i2,v:data[_i2],pr:dists[_i2]/dsum,cs:0 };}prs.sort(function (a,b){return a.pr -b.pr;});prs[0].cs =prs[0].pr;for (var _i3 =1;_i3 <len;_i3++ ){prs[_i3].cs =prs[_i3 -1].cs +prs[_i3].pr;}var rnd =Math.random();var idx =0;while (idx <len -1 &&prs[idx++ ].cs <rnd){}ks.push(prs[idx -1].v);}return ks;}};},"../node_modules/skmeans/dist/node/main.js":(module,__unused_webpack_exports,__webpack_require__) =>{"use strict";var Distance =__webpack_require__("../node_modules/skmeans/dist/node/distance.js"),ClusterInit =__webpack_require__("../node_modules/skmeans/dist/node/kinit.js"),eudist =Distance.eudist,mandist =Distance.mandist,dist =Distance.dist,kmrand =ClusterInit.kmrand,kmpp =ClusterInit.kmpp;var MAX =10000;function init(len,val,v){v =v ||        [] ;for (var i = 0;i <                                                           len;i++ ){v[i]=val;}return v;}function skmeans(data,k,initial,maxit){var ks =[],    old =[],idxs =[] ,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           dist =[];var conv = false, it = maxit ||MAX;var len =data.length,vlen =data[0].    length,multi =vlen >                                                                                                                                                                                                                                                                        0;var count =[];if (!initial){var _idxs ={};while (ks.length <k){var idx =Math.    floor(Math.random(                                                                                                                                                                   )*len);if (!   _idxs[idx]){_idxs[idx]=true;ks.push(data[idx]);}}}else if (initial =="kmrand"){ks =kmrand(    data,            k);}else if (initial =="kmpp"){ks =kmpp(data,k) ;}else {ks =initial;}do {init(k,0,count)    ;for (var i =0;i <len;i++ ){var min                                                                                                                                                                                                                                                                                                                                                                                       =Infinity,_idx =0;for (var j =0;j <k;j++ ){var dist =multi ?eudist(data[i],ks[j])   :Math.abs(data[i]-                                                                                                                                                                                                                                                                         ks[j]);if (dist <=min){min =dist;_idx =j;}}idxs[i]=_idx;count[_idx]++ ;}var sum =   [], old  =[], dif =                                                                               0;for (var _j =0;_j <k;_j++ ){sum[_j]=multi ?init(vlen,0,sum[_j]):0;old[_j]=ks[_j];}if (multi)      {for (var _j2 =0;_j2 <k;_j2++ ){ks[_j2]=[] ;}for (var _i =0;_i <len;_i++ ){var _idx2 =idxs[_i],vsum =sum[_idx2],vect =data[_i];for (var h =0;h <vlen;h++ ){vsum[h]+=vect[h];}}conv =       true;for (var  _j3 =0;_j3 <k;_j3++ ){var ksj =ks[_j3],sumj =sum[_j3],oldj =old[_j3],cj =count[    _j3];for                                                                                                   (var _h =0;_h <vlen;_h++ ){ksj[_h]=sumj[_h] /cj ||0;}if (conv){for (var _h2 =   0;_h2 <vlen;_h2++ ){if (oldj[_h2]!=ksj[_h2]){conv =false;break ;}}}}}else {for (var _i2 =0;_i2 <len;_i2++ ){var _idx3 =idxs[_i2];sum[_idx3]+=data[_i2];}for (var _j4 =0;_j4 <k;_j4++  ){ks[_j4]=sum[_j4]/count[_j4]      ||0;} conv =true;for (var _j5 =0;_j5 <k;_j5++ ){if (old[_j5]!=ks[_j5]){conv  =false;break ;}}}     conv  =                                                                                               conv || --it <=0;}while (!conv);return {it:MAX -it,k:k,idxs:idxs,centroids:ks } ;} module.exports =                                                                                                                                 skmeans;},"../node_modules/tinyqueue/index.js": ( __unused_webpack_module, __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":(       ) =>TinyQueue  });class TinyQueue {constructor(data  =[], compare =defaultCompare){this.data =    data;this.                                                          length  =this.data.length;this.compare =compare;if  (this.length >0){for (let i =(this.   length >>1)                                                                                                                                                                                                                                         -1;i  >=0;i-- )this._down(i) ;}}push(item){ this.data.push(item);this. length++   ;this._up(this.length -1);}                                                            
                             pop(){if (this.length ===0)return undefined;const top = this.data[0];const bottom =this.data.pop();this.length--  ;if (this.length > 0){this.data[0] =bottom;this._down(0);}return top;}peek(){return  this.data[0];}_up(pos){const {data,compare }=this;const item = data[pos];while (pos >0){const parent =pos -1 >>1;const current =data[parent];if ( compare(item, current) >=0)break ;data[pos]= current;pos    =parent;} data[ pos]=item;}_down(  pos){const {data,compare }=this;const halfLength =this.length >>1;const item = data[pos];while (pos  < halfLength){let left = ( pos <<1)+1;let best   =data[left];const  right  = left +1;if ( right <this.length &&compare(data[right],best)< 0) {left =right;best =data[right];}if (compare( best,item) >= 0)break ;data[pos] = best;pos  =left;}data[ pos]=item;}}function defaultCompare(a,b) {return a <b ? -1 :a >b ?1  :0;}},       "../node_modules/topojson-client/src/bbox.js"                                    :(   __unused_webpack_module,  __webpack_exports__, __webpack_require__)    => {          "use strict"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ;__webpack_require__. r(   __webpack_exports__)    ;__webpack_require__.    d(    __webpack_exports__,                                                                                                                                                                                                                                                                              {  "default": (     )   =>    __WEBPACK_DEFAULT_EXPORT__    }    )   ;var    _transform_js__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                       =    __webpack_require__(   "../node_modules/topojson-client/src/transform.js"  )    ;function     __WEBPACK_DEFAULT_EXPORT__(  topology){var t =( 0, _transform_js__WEBPACK_IMPORTED_MODULE_0__["default"] )( topology. transform),key,x0 =Infinity,y0 =x0,                                                                                                                                                                                                                                                                                                                                                                            x1 = -x0,y1 = -x0;function bboxPoint(p){p =t(p);if (p[0]<x0)x0 =p[0];if (p[0]>x1)   x1 =p[0];if ( p[1]<                                                                                                                                                                                                                                                                        y0)y0 =p[1];if (p[1]>y1) y1 =p[1];} function bboxGeometry(o){switch (o.type){case   "GeometryCollection"                                                                              :  o.   geometries.  forEach( bboxGeometry);break  ;case "Point":bboxPoint( o.coordinates)      ;break ;case "MultiPoint":o.coordinates.forEach(bboxPoint);break ;}}topology.arcs.forEach(function (arc){var i = -1,n =arc.length,p;while ( ++i <n){p =t(arc[i],i);if (p[0]<x0)x0 =p[0];if (     p[0]>x1)x1 =p[0];if (p[1]<y0)y0 =p[1];if (p[1]>y1)y1 =p[1];}});for (key in topology.objects)             {                                                                                                  bboxGeometry( topology.objects[   key]) ;} return   [ x0,y0,   x1, y1] ;} },   "../node_modules/topojson-client/src/bisect.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,     {"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(a,x){var lo  = 0,hi =a.                                                                                             length;while ( lo <hi){var mid =lo + hi >>>1;if (a[mid]<x)lo =mid +1;else hi =  mid;}return  lo;}},                                                                                                                                 "../node_modules/topojson-client/src/feature.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) => {"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>       __WEBPACK_DEFAULT_EXPORT__,   "object"     :  (      )     =>  object      }       )  ;var    _reverse_js__WEBPACK_IMPORTED_MODULE_0__                               =        __webpack_require__("../node_modules/topojson-client/src/reverse.js"  );var    _transform_js__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                                            = __webpack_require__(  "../node_modules/topojson-client/src/transform.js" )                    ;function                                                             
                             __WEBPACK_DEFAULT_EXPORT__(topology,o){if (typeof o ==="string")o =topology.objects[o];return o.type ==="GeometryCollection"?{type:"FeatureCollection",features: o.geometries.map(function  (o){return feature(topology,o);})}: feature(topology,o);}function feature(topology,o){var id =o.id,bbox =o.bbox,properties =o.properties ==null ?{}:o.properties,geometry =object(topology,o);return id ==null &&bbox ==null ?{type:"Feature",properties:properties,geometry:geometry }:bbox ==null ?{type:"Feature",id:id,properties:properties,geometry:geometry }:{type:"Feature",id:id,bbox:bbox,properties:properties,geometry:geometry };}function object(topology,o){var transformPoint =(0,_transform_js__WEBPACK_IMPORTED_MODULE_1__["default"]) (topology.transform),arcs =topology.arcs;function arc(i,points){if (points.length)points.pop();for (var a =arcs[i <0 ?~i :i],k =0,n =a.      length;  k  <n;  ++k) {                                                             points.  push( transformPoint(     a[  k],   k) )   ;} if  ( i  <    0)  ( 0,    _reverse_js__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "default"])(points,n);} function point( p){ return  transformPoint(p);}function      line( arcs) { var                                                                                                                                                                                                                                                                         points =[]  ;for ( var i  =0,n =arcs. length;i <n; ++i)arc(arcs[i],points);if (    points. length <2)                                                                                                                                                                      points.push(   points[0]);return points;}function ring(arcs){var points =line(arcs);while (points.length     < 4)         points.push(points[ 0]);return  points;}function polygon(arcs){return arcs.map(ring);}    function geometry(o){ var  type =o.                                                                                                                                                                                                                                                                                                                                                                                           type, coordinates;switch (type){ case "GeometryCollection":  return  {type:type,    geometries:     o.                                                                                                                                                                                                                                                                         geometries. map(geometry)  } ;case "Point": coordinates =point(   o.coordinates)      ;break    ;case                                                                              "MultiPoint":coordinates  =o.coordinates.map(point);break ;case "LineString":coordinates =      line(o. arcs);break ;case "MultiLineString":coordinates =o.  arcs. map(line);break  ;case "Polygon": coordinates =polygon( o.arcs) ;break ;case "MultiPolygon" :coordinates =o. arcs.map(polygon)     ;break ;default:return null;}return  {type:type,coordinates:coordinates };}return geometry(   o);}  } ,                                                                                                 "../node_modules/topojson-client/src/identity.js":  (__unused_webpack_module,    __webpack_exports__,  __webpack_require__)    => {"use strict"  ;__webpack_require__.r( __webpack_exports__);__webpack_require__.d(__webpack_exports__,{ "default" :   ( )  =>__WEBPACK_DEFAULT_EXPORT__  }  ) ;function     __WEBPACK_DEFAULT_EXPORT__(x){return x;} },"../node_modules/topojson-client/src/index.js":(   __unused_webpack_module,                                                                              __webpack_exports__,__webpack_require__)  =>{"use strict";__webpack_require__.                   r(                                                                                                                                  __webpack_exports__) ;__webpack_require__. d(__webpack_exports__, {  "bbox"  :(  )   =>  _bbox_js__WEBPACK_IMPORTED_MODULE_0__[  "default"] ,"feature":   ( )  =>_feature_js__WEBPACK_IMPORTED_MODULE_1__[  "default" ] ,  "merge" : ( ) =>         _merge_js__WEBPACK_IMPORTED_MODULE_3__[    "default" ],   "mergeArcs"  :    (   )   =>   _merge_js__WEBPACK_IMPORTED_MODULE_3__.                              mergeArcs,  "mesh" :()  =>_mesh_js__WEBPACK_IMPORTED_MODULE_2__["default"],"meshArcs":() => _mesh_js__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                                         meshArcs,"neighbors":() =>_neighbors_js__WEBPACK_IMPORTED_MODULE_4__["default"],     "quantize"    :   ( )  =>                                                             
                              _quantize_js__WEBPACK_IMPORTED_MODULE_5__["default"  ] ,"transform":() =>_transform_js__WEBPACK_IMPORTED_MODULE_6__["default" ],"untransform":() =>  _untransform_js__WEBPACK_IMPORTED_MODULE_7__[ "default"]} );var _bbox_js__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/topojson-client/src/bbox.js" )  ;var _feature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/topojson-client/src/feature.js");var _mesh_js__WEBPACK_IMPORTED_MODULE_2__  = __webpack_require__( "../node_modules/topojson-client/src/mesh.js");var _merge_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( "../node_modules/topojson-client/src/merge.js" );var   _neighbors_js__WEBPACK_IMPORTED_MODULE_4__  =__webpack_require__("../node_modules/topojson-client/src/neighbors.js") ;var _quantize_js__WEBPACK_IMPORTED_MODULE_5__  = __webpack_require__(      "../node_modules/topojson-client/src/quantize.js"                                  )    ;var  _transform_js__WEBPACK_IMPORTED_MODULE_6__ =   __webpack_require__(    "../node_modules/topojson-client/src/transform.js"                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ) ;var _untransform_js__WEBPACK_IMPORTED_MODULE_7__    =__webpack_require__(    "../node_modules/topojson-client/src/untransform.js"                                                                                                                                                                                                                                        ) ;} ,"../node_modules/topojson-client/src/merge.js" :(__unused_webpack_module,    __webpack_exports__,                                                                                                                                                                    __webpack_require__) =>  { "use strict" ;__webpack_require__.  r(  __webpack_exports__)   ;__webpack_require__.d( __webpack_exports__,   {"default" :  ( ) => __WEBPACK_DEFAULT_EXPORT__,"mergeArcs":()  =>  mergeArcs  }  );var _feature_js__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                                                                                                                                                                                                                          =__webpack_require__("../node_modules/topojson-client/src/feature.js"  )   ;var   _stitch_js__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                                                                                    =  __webpack_require__("../node_modules/topojson-client/src/stitch.js" );function      planarRingArea(                                                                              ring){var i = -1,n  =ring.length,a,b =ring[n -1],area =0;while ( ++i <n)a =b,b =ring[i],      area +=a[0]*b[1]-a[1]*b[0];return Math.abs(area);}function __WEBPACK_DEFAULT_EXPORT__(topology){return (0,_feature_js__WEBPACK_IMPORTED_MODULE_0__.object)(topology,mergeArcs.apply(this,arguments));}     function mergeArcs(topology,objects){var polygonsByArc  = { } ,polygons  =[] ,groups =[]    ;objects.                                                                                                 forEach( geometry) ;function    geometry(o)  {  switch  (o.  type)   {  case   "GeometryCollection": o.geometries.forEach(geometry);break ;case "Polygon" : extract( o.arcs);break  ;case  "MultiPolygon":o.arcs.forEach(extract) ;break ;}}function extract(polygon){polygon.forEach(function (ring){ring.     forEach(function (arc){(polygonsByArc[arc =arc <0 ?~arc :arc]||(polygonsByArc[arc]=[])).        push(                                                                                              polygon);}   )   ;}  )  ;polygons. push( polygon);}function   area( ring)  {  return planarRingArea(                                                                                                                              (0,_feature_js__WEBPACK_IMPORTED_MODULE_0__.object)(topology,{type: "Polygon",arcs:[ring]} ) .coordinates[0]);}polygons.forEach(function (polygon){if  (!polygon._){var group =[],neighbors =[polygon];polygon._  =1;groups.push(group);while (     polygon =neighbors. pop() ){ group.push(polygon);polygon.forEach(function  (ring) {ring.     forEach(                                                           function (arc){polygonsByArc[arc <0 ?~arc :arc].forEach(function (polygon){if (!polygon.  _){polygon.                                                                                                                                                                                                                                     _ =1;neighbors.push(polygon);}});});});}}});polygons.forEach(function (polygon)    { delete     polygon. _;})                                                              
                             ;return { type: "MultiPolygon",arcs:groups.map(function (polygons){var arcs =[],n;polygons.forEach(function (polygon){polygon.forEach(function (ring) {ring.forEach(function (arc){if ( polygonsByArc[arc  <0 ?~arc :arc].  length < 2){arcs.push(arc) ;}} );});} );arcs =( 0,_stitch_js__WEBPACK_IMPORTED_MODULE_1__["default"])( topology,arcs);if (( n =arcs.length)>1) {for ( var  i   = 1, k  =area(arcs[ 0]),ki,t;i <n; ++i){if ((ki =area( arcs[i]))>k) {t =arcs[0],arcs[0]= arcs[i],arcs[i]=t,k =ki;} }}return arcs;}).filter(function ( arcs){ return arcs. length >0;})};}},"../node_modules/topojson-client/src/mesh.js":(__unused_webpack_module,__webpack_exports__, __webpack_require__) =>{ "use strict" ;__webpack_require__.r(__webpack_exports__);__webpack_require__.d( __webpack_exports__,{"default": ()  =>__WEBPACK_DEFAULT_EXPORT__,"meshArcs": ( ) =>meshArcs });var      _feature_js__WEBPACK_IMPORTED_MODULE_0__                                         = __webpack_require__( "../node_modules/topojson-client/src/feature.js"  )  ;var    _stitch_jswebpack_require__( "../node_modules/topojson-client/src/stitch.js");function    __WEBPACK_DEFAULT_EXPORT__(                                                                                                                                                                                                                                                                 topology){ return (0,_feature_js__WEBPACK_IMPORTED_MODULE_0__.object)(topology,    meshArcs.   apply(                                                                                                                                                                               this,    arguments));}function meshArcs(topology,object,filter){var arcs,i,n;if (arguments.length      >     1)arcs  =extractArcs(topology,object,filter);else for (i =0,arcs =new Array(n =topology.    arcs.length); i <n; ++i)   arcs[i]=                                                                                                                                                                                                                                                                                                                                                                                            i;return {type:"MultiLineString",arcs:(0,_stitch_js__WEBPACK_IMPORTED_MODULE_1__[     "default"   ])  (                                                                                                                                                                                                                                                                           topology,arcs)};}function  extractArcs(topology,object,filter) { var arcs =[],     geomsByArc  =[],                                                                              geom;function extract0(i){var j =i <0 ?~i :i;(geomsByArc[j]||(geomsByArc[j]=[])).push(     {i:i,g:geom });}function extract1(arcs){arcs.forEach(extract0);} function extract2(arcs){arcs.forEach(extract1);}function  extract3( arcs){arcs.forEach(extract2);}function geometry( o){switch (geom =o,o.    type){case "GeometryCollection":o.geometries.forEach(geometry);break ;case "LineString"    :extract1(                                                                                                 o.arcs);break ;case  "MultiLineString" : case "Polygon":  extract2( o.arcs)   ;break ;case "MultiPolygon":extract3(o.arcs);break ;}}geometry(object);geomsByArc.forEach(filter ==null ?function (geoms){arcs. push(geoms[0].i);}:function (geoms){if (filter(geoms[0].g,geoms[geoms.length -1].g))arcs.push(    geoms[0] .i) ;} );return arcs;} },"../node_modules/topojson-client/src/neighbors.js": (    __unused_webpack_module,                                                                             __webpack_exports__, __webpack_require__) =>{"use strict";__webpack_require__.                   r(                                                                                                                                 __webpack_exports__) ;__webpack_require__.d(__webpack_exports__,{"default"  :  () =>__WEBPACK_DEFAULT_EXPORT__  });var _bisect_js__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__( "../node_modules/topojson-client/src/bisect.js")   ;function    __WEBPACK_DEFAULT_EXPORT__(objects) {var  indexesByArc = { },neighbors   = objects.map(    function (                                                           ) {    return [];});function line(arcs,i){arcs.forEach(function (a){if (a <0)a =~a;var        o     =                                                                                                                                                                                                                                    indexesByArc[a];if (o)o.push(i);else indexesByArc[a]=[ i];});}function polygon(     arcs, i) { arcs.forEach(                                                               
                             function (arc) {line(arc,i);});}function geometry(o,i){if (o.type ==="GeometryCollection")o. geometries.forEach(function  (o){ geometry(o,i);});else if (o. type in geometryType)geometryType[o.type](o.arcs,i);} var geometryType ={LineString:line,MultiLineString:polygon,Polygon:  polygon,MultiPolygon:function (arcs,i){arcs.forEach(function (arc){polygon( arc,i);});}} ;objects.forEach(geometry);for (var  i in indexesByArc){for (var indexes =indexesByArc[i] ,m =indexes.length,j =0;j <m;  ++j){ for (var k =j +1;k <m; ++k){var ij  =indexes[j], ik  =indexes[k],n;if ((n =neighbors[ij])[i  =(0,_bisect_js__WEBPACK_IMPORTED_MODULE_0__["default"])(n,ik)]!==ik)n.splice(i,0,ik) ;if ((n =neighbors[ik])[i =(0,_bisect_js__WEBPACK_IMPORTED_MODULE_0__["default"])(n,ij)]!==ij)n. splice(i,0,ij);}}} return neighbors;} },"../node_modules/topojson-client/src/quantize.js":(       __unused_webpack_module,                                                        __webpack_exports__,__webpack_require__) => {"use strict";__webpack_require__.r(    __webpack_exports__)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ;__webpack_require__.   d(   __webpack_exports__,  {    "default"   :  ( )   =>    __WEBPACK_DEFAULT_EXPORT__                                                                                                                                                                                                                                                                    } )    ;var  _bbox_js__WEBPACK_IMPORTED_MODULE_0__    =  __webpack_require__(    "../node_modules/topojson-client/src/bbox.js"                                                                                                                                                )     ;var               _untransform_js__WEBPACK_IMPORTED_MODULE_1__        =    __webpack_require__(                 "../node_modules/topojson-client/src/untransform.js"        )           ;function            __WEBPACK_DEFAULT_EXPORT__(                                                                                                                                                                                                                                                                                                                                                                                             topology,transform){if ( topology.transform)throw new Error( "already quantized")   ;if (!transform ||                                                                                                                                                                                                                                                                         !transform.  scale){if (!( (n =Math.floor(transform) ) >=    2))throw new  Error(     "n must be ≥2" )                                                                             ;box = topology.bbox ||(0,_bbox_js__WEBPACK_IMPORTED_MODULE_0__["default"])(topology)     ;var  x0   =box[0] ,y0  =box[ 1],x1 =box[2],y1   =  box[3],n;transform ={ scale:[ x1 - x0 ?(x1 -x0) /( n -1): 1,  y1 - y0 ? ( y1 - y0) /(n -1):1],translate:  [x0, y0]} ;}else { box =topology.bbox;}var t =(0,    _untransform_js__WEBPACK_IMPORTED_MODULE_1__["default" ] )(transform),box,key,inputs =     topology.                                                                                              objects,outputs ={};function  quantizePoint(point){ return t(point);}function   quantizeGeometry(input){var output;switch (input.type){case "GeometryCollection":output ={type:"GeometryCollection",geometries: input.geometries.map(quantizeGeometry)} ;break  ;case "Point":output ={type:"Point",coordinates:    quantizePoint(input.coordinates)};break ;case "MultiPoint":output ={type:"MultiPoint",   coordinates:                                                                                         input.coordinates.map(quantizePoint) };break ;default:return input;}if (input.  id !=null)output.id                                                                                                                                  =input.id;if (input.bbox !=null)output.bbox =input.bbox;if (input.properties !=null)output.properties  =input.properties;return output;}function quantizeArc(input){var i =0,j  =1,n =input.length,p,output =new Array(n) ;output[0]=t(input[0],0)    ;while ( ++i <n)if ((p =t(input[i],i))[0]||p[1])output[j++ ]=p;if (j ===1)output[j++ ]    = [  0,0]                                                           ;output. length  =j;return output;}for (  key in  inputs)outputs[ key]=quantizeGeometry(  inputs[key])                                                                                                                                                                                                                                  ;return {type: "Topology",bbox:box,   transform:transform,objects:outputs, arcs:       topology.   arcs. map(                                                               
                             quantizeArc)};}}, "../node_modules/topojson-client/src/reverse.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(array,n){ var t,j  =array.length,i =j -n;while (i < --j)t =array[i],array[i++ ]=array[j],array[j]= t;}},"../node_modules/topojson-client/src/stitch.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(topology,arcs){var stitchedArcs ={}, fragmentByStart ={},fragmentByEnd ={},fragments  =[], emptyIndex = -1;arcs.forEach(function (i,j){var arc =        topology.arcs[i <0 ?~i                                                          :i],t;if (arc.length <3 &&!arc[1][0]&&!arc[1][1]){t  =arcs[ ++emptyIndex],arcs[    emptyIndex]=i,arcs[                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          j]=t;}});arcs.forEach(function (i){var e =ends(i),start =e[0],end =e[1],f,g;if (   f   =fragmentByEnd[                                                                                                                                                                                                                                                                          start] )  { delete fragmentByEnd[ f.  end]  ;f.  push( i);f.end =end;if ( g  =      fragmentByStart[                                                                                                                                                                          end]){delete    fragmentByStart[g.start];var  fg = g  ===f ?f  :f.concat(g);fragmentByStart[fg.start =f.        start]=fragmentByEnd[fg.end =g.end]=fg;}else {fragmentByStart[f.start]=fragmentByEnd[ f.   end]  =     f;} }  else  if  (   f =                                                                                                                                                                                                                                                                                                                                                                                              fragmentByStart[end] ) { delete fragmentByStart[f. start];f.unshift(i) ;f.start =   start;if   (    g =                                                                                                                                                                                                                                                                        fragmentByEnd[start]) {delete fragmentByEnd[g.end];var gf =g ===f ?f :g.concat(f)    ;fragmentByStart[                                                                            gf.start =g.start]=fragmentByEnd[gf.end  =f.end]=gf;}else { fragmentByStart[f.start]=    fragmentByEnd[f.end]=f;}}else {f =[i];fragmentByStart[f.start =start]=fragmentByEnd[f.end =end]=f;}}) ;function ends(i){var arc =topology. arcs[i <0 ?~i :i],p0 =arc[  0],p1;if (topology.transform)p1 =[ 0,0],arc.    forEach(function ( dp) {p1[ 0]+= dp[0],p1[1]+= dp[1];});else p1 =arc[arc. length  -1]  ;return i <                                                                                              0 ?[p1,p0]:[p0,p1];}function flush(fragmentByEnd,fragmentByStart){for  (var k    in fragmentByEnd){  var f =fragmentByEnd[ k];delete fragmentByStart[f.start];delete  f.start;delete f.end;f.forEach( function (i){stitchedArcs[i <0 ?~i :i]=1;});fragments.push(f);}}flush(fragmentByEnd, fragmentByStart);flush(    fragmentByStart,fragmentByEnd);arcs.forEach(function (i){if (!stitchedArcs[i <0 ?~i :      i]    )                                                                                          fragments.   push(   [      i]    )  ;}   )   ;return   fragments;}     }    ,  "../node_modules/topojson-client/src/transform.js"                                                                                                    : (__unused_webpack_module,   __webpack_exports__,  __webpack_require__)  => {"use strict" ;__webpack_require__.  r(__webpack_exports__)  ;__webpack_require__.d( __webpack_exports__, {  "default" : (  )  => __WEBPACK_DEFAULT_EXPORT__   });var             _identity_js__WEBPACK_IMPORTED_MODULE_0__         =     __webpack_require__(   "../node_modules/topojson-client/src/identity.js"                       )       ;function  __WEBPACK_DEFAULT_EXPORT__( transform) {if  ( transform  ==  null)   return _identity_js__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                           "default"  ];var x0,y0, kx   =transform.scale[0],ky =transform. scale[ 1],dx  =    transform.translate[0],dy =                                                               
                             transform.translate[1];return function (input,i){if (!i) x0 =y0 =0;var j =2,n =input.length,output = new Array(n);output[0]=(x0 +=input[0])*kx +dx;output[1]=(y0 +=input[1])*ky +dy;while (j <n)output[j]=input[j],  ++j;return  output;};}},"../node_modules/topojson-client/src/untransform.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default" :() =>__WEBPACK_DEFAULT_EXPORT__ });var _identity_js__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/topojson-client/src/identity.js");function __WEBPACK_DEFAULT_EXPORT__(transform){if (transform ==null) return _identity_js__WEBPACK_IMPORTED_MODULE_0__["default"];var  x0,y0,kx =transform.scale[0],ky =transform.scale[1],dx =transform. translate[0],dy =transform.translate[1]         ;return   function (                                                         input,i){if ( !i)x0 =y0 =0;var  j =2,n  =input.length,output  =new Array(n),x1 =    Math.round((input[                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           0]-dx)/kx),y1 =Math.round((input[1] -dy)/ky);output[0]=x1 -x0,x0 =x1;output[1]=    y1 -y0,y0 =y1;while                                                                                                                                                                                                                                                                             ( j  < n)  output[j]  = input[ j]   ,   ++  j;return   output;}  ;}    }  ,    "../node_modules/topojson-server/src/bounds.js"                                                                                                                                                 :       (      __unused_webpack_module,  __webpack_exports__,__webpack_require__)  =>   { "use strict"    ;__webpack_require__.r(__webpack_exports__) ;__webpack_require__.d(__webpack_exports__, {        "default"   :     (    )    =>                                                                                                                                                                                                                                                                                                                                                                                                __WEBPACK_DEFAULT_EXPORT__   } );var  _object_js__WEBPACK_IMPORTED_MODULE_0__   =   __webpack_require__(                                                                                                                                                                                                                                                                               "../node_modules/topojson-server/src/object.js"     )           ;function   __WEBPACK_DEFAULT_EXPORT__(                                                                    objects){var x0 =Infinity,y0 =Infinity,x1  =  -Infinity, y1 = -  Infinity;function    boundGeometry(geometry){ if (geometry !=null  &&_object_js__WEBPACK_IMPORTED_MODULE_0__. hasOwnProperty.call( boundGeometryType,geometry.type) )boundGeometryType[geometry.type]( geometry);} var boundGeometryType ={    GeometryCollection:function (o){o.geometries.forEach(boundGeometry);},Point:function      (  o)  {                                                                                             boundPoint(o.coordinates);}  ,MultiPoint:function ( o){o.coordinates.forEach(   boundPoint);},LineString:function (o){boundLine(o.arcs);} ,MultiLineString:function (o){o. arcs.forEach(boundLine);}, Polygon:function (o){o.arcs.forEach(boundLine);}, MultiPolygon:function (o){o.arcs.forEach(boundMultiLine);}}    ;function boundPoint(coordinates){var x =coordinates[0],y =coordinates[1];if (x <x0)   x0 =x;if (x                                                                                         >x1)x1 =x;if (y  <y0) y0 =y;if (y  >y1)y1 =y;}function boundLine(coordinates){         coordinates.                                                                                                                                  forEach(boundPoint);}function boundMultiLine(coordinates){coordinates.forEach(boundLine);}for (var key in objects){boundGeometry(objects[ key]);}return x1 >=x0 &&y1 >=y0 ?[x0,y0,x1,y1]: undefined;}},"../node_modules/topojson-server/src/cut.js":(    __unused_webpack_module, __webpack_exports__, __webpack_require__)  => {"use strict"   ;__webpack_require__.                                                 r(     __webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>    __WEBPACK_DEFAULT_EXPORT__                                                                                                                                                                                                                    })   ;var     _join_js__WEBPACK_IMPORTED_MODULE_0__   = __webpack_require__(   "../node_modules/topojson-server/src/join.js"                                              
                           );function __WEBPACK_DEFAULT_EXPORT__(topology){var junctions =(0,_join_js__WEBPACK_IMPORTED_MODULE_0__["default"])(topology),coordinates =topology.coordinates,lines =topology.lines,rings =topology.rings,next,i,n;for (i =0,n =lines.length;i <n; ++i){var line =lines[i],lineMid =line[0],lineEnd = line[1];while ( ++lineMid <lineEnd){if (junctions.has(coordinates[lineMid])){next ={0:lineMid,1:line[1]};line[1]= lineMid;line =line.next =next;}}}for (i =0,n =rings.length;i <n; ++i){var ring =rings[i],ringStart  =ring[0],ringMid =ringStart,ringEnd =ring[1],ringFixed =junctions.has(coordinates[ringStart]);while ( ++ringMid <ringEnd){if (junctions.has( coordinates[ringMid])){if (ringFixed){next ={0:ringMid,1:ring[1]};ring[1]=ringMid;ring =ring.next =next;}else {rotateArray(coordinates,ringStart,ringEnd,ringEnd -ringMid);coordinates[ringEnd]=coordinates[ringStart]            ;ringFixed      =                                                         true;ringMid  =ringStart;}}}}return topology;}function rotateArray(array,start,    end,    offset)  {                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           reverse(array,start,end);reverse(array,start,start +offset);reverse(array,start     +  offset,  end);}                                                                                                                                                                                                                                                                         function reverse(array,start,end){for (var mid =start  + ( end-- -start >>1),t;      start < mid;  ++                                                                                                                                                                            start, --end)     {     t   = array[  start] ,  array[  start]  = array[end],array[ end]  = t;}  }  }  ,        "../node_modules/topojson-server/src/dedup.js"   :   (      __unused_webpack_module,                  __webpack_exports__,                                                                                                                                                                                                                                                                                                                                                                                                 __webpack_require__) => {"use strict" ;__webpack_require__.r(__webpack_exports__)   ;__webpack_require__.                                                                                                                                                                                                                                                                        d(__webpack_exports__, {  "default" :  () =>__WEBPACK_DEFAULT_EXPORT__  }) ;var   _hash_hashmap_js__WEBPACK_IMPORTED_MODULE_0__                                                   = __webpack_require__("../node_modules/topojson-server/src/hash/hashmap.js");var     _hash_point_equal_js__WEBPACK_IMPORTED_MODULE_1__  = __webpack_require__(     "../node_modules/topojson-server/src/hash/point-equal.js"   );var _hash_point_hash_js__WEBPACK_IMPORTED_MODULE_2__   =__webpack_require__(             "../node_modules/topojson-server/src/hash/point-hash.js"  )     ;function    __WEBPACK_DEFAULT_EXPORT__(                                                                            topology){var coordinates =topology.  coordinates,lines =topology.lines,line,   rings =topology.rings,ring,arcCount =lines.length +rings.length,i,n;delete topology.lines;delete topology.rings;for (i =0,n =lines.length;i <n; ++i){line =lines[i];while (line =line.next) ++arcCount;}for (i =0,n =rings.length;i <    n; ++i){ ring  = rings[i];while  ( ring =ring.next) ++arcCount;}var arcsByEnd =(0,    _hash_hashmap_js__WEBPACK_IMPORTED_MODULE_0__[                                                     "default"])(arcCount *2 *1.4,_hash_point_hash_js__WEBPACK_IMPORTED_MODULE_2__[   "default"      ] ,                                                                                                                                  _hash_point_equal_js__WEBPACK_IMPORTED_MODULE_1__["default"]),arcs  =topology.arcs =[];for (i =0,n =lines.length;i < n; ++i){line =lines[i];do {dedupLine(line);}while (line =line.next);}for (i =0,n =rings.length;i <n; ++i){ring =rings[i];if (ring.   next){do {dedupLine( ring);} while  (ring  =ring. next) ;}else {dedupRing( ring);}}       function                                                          dedupLine( arc){var startPoint,endPoint,startArcs,startArc,endArcs,endArc,i,n;if (startArcs =arcsByEnd.                                                                                                                                                                                                                             get(startPoint =coordinates[arc[0]])){for (i =0,n =startArcs.length;i <n;  ++i){   startArc =startArcs[i];if (                                                                
                           equalLine(startArc,arc)){arc[0]=startArc[0];arc[1]=startArc[1];return ;}}}if (endArcs =arcsByEnd.get(endPoint =coordinates[arc[1]])){for (i =0,n =endArcs.length;i <n; ++i){endArc =endArcs[i];if (reverseEqualLine(endArc,arc)){arc[1]=endArc[0];arc[0]=endArc[1];return ;}}}if (startArcs)startArcs.push(arc);else arcsByEnd.set(startPoint,[arc]);if (endArcs)endArcs.push(arc);else arcsByEnd.set(endPoint,[arc]);arcs.push(arc);}function dedupRing(arc){var endPoint,endArcs,endArc,i,n;if (endArcs =arcsByEnd.get(endPoint =coordinates[arc[0]])){for (i =0,n =endArcs.length;i <n; ++i){endArc =endArcs[i];if (equalRing(endArc,arc)){arc[0]=endArc[0];arc[1]=endArc[1];return ;}if (reverseEqualRing(endArc,arc)){arc[0]=endArc[1];arc[1]=endArc[0];return ;}}}if (endArcs =arcsByEnd.get(endPoint =coordinates[arc[0]+findMinimumOffset(arc)])){for (i =0,n =endArcs.length;i <n; ++i){      endArc =endArcs[i];if (                                                          equalRing(endArc, arc))  { arc[ 0]=endArc[0];arc[1]=endArc[ 1] ;return ;}if  (     reverseEqualRing(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           endArc,arc)){arc[0]=endArc[1];arc[ 1]=endArc[0];return ;}}}if (endArcs)endArcs.    push(   arc)  ;else                                                                                                                                                                                                                                                                         arcsByEnd.set(endPoint,[arc]);arcs.push(arc);}function equalLine(arcA,arcB){var    ia  =arcA[0],ib  =                                                                                                                                                                            arcB[0], ja =    arcA[1],jb =arcB[1];if (ia -ja !==ib -jb)return false;for (;ia <=ja; ++ia, ++ib)if (!(0,_hash_point_equal_js__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[ia],coordinates[    ib] )) return  false;return true;}                                                                                                                                                                                                                                                                                                                                                                                                  function reverseEqualLine(arcA,arcB){var ia =arcA[0],ib =arcB[0],ja =arcA[1],jb =   arcB[1];if (ia -ja                                                                                                                                                                                                                                                                             !==ib -jb)   return false;for   (    ;ia <= ja;   ++ ia, -- jb) if  (  ! ( 0,   _hash_point_equal_js__WEBPACK_IMPORTED_MODULE_1__[                                           "default"])( coordinates[ia],coordinates[jb]) )return false;return true;} function   equalRing( arcA,arcB){var ia  =arcA[0], ib  =  arcB[0],ja = arcA[1],jb =arcB[1],n =ja -ia;if (n !==jb -  ib)return false;var  ka =findMinimumOffset(arcA),kb  =findMinimumOffset(arcB);for  (var i =0;i  <n; ++i) {if ( !(0,   _hash_point_equal_js__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[ ia +(i +   ka)% n]    ,                                                                                           coordinates[ ib  + ( i  + kb)%n]))  return   false;}   return  true;}function   reverseEqualRing(arcA,arcB) {var ia =arcA[0],ib =arcB[ 0],ja =arcA[1],jb =arcB[1],n =ja  -ia;if ( n !==jb -ib) return  false;var  ka = findMinimumOffset(arcA) ,kb =n -findMinimumOffset(arcB);for (var i =0; i < n; ++i){if     (!(0,   _hash_point_equal_js__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[ia  +(i +   ka)%  n]   ,                                                                                       coordinates[jb -  (    i +  kb)% n]  ) )return   false;} return true;}function   findMinimumOffset(                                                                                                                                   arc){var start =arc[0],end =arc[1],mid =start,minimum =mid,minimumPoint =coordinates[mid];while ( ++mid <end){var point =coordinates[mid];if (point[0]<minimumPoint[0]||point[0]===minimumPoint[0]&&point[1]<minimumPoint[1]){minimum =mid;minimumPoint         =  point;} }    return  minimum   - start;}        return  topology;}     } ,   "../node_modules/topojson-server/src/delta.js"                         :(    __unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict"  ;__webpack_require__.                                                                                                                                                                                                                    r(__webpack_exports__)  ;__webpack_require__. d(__webpack_exports__,{"default":(             )             =>                                                                  
                           __WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(arcs){var i = -1,n =arcs.length;while ( ++i <n){var arc =arcs[i],j =0,k  =1, m =arc.length,point =arc[0],x0 =point[0],y0 =point[1],x1,y1;while ( ++j <m){point = arc[j],x1 =point[0] ,y1 =point[1];if (x1 !==x0  ||y1 !==y0)arc[k++ ]=[x1 -x0,y1 -y0],x0 =x1,y0 =y1;}if (k ===1)arc[k++ ]=[0,0];arc.length =k;}return arcs;}},"../node_modules/topojson-server/src/extract.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _object_js__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/topojson-server/src/object.js");function __WEBPACK_DEFAULT_EXPORT__(objects){var index = -1,lines =[],rings =[],coordinates =[];function              extractGeometry(                                                       geometry){if (geometry &&_object_js__WEBPACK_IMPORTED_MODULE_0__.hasOwnProperty.                 call(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           extractGeometryType,geometry.type))extractGeometryType[geometry.type](geometry)       ;}           var                                                                                                                                                                                                                                                                         extractGeometryType ={GeometryCollection:function ( o) {o.  geometries.forEach(    extractGeometry);}                                                                                                                                                                              , LineString:   function (o){o.arcs =extractLine(o.arcs) ;},MultiLineString:function (o){o.arcs =o.arcs.map(extractLine);},Polygon:function (o){ o.arcs =o.arcs.map(extractRing);},MultiPolygon:   function (  o) {o.arcs =o.arcs.map(                                                                                                                                                                                                                                                                                                                                                                                                   extractMultiRing);}};function extractLine(line){for (var i =0,n =line. length;i <   n; ++i)coordinates[                                                                                                                                                                                                                                                                         ++index]=line[i];var arc ={0:index -n +1,1:index };lines.push(arc) ;return arc;}              function                                                                         extractRing(ring){for  (var i =0,n =ring.length;i < n; ++ i)coordinates[ ++index]=   ring[ i];var arc ={0:index  -n + 1,1: index } ;rings.push(arc);return arc;}function extractMultiRing(rings){ return rings.map(extractRing);}for (var key in objects){extractGeometry(objects[key] );}return {type:"Topology" ,    coordinates: coordinates,lines: lines,rings: rings,objects: objects  }    ;}  } ,   "../node_modules/topojson-server/src/geometry.js"                                                      :(  __unused_webpack_module, __webpack_exports__, __webpack_require__)   => {   "use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":  () =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__( inputs){var outputs ={}, key;for (key in inputs)    outputs[key]=geomifyObject(inputs[key] );return outputs;} function geomifyObject(       input) {                                                                                        return  input  ==null ?{type: null }:( input.  type ==="FeatureCollection"  ?  geomifyFeatureCollection                                                                                                                              :input.type ==="Feature" ?geomifyFeature  :geomifyGeometry)(input);}  function geomifyFeatureCollection(input){var output = {type:"GeometryCollection",geometries:input.  features.map(geomifyFeature) } ;if  ( input. bbox != null)output.bbox  =input.     bbox;return output;} function geomifyFeature(input){var output =geomifyGeometry(         input.                                                          geometry) ,key;if (input.id !=null)output.id =input.id;if (input.bbox !=null)output.bbox =      input.                                                                                                                                                                                                                            bbox;for (key in input.properties){output.properties =input.properties;break ;}    return   output;} function                                                                  
                           geomifyGeometry(input){if (input ==null)return {type:null };var output =input.type ==="GeometryCollection"?{type:"GeometryCollection" ,geometries:input.geometries.map(geomifyGeometry)}:input.type ==="Point"||input.type ==="MultiPoint"?{type:input.type,coordinates:input.coordinates  }:{type:input.type,arcs:input.coordinates };if (input.bbox !=null)output.bbox =input.bbox;return output;}},"../node_modules/topojson-server/src/hash/hashmap.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(size, hash,equal,keyType,keyEmpty,valueType){if (arguments.length ===3){keyType =valueType =Array;keyEmpty  =null;}var keystore =new keyType(size =1 <<Math.max(4,Math.ceil(      Math.log(size)/Math.LN2)                                                       )), valstore =new valueType(size) ,mask =size -1;for (var i =0;i  < size; ++ i){    keystore[     i] =                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           keyEmpty;}function set(key,value){var index =hash(key)&mask,matchKey =keystore[    index],collisions =                                                                                                                                                                                                                                                                         0;while  (matchKey !=keyEmpty){if (equal(matchKey,key))return valstore[index] =      value;if  (   ++                                                                                                                                                                               collisions >=   size)throw new Error("full hashmap");matchKey =keystore[index =index +1 &mask];}keystore[index]=key;valstore[index]=value;return value;}function maybeSet(key,value){var index   =hash(key)&mask,matchKey =keystore[                                                                                                                                                                                                                                                                                                                                                                                                    index], collisions =0;while  ( matchKey != keyEmpty) { if (equal( matchKey, key))      return valstore[                                                                                                                                                                                                                                                                         index];if ( ++collisions  >=  size)throw  new  Error("full hashmap" );matchKey =    keystore[index  =                                                                          index +1 &mask];}keystore[index]=key;valstore[index]=value;return value;}function   get(key,missingValue){var index =hash(key)&mask,matchKey =keystore[index],collisions  =0;while (matchKey !=keyEmpty){if (equal(matchKey,key))return valstore[index] ;if (  ++ collisions >=size)break ;matchKey =keystore[index =  index +1 &mask];}return missingValue;}function keys(){var keys =[];for (var i =0,    n =keystore.                                                                                          length; i <n; ++i){var matchKey =keystore[i] ;if (matchKey  !=keyEmpty) keys.   push(  matchKey);} return  keys;}return  { set:set,maybeSet:maybeSet,get:get,keys:keys  }  ;}  },"../node_modules/topojson-server/src/hash/hashset.js" :(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict"    ;__webpack_require__.   r( __webpack_exports__)        ;__webpack_require__. d(   __webpack_exports__,                                                                                   {  "default"  :  ( )   =>   __WEBPACK_DEFAULT_EXPORT__   }    )  ;function  __WEBPACK_DEFAULT_EXPORT__(                                                                                                                            size,hash,equal,type,empty){if (arguments.length ===3){type =Array;empty =null;}var store =new type(size =1 <<Math.max(4,Math.ceil(Math.log(size)/Math.LN2))),mask =size -1;for (var i =0;i <size; ++i) {store[i]=empty;}function add(value) {var index =  hash(value)&mask,match =store[index],collisions = 0;while ( match !=empty){  if (   equal( match,                                                          value) )return true;if ( ++ collisions >=size)throw new Error("full hashset" );match =    store[index                                                                                                                                                                                                                            =index +1 &mask];}store[index]=value;return true;}function has(value){var index   =hash(value)&mask,match  =                                                                   
                           store[index],collisions =0;while (match !=empty){if (equal(match,value))return true;if ( ++collisions >=size)break ;match =store[index =index +1 &mask];}return false;}function values(){ var values =[];for (var i =0,n =store.length;i <n; ++i){ var match =store[i];if (match !=empty)values.push(match);}return values;}return {add: add,has:has,values:values };}},"../node_modules/topojson-server/src/hash/point-equal.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{ "use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });function __WEBPACK_DEFAULT_EXPORT__(pointA,pointB){return pointA[0]===pointB[0]&&pointA[1]===pointB[1];}} ,"../node_modules/topojson-server/src/hash/point-hash.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{                  "use strict"                                                        ;__webpack_require__.   r(  __webpack_exports__)      ;__webpack_require__.  d(    __webpack_exports__,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         {"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var buffer =new  ArrayBuffer(16),      floats     =  new                                                                                                                                                                                                                                                                            Float64Array(  buffer) ,   uints     = new  Uint32Array(  buffer)  ;function    __WEBPACK_DEFAULT_EXPORT__(                                                                                                                                                                          point)   {    floats[0]=  point[   0];floats[ 1]=point[  1]  ;var hash   = uints[0]^ uints[1] ;hash   =hash  << 5 ^hash >>7      ^uints[ 2]^ uints[  3];return hash  & 0x7fffffff;}  } ,    "../node_modules/topojson-server/src/index.js"                                                                                                                                                                                                                                                                                                                                                                                           :   ( __unused_webpack_module,    __webpack_exports__,__webpack_require__) =>  {          "use strict"                                                                                                                                                                                                                                                                           ;__webpack_require__.    r(     __webpack_exports__)  ;__webpack_require__. d(   __webpack_exports__,                                                                        {"topology": ()  => _topology_js__WEBPACK_IMPORTED_MODULE_0__["default"]} );var        _topology_js__WEBPACK_IMPORTED_MODULE_0__  =  __webpack_require__(  "../node_modules/topojson-server/src/topology.js");},  "../node_modules/topojson-server/src/join.js" :   ( __unused_webpack_module,   __webpack_exports__,    __webpack_require__)  =>{"use strict";__webpack_require__.r(__webpack_exports__)   ;__webpack_require__.                                                                                 d(__webpack_exports__, { "default" :()  => __WEBPACK_DEFAULT_EXPORT__  });var      _hash_hashset_js__WEBPACK_IMPORTED_MODULE_0__      =      __webpack_require__(     "../node_modules/topojson-server/src/hash/hashset.js"    )   ;var     _hash_hashmap_js__WEBPACK_IMPORTED_MODULE_1__        =   __webpack_require__(            "../node_modules/topojson-server/src/hash/hashmap.js"      )       ;var    _hash_point_equal_js__WEBPACK_IMPORTED_MODULE_2__                                                 =__webpack_require__("../node_modules/topojson-server/src/hash/point-equal.js"         )       ;var                                                                                                                                      _hash_point_hash_js__WEBPACK_IMPORTED_MODULE_3__  =__webpack_require__( "../node_modules/topojson-server/src/hash/point-hash.js");function   __WEBPACK_DEFAULT_EXPORT__(topology){var coordinates =topology.coordinates,lines  =topology.lines,rings  =    topology.rings, indexes =index(),visitedByIndex = new  Int32Array( coordinates.      length)   ,                                                         leftByIndex =new Int32Array(coordinates. length),rightByIndex = new Int32Array(coordinates.   length) ,                                                                                                                                                                                                                        junctionByIndex =new   Int8Array(coordinates. length) ,junctionCount  = 0,  i,n,                previousIndex,                                                                   
                           currentIndex,nextIndex;for (i =0,n =coordinates.length;i <n; ++i){visitedByIndex[i]=leftByIndex[i]=rightByIndex[i]= -1;}for (i =0,n =lines.length;i <n; ++i){var line =lines[i],lineStart =line[0],lineEnd =line[1];currentIndex =indexes[lineStart];nextIndex =indexes[ ++lineStart]; ++junctionCount,junctionByIndex[currentIndex]=1;while ( ++lineStart <=lineEnd){sequence(i,previousIndex =currentIndex,currentIndex =nextIndex,nextIndex =indexes[lineStart]);} ++junctionCount,junctionByIndex[nextIndex]=1;}for (i =0,n =coordinates.length;i <n; ++i){visitedByIndex[i]= -1;}for (i =0,n =rings.length;i <n; ++i){var ring =rings[i],ringStart =ring[0]+1,ringEnd =ring[1];previousIndex =indexes[ringEnd -1];currentIndex =indexes[ringStart -1];nextIndex =indexes[ringStart];sequence(i,previousIndex,currentIndex,nextIndex);while ( ++ringStart <=ringEnd){sequence(i,previousIndex             =   currentIndex,                                                       currentIndex =  nextIndex, nextIndex =indexes[ringStart]);}}function sequence(i,        previousIndex,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               currentIndex,  nextIndex) {if     ( visitedByIndex[  currentIndex]  ===  i)    return ;visitedByIndex[                                                                                                                                                                                                                                                                     currentIndex]=i;var leftIndex =leftByIndex[currentIndex];if (leftIndex >=0){var        rightIndex   =                                                                                                                                                                                 rightByIndex[     currentIndex];if ( (leftIndex !==previousIndex ||rightIndex !==nextIndex)&&(leftIndex !==nextIndex ||rightIndex !==previousIndex) ) { ++junctionCount,  junctionByIndex[     currentIndex] =  1;}  } else    {                                                                                                                                                                                                                                                                                                                                                                                                      leftByIndex[ currentIndex] =previousIndex;rightByIndex[currentIndex]=nextIndex;}}   function index( ) {                                                                                                                                                                                                                                                                         var indexByPoint =( 0,_hash_hashmap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(   coordinates.length                                                                          *1.4,hashIndex,equalIndex,  Int32Array, -1,Int32Array),indexes =new Int32Array(   coordinates.length);for (var i =0,n =coordinates.length;i <n; ++i){indexes[ i]=indexByPoint.maybeSet(i,i);}return indexes;}function hashIndex(i){return (0,_hash_point_hash_js__WEBPACK_IMPORTED_MODULE_3__["default"])(coordinates[   i])      ;}       function  equalIndex(   i,    j)      {  return    (        0,    _hash_point_equal_js__WEBPACK_IMPORTED_MODULE_2__[                                                   "default" ])(coordinates[ i],coordinates[j]);}visitedByIndex = leftByIndex  =   rightByIndex =null;var junctionByPoint =( 0,_hash_hashset_js__WEBPACK_IMPORTED_MODULE_0__["default"])( junctionCount * 1.4, _hash_point_hash_js__WEBPACK_IMPORTED_MODULE_3__["default"],_hash_point_equal_js__WEBPACK_IMPORTED_MODULE_2__[   "default"]),j;for (i =0,n =coordinates.length;i <n; ++i){if (junctionByIndex[j =    indexes[i]])                                                                                     { junctionByPoint. add(  coordinates[ j]   )  ;}}return   junctionByPoint;} },  "../node_modules/topojson-server/src/object.js"                                                                                                            :(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"hasOwnProperty":() =>hasOwnProperty });var hasOwnProperty =Object.prototype.    hasOwnProperty;}    , "../node_modules/topojson-server/src/prequantize.js" : (    __unused_webpack_module,                                               __webpack_exports__, __webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__) ;__webpack_require__.                                                                                                                                                                                                      d(__webpack_exports__,{"default": (  )  =>  __WEBPACK_DEFAULT_EXPORT__ } );var  _object_js__WEBPACK_IMPORTED_MODULE_0__                                                        
                           =__webpack_require__("../node_modules/topojson-server/src/object.js" );function __WEBPACK_DEFAULT_EXPORT__(objects,bbox,n){var x0 =bbox[0],y0 =bbox[1],x1 =bbox[2],y1 =bbox[3],kx =x1 -x0 ?(n -1)/(x1 -x0):1, ky =y1 -y0 ?(n -1)/(y1 - y0):1;function quantizePoint(input){return  [Math.round((input[ 0] -x0)*kx),Math.round((input[1]-y0)*ky)];}function quantizePoints(input, m){var i = -1,j =0,n = input.length,output = new Array(n),pi,px, py,x,y;while ( ++i <n){pi  =input[i];x =Math.round((pi[0]-x0)*kx);y =Math.round((pi[1]- y0)*ky);if (x !==px ||y !==py)output[j++  ]=[px =x,py =y];}output.length =j;while (j <m)j =output.push([output[ 0][0],output[0][1]]);return output;}function quantizeLine(input){return  quantizePoints(input,2);}function quantizeRing(input){return quantizePoints(input,4);}function quantizePolygon(input){return input.map(quantizeRing);}function       quantizeGeometry(o){if (                                                      o   !=   null  && _object_js__WEBPACK_IMPORTED_MODULE_0__. hasOwnProperty. call(    quantizeGeometryType,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          o.type) ) quantizeGeometryType[ o. type]( o);}  var  quantizeGeometryType  ={    GeometryCollection:                                                                                                                                                                                                                                                                          function  (o) {o.geometries.forEach(quantizeGeometry);},Point:function (o) {o.    coordinates      =                                                                                                                                                                                  quantizePoint(   o.coordinates);},MultiPoint:function ( o){o.coordinates =o.coordinates.map( quantizePoint);}, LineString:function (o){ o.arcs =quantizeLine(o.arcs);},MultiLineString:    function (o) { o.arcs  =o.arcs.map(                                                                                                                                                                                                                                                                                                                                                                                                       quantizeLine);},  Polygon:function (o) {  o.  arcs   =quantizePolygon(o.arcs);} ,        MultiPolygon:                                                                                                                                                                                                                                                                         function (o){o.arcs  =o.arcs.map(quantizePolygon);}} ;for  (var key in objects){     quantizeGeometry(                                                                          objects[key] ) ;}return {scale: [1  /  kx, 1 / ky]  , translate:[  x0,y0]};} },   "../node_modules/topojson-server/src/topology.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":(   ) =>__WEBPACK_DEFAULT_EXPORT__ });var _bounds_js__WEBPACK_IMPORTED_MODULE_0__  =   __webpack_require__(                                                                                           "../node_modules/topojson-server/src/bounds.js"       )        ;var     _cut_js__WEBPACK_IMPORTED_MODULE_1__   = __webpack_require__( "../node_modules/topojson-server/src/cut.js" )   ;var  _dedup_js__WEBPACK_IMPORTED_MODULE_2__  = __webpack_require__(  "../node_modules/topojson-server/src/dedup.js" );var           _delta_js__WEBPACK_IMPORTED_MODULE_3__        =     __webpack_require__(   "../node_modules/topojson-server/src/delta.js"                                                     )     ;var   _extract_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(  "../node_modules/topojson-server/src/extract.js"                                                                                                              );var _geometry_js__WEBPACK_IMPORTED_MODULE_5__ =__webpack_require__("../node_modules/topojson-server/src/geometry.js");var _hash_hashmap_js__WEBPACK_IMPORTED_MODULE_6__ =__webpack_require__("../node_modules/topojson-server/src/hash/hashmap.js"      ) ;var    _object_js__WEBPACK_IMPORTED_MODULE_7__    =   __webpack_require__(   "../node_modules/topojson-server/src/object.js"                          )    ;var        _prequantize_js__WEBPACK_IMPORTED_MODULE_8__  =__webpack_require__(    "../node_modules/topojson-server/src/prequantize.js"                                                                                                                                                                               ) ;function  __WEBPACK_DEFAULT_EXPORT__( objects,quantization)   {var bbox =(0,   _bounds_js__WEBPACK_IMPORTED_MODULE_0__[                                                       
                          "default" ])(objects =(0,_geometry_js__WEBPACK_IMPORTED_MODULE_5__["default"])(objects)),transform =quantization >0 &&bbox &&(0,_prequantize_js__WEBPACK_IMPORTED_MODULE_8__["default"])(objects, bbox,quantization),topology =(0,_dedup_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_cut_js__WEBPACK_IMPORTED_MODULE_1__["default"])((0,_extract_js__WEBPACK_IMPORTED_MODULE_4__["default"])(objects))),coordinates =topology.coordinates,indexByArc =(0,_hash_hashmap_js__WEBPACK_IMPORTED_MODULE_6__[ "default"])(topology.arcs.length *1.4, hashArc,equalArc);objects =topology.objects;topology.bbox =bbox;topology.arcs =topology.arcs.map(function (arc,i){indexByArc.set( arc,i);return coordinates.slice(arc[0],arc[1]+1);});delete topology.coordinates;coordinates =null;function indexGeometry(geometry){if (geometry &&_object_js__WEBPACK_IMPORTED_MODULE_7__.hasOwnProperty.call(            indexGeometryType,                                                      geometry.type))indexGeometryType[geometry.type](geometry);}var indexGeometryType            =        {                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GeometryCollection:function    ( o){o. geometries. forEach( indexGeometry) ;},    LineString:function                                                                                                                                                                                                                                                                         (o){o.arcs =indexArcs(o.arcs);} ,MultiLineString:function (o){o.  arcs =o.arcs.    map( indexArcs);},                                                                                                                                                                                         Polygon:    function (o){o.arcs =o.arcs.map(indexArcs);},MultiPolygon:function (o){o.arcs =o.arcs.map(indexMultiArcs);}};function indexArcs(arc){var indexes =[];do {var index =  indexByArc.get(arc) ;indexes. push(                                                                                                                                                                                                                                                                                                                                                                                                         arc[0] <arc[1]?index :~index) ;}while ( arc = arc.next);return  indexes;}function       indexMultiArcs(                                                                                                                                                                                                                                                                        arcs){ return arcs.  map(indexArcs);}for (  var key in  objects) {indexGeometry(    objects[key]);}if (                                                                          transform) { topology.    transform  =transform;topology.   arcs    =  (   0,     _delta_js__WEBPACK_IMPORTED_MODULE_3__["default"  ] )(  topology.                                                                                                                              arcs)   ;} return  topology;}   function hashArc(arc){var i = arc[ 0],j =arc[1],t;if (j <i)t =i,i =j,j =t;return i +31 *    j;} function                                                                                        equalArc(arcA,arcB){var ia =arcA[0],ja =arcA[1],ib =arcB[0],jb =arcB[1],t;if (  ja < ia)t =ia,ia =ja,                                                                                                                                                                                      ja =t;if (jb <ib)t =ib,ib =jb,jb =  t;return  ia  === ib  &&ja  === jb;}},"../node_modules/turf-jsts/jsts.min.js" :     function  (                                                                                    __unused_webpack_module,exports){ !function  (t,e){true ?e(exports):0;} (this,  function (  t)    {                                                                                                                                                                                                                                                                                                                                                            "use strict";function  e(){}function   n(t){this.message =t ||"";}function i(t) {this.message = t ||"";}function r(t){   this.message =                                                         t ||    "";}function o(){}function s(t) {return null ===t ?Mt : t.color;}function a(t){   return null                                                                                                                                                                                                                        ===t ?null :t.parent;}function u(t,e){null !==t &&(t.color =e);}function l(t){    return null ===t ?null :t.                                                                     
                         left;}function c(t){return null ===t ?null :t.right;}function p(){this.root_ =null,this.size_ =0;}function h(){}function f(){this.array_ =[],arguments[0]instanceof It &&this.addAll(arguments[0]);}function g(){}function d(t){this.message =t ||"";}function y(){this.array_ =[];}"fill"in Array.prototype ||Object.defineProperty(Array.prototype,"fill",{configurable:!0,value:function (t){if (void 0 ===this ||null ===this)throw new TypeError(this +" is not an object");var e =Object(this),n =Math.max(Math.min(e.length,9007199254740991),0)||0,i =1 in arguments ?parseInt(Number(arguments[1]),10)||0 :0;i =i <0 ?Math.max(n +i,0):Math.min(i,n);var r =2 in arguments &&void 0 !==arguments[2]?parseInt(Number(arguments[2]),10)||0 :n;for (r =r <0 ?Math.max(n +arguments[2],0):Math.min(r,n);i <r;)e[i]=t, ++i;return e;},writable:!0 }),Number.isFinite =Number.isFinite ||function       (t) { return "number"==                                                       typeof t && isFinite(t);} ,Number. isInteger =Number.isInteger ||function (t) {     return "number"==                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            typeof t   && isFinite(t)&&Math.floor( t)=== t;},Number. parseFloat =  Number.      parseFloat     ||                                                                                                                                                                                                                                                                         parseFloat,Number.isNaN =Number.isNaN ||function (t){return t !=t;},Math.trunc =      Math. trunc  ||                                                                                                                                                                                     function (t){   return t <0 ?Math.ceil(t):Math.floor(t);};var  _ =function (){} ;_.prototype.interfaces_ =function (){return [];},_. prototype.getClass =function (){return _;},_.     prototype.equalsWithTolerance   =                                                                                                                                                                                                                                                                                                                                                                                                          function (t,e,n){return Math.abs(t -e)<=n;};var m =function (t){function e( e){t.    call(this,e),this.                                                                                                                                                                                                                                                                        name  ="IllegalArgumentException",this.message =e,  this.stack = new t().stack;}    return  t   &&(  e.                                                                        __proto__ =t) , e.prototype   =  Object.create(t &&t.prototype) ,e. prototype.   constructor =e,e;}(Error),v =function (){ },I ={                                                                                                                                                                MAX_VALUE:{configurable:    !0 }};v.isNaN =  function (t)  {return Number. isNaN(t);},v.doubleToLongBits =    function (t){                                                                                       return t;},v.longBitsToDouble =function (t){return t;},v.isInfinite =function   (t){return ! Number.                                                                                                                                                                                                   isFinite(t)   ;} , I.    MAX_VALUE.get = function (){return Number.MAX_VALUE;},Object.defineProperties(    v,I);var  E =                                                                                   function () {},x = function (){},N =function (){},C =function t(){if (this.x =  null,this.y = null,                                                                                                                                                                                                                                                                                                                                                                         this. z   =null,0   ===   arguments. length)this. x =0,this.y =0,this.z =  t.NULL_ORDINATE;else if (1 ===       arguments.                                                         length) {var e =arguments[0];this.x  =e.x,this.y =e.y,this.z =e.z;}else 2 ===arguments.    length   ?(                                                                                                                                                                                                                     this. x  =arguments[  0],this.y =arguments[ 1],this. z =t. NULL_ORDINATE) :3 ===   arguments.length &&(this.x                                                                      
                         =arguments[0],this.y =arguments[1],this.z =arguments[2]);},S ={DimensionalComparator:{configurable:!0 },serialVersionUID:{configurable:!0  },NULL_ORDINATE:{configurable:!0 },X:{configurable:!0 },Y:{configurable:!0 },Z:{configurable:!0 }};C.prototype.setOrdinate =function (t,e){switch (t){case C.X:this.x =e;break ;case C.Y:this.y =e;break ;case C.Z:this.z =e;break ;default:throw new m("Invalid ordinate index: "+t);}},C.prototype. equals2D =function (){if (1 ===arguments.length){ var t =arguments[0];return this.x ===t.x &&this.y ===t.y;}if (2 ===arguments.length){var e =arguments[0],n =arguments[1];return !!_.equalsWithTolerance(this.x,e.x,n)&&!!_. equalsWithTolerance(this.y,e.y,n);} },C.prototype.getOrdinate =function (t){switch (t){case C.X:return this.x;case C.Y:return this.y;case C.Z:return this.z;}throw new m("Invalid ordinate index: " +t);},C.prototype.      equals3D =function ( t){                                                     return this.x === t.x  &&this.y ===t.y &&(this.z  ===t.z ||v.isNaN(this.z))&& v.    isNaN(t. z) ;}, C.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           prototype.equals  =function (t){return  t  instanceof C &&this.equals2D(t);},C.    prototype.equalInZ =                                                                                                                                                                                                                                                                        function (t, e) {return _. equalsWithTolerance( this. z,t.z, e);},C. prototype.         compareTo   =                                                                                                                                                                                      function (t){    var e =t;return this.x <e.x ? -1  :this.x >e.x ?1 :   this.y <e.y ? - 1 :this.y >e. y  ?1 :0;},C.prototype.clone =function (){} ,C.prototype.copy =function (){    return  new C(this);},C.prototype.                                                                                                                                                                                                                                                                                                                                                                                                            toString  =function (){return "(" +this.x +", "+this.y + ", "+this. z +")";}, C.            prototype.                                                                                                                                                                                                                                                                        distance3D = function  (t) {var e =this.x  -t.x,n = this.y - t.y,i =this.z   -t.   z;return Math.sqrt(                                                                        e *e +n *n +i *i);} ,C.prototype.distance =function (t){var e =this.x -t.x,n =    this.y -t.y;return Math.sqrt(e *e +n *n);}                                                                                                                                                                               ,   C.prototype.    hashCode =function (){var t =17;return t =37 *t +C.hashCode(this.x),t =37 *t +     C.hashCode(                                                                                        this.y);},C. prototype.setCoordinate =function  (t){this.x =t.x,this.y =t.y,      this.z =t.z;},C.                                                                                                                                                                                                                prototype.    interfaces_ =function (){return  [E,x,e];},C.prototype.getClass =function (){    return C;},C.                                                                                   hashCode =function (){  if (1 ===arguments.length){var t =arguments[0] ,e = v.  doubleToLongBits(t)                                                                                                                                                                                                                                                                                                                                                                             ;return Math.trunc(     (e ^e) >>>32);} } , S.DimensionalComparator.get = function (){ return L;}, S.   serialVersionUID.                                                       get    =function ( ){return 0x5cbf2c235c7e5800;}, S.NULL_ORDINATE.get  = function ( ){    return   v.                                                                                                                                                                                                                     NaN;},S.X.get =function (){return 0;},S.Y.get =function (){return 1;},S.Z.get  =  function  () {return   2;},                                                                      
                         Object.defineProperties(C,S);var L =function (t){if (this._dimensionsToTest =2,0  ===arguments.length);else if (1  ===arguments.length){var e =arguments[0];if (2  !==e &&3 !==e)throw new m("only 2 or 3 dimensions may be specified");this. _dimensionsToTest =e;}};L.prototype.compare =function (t,e){var n =t,i =e,r =L.compare(n.x,i.x);if (0 !==r)return r;var o =L.compare(n.y,i.y);if (0 !==o)return o;if (this._dimensionsToTest <=2)return 0;return L.compare(n.z,i.z);},L.prototype.interfaces_ =function (){return [N];},L.prototype.getClass =function (){return L;},L.compare =function (t,e){ return t <e ? -1 :t >e ?1 :v.isNaN(t)?v.isNaN(e)?0 : -1 :v.isNaN(e)?1 :0;};var b =function (){};b.prototype.create =function (){},b.prototype.interfaces_ =function ( ){return [];}, b.prototype.getClass =function (){return b;};var w =function (){},O ={INTERIOR:{configurable:!0 },      BOUNDARY:{configurable:!                                                     0 },EXTERIOR:{configurable:!0 },NONE:{configurable:!0 }};w.prototype.interfaces_     = function  ( ) {                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           return [];},w.prototype.getClass  =function ( ){return w;},w.toLocationSymbol =    function (t){switch                                                                                                                                                                                                                                                                          ( t){case w.EXTERIOR: return "e";case w. BOUNDARY: return "b";case w.INTERIOR:    return "i";case w.                                                                                                                                                                                               NONE:    return "-";} throw new m( "Unknown location value: " +t);},O.INTERIOR.get =function ( ){return 0;} ,O.BOUNDARY.get  =function (){return 1;},O.EXTERIOR.get =    function (){return 2;},O.NONE.get =                                                                                                                                                                                                                                                                                                                                                                                                            function (){return (  -1) ;},Object.defineProperties(w,O);var T = function (t,e){           return  t.                                                                                                                                                                                                                                                                        interfaces_  &&t.interfaces_().indexOf(e) > - 1;},R =function (){}, P ={LOG_10: {   configurable:! 0 }}                                                                        ;R.prototype.interfaces_ = function  () { return [ ];},R.prototype. getClass =   function  ( ) {return R;} ,R. log10  =                                                                                                                                                                                   function (t){var e   =Math.log(t);return v.isInfinite(e)? e  :v.isNaN(e) ?e :e /R.LOG_10;},R.min =   function (t,e,                                                                                       n,i){var r =t;return e <r &&(r =e),n <r &&(r =n),i <r &&(r =i) ,r;},R.clamp =   function  () {if (                                                                                                                                                                                                            "number"==typeof   arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof  arguments[1]){      var   t    =                                                                                  arguments[0],e =arguments[1],n =arguments[2];return t <e ?e :t >n ?n : t;}if (   Number. isInteger(                                                                                                                                                                                                                                                                                                                                                                                 arguments[2] )&&      Number.isInteger(arguments[ 0])&&Number.isInteger(arguments[1] ) ) {var i =   arguments[0],r                                                             =     arguments[1],o =arguments[2];return i <r ?r :i >o ?o :i;}},R. wrap =function (      t,e)    {                                                                                                                                                                                                                   return t <0 ?e - -t %e :t % e;} ,R.max =function (){if (3 ===arguments.length){     var t =arguments[0] , e =                                                                       
                         arguments[1],n =arguments[2],i =t;return e >i &&(i =e),n >i &&(i =n),i;}if (4 ===arguments.length){var r =arguments[0],o =arguments[1],s =arguments[2],a =arguments[3],u =r;return o >u &&(u =o),s >u &&(u =s),a >u &&(u =a),u;}},R.average =function (t,e){return (t +e)/2;},P.LOG_10.get =function (){return Math.log(10);},Object.defineProperties(R,P);var D =function (t){this.str =t;};D.prototype.append =function (t){this.str +=t;},D.prototype.setCharAt =function (t,e){this.str =this.str.substr(0,t)+e +this.str.substr(t +1);},D.prototype.toString =function (t){return this.str;};var M =function (t){this.value =t;};M.prototype.intValue =function (){return this.value;},M.prototype.compareTo =function (t){return this.value <t ? -1 :this.value >t ?1 :0;},M.isNaN =function (t){return Number.isNaN(t);};var A =function (){};A.isWhitespace =function (t){return t <=32 &&t >=     0   || 127   ===t;} , A.                                                     toUpperCase =function (t){return t.toUpperCase();};var F =function t(){if (this.    _hi  =0,this._loarguments.length)this.init(0);else if (1  ===arguments.length) {if (      "number" ==typeof                                                                                                                                                                                                                                                                         arguments[0]){var e =arguments[0];this.init(e);}else if (arguments[0]instanceof      t)  {var  n    =                                                                                                                                                                                         arguments[0]    ;this.init(n);}else if ("string"==typeof arguments[0]){var i =arguments[0];t.call(this,t.parse(i));}}else if (2 ===arguments.length){var r =arguments[0],o   =arguments[1];this.init(r,o);}},G =                                                                                                                                                                                                                                                                                                                                                                                                              {PI:{configurable: !0 },TWO_PI: {configurable: !0 },PI_2: {configurable:!0  },E:{    configurable:!0 },                                                                                                                                                                                                                                                                       NaN:   {configurable: !0  },EPS:{configurable:!0  },SPLIT:{configurable:!  0  } ,   MAX_PRINT_DIGITS: {                                                                        configurable:  !0  }, TEN:  { configurable: !0 },ONE:  {  configurable:! 0 } ,  SCI_NOT_EXPONENT_CHAR:{configurable:!                                                                                                                                                                                            0    }    ,   SCI_NOT_ZERO:{configurable:! 0  }};F.prototype.le =function (t){return (this.    _hi < t._hi ||                                                                                      this._hi ===t._hi)&&this._lo <=t._lo;},F.prototype.extractSignificantDigits =   function (t,e){var                                                                                                                                                                                                               n =this.abs()   , i = F.magnitude(n. _hi),r =F.TEN.pow(i) ;(n =n.divide(r)).gt(F.TEN)?(n  =n.    divide(F.TEN),                                                                                  i +=1):n.lt(F.ONE)&&(n =n.multiply(F.TEN),i -=1);for (var o =i +1,s =new D(),a  =F.MAX_PRINT_DIGITS                                                                                                                                                                                                                                                                                                                                                                                     -1,u =0; u <=   a;u++ ){t &&u ===o && s.append(".");var   l = Math.trunc(n._hi) ;if  (l   <0)    break ;var c =                                                          !1,     p =0;l  >9 ?( c =!0,p ="9") :p ="0"+l,s.append( p),n =n.subtract(F.valueOf(l)).   multiply( F.                                                                                                                                                                                                                  TEN),c &&n.selfAdd( F.TEN);var h =!0,f =F.magnitude(n._hi);if (f <0 &&Math.abs(    f)>= a - u && (h =!1) ,!h)                                                                       
                         break ;}return e[0]=i,s.toString();},F.prototype.sqr =function (){return this.multiply(this);},F.prototype. doubleValue =function (){return this._hi +this._lo;},F.prototype.subtract =function (){if (arguments[0]instanceof F){var t =arguments[0];return this.add(t.negate());}if ("number"==typeof arguments[0]){var e =arguments[0];return this.add( -e);}},F.prototype.equals =function (){if (1 ===arguments.length){var t =arguments[0];return this._hi ===t._hi &&this._lo ===t._lo;}},F.prototype.isZero =function (){return 0 ===this._hi &&0 ===this._lo;},F.prototype.selfSubtract =function (){if (arguments[0]instanceof F){var t =arguments[0];return this.isNaN()?this :this.selfAdd( -t._hi, -t._lo);}if ("number"==typeof arguments[0]){var e =arguments[0];return this.isNaN()?this :this.selfAdd( -e,0);}},F.prototype.getSpecialNumberString =function (){return this.isZero()?       "0.0"  : this.isNaN( )?                                                     "NaN ":null;} , F.prototype.  min = function (t){return this.le(t) ?this :t;},F.            prototype.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           selfDivide =function (){if (1 ===arguments.length){if (arguments[0]instanceof F)   {var t  =arguments[                                                                                                                                                                                                                                                                         0];return this.selfDivide(t._hi,t._lo);}if ("number"==typeof arguments[0]){var e     =arguments[   0]                                                                                                                                                                                          ;return this.   selfDivide(e,0);}} else if (2 ===arguments.length){var n =arguments[0] ,i =arguments[1]  ,r =null,o =null,s =null,a =null,u =null,l =null, c = null, p =    null;return u  = this. _hi /n,l =F.                                                                                                                                                                                                                                                                                                                                                                                                              SPLIT *u,r =l -u,p =F.SPLIT *n,r =l -r,o =u -r,s =p -n,c =u *n,s =p -s,a =n -s,p =  r *s -c +r *a +o *                                                                                                                                                                                                                                                                       s +o *a,l =(this._hi -c -p +this._lo -u *i)/n,p =u +l,this._hi =p,this._lo =u -p +  l,  this;}     } ,F.                                                                         prototype.dump =function ( ){return "DD<"+this._hi + ", "+this._lo +">" ;},F.  prototype.divide =function (){if (                                                                                                                                                                                                arguments[   0]instanceof F){var t =arguments[0],e =null,n =null,i =null,r =null,o =null,s    =null,a =null,                                                                                      u =null;n =(o =this._hi /t._hi)-(e =(s =F.SPLIT *o)-(e =s -o)),u =e *(i =(u =   F.SPLIT *t._hi)-(i                                                                                                                                                                                                                 =u -t._hi))   -(a = o *t._hi)+e *(r =t._hi -i)+n *i +n *r,s =(this._hi -a -u +this._lo -o *t.      _lo) /   t.                                                                                 _hi;return new F(u =o +s,o -u +s);}if ("number"==typeof arguments[ 0]){var l =        arguments[ 0]                                                                                                                                                                                                                                                                                                                                                                                       ;return  v.    isNaN(l)?F.createNaN() :F.copy( this). selfDivide( l,0);}},F.prototype.ge  =    function  (t){                                                           return ( this._hi  >t._hi  ||this._hi  ===t._hi) &&this._lo >= t._lo;},F.prototype.pow =  function  (                                                                                                                                                                                                                  t){ if (0 ===t)return  F.valueOf(1);var e =new F(this),n =F.valueOf(1),i =Math.  abs(t);if (i >1)for (;i >0;                                                                        
                         )i %2 ==1 &&n.selfMultiply(e),(i /=2)>0 &&(e =e.sqr());else n =e;return t <0 ?n.reciprocal():n;},F.prototype.ceil =function (){if (this.isNaN())return F.NaN;var t =Math.ceil(this._hi),e =0;return t ===this._hi &&(e =Math.ceil(this._lo)),new F(t,e);},F.prototype.compareTo =function (t){var e =t;return this._hi <e._hi ? -1 :this._hi >e._hi ?1 :this._lo <e._lo ? -1 :this._lo >e._lo ?1 :0;},F.prototype.rint =function (){if (this.isNaN())return this;return this.add(.5).floor();},F.prototype.setValue =function (){if (arguments[0]instanceof F){var t =arguments[0];return this.init(t),this;}if ("number"==typeof arguments[0]){var e =arguments[0];return this.init(e), this;}},F.prototype.max =function (t){return this.ge(t)?this  :t;},F.prototype.sqrt =function (){if (this.isZero())return F.valueOf(0);if (this.isNegative())return F.NaN;var t =1 /Math.sqrt(this._hi) ,e =      this._hi *t,n =F.valueOf(                                                    e),i =this.subtract(n.sqr())._hi *(.5 *t);return n.add(i);},F.prototype.selfAdd =   function ( ){if (1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ===arguments.  length){  if ( arguments[0]instanceof F){ var t  = arguments[ 0]       ;return    this.                                                                                                                                                                                                                                                                         selfAdd(t._hi,t._lo);}if ("number"==typeof arguments[0]){var e =arguments[0],n =     null,i =null,r =                                                                                                                                                                                           null,o =null,   s =null,a =null;return r =this._hi +e,s =r -this._hi,o =r -s,o =e -s +(this._hi -o),a =o +this._lo,n =r +a,i =a +(r -n),this._hi =n +i,this._lo =i +(n   -this._hi) ,this;}}else if  (2  ===                                                                                                                                                                                                                                                                                                                                                                                                                arguments.length){var u =arguments[0],l =arguments[1],c =null,p =null,h =null,f =   null,g =null,  d =                                                                                                                                                                                                                                                                       null,y =null;f =this._hi +u,p =this._lo +l,g = f -(d =f -this._hi),h =p -(y = p -   this._lo);var _ =(c =                                                                       f +(d =(g =u -d +(this._hi -g))+p))+(d =(h =l -y +(this._lo -h))+(d +(f -c))    ),m =d +(c -_);return this._hi =                                                                                                                                                                                                    _, this.      _lo =m,this;}}, F.prototype.selfMultiply  = function (){if ( 1 ===arguments.  length) {  if (                                                                                     arguments[0]instanceof F){var t =arguments[0];return this.selfMultiply(t._hi,      t._lo) ;}  if  (                                                                                                                                                                                                                   "number"    ==typeof arguments[ 0]){var e =arguments[0];return this.selfMultiply(  e,0);}}   else if (2 ===                                                                                 arguments.length){var n =arguments[0],i =arguments[1],r =null,o =null,s =null,  a =null,u =null,l =                                                                                                                                                                                                                                                                                                                                                                                         null;r =(     u =F.SPLIT *this._hi)-this._hi,l =F.SPLIT *n, r =u -r, o =this._hi  -r,s =l -  n;var c = (u  =                                                          this.   _hi *n)+(l =r *(s =l -s)-u +r *(a =n -s)+o *s +o *a +(this._hi *i +this._lo *n)   ),p =l +(r =                                                                                                                                                                                                               u -c);return this._hi =c,this._lo = p, this;}},F.prototype.selfSqr =function (){   return   this.selfMultiply(                                                                        
               this)     ;},F.prototype.floor =function (){if (this.isNaN())return F.NaN;var t =Math. floor(this._hi),e =0;return t ===this._hi &&(e  =Math.floor(this._lo)),new F(t,e);},F.prototype.negate =function (){return this.isNaN()?this :new F( -this._hi, -this._lo);},F.prototype.clone =function (){},F.prototype.multiply =function ( ){if (arguments[0]instanceof  F){var t =arguments[0];return t.isNaN()?F.createNaN():F.copy(this).selfMultiply(t);}if ("number"==typeof arguments[0]){var e =arguments[0];return v.isNaN(e)?F.createNaN():F.copy(this) .selfMultiply(e,0);}},F.prototype.isNaN =function (){return v.isNaN(this._hi);},F.prototype. intValue =function (){return Math.trunc(this._hi);},F.prototype.toString =function (){var t =F.magnitude(this._hi);return t >= -3 &&t <=20 ?this.toStandardNotation():this. toSciNotation();},F.prototype.toStandardNotation =function (){var t =this.       getSpecialNumberString()                                                      ;if  (  null  !==   t)return t;var   e =new  Array(1) .fill( null), n  = this.    extractSignificantDigits(                                                                                                                                         !0,e),i =e[0]+1,r =n;if ("."===n.charAt(0))r ="0"+n;else if (i <0)r ="0."+F.stringOfChar("0" , -i)+n;else if ( -1 ===n.indexOf(".")){var o =i -n. length;r =n +F.stringOfChar( "0",o)+".0";}return this.isNegative()?"-"+ r :r;},F.prototype.                                                                                                              reciprocal =function (){var t =null,e =null,n =null,i =null,r =null,o =null,s =    null,a =null;e =(r =                                                                                                                                                                                                                                                                        1  /this._hi)-(t =(o =F.SPLIT *r)-(t =o -r)) ,n  =(a =F.SPLIT *this. _hi)-this.    _hi;var u =r +(o =                                                                                                                                                                                            ( 1 -(s =r *    this._hi)-(a =t *(n =a -n)-s +t *(i =this._hi -n)+e *n +e *i)-r *this._lo)/this._hi);return new F(u,r -u +o);},F.prototype.toSciNotation =function (    ) {  if  (this.isZero() )return F.                                                                                                                                                                                                                                                                                                                                                                                                                 SCI_NOT_ZERO;var t =this. getSpecialNumberString();if (null !==t)return t;var e =   new Array(1).fill(                                                                                                                                                                                                                                                                       null),n =this.extractSignificantDigits(!1,e),i =F.SCI_NOT_EXPONENT_CHAR +e[0];if (  "0" === n.charAt(0))                                                                       throw new  Error("Found leading zero: "+n);var  r  ="" ;n.length >1  &&(r =n.    substring(1));var o =n.charAt(                                                                                                                                                                                                       0)+"."+      r;return this.isNegative( )?"-"+o +i : o +i;},F.prototype.abs = function (){     return this.                                                                                     isNaN()?F.NaN :this.isNegative()?   this.negate() :new F(this);},F.prototype.         isPositive =                                                                                                                                                                                                                     function    (){ return  (this._hi  >0 ||0 ===this._hi)&&this._lo >0;} ,F.prototype.lt   =   function  (t){                                                                                 return (this._hi <t._hi || this._hi ===t._hi)&&this._lo <t._lo;}, F.prototype.  add =function (){if                                                                                                                                                                                                                                                                                                                                                                                                 (    arguments[0]instanceof F){var t =arguments[0];return F.copy(this).selfAdd(t);}   if ("number"==                                                           typeof  arguments[ 0]) { var e = arguments[0] ;return  F.copy(this) .selfAdd(e) ;} },F.    prototype.                                                                                                                                                                                                               init =function (){if (1 ===arguments.length){if ("number"==typeof arguments[0])   {var t =arguments[ 0];this.                                                                         
               _hi       =t,this._lo =0;}else if (arguments[0]instanceof F){var e =arguments[0];this._hi =e._hi,this._lo =e._lo;}}else if (2 ===arguments.length){var n =arguments[0],i =arguments[1];this._hi =n,this._lo =i;}},F.prototype.gt =function (t){return (this._hi >t._hi ||this._hi ===t._hi)&&this._lo >t._lo;},F.prototype.isNegative =function (){return (this._hi <0 ||0 ===this._hi)&&this._lo <0;},F.prototype.trunc =function (){return this.isNaN()?F.NaN :this.isPositive()?this.floor():this.ceil();},F.prototype.signum =function (){return this._hi >0 ?1 :this._hi <0 ? -1 :this._lo >0 ?1 :this._lo <0 ? -1 :0;},F.prototype.interfaces_ =function (){return [e,E,x];},F.prototype.getClass =function (){return F;},F.sqr =function (t){return F.valueOf(t).selfMultiply(t);},F.valueOf =function (){if ("string"==typeof arguments[0]){var t =arguments[0];return F.parse(t);}if ("number"==typeof       arguments[0] ) {var e  =                                                    arguments[0];return new F(e);} },F.sqrt =function (t){return F.valueOf(t).sqrt()    ;}   ,  F.parse  =                                                                                                                                                function (t){for (var e =0,n =t.length;A.isWhitespace(t.charAt(e));)e++ ;var i =!1;if (e <n){var r =t.charAt(e) ;"-"!==r &&"+"!==r || (e++ , "-"===r &&(i =!0));}for (var o =new F(),s =0,a =0,u =0;!(e >=n);){var l =t.charAt(e);if (e++ ,A.                                                                                                              isDigit(l)){var c  =l -"0";o.selfMultiply( F.TEN),o.selfAdd(c),s++ ;}else {if (    "."!==l){if ("e"===                                                                                                                                                                                                                                                                         l  ||"E"===l){var p =t. substring(e) ;try { u =M.parseInt(p);}catch (e){throw e    instanceof Error ?                                                                                                                                                                                              new   Error(   "Invalid exponent "+p +" in string "+t):e;}break ;}throw new Error("Unexpected character '"+l +"' at position "+e +" in string "+t);}a =s;}}var h    =o,f =s -a -u;if (0 ===f)h = o;else                                                                                                                                                                                                                                                                                                                                                                                                                  if (f >0){var g =F.TEN.pow(f);h =o.divide(g);}else if (f <0){ var d =F.TEN.pow( -   f);h =o.multiply(d)                                                                                                                                                                                                                                                                      ;}return i ?h.negate():h;},F.createNaN =function (){return new  F(v.NaN,v.NaN);},   F.copy =function (t)                                                                      {return new F(t);},F.magnitude =function (t){var e =Math.abs(t),n =Math.log(e)    /Math.log(10),i =Math.trunc(                                                                                                                                                                                                            Math.    floor(n));return 10 *Math.pow(10,i)<=e &&(i +=1),i;},F.stringOfChar =function   (t,e){for (var n                                                                                   =new D(),i =0;i <e;i++ )n.append(t);return n.toString();},G.PI.get =function (  )  { return new F(                                                                                                                                                                                                                       3.141592653589793,  1.2246467991473532e-16)  ;},  G. TWO_PI. get = function  (){  return  new F( 6.283185307179586,                                                                      2.4492935982947064e-16);}  , G.  PI_2. get  = function ( )  { return   new  F(  1.5707963267948966,                                                                                                                                                                                                                                                                                                                                                                                             6.123233995736766e-17) ;},G.E.get =function (){return new F(2.718281828459045,1.4456468917292502e-16) ;},G. NaN.get =                                              function    ()   {    return new  F( v.NaN, v. NaN);}  , G. EPS. get  = function  ( )  {   return 1.23259516440783e-32;}                                                                                                                                                                                            ,G.SPLIT.get =function (){return 134217729;},G.MAX_PRINT_DIGITS.get =function (    ){return 32;}, G.TEN.get =                                                                         
                         function (){return F.valueOf(10);},G.ONE.get =function (){return F.valueOf(1);},G.SCI_NOT_EXPONENT_CHAR.get =function ( ){return "E";},G.SCI_NOT_ZERO.get =function (){return "0.0E0";},Object.defineProperties(F,G);var q =function (){},B ={DP_SAFE_EPSILON:{configurable:!0 }};q.prototype.interfaces_ =function (){return [];},q.prototype.getClass =function (){return  q;},q.orientationIndex =function (t,e,n){var i =q.orientationIndexFilter(t,e,n);if ( i <=1)return i;var r =F.valueOf(e.x).selfAdd( -t.x),o =F.valueOf(e.y).selfAdd( -t.y),s =F.valueOf(n.x).selfAdd( -e.x),a =F.valueOf(n.y).selfAdd( -e.y);return r.selfMultiply(a).selfSubtract(o. selfMultiply(s)).signum();},q.signOfDet2x2 =function (t,e,n,i){return  t.multiply(i).selfSubtract(e.multiply(n)).signum();},q.intersection =function (t,e,n,i){var r =F.valueOf(i.y).selfSubtract(n.y).selfMultiply(F.valueOf(e.x).       selfSubtract(t.x)),o =F.                                                    valueOf(i.x).selfSubtract(n.x).selfMultiply(F.valueOf(e.y).selfSubtract(t.y)),s =   r.subtract(o),a  =                                                                                                                                                F.valueOf(i.x).selfSubtract(n.x).selfMultiply(F.valueOf(t.y).selfSubtract( n.y)),u =F.valueOf(i.y).selfSubtract(n.y).selfMultiply(F.valueOf(t.x).selfSubtract(n.x)),l =a.subtract(u).selfDivide(s).doubleValue(),c =F.valueOf(t.x).selfAdd(F.                                                                                                              valueOf(e.x).selfSubtract(t.x).selfMultiply(l)).doubleValue(),p =F.valueOf(e.x)    .selfSubtract(t.x).                                                                                                                                                                                                                                                                         selfMultiply(F.valueOf(t.y).selfSubtract(n.y)),h =F.valueOf(e.y). selfSubtract(    t.y).selfMultiply(                                                                                                                                                                                               F.valueOf(t.   x).selfSubtract(n.x)),f =p.subtract(h).selfDivide(s).doubleValue(),g =F.valueOf(n.y).selfAdd(F.valueOf(i.y).selfSubtract(n.y).selfMultiply(f)).    doubleValue();return new C(c,g) ;},                                                                                                                                                                                                                                                                                                                                                                                                                   q.orientationIndexFilter =function (t,e,n){var i =null,r =(t.x -n.x)*(e.y -n.y),o   = (t.y -n.y)*(e.x -                                                                                                                                                                                                                                                                      n.x),s =r  -o;if (r >0){if ( o <=0)return q.signum(s);i =r +o;}else {if (!(r <0))   return  q.signum( s)                                                                       ;if (o >=0)return q.signum(s);i = -r -o;}var a =q.DP_SAFE_EPSILON *i;return s   >=a || -s >=a ?q.signum(s) :                                                                                                                                                                                                              2;},    q.signum =function (t){return t >0 ?1 :t <0 ? -1 :0;},B.DP_SAFE_EPSILON.get =    function  ( ){                                                                                     return 1e-15;},Object.defineProperties(q,B);var  V = function ( ){},U ={X: {   configurable:!0 },                                                                                                                                                                                                                         Y: {     configurable:!0  } ,Z:{configurable: ! 0 },M:{ configurable:!0 } };U.X.get =      function (){                                                                                return 0;},U.Y.get =function (){return 1;},U.Z.get =function (){return 2;}, U.  M.get =function (){                                                                                                                                                                                                                                                                                                                                                                                              return 3;} ,V.prototype.setOrdinate =function (t,e,n){},V.prototype.size =function (){},   V. prototype.                                                           getOrdinate  =function (t, e) {}, V.  prototype.getCoordinate = function (){ },V.prototype. getCoordinateCopy                                                                                                                                                                                                      = function (t)  {},V.prototype.getDimension =function (  ){},V.prototype.getX =  function (t){},V.prototype.                                                                          
                        clone =function  (){},V.prototype.expandEnvelope =function (t){},V.prototype.copy =function (){},V.prototype.getY =function (t){},V.prototype.toCoordinateArray =function (){},V.prototype.interfaces_ =function (){return [x];},V.prototype.getClass =function (){return V;},Object.defineProperties(V,U);var z =function (){},X =function (t) {function e(){t.call(this,"Projective point not representable on the Cartesian plane.");}return t &&(e.__proto__ =t),e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e.prototype.interfaces_ =function (){return [];},e.prototype.getClass =function (){return e;},e;}(z),Y =function (){};Y.arraycopy =function (t,e,n,i,r){for (var o =0,s =e;s <e +r;s++ )n[i +o]=t[s],o++ ;},Y.getProperty =function (t){return {"line.separator":"\n"}[t];};var k =function t(){if (this.x =null,this. y =null,this.w =null,0 ===arguments.      length)this.x =0,this.y =                                                    0, this.w =1;else  if (1 ===arguments.length){var e =arguments[0];this.x =e. x,    this.y =e.y,this.w                                                                                                                                                =1;}else if (2 ===arguments.length){if ("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var n =arguments[0],i =arguments[1];this.x =n,this.y =i,this.w =1;}else if (arguments[0]instanceof t &&arguments[1]instanceof t){var r =                                                                                                             arguments[0],o =arguments[1];this.x =r.y *o.w -o.y *r.w,this.y =o.x *r.w -r.x *    o.w,this.w =r.x *o.                                                                                                                                                                                                                                                                        y -o.x *r.y;}else if (arguments[0]instanceof C &&arguments[1]instanceof C){var s   =arguments[ 0],a  =                                                                                                                                                                                                arguments[1]    ;this.x =s.y - a.y,this.y =a.x -s.x,this.w =s.x *a.y - a.x *s.y;} }else if (3 ===arguments.length){var u =arguments[0],l =arguments[ 1],c  =    arguments[2];this. x =u,this. y =l,                                                                                                                                                                                                                                                                                                                                                                                                                    this.w =c;}else if (4 ===arguments.length){var p =arguments[0],h =arguments[1],f =    arguments[2] ,g =                                                                                                                                                                                                                                                                     arguments[3],d  =p.y -h.y,y =h.x -p.x,_ =p.x *h.y -h.x *p.y,m =f.y -g.y,v =g.x -f.   x,I =f.x *g.y -g.x *                                                                      f.y;this.x =y  *I -v *_,this.y =m *_ -d *I, this.w =d *v -m *y;}};k.prototype.  getY =function () { var t  =                                                                                                                                                                                                                this.  y /this.w;if (v.isNaN(t)||v. isInfinite(  t) )throw  new X()  ;return t;} ,k.   prototype.getX =                                                                                   function (){var t =this.x /this.w;if (v.isNaN(t)||v.isInfinite(t))throw new X(     );return t;}, k.                                                                                                                                                                                                                         prototype. getCoordinate =function  (){var t =new C();return t.x =this.getX(),t.y =this. getY(),t;}  ,k.                                                                              prototype.interfaces_ =function (){return [];},k.prototype.getClass =function ( ){ return   k;}, k.                                                                                                                                                                                                                                                                                                                                                                                               intersection =function (t,e,n,i){var r =t.y -e.y,o =e.x -t.x,s =t.x *e.y -e.x *t.y,a =n.y - i.y,u =i. x -n.                                                        x,l    = n.x *i.y -i.x *n.y, c =r *u - a *o,p =(o *l -u *s)/c,h  =(a *s -r *l)/c;if (v.  isNaN(p)||v.                                                                                                                                                                                                           isInfinite(p)||v.isNaN( h)||v. isInfinite(h) )throw new X();return new C(p,h);}    ;var j = function t(){if (                                                                           
                       this._minx =null,this._maxx =null,this._miny =null,this._maxy =null,0 ===arguments.length)this.init();else if (1 ===arguments.length){if (arguments[0]instanceof C){var e =arguments[0];this.init(e.x,e.x,e.y,e.y);}else if (arguments[0]instanceof t){var n =arguments[0];this.init(n);}}else if (2 ===arguments.length){var i =arguments[0],r =arguments[1];this.init(i.x,r.x,i.y,r.y);}else if (4 ===arguments.length){var o =arguments[0],s =arguments[1],a =arguments[2],u =arguments[3];this.init(o,s,a,u);}},H ={serialVersionUID:{configurable:!0 }};j.prototype.getArea =function (){return this.getWidth()*this.getHeight();},j.prototype.equals =function (t){if (!(t instanceof j))return !1;var e =t;return this.isNull()?e.isNull():this._maxx ===e.getMaxX()&&this._maxy ===e.getMaxY()&&this._minx ===e.getMinX()&&this._miny ===e.getMinY();},j.prototype.intersection =function (t){if      (this.isNull()||t.isNull()                                                  ||!this.intersects( t))return new j();var e =this._minx >t._minx ?this._minx :t.    _minx,   n = this.                                                                                                                                                _miny  >t._miny ? this._miny :t._miny,i =this._maxx <t._maxx ?this._maxx :t._maxx,r =this._maxy  <t._maxy ?this._maxy :t._maxy;return new j(e,i,n,r);},j.prototype.isNull =function (){return  this._maxx <this._minx;},j.prototype.getMaxX =                                                                                                              function (   ){return this. _maxx;},j.prototype.covers =function  (){if  (1 ===    arguments. length){                                                                                                                                                                                                                                                                       if (arguments[0]instanceof C){var t =arguments[0];return this.covers(t.x,t.y);}if    (   arguments[  0]                                                                                                                                                                                                 instanceof j)   {var e = arguments[0];return !this.isNull()&&!e.isNull()&&e.getMinX()>=this._minx &&e.getMaxX()<=this._maxx &&e.getMinY()>=this._miny &&e.    getMaxY( )<=this._maxy;}}else if (2                                                                                                                                                                                                                                                                                                                                                                                                                     ===arguments.length){var n =arguments[0],i =arguments[1];return !this.isNull()&&n   >=this._minx &&n <=                                                                                                                                                                                                                                                                    this._maxx &&i >=this._miny &&i <=this._maxy;}},j.prototype.intersects =function ()   {if (1 ===arguments.                                                                      length){if (arguments[0]instanceof j){var t =arguments[0];return !this.isNull(  )&&!t.isNull()&&!(t._minx >                                                                                                                                                                                                                  this. _maxx ||t._maxx <this._minx ||t._miny >this._maxy ||t._maxy <this._miny);}if (     arguments[ 0]                                                                                   instanceof C){var e =arguments[0];return this.intersects(e.x,e.y);}}else if (   2   ===  arguments.                                                                                                                                                                                                                          length) {var n =arguments[0],i =arguments[1];return !this.isNull()&&!(n >this._maxx || n <this._minx ||                                                                              i >this._maxy || i   < this.  _miny);} },j.prototype.getMinY =function   ( ) {  return this._miny;}                                                                                                                                                                                                                                                                                                                                                                                                  ,     j.prototype.   getMinX =  function ( ) { return  this. _minx;},j. prototype.   expandToInclude                                                               =    function (){if ( 1 === arguments.length){if (arguments[0]instanceof C){ var t =    arguments[                                                                                                                                                                                                           0];this.expandToInclude(t.x,t. y) ;}else if (arguments[ 0]instanceof j){var e =   arguments[0];if (e.isNull()                                                                           
                       )return null;this.isNull()?(this._minx =e.getMinX(),this._maxx =e.getMaxX(),this._miny =e.getMinY(),this._maxy = e.getMaxY()):(e._minx <this._minx &&(this._minx =e._minx),e._maxx >this._maxx &&(this._maxx =e._maxx),e._miny <this._miny &&(this._miny =e._miny),e._maxy >this._maxy &&(this._maxy =e._maxy));}}else if (2 ===arguments.length){var n =arguments[0],i =arguments[1];this.isNull()?(this._minx =n,this._maxx =n,this._miny =i,this._maxy =i):(n <this._minx &&(this._minx =n),n >this._maxx &&(this._maxx =n),i <this._miny &&(this._miny =i),i >this._maxy &&(this._maxy =i));}},j.prototype.minExtent =function (){if (this.isNull())return 0;var t =this.getWidth(),e =this.getHeight();return t <e ?t :e;},j.prototype.getWidth =function (){return this.isNull()?0 :this._maxx -this._minx;},j.prototype.compareTo =function (t){var e =t;return this.isNull()?e.isNull()?0 : -1 :      e.isNull()?1 :this._minx <                                                  e._minx ? -1 :this._minx >e._minx ?1 :this. _miny <e._miny ? -1 :this. _miny >e.    _miny  ? 1 : this.                                                                                                                                                _maxx <e._maxx ? - 1 :this._maxx >e._maxx ?1 : this._maxy <e._maxy ? -1 :this._maxy > e._maxy ?1 :0;},j.prototype.translate =function (t,e){if (this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX( )+t,this.getMinY()+e,this.                                                                                                              getMaxY()+e);},j. prototype. toString = function ( ){return "Env["+this._minx +    " : " +this._maxx +                                                                                                                                                                                                                                                                       ", "+this._miny +" : "+this._maxy +"]";},j.prototype.setToNull =function (){this.   _minx =0,this._maxx                                                                                                                                                                                                  = - 1,  this.   _miny =0,this._maxy = -1;},j. prototype.getHeight =function (){return this.isNull()?0 :this._maxy  -this._miny;},j.prototype.maxExtent =    function  (){if ( this.  isNull() )                                                                                                                                                                                                                                                                                                                                                                                                                      return 0;var t  =this.getWidth(),e = this.getHeight( );return t >e ? t  :e;} , j.   prototype.expandBy =                                                                                                                                                                                                                                                                    function (){if (1 ===arguments.length) {var t =arguments[0];this.expandBy( t,t);}    else  if   (  2  ===                                                                      arguments. length){var  e  =arguments[0],n  =arguments[ 1];if  (this.isNull())  return null;this._minx -=                                                                                                                                                                                                                          e,this._maxx +=e,this._miny -=n, this._maxy +=n,( this. _minx >this._maxx  ||    this._miny    >                                                                                    this._maxy)&&this.setToNull();}},j.prototype.contains =function (){if (1 ===    arguments.length){                                                                                                                                                                                                                           if   (arguments[0]instanceof j){var t = arguments[0] ;return this.covers( t);}if (     arguments[  0]                                                                               instanceof C){var  e =arguments[0] ;return  this. covers(e);} } else if (2 ===  arguments.length) {                                                                                                                                                                                                                                                                                                                                                                                                       var n =arguments[0] ,i  =arguments[1];return this.covers(n,i);}},j.prototype.   centre =function                                                            (){     return  this. isNull()?null  :new C((this.getMinX()+ this.getMaxX())/2, (this.    getMinY() +                                                                                                                                                                                                           this.getMaxY())/2);},j. prototype.init =function (){if (0 ===arguments.length)   this.setToNull();else if (                                                                            
                       1 ===arguments.length){if (arguments[0]instanceof C){var t =arguments[0];this.init(t.x,t.x,t.y,t.y);}else if (arguments[0]instanceof j){var e =arguments[0];this._minx =e._minx,this._maxx =e._maxx,this._miny =e._miny,this._maxy =e._maxy;}}else if (2 ===arguments.length){var n =arguments[0],i =arguments[1];this.init(n.x,i.x,n.y,i.y);}else if (4 ===arguments.length){var r =arguments[0],o =arguments[1],s =arguments[2],a =arguments[3];r <o ?(this._minx =r,this._maxx =o):(this._minx =o,this._maxx =r),s <a ?(this._miny =s,this._maxy =a):(this._miny =a,this._maxy =s);}},j.prototype.getMaxY =function (){return this._maxy;},j.prototype.distance =function (t){if (this.intersects(t))return 0;var e =0;this._maxx <t._minx ?e =t._minx -this._maxx :this._minx >t._maxx &&(e =this._minx -t._maxx);var n =0;return this._maxy <t._miny ?n =t._miny -this._maxy :this._miny >t._maxy &&     (n =this._miny -t._maxy),                                                   0 ===e ?n :0 ===n ?e :Math.sqrt(e *e +n *n);},j.prototype.hashCode =function (){    var t =17;return t                                                                                                                                                 =37 *t +C.hashCode(this._minx),t =37 *t +C.hashCode(this._maxx),t = 37 *t +C.hashCode(this._miny),t =37 *t + C. hashCode(this._maxy);},j.prototype.interfaces_ =function ( ){return [E,e];},j.prototype.getClass =function () {return j;},j.      intersects                                                                                              =function (){if (3 ===arguments.length){var t =arguments[0],e =arguments[1],n =     arguments[      2]                                                                                                                                                                                                                                                                       ;return n.x >=(t.x <e.x ?t.x :e.x)&&n.x <=(t.x >e.x ?t.x :e.x)&&n.y >=(t.y <e.y ?   t.y :e. y)&&n.y <=(                                                                                                                                                                                                   t.y >e.y ?t.y    :e.y);}if (4 ===arguments.length){ var i =arguments[0],r =arguments[1],o =arguments[2],s =arguments[3],a  =Math.min(o.x,s.x),u =Math.   max(o.x,s.x),l =Math.min(i.x,r.x),c                                                                                                                                                                                                                                                                                                                                                                                                                        =Math.max(i.x,r. x);return !(l >u)&&!(c <a)&&(a =Math.min(o.y,s.y),u =Math.max(o.   y,s.y),l =Math.min(                                                                                                                                                                                                                                                                      i.y,r.y),c =Math. max( i.y, r.y), !(l >u)&&!(c < a));}},H.serialVersionUID.get =   function   (  )     {                                                                       return 0x51845cd552189800;}, Object.defineProperties( j,  H);var W ={typeStr:  /^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,                                                                                                                                                                                                                  emptyTypeStr:/^\s*(\w+)\s*EMPTY\s*$/, spaces:/\s+/,parenComma: /\)\s*,\s*\(/,   doubleParenComma:                                                                                  /\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/ } ,K = function (t){                 this.                                                                                                                                                                                                                           geometryFactory =t ||new  _e(  );};K.prototype.read   =function (t) {var e,n,i;t =t.replace( /[\n\r]/g," " )                                                                        ;var r =W.typeStr.exec(t);if ( -1 !== t.search("EMPTY")&&(( r =W.emptyTypeStr.  exec(t))[2]=void 0)                                                                                                                                                                                                                                                                                                                                                                                                       ,r &&(n =r[ 1].toLowerCase(),i =r[2],Q[n]&&(e =Q[n] .apply(this,[i]))),void 0    ===e) throw new                                                            Error(  "Could not parse WKT "+ t);return e;} ,K.prototype.  write = function    (   t){  return this.                                                                                                                                                                                                       extractGeometry(t);},K.prototype. extractGeometry  =function  (t)  {  var e =t.      getGeometryType(     )  .                                                                            
                       toLowerCase();if (!J[e])return null;var n =e.toUpperCase();return t.isEmpty()?n +" EMPTY":n +"("+J[e].apply(this,[t])+")";};var J ={coordinate:function (t){return t.x +" "+t.y;},point:function (t){return J.coordinate.call(this,t._coordinates._coordinates[0]);},multipoint:function (t){for (var e =[],n =0,i =t._geometries.length;n <i; ++n)e.push("("+J.point.apply(this,[t._geometries[n]])+")");return e.join(",");},linestring:function (t){for (var e =[],n =0,i =t._points._coordinates.length;n <i; ++n)e.push(J.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(",");},linearring:function (t){for (var e =[],n =0,i =t._points._coordinates.length;n <i; ++n)e.push(J.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(",");},multilinestring:function (t){for (var e =[],n =0,i =t._geometries.length;n <i; ++n)e.push("("+J.linestring.apply(this,[       t. _geometries[n]])+")")                                                   ;return e.join(",");} ,polygon:function  (t){var e =[];e.push("(" +J.linestring.    apply( this, [  t.                                                                                                                                                _shell])+")");for (var n =0,i =t._holes.length;n <i; ++n)e.push("("+ J.linestring.apply(this,[t._holes[n]])+")");return e.join(",");},multipolygon:function (t){for (var e =[] ,n =0,i =t._geometries.length;n < i; ++n)e.push("("+J.polygon.     apply(this,                                                                                              [t._geometries[n] ])+")");return e.join(",");},geometrycollection:function (t){    for (var e =[],n  =                                                                                                                                                                                                                                                                       0,i =t._geometries.length;n <i; ++n)e.push(this.extractGeometry(t._geometries[n])   );return e.join(","                                                                                                                                                                                                    ) ;} },Q  = {     point:function  (t){ if ( void 0 ===t)return  this.geometryFactory.createPoint();var e = t.trim() . split(W.spaces);return  this.    geometryFactory.createPoint(new  C(                                                                                                                                                                                                                                                                                                                                                                                                                         Number.parseFloat(e[0]) ,Number.parseFloat(e[1])));},multipoint:function (t){if (     void  0    === t)                                                                                                                                                                                                                                                                   return this.geometryFactory.createMultiPoint();for (var e,n =t.trim().split(","),i =  [],r =0,o =n.length;                                                                       r <o; ++r)e =n[ r].replace(W.trimParens,"$1"),i.push(Q.point.apply(this, [e]))      ;return       this.                                                                                                                                                                                                                            geometryFactory.createMultiPoint(i);},linestring:function (t){if (void 0  ===     t)return this.                                                                                   geometryFactory.createLineString();for (var e,n =t.trim().split(","),i =[],r =  0,o =n.length; r <                                                                                                                                                                                                                                  o; ++r)e =n[r]. trim().split(W.spaces),i.push(new C(Number.parseFloat(e[0]),             Number.                                                                              parseFloat( e[1])))    ;return  this.  geometryFactory.createLineString(i) ;},  linearring:function                                                                                                                                                                                                                                                                                                                                                                                                        (t){if  (void 0 ===t)return this.geometryFactory.createLinearRing();for (var    e,n  =t.trim().                                                             split(  ","),i =[],r =0,o =n.length;r <o; ++r)e =n[r].trim().split(W.spaces),i.push(new     C(Number.                                                                                                                                                                                                       parseFloat(e[ 0]) , Number.parseFloat(e[ 1])) )  ;return  this.geometryFactory.    createLinearRing( i) ;}  ,                                                                             
                       multilinestring:function (t){if (void 0 ===t)return this.geometryFactory.createMultiLineString();for (var e,n =t.trim().split(W.parenComma),i =[],r =0,o =n.length;r <o; ++r)e =n[r].replace(W.trimParens,"$1"),i.push(Q.linestring.apply(this,[e]));return this.geometryFactory.createMultiLineString(i);},polygon:function (t){if (void 0 ===t)return this.geometryFactory.createPolygon();for (var e,n,i,r,o =t.trim().split(W.parenComma),s =[],a =0,u =o.length;a <u; ++a)e =o[a].replace(W.trimParens,"$1"),n =Q.linestring.apply(this,[e]),i =this.geometryFactory.createLinearRing(n._points),0 ===a ?r =i :s.push(i);return this.geometryFactory.createPolygon(r,s);},multipolygon:function (t){if (void 0 ===t)return this.geometryFactory.createMultiPolygon();for (var e,n =t.trim().split(W.doubleParenComma),i =[],r =0,o =n.length;r <o; ++r)e =n[r].replace(W.trimParens,"$1"),i.push(Q.       polygon.apply(this,[e] ))                                                  ;return this.geometryFactory.createMultiPolygon(i);},geometrycollection:function    (t){if (void 0 ===                                                                                                                                                t)return this.geometryFactory.createGeometryCollection();for (var e =(t =t.replace(/,\s*([A-Za-z])/g,"|$1")).trim().split("|"),n =[],i =0,r =e.length;i <r; ++i)n.push(this.read(e[i]));return this.geometryFactory.createGeometryCollection(      n) ;}} ,Z =                                                                                             function   ( t){ this.parser = new  K(t) ;};Z. prototype.write =function  (t) {    return this.parser.                                                                                                                                                                                                                                                                       write(t);}, Z. toLineString =function  (t,e){if ( 2 !==arguments.length)throw new                Error(                                                                                                                                                                                                     "Not implemented" );return "LINESTRING ( "+t. x +" "+t.y  +", "+ e.x  +" "+e.y +" )";};var $ =function (t){function e(e){t.call(this,e),this.name =  "RuntimeException",this.message =e,                                                                                                                                                                                                                                                                                                                                                                                                                          this. stack  = new t(). stack;}return t &&(e.__proto__ =  t),e.prototype =Object.    create( t &&   t.                                                                                                                                                                                                                                                                    prototype),e.prototype.constructor =e,e;}(Error),tt =function (t){function e(){if (  t.call( this) , 0  ===                                                                       arguments.  length)t. call(  this);else  if (1 ===arguments. length){var e =    arguments[  0];t.call(                                                                                                                                                                                                                             this,e);}}return t  &&(e.  __proto__ =t),e.prototype =Object.create(t  && t.    prototype) ,  e.                                                                                  prototype.constructor =e,e.prototype.interfaces_ =function (){return [ ];},e.   prototype.getClass                                                                                                                                                                                                                                  =function () {return e;},e;}($),et =function (){};et.prototype.interfaces_ =      function  ( ){                                                                              return  [];},et.  prototype. getClass =   function (   ) {  return et;} ,  et.  shouldNeverReachHere                                                                                                                                                                                                                                                                                                                                                                                                 =     function (){if (0 ===arguments.length)et.shouldNeverReachHere(null);else if (   1 === arguments.                                                            length) {var t =arguments[0];throw new tt("Should never reach here"+(null !==t ?": "+t :   ""));}},et.                                                                                                                                                                                                       isTrue =function (){var t, e;if (1  ===arguments.length) t  =arguments[ 0],et.   isTrue(t, null);else if (2                                                                              
                       ===arguments.length &&(t = arguments[0],e =arguments[1],!t))throw null ===e ?new tt():new tt( e);},et.equals =function (){var t,e,n;if (2 ===arguments.length)t =arguments[ 0],e =arguments[1],et.equals(t,e,null);else if (3 ===arguments.length &&(t =arguments[0],e =arguments[1],n =arguments[2],!e.equals(t)))throw  new tt("Expected "+t +" but encountered "+e + (null !==n ?": "+n :""));};var nt =function (){ this._result =null,this._inputLines =Array(2).fill( ).map(function (){return Array(2);}),this._intPt =new Array(2).fill(null) ,this._intLineIndex =null,this._isProper =null,this._pa =null, this._pb =null,this._precisionModel =null,this._intPt[0]=new C(),this._intPt[1]=new C(),this._pa =this._intPt[0],this._pb =this._intPt[1],this._result =0;},it ={DONT_INTERSECT:{configurable:!0 }, DO_INTERSECT:{configurable:! 0 },COLLINEAR:{configurable:!0 },NO_INTERSECTION:{         configurable:!0  }   ,                                                   POINT_INTERSECTION:{configurable:!0 },COLLINEAR_INTERSECTION:{configurable:!0 }}     ;nt.   prototype.                                                                                                                                                getIndexAlongSegment =function (t,e){return this.computeIntLineIndex( ),this._intLineIndex[t] [e];},nt.prototype.getTopologySummary =function (){ var t =new D();return  this.isEndPoint()&&t. append(" endpoint"),this._isProper &&t.append(     " proper" )  ,                                                                                           this.isCollinear( )&& t.append( " collinear")   ,t. toString() ;},nt.prototype.    computeIntersection                                                                                                                                                                                                                                                                       =function ( t, e,n,i){this._inputLines[0][0] =t,this. _inputLines[0][1] = e,this.   _inputLines[1][ 0]=                                                                                                                                                                                                         n,   this.    _inputLines[ 1] [1]=i,this._result =this.computeIntersect(t,e,n,i);},nt.prototype.getIntersectionNum =function (){return this.         _result;} ,     nt. prototype.                                                                                                                                                                                                                                                                                                                                                                                                                            computeIntLineIndex  = function (){if  ( 0  ===arguments.   length)null ===this.   _intLineIndex &&  (                                                                                                                                                                                                                                                                   this._intLineIndex =Array( 2).fill( ) .map(function ( ){return Array( 2);}),  this.   computeIntLineIndex(                                                                       0) ,this.computeIntLineIndex(1) );else if (1 ===arguments. length) {var t  =     arguments[  0] ;this.                                                                                                                                                                                                                               getEdgeDistance(t,0)>this.getEdgeDistance(t,1)?(this._intLineIndex[t][0]=0,                this.                                                                                 _intLineIndex[t][1]=1):(this. _intLineIndex[t][0]=1,this._intLineIndex[t][1]=    0) ;}   }   , nt.                                                                                                                                                                                                                                  prototype.isProper =  function    (){return   this. hasIntersection()&&this.     _isProper;},nt.                                                                              prototype.setPrecisionModel  = function ( t) {this.  _precisionModel =t;}, nt.           prototype.                                                                                                                                                                                                                                                                                                                                                                                                        isInteriorIntersection =function (){if (0 ===arguments.length)return !!this.    isInteriorIntersection(                                                       0)       || !!this.isInteriorIntersection(1);if ( 1 ===arguments.length){for (var t  =   arguments[0]                                                                                                                                                                                                    ,e =0;e <this._result;e++ )if (!this._intPt[e].equals2D(this._inputLines[t][0])   &&!this._intPt[e].equals2D(                                                                              
                       this._inputLines[t][1]))return !0;return !1;}},nt.prototype.getIntersection =function (t){return this._intPt[t];},nt.prototype.isEndPoint =function (){return this.hasIntersection()&&!this._isProper;},nt.prototype.hasIntersection =function (){return this._result !==nt.NO_INTERSECTION;},nt.prototype.getEdgeDistance =function (t,e){return nt.computeEdgeDistance(this._intPt[e],this._inputLines[t][0],this._inputLines[t][1]);},nt.prototype.isCollinear =function () {return this._result ===nt.COLLINEAR_INTERSECTION;},nt.prototype.toString =function (){return Z.toLineString(this._inputLines[0][0],this._inputLines[0][1])+" - "+Z.toLineString(this._inputLines[1][0],this. _inputLines[1][1])+this.getTopologySummary();},nt.prototype.getEndpoint =function (t,e){return this._inputLines[t][e] ;},nt.prototype.isIntersection =function (t){for (var e  =0;e <this._result;e++ )if (       this. _intPt[e].equals2D(                                                  t)) return !0;return !1;},nt.prototype.getIntersectionAlongSegment =function (t,      e){return  this.                                                                                                                                                computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]];},nt.prototype.interfaces_ =function () {return [];},nt.prototype.getClass =function (){return nt;},nt.computeEdgeDistance =function (t,e, n){var i =Math.abs(n.x  -e.x),r =Math.     abs(n.y -e.y),o                                                                                          = -1;if (t.equals(e))o =0;else if (t.equals(n))o =i >r ?i :r;else {var s =Math.    abs(t.x - e. x),a =                                                                                                                                                                                                                                                                       Math.abs(t.y -e.y);0 !==( o =i  >r ?s : a)|| t.equals( e)||(o  =Math. max(s,a));}  return et.isTrue(!(0                                                                                                                                                                                                        === o &&! t.    equals(e)),"Bad distance calculation"),o;},nt.nonRobustComputeEdgeDistance =function (t,e,n){var i =t.x -e.x,r =t.y -e.y,o =    Math.sqrt(i *i  +r * r);return et.                                                                                                                                                                                                                                                                                                                                                                                                                             isTrue(!  ( 0 ===o  &&  !t. equals( e)) ,"Invalid distance calculation"),o;} ,it.   DONT_INTERSECT.get =                                                                                                                                                                                                                                                                function (){return 0;},it.DO_INTERSECT.get =function (){return 1;},it.COLLINEAR.get =    function     (  ) {                                                                         return  2;} ,  it. NO_INTERSECTION.  get   = function (){return  0;}  ,it.    POINT_INTERSECTION.get                                                                                                                                                                                                                              = function  ( ){ return 1;},it.COLLINEAR_INTERSECTION. get   =function  () {     return  2;}    ,                                                                                 Object.defineProperties(nt,it);var rt  =function (t){function e(  ){t. apply(    this,arguments);}                                                                                                                                                                                                                                  return t &&( e.__proto__ = t),e.prototype =Object.create(t &&t.prototype),e.           prototype.                                                                             constructor =e,e.prototype.isInSegmentEnvelopes =function ( t) {var e =new  j(  this._inputLines[0]                                                                                                                                                                                                                                                                                                                                                                                                        [ 0] ,this. _inputLines[  0][1]),n = new  j(this. _inputLines[1] [  0],this.     _inputLines[1][                                                              1])    ;return e.contains(t)&&n.contains(t);},e.prototype.computeIntersection =function   (){if (3 !==                                                                                                                                                                                                  arguments. length) return t.prototype. computeIntersection.apply(this,arguments)  ;var e  = arguments[0] ,n =                                                                               
                       arguments[1],i =arguments[2];if (this._isProper =!1,j.intersects(n,i,e)&&0 ===at.orientationIndex(n,i,e)&&0 ===at.orientationIndex(i,n,e))return this._isProper =!0,(e.equals(n)||e.equals(i))&&(this._isProper =!1),this._result =t.POINT_INTERSECTION,null;this._result =t.NO_INTERSECTION;},e.prototype.normalizeToMinimum =function (t,e,n,i,r){r.x =this.smallestInAbsValue(t.x,e.x,n.x,i.x),r.y =this.smallestInAbsValue(t.y,e.y,n.y,i.y),t.x -=r.x,t.y -=r.y,e.x -=r.x,e.y -=r.y,n.x -=r.x,n.y -=r.y,i.x -=r.x,i.y -=r.y;},e.prototype.safeHCoordinateIntersection =function (t,n,i,r){var o =null;try {o =k.intersection(t,n,i,r);}catch (s){if (!(s instanceof X))throw s;o =e.nearestEndpoint(t,n,i,r);}return o;},e.prototype.intersection =function (t,n,i,r){var o =this.intersectionWithNormalization(t,n,i,r);return this.isInSegmentEnvelopes(o)||(o =new C(e.nearestEndpoint(t,n,i,r)))          ,   null    !==  this.                                                   _precisionModel    &&  this. _precisionModel.makePrecise(  o), o;},e.prototype.    smallestInAbsValue =                                                                                                                                              function (t,e,n,i){var r =t,o = Math.abs(r);return Math.abs(e)<o &&(r =e,o =Math.abs(e)),Math.abs(n)<o &&(r =n,o =Math.abs(n)),Math.abs(i)<o &&(r  =i),r;},e.prototype.checkDD =function (t,e,n,i,r){var o =q.intersection(t, e,n,i),s =this.     isInSegmentEnvelopes(                                                                                    o);Y.out.println("DD in env = "+s +"  --------------------- "+o),r.distance(o)>     1e-4  && Y.   out.                                                                                                                                                                                                                                                                       println("Distance = "+r.distance(o));},e.prototype.intersectionWithNormalization = function (t,e,n, i){                                                                                                                                                                                                         var r =new C(    t),o   = new  C(e),s = new   C(n)  ,a =new C(i),u   =new  C();this.  normalizeToEnvCentre(  r, o,  s,a,u);var l  =  this.   safeHCoordinateIntersection(r,o, s,                                                                                                                                                                                                                                                                                                                                                                                                                              a) ;return l.x += u.x,l.y +=u.y, l;} ,e.prototype.computeCollinearIntersection  =   function (e,n,i,r){                                                                                                                                                                                                                                                                 var o =j.  intersects(e,n,i),s = j.intersects(e,n,r),a = j.intersects( i,r,e),u =j.     intersects( i,  r,n)                                                                       ;return o &&s ?(this._intPt[0]=i,this._intPt[1]=r,t.COLLINEAR_INTERSECTION):    a && u ?(this._intPt[                                                                                                                                                                                                                               0]=e,this._intPt[1]=n,t.COLLINEAR_INTERSECTION) :o &&a  ?(this._intPt[0]= i,    this._intPt[1]=e,                                                                                 !i.equals(e)||s ||u ?t.COLLINEAR_INTERSECTION :t.POINT_INTERSECTION):o &&u ?(    this._intPt[0]= i,                                                                                                                                                                                                                                  this._intPt[1]  =n, !i.equals(n)  || s || a ?t.COLLINEAR_INTERSECTION  :  t.   POINT_INTERSECTION)                                                                           :   s && a ?( this. _intPt[0] =r,this._intPt[1]=  e, ! r. equals(e)||o ||u ?t.  COLLINEAR_INTERSECTION                                                                                                                                                                                                                                                                                                                                                                                                     :t.POINT_INTERSECTION):s &&u ?(this._intPt[0]=r,this._intPt[1]= n,!r.equals(    n)||o  ||a  ? t.                                                              COLLINEAR_INTERSECTION :t. POINT_INTERSECTION):t. NO_INTERSECTION;},e.prototype.normalizeToEnvCentre =  function (                                                                                                                                                                                      t,e,n,i,r){var o =t.x <e.x ?t.x :e.x,s =t.y <e.y ?t.y :e.y,a =t.x >e.x ?t.x :e.   x,u =t.y >e.y ?t.y :e.y,l =                                                                               
             n.        x <i.x ?n.x :i.x,c =n.y <i.y ?n.y :i.y,p =n.x >i.x ?n.x :i.x,h =n.y >i.y ?n.y :i.y,f =((o >l ?o :l)+(a <p ?a :p))/2,g =((s >c ?s :c)+(u <h ?u :h))/2;r.x =f,r.y =g,t.x -=r.x,t.y -=r.y,e.x -=r.x,e.y -=r.y,n.x -=r.x,n.y  -=r.y,i.x -=r.x,i.y -=r.y;},e.prototype.computeIntersect =function (e,n,i,r){if (this._isProper =!1,!j.intersects(e,n,i,r))return t.NO_INTERSECTION;var o =at.orientationIndex(e,n,i),s =at.orientationIndex(e,n,r);if (o >0 &&s >0 ||o <0 &&s <0)return t.NO_INTERSECTION;var a =at.orientationIndex(i,r,e),u =at.orientationIndex(i,r,n);if (a >0 &&u >0 ||a <0 &&u <0)return t.NO_INTERSECTION;return 0 ===o &&0 ===s &&0 ===a &&0 ===u ?this.computeCollinearIntersection(e,n,i,r):(0 ===o ||0 ===s ||0 ===a ||0 ===u ?(this._isProper =!1,e.equals2D(i)||e.equals2D(r)?this._intPt[0]=e :n.equals2D(i)||n.equals2D(r)?this._intPt[0]=n :0 ===o ?this._intPt[0]=new C(i):0       === s ?this._intPt[0]=new                                                  C(r):0 ===a ?this._intPt[0]=new C(e):0 ===u &&(this. _intPt[0]=new C(n))):(this.     _isProper = !  0,                                                                                                                                                this._intPt[0]=this.intersection(e,n,i,r)),t.POINT_INTERSECTION);},e.prototype.interfaces_ =function () {return [];},e.prototype.getClass =function (){return e;},e.nearestEndpoint =function (t,e,n,i){var r =t,o =at.distancePointLine(t,n,      i) , s  =   at.                                                                                         distancePointLine(e,n,i);return s <o &&(o =s,r  =e),(s =at.distancePointLine(n,    t,e))<o &&(o =s,r =                                                                                                                                                                                                                                                                       n),(s =at.distancePointLine(i,t,e))<o &&(o =s,r =i),r;},e;}(nt),ot =function (){}     ;ot.   prototype.                                                                                                                                                                                                          interfaces_ =   function (){return [];},ot.prototype.getClass =function (){return ot;},ot.orientationIndex =function (t,e,n){var i =e.x -  t.x,r =e.y -t.y,o =n.x -e.x,s =n.y -                                                                                                                                                                                                                                                                                                                                                                                                                              e.y;return ot.signOfDet2x2(i,r,o,s);},ot.signOfDet2x2 =function (t,e,n,i){var r =   null,o =null,   s =                                                                                                                                                                                                                                                               null;if (r =1,0 ===t ||0 ===i)return 0 ===e ||0 ===n ?0 :e >0 ?n >0 ? -r :r :n >0 ?r :  -r;if (0 === e ||0 ===                                                                       n)return i >0 ?t >0 ?r : -r :t >0 ? -r :r;if (e >0 ?i >0 ?e <=i ||(r = -r,o =   t,t =n,n =o,o = e,e =                                                                                                                                                                                                                               i,i =o):e <= -i ?(r = -r,n = -n,i = -i):(o =t,t = -n,n =o,o =e,e = -i,i =o):    i >0 ? -e <=i ?(r                                                                                 = -r,t = -t,e = -e):(o = -t,t =n,n =o,o = -e,e =i,i =o):e >=i ?(t  = -t,e = -   e,n = -n,i = -i):(                                                                                                                                                                                                                                  r = -r,o = -t,t = -n,n =o,o = -e,e = -i,i =o),t >0){if (!(n >0))return r;if (!    (t    <=  n)  )                                                                             return r;}else {if (n >0)return ( -r);if (!(t >=n))return ( -r);r = -r,t = -t,  n = -n;}for (;;){if                                                                                                                                                                                                                                                                                                                                                                                                        (s =Math.floor(n /t),n -=s *t,(i -=s *e)<0)return ( -r);if (i >e)return r;if    (t >n +n){if (e <                                                              i +     i)return r;}else {if (e >i +i)return ( -r);n =t -n,i =e -i, r = -r;}if (0 ===i)   return 0 ===                                                                                                                                                                                                n ?0 :  -r;if (0 ===n)return r;if (s =Math.floor(t / n),t -=s *n,(e -=s * i)<0)    return r;if (e >i)return (                                                                                
                       -r);if (n >t +t){if (i <e +e)return ( -r);}else {if (i >e +e)return r;t =n -t,e =i -e,r = -r;}if (0 ===e)return 0 ===t ?0 :r;if (0 ===t)return ( -r);}};var st =function (){this._p =null,this._crossingCount =0,this._isPointOnSegment =!1;var t =arguments[0];this._p =t;};st.prototype.countSegment =function (t,e){if (t.x <this._p.x &&e.x <this._p.x)return null;if (this._p.x ===e.x &&this._p.y ===e.y)return this._isPointOnSegment =!0,null;if (t.y ===this._p.y &&e.y ===this._p.y){var n =t.x,i =e.x;return n >i &&(n =e.x,i =t.x),this._p.x >=n &&this._p.x <=i &&(this._isPointOnSegment =!0),null;}if (t.y >this._p.y &&e.y <=this._p.y ||e.y >this._p.y &&t.y <=this._p.y){var r =t.x -this._p.x,o =t.y -this._p.y,s =e.x  -this._p.x,a =e.y -this._p.y,u  =ot.signOfDet2x2(r,o,s,a);if (0 ===u)return this._isPointOnSegment =!0,null;a <o &&(u = -u),u >0 &&this._crossingCount++ ;}},           st.        prototype.                                                  isPointInPolygon = function (){ return this.getLocation( )!==  w.EXTERIOR;} ,st.            prototype.                                                                                                                                                getLocation =function (){return this._isPointOnSegment ?w.BOUNDARY :this._crossingCount %2 ==1 ?w.INTERIOR :w.EXTERIOR;},st.prototype.isOnSegment =function (){return this._isPointOnSegment;},st.prototype.interfaces_ =function (){return [     ];},st.prototype.                                                                                        getClass =function ( ){return st;} ,st. locatePointInRing  = function (  ){if (     arguments[      0]                                                                                                                                                                                                                                                                     instanceof C &&T(arguments[1],V)){for (var t =arguments[0] ,e =arguments[1],n =new   st(t),i =new C(),r =                                                                                                                                                                                                           new C(),o =1;   o < e.size();o++ )if  (e.getCoordinate(o,i),e. getCoordinate( o -1, r) ,n.countSegment(i, r),n.isOnSegment())return n.   getLocation();return n.getLocation(                                                                                                                                                                                                                                                                                                                                                                                                                                ) ;}if (arguments[0]instanceof  C &&arguments[ 1]instanceof  Array){ for (var s =     arguments[ 0],a =                                                                                                                                                                                                                                                               arguments[1],u =new st(s), l =1;l <a. length;l++ ){ var c  =a[l],p = a[l  -1];if ( u.   countSegment(c, p), u.                                                                       isOnSegment()) return  u. getLocation();} return u.getLocation();}};var at =    function (){},ut  ={                                                                                                                                                                                                                                CLOCKWISE: { configurable:!0 },RIGHT:{ configurable:!0 },COUNTERCLOCKWISE: {    configurable:!0 }                                                                                 ,LEFT:{configurable:!0 },COLLINEAR:{configurable:!0 },STRAIGHT:{configurable:   !0 }};at.prototype.                                                                                                                                                                                                                                 interfaces_  =function () {return [] ;} ,at.prototype.getClass = function  (){    return at;},at.                                                                             orientationIndex =function  ( t, e,n){return  q.orientationIndex( t,e,n);},at.    signedArea      =                                                                                                                                                                                                                                                                                                                                                                                                         function (){if (arguments[ 0]instanceof Array)  {var t =arguments[0];if (t.       length   <  3)                                                               return 0;for (var e =0,n =t[0].x,i =1;i <t.length -1;i++ ){var r =t[i].x -n,o =t[i +1].y;e += r *(t[i -1].                                                                                                                                                                                          y -o);}return e /2;}if (T(arguments[0],V)){var s =arguments[0],a =s.size();if (a   <3)return 0;var u =new C()                                                                                 
             ,         l =new C(),c =new C();s.getCoordinate(0,l),s.getCoordinate(1,c);var p =l.x;c.x -=p;for (var h =0,f =1;f <a -1;f++ )u.y =l.y,l.x =c.x,l.y =c.y,s.getCoordinate(f +1,c),c.x -=p,h +=l.x *(u.y -c.y);return h /2;}},at.distanceLineLine =function (t,e,n,i){if (t.equals(e))return at.distancePointLine(t,n,i);if (n.equals(i))return at.distancePointLine(i,t,e);var r =!1;if (j.intersects(t,e,n,i)){var o =(e.x -t.x)*(i.y -n.y)-(e.y -t.y)*(i.x -n.x);if (0 ===o)r =!0;else {var s =(t.y -n.y)*(i.x -n.x)-(t.x -n.x)*(i.y -n.y),a =((t.y -n.y)*(e.x -t.x)-(t.x -n.x)*(e.y -t.y))/o,u =s /o;(u <0 ||u >1 ||a <0 ||a >1)&&(r =!0);}}else r =!0;return r ?R.min(at.distancePointLine(t,n,i),at.distancePointLine(e,n,i),at.distancePointLine(n,t,e),at.distancePointLine(i,t,e)):0;},at.isPointInRing =function (t,e){return at.locatePointInRing(t,e)!==w.EXTERIOR;},at.computeLength =function (t){var e       = t. size();if  (e <=   1)                                                 return 0;var n =0,i =new C();t.getCoordinate(0,i);for (var r =i.x,o =i.y,s =1;s <     e; s++  )  {  t.                                                                                                                                                getCoordinate(s,i);var a =i.x,u =i.y,l =a -r,c =u -o;n +=Math.sqrt(l *l +c *c),r =a,o =u;}return n;},at.isCCW =function (t){var e =t.length -1;if (e <3)throw new m("Ring has fewer than 4 points, so orientation cannot be determined");for (   var n =t[0],i =0,r                                                                                        =1;r <=e;r++ ){var o =t[r];o.y >n.y &&(n =o,i =r);}var s =i;do {(s -=1)<0 &&(s =   e);}  while  (t[s].                                                                                                                                                                                                                                                                     equals2D(n)&&s !==i);var a =i;do {a =( a +1)%e;}while (t[a].equals2D(n)&&a  !==i)    ;var u =t[s],l =t[a]                                                                                                                                                                                                             ;if   (   u.    equals2D(n)||l.equals2D(n)||u.equals2D(l))return !1;var c =at.computeOrientation(u,n,l),p =!1;return p =0 ===c ?u.    x >    l.x  : c    > 0,  p;},   at.                                                                                                                                                                                                                                                                                                                                                                                                                                 locatePointInRing  = function (t, e){return st.locatePointInRing(t,  e)  ;} , at.   distancePointLinePerpendicular                                                                                                                                                                                                                                                  =function (t,e,n){var i =(n.x -e.x)*(n.x -e.x)+(n.y -e.y)*(n.y -e.y),r =((e.y -t.y)*(n.  x -e.x)-(e.x -t.x)*(n.y                                                                       -e.y))/i;return Math.abs(r)*Math.sqrt(i);},at.computeOrientation =function (     t,e, n) {return at.                                                                                                                                                                                                                                orientationIndex(  t,e, n) ;},at. distancePointLine =function () {if ( 2 ===    arguments.length)                                                                                 { var t  =arguments[0]  ,e =   arguments[1];if ( 0 === e. length)throw new m(   "Line array must contain at least one vertex"                                                                                                                                                                                                       );for  ( var n =t.distance( e[0]),i = 0;  i <e.length -1;  i++  ){var r  = at.  distancePointLine(                                                                            t,e[i] ,e[i +1]);r <n &&(n =r);}return  n;}if (3 ===arguments.length) {var o =  arguments[   0],s =                                                                                                                                                                                                                                                                                                                                                                                                        arguments[1],a =arguments[2];if  (s.x ===a.x &&s.y ===a.y)return o.distance(    s);var u =(a. x -                                                                 s.   x)*(a.x -s.x)+(a.y -s.y)*(a.y -s.y),l =((o.x -s.x)*(a.x -s.x)+(o.y -s.y)*(a.y -    s.y))/u;if (                                                                                                                                                                                              l <=0)return o.distance(s);if (l >=1)return o.distance(a);var c =((s.y -o.y)*(a.  x -s.x)-(s.x -o.x)*(a.y -s.                                                                                 
             y)        )/ u;return Math. abs(c)*Math.sqrt(u);}},at.isOnLine =function (t,e){ for (var n =new rt(),i =1;i <e.length;i++ ){var r =e[i -1],o =e[i];if (n.computeIntersection(t,r,o),n.hasIntersection())return !0;}return !1;},ut.CLOCKWISE.get =function (){return ( -1);},ut.RIGHT.get =function (){return at.CLOCKWISE;} ,ut.COUNTERCLOCKWISE.get =function (){return 1;},ut.LEFT.get =function (){return at.COUNTERCLOCKWISE;},ut.COLLINEAR.get =function (){return 0;},ut.STRAIGHT.get =function (){return at.COLLINEAR;},Object.defineProperties(at,ut);var lt =function (){};lt.prototype.filter =function (t){},lt.prototype.interfaces_ =function (){return [];},lt.prototype.getClass =function (){return lt;};var ct =function (){var t =arguments[0];this._envelope =null,this._factory =null,this._SRID =null,this._userData =null,this._factory =t,this._SRID =t.getSRID();},pt ={serialVersionUID:{         configurable:  !0  }   ,                                                 SORTINDEX_POINT:{ configurable:! 0  },SORTINDEX_MULTIPOINT:{configurable:!0   },    SORTINDEX_LINESTRING:                                                                                                                                             { configurable:!0 },SORTINDEX_LINEARRING:{configurable:!0 }, SORTINDEX_MULTILINESTRING:{configurable:!0 },SORTINDEX_POLYGON:{configurable:!0  } ,SORTINDEX_MULTIPOLYGON: {configurable:!0 },SORTINDEX_GEOMETRYCOLLECTION: {configurable:!0 },    geometryChangedFilter:                                                                                    {configurable:!0 }};ct.prototype.isGeometryCollection =function (){return this.     getSortIndex( )===                                                                                                                                                                                                                                                                       ct.SORTINDEX_GEOMETRYCOLLECTION;} ,ct.prototype.  getFactory = function   ()  {        return     this.                                                                                                                                                                                                             _factory;}  ,    ct.prototype. getGeometryN =function (t){return this;},ct.prototype.getArea =function (){return 0;},ct.prototype.   isRectangle =function (  ){return !                                                                                                                                                                                                                                                                                                                                                                                                                                  1;},ct.prototype.equals  = function (){if  (arguments[0]  instanceof ct){var  t =       arguments[   0]                                                                                                                                                                                                                                                           ;return null !==t &&this.  equalsTopo( t)  ;}if (arguments[0]instanceof Object){var e  =    arguments[ 0];if ( !(e                                                                       instanceof   ct))return  !1;var  n  = e;return  this.equalsExact(  n);}},ct.              prototype.                                                                                                                                                                                                                                 equalsExact =function ( t){return this ===t  ||this.equalsExact(t,0);} ,ct.            prototype.                                                                                 geometryChanged =function  ( ) {this.apply( ct.geometryChangedFilter);} ,ct.           prototype.                                                                                                                                                                                                                                  geometryChangedAction  = function  (){ this. _envelope =null;}  ,ct.prototype.       equalsNorm  =                                                                              function  (t){return null !==t &&this.  norm( ).equalsExact(t.norm()) ;},ct.  prototype.getLength                                                                                                                                                                                                                                                                                                                                                                                                        = function (  ) {return  0;},   ct.prototype.getNumGeometries =function  (){      return  1;},ct.                                                                prototype.  compareTo  =function ( ){if  (1 ===arguments.length){  var t =arguments[0],e = t;return this.                                                                                                                                                                                          getSortIndex()!==e.getSortIndex()?this. getSortIndex( )-e.getSortIndex() :this.   isEmpty()&&e.isEmpty()?0 :                                                                                  
             this.     isEmpty()? -1 :e.isEmpty()?1 :this.compareToSameClass(t);}if (2 ===arguments.length){ var n =arguments[0],i =arguments[ 1];return this.getSortIndex()!==n. getSortIndex()?this.getSortIndex()-n.getSortIndex():this.isEmpty()&&n.isEmpty()?0 :this.isEmpty()? -1 :n.isEmpty()?1 :this.compareToSameClass(n,i);}},ct.prototype.getUserData =function (){return this._userData;},ct.prototype.getSRID =function (){return this._SRID;},ct.prototype.getEnvelope =function (){return this.getFactory().toGeometry(this.getEnvelopeInternal());},ct.prototype.checkNotGeometryCollection =function (t){if (t.getSortIndex( )===ct.SORTINDEX_GEOMETRYCOLLECTION)throw new m("This method does not support GeometryCollection arguments");},ct.prototype.equal =function (t,e,n){ return 0 ===n ?t.equals(e):t.distance(e)<=n;},ct.prototype.norm =function (){var t =this.copy();return t.normalize(),t;},ct.                       prototype.                                                 getPrecisionModel =function (){ return this._factory.getPrecisionModel() ;} ,ct.            prototype.                                                                                                                                                getEnvelopeInternal =function () {return null ===this._envelope &&(this._envelope =this. computeEnvelopeInternal() ),new j(this._envelope);},ct.prototype.setSRID =function (t){this._SRID = t;},ct.prototype.setUserData =function (t){this.    _userData =t;}, ct.                                                                                        prototype.compare =function (t,e){for (var n = t.iterator(),i =e.iterator();n.      hasNext( )  && i.                                                                                                                                                                                                                                                                     hasNext();){var r =n.next() ,o =i.next(),s =r.compareTo(o) ;if (0 !==s)return s;}   return n.hasNext()?1 :                                                                                                                                                                                                              i.hasNext()?     -1  :0;},ct.prototype.hashCode = function (){return this.  getEnvelopeInternal() .hashCode();},ct. prototype.     isGeometryCollectionOrDerived    =                                                                                                                                                                                                                                                                                                                                                                                                                                   function () {return this.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION ||this.   getSortIndex(  )===                                                                                                                                                                                                                                                           ct.SORTINDEX_MULTIPOINT ||this.  getSortIndex()=== ct.SORTINDEX_MULTILINESTRING ||this.    getSortIndex( ) ===ct.                                                                        SORTINDEX_MULTIPOLYGON;},ct.prototype.interfaces_ =function () {return [x,E,    e];}, ct.prototype.                                                                                                                                                                                                                                 getClass =function (){return ct;},ct.hasNonEmptyElements =function (t){for (    var e   = 0;e  <t.                                                                                length;e++ )if (!t[ e].isEmpty())return !0;return  !1;} ,ct.hasNullElements =    function (t){for (                                                                                                                                                                                                                                 var  e =0;e  < t.length;e++  ) if ( null ===t[e]) return  ! 0;return !1;} ,pt.   serialVersionUID.                                                                            get =function (){return 0x799ea46522854c00;},pt.SORTINDEX_POINT.get =function ( ){ return   0;},pt.                                                                                                                                                                                                                                                                                                                                                                                                        SORTINDEX_MULTIPOINT.get =function (){return 1;},pt.SORTINDEX_LINESTRING.get     = function ()   {                                                                return 2;} ,  pt.  SORTINDEX_LINEARRING.  get    =function (    ) {    return   3;} ,  pt. SORTINDEX_MULTILINESTRING.                                                                                                                                                                            get =function (){return 4;},pt.SORTINDEX_POLYGON. get =function ( ){return 5;},   pt.SORTINDEX_MULTIPOLYGON.                                                                                   
            get        =function (){return 6;},pt.SORTINDEX_GEOMETRYCOLLECTION.get =function (){return 7;},pt.geometryChangedFilter.get =function ( ){return ht;},Object.defineProperties(ct,pt);var ht =function (){};ht.interfaces_ =function (){return [lt];},ht.filter =function (t){t.geometryChangedAction();};var ft =function (){};ft.prototype.filter =function (t){},ft.prototype.interfaces_ =function (){ return [];},ft.prototype.getClass =function (){return ft;};var gt =function (){},dt ={Mod2BoundaryNodeRule:{configurable:!0 },EndPointBoundaryNodeRule:{configurable:!0 },MultiValentEndPointBoundaryNodeRule:{configurable:!0 },MonoValentEndPointBoundaryNodeRule:{configurable:!0 },MOD2_BOUNDARY_RULE:{configurable:!0 },ENDPOINT_BOUNDARY_RULE:{configurable:!0 },MULTIVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0 },MONOVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0 },OGC_SFS_BOUNDARY_RULE:{         configurable:! 0 }} ;gt.                                                 prototype.isInBoundary =function ( t){},gt.prototype.interfaces_ =function  ( ){      return [] ;},gt.                                                                                                                                                prototype.getClass = function (){return  gt;} ,dt. Mod2BoundaryNodeRule. get  =function  (){return  yt;},dt.EndPointBoundaryNodeRule.get =function (){return _t;}, dt.MultiValentEndPointBoundaryNodeRule.get  = function  (){return mt;},dt.    MonoValentEndPointBoundaryNodeRule.                                                                       get =function (){return vt;}, dt.MOD2_BOUNDARY_RULE.get =function (){return new      yt(  );}   ,  dt.                                                                                                                                                                                                                                                                      ENDPOINT_BOUNDARY_RULE. get  =  function   ( )   { return   new _t( );} ,    dt.   MULTIVALENT_ENDPOINT_BOUNDARY_RULE.                                                                                                                                                                                                      get    =    function (){return new mt();} ,dt. MONOVALENT_ENDPOINT_BOUNDARY_RULE.get =function (){return new vt( );},dt.       OGC_SFS_BOUNDARY_RULE.  get   =                                                                                                                                                                                                                                                                                                                                                                                                                                     function (){return gt.MOD2_BOUNDARY_RULE;},Object.defineProperties(gt,dt);var yt =   function (){ };yt.                                                                                                                                                                                                                                                        prototype.isInBoundary =function (t){return t %2 ==1;},yt.prototype.interfaces_ =function (    ){return [ gt];} ,yt.                                                                        prototype.getClass  =function  (){ return yt;};var  _t =function () {  };_t.             prototype.                                                                                                                                                                                                                                 isInBoundary =function (t){return t >0;},_t.prototype.interfaces_ =function (   ){ return  [gt];},                                                                                _t.prototype.getClass  = function (){return  _t;};var  mt =function ( ){};mt.            prototype.                                                                                                                                                                                                                                 isInBoundary =function (t){return t >1;},mt.prototype.interfaces_ =function ()  {return [gt];},mt.                                                                             prototype.getClass   = function ( ) {return   mt;};var vt = function (){};vt.           prototype.                                                                                                                                                                                                                                                                                                                                                                                                        isInBoundary  = function  ( t){ return 1 === t;} ,vt.prototype.interfaces_ =      function   ()  {                                                                return [ gt];}, vt.prototype.getClass =function (){return vt;};var It =function (){};It.   prototype.                                                                                                                                                                                            add =function (){},It.prototype.addAll  =function  (){ },It.prototype.isEmpty =  function (){},It.prototype.                                                                                   
            iterator   =function (){},It.prototype.size =function (){},It.prototype.toArray =function (){},It.prototype.remove =function (){},(n.prototype =new Error()).name ="IndexOutOfBoundsException";var Et =function (){};Et.prototype.hasNext =function (){},Et.prototype.next =function (){},Et.prototype.remove =function (){};var xt =function (t){function e(){t.apply(this,arguments);}return t &&(e.__proto__ =t),e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e.prototype.get =function (){},e.prototype.set =function (){},e.prototype.isEmpty =function (){},e;}(It);(i.prototype =new Error()).name ="NoSuchElementException";var Nt =function (t){function e(){t.call(this),this.array_ =[],arguments[0]instanceof It &&this.addAll(arguments[0]);}return t &&(e.__proto__ =t),e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e.prototype.ensureCapacity =          function (   ) { },  e.                                                 prototype.interfaces_ =function (){return [t,It];},e.prototype.add =function (t)     {return  1    ===                                                                                                                                                arguments.length ?this.array_.push(t):this.array_.splice(arguments[0],arguments[1]), !0;},e.prototype.clear =function (){this.array_ =[];},e.prototype.addAll =function (t){for (var e =t.iterator();e.hasNext();)this.add(e.next());return !    0;},e.prototype.set                                                                                       =function (t,e){var n =this.array_[t];return  this.array_[t]=e,n;},e.prototype.    iterator =function (                                                                                                                                                                                                                                                                  ){return new Ct(this);},e.prototype.get =function (t){if ( t <0 || t >=this.size())     throw   new    n( )                                                                                                                                                                                                                 ;return this.   array_[t];},e.prototype.isEmpty =function (){return 0 ===this.array_.length;},e.prototype.size =function (     ){return this.array_.length;} ,e.                                                                                                                                                                                                                                                                                                                                                                                                                                      prototype.toArray =function (){for (var t =[],e =0,n =this.array_.length;e <n;e++     )   t. push(this.                                                                                                                                                                                                                                                      array_[ e]);return  t;},e.prototype.remove =function (t){for (var e =!1,n =0,i =this.array_.  length; n  < i;n++ )if (                                                                        this.array_[n]===t){this.array_.splice(n,1),e =!0;break ;}return e;},e;}(xt)    , Ct =function (t){                                                                                                                                                                                                                                 function e(e){t.call(this),this.arrayList_ =e,this.position_ =0;}return t &&    ( e.__proto__ =t),                                                                                e.prototype =Object.create( t &&t.prototype),e. prototype.constructor = e, e.    prototype. next  =                                                                                                                                                                                                                                 function (  ){if ( this.position_   ===this.arrayList_.size() )throw new  i( )     ;return   this.                                                                            arrayList_. get( this. position_++ ) ;}, e. prototype. hasNext = function  (){         return this.                                                                                                                                                                                                                                                                                                                                                                                                        position_   <this. arrayList_.  size()  ;}, e.prototype.set  =function (t) {      return     this.                                                                 arrayList_. set(this. position_ -1,t);},e.prototype.remove =function  ( ){this.arrayList_. remove(this.                                                                                                                                                                                        arrayList_.get(this.position_));} ,e;}(Et),St =function (t){function e(){if (t.   call(this),0 ===arguments.                                                                                    
             length)   ;else if (1 ===arguments.length){var e =arguments[0];this.ensureCapacity(e.length),this.add(e,!0);}else if (2 ===arguments.length){var n =arguments[0],i =arguments[1];this.ensureCapacity(n.length),this.add(n,i);}}t &&(e.__proto__ =t),(e.prototype =Object.create(t &&t.prototype)).constructor =e;var n ={coordArrayType:{configurable:!0 }};return n.coordArrayType.get =function (){return new Array(0).fill(null);},e.prototype.getCoordinate =function (t){return this.get(t);},e.prototype.addAll =function (){if (2 ===arguments.length){for (var e =arguments[0],n =arguments[1],i =!1,r =e.iterator();r.hasNext();)this.add(r.next(),n),i =!0;return i;}return t.prototype.addAll.apply(this,arguments);},e.prototype.clone =function (){for (var e =t.prototype.clone.call(this),n =0;n <this.size();n++ )e.add(n,this.get(n).copy());return e;},e.prototype.toCoordinateArray =function (        ) {return this.toArray(e.                                                 coordArrayType);},e.prototype.add =function (){if (1 ===arguments.length){var e =     arguments[ 0];t.                                                                                                                                                prototype.add.call(this,e) ;}else if (2 ===arguments.length){if (arguments[0]instanceof Array && "boolean"==typeof arguments[1]){var n =arguments[0],i =arguments[1];return this. add(n,i,!0),!0;}if (arguments[ 0]instanceof C &&"boolean"==    typeof  arguments[                                                                                        1]){var r =arguments[0];if (!arguments[ 1] &&this.size()>=1){if (this.get(this.    size()-1).equals2D(                                                                                                                                                                                                                                                                   r))return null;}t.prototype.add.call(this,r);}else if (arguments[0]instanceof Object   &&"boolean"== typeof                                                                                                                                                                                                                  arguments[1]    ){ var o =arguments[0],s =arguments[ 1];return this.add(o,s),!0;}}else if (3 ===arguments.length){  if (   "boolean" ==typeof  arguments[2]  &&                                                                                                                                                                                                                                                                                                                                                                                                                                      arguments[0]instanceof Array &&"boolean"==typeof arguments[1]) {var a =arguments[   0], u =arguments[1]                                                                                                                                                                                                                                                    ;if (arguments[2])for (var l =0;l <a. length;l++ )this.add(a[l],u);else for (var c =a.length -  1;c >=0;c--  )this.add(                                                                          a[ c], u);return !0;}if ("boolean" ==typeof arguments[2]&&Number.isInteger(    arguments[ 0] )  &&                                                                                                                                                                                                                                 arguments[1]instanceof C){ var p =  arguments[0] ,  h = arguments[1];if   (!    arguments[2]){var f                                                                               =this.size();if (f >0){if (p >0){if (this.get(p -1).equals2D(h))return null;}     if ( p <f){ if (                                                                                                                                                                                                                                  this.get(p).equals2D(h))return null;}}}t.prototype.add.call(this,p,h);}}else if ( 4  ===arguments.                                                                            length){var g =arguments[0],d =arguments[1],y =arguments[2],_ =arguments[3],m =  1;y >_ &&(m  = -1)                                                                                                                                                                                                                                                                                                                                                                                                        ;for  ( var v =y;v !== _;v +=m)this.add(g[v],d);return   !0;}} ,e.prototype.         closeRing   =                                                                 function (){this.size( )>0 &&this.add(new C(this.get(0)),!1);},e.prototype.interfaces_ =  function ()                                                                                                                                                                                         {return []  ;},  e.prototype. getClass   =  function () {return   e;},  Object.   defineProperties(e,n),e;} (                                                                                    
             Nt)       ,Lt =function (){},bt ={ForwardComparator:{configurable:!0 },BidirectionalComparator:{configurable:!0 },coordArrayType:{configurable:!0 }};bt.ForwardComparator.get =function (){return wt;},bt.BidirectionalComparator.get =function (){return Ot;},bt.coordArrayType.get =function (){return new Array(0).fill(null);},Lt.prototype.interfaces_ =function (){return [];},Lt.prototype.getClass =function (){return Lt;},Lt.isRing =function (t){return !(t.length <4)&&!!t[0].equals2D(t[t.length -1]);},Lt.ptNotInList =function (t,e){for (var n =0;n <t.length;n++ ){var i =t[n];if (Lt.indexOf(i,e)<0)return i;}return null;},Lt.scroll =function (t,e){var n =Lt.indexOf(e,t);if (n <0)return null;var i =new Array(t.length).fill(null);Y.arraycopy(t,n,i,0,t.length -n),Y.arraycopy(t,0,i,t.length -n,n),Y.arraycopy(i,0,t,0,t.length);},Lt.equals =function (){if (2 ===arguments.length){var t         = arguments[ 0] ,  e  =                                                   arguments[1];if (t ===e)return  !0;if (null ===t ||null ===e)return !1;if ( t.      length    !== e.                                                                                                                                                length)return !1;for (var  n =0;n <t.length;n++ )if (!t[n].equals(e[n]))return !1;return !0;}if (3 ===arguments.length){var i =arguments[0],r =arguments[1],o = arguments[2];if (i  ===r)return !0;if (null ===i ||null ===r)return !1;if (i.    length !==r.length)                                                                                       return !1;for (var s =0;s <i.length;s++ )if (0 !==o.compare(i[s],r[s]))return !    1;return !0;} },Lt.                                                                                                                                                                                                                                                                  intersection  =function (t,e) {for ( var n   = new St( ),i =0;i <t. length; i++ )e.    intersects(t[i])&& n.                                                                                                                                                                                                                   add(t[i], !0)    ;return n.toCoordinateArray();},Lt.hasRepeatedPoints =function (t){for (var e =1;e <t.length;e++ )if    (t[e  - 1] .equals(t[e])) return  !                                                                                                                                                                                                                                                                                                                                                                                                                                        0;return !1;},Lt.removeRepeatedPoints =function (t){if (!Lt.hasRepeatedPoints(t))   return t;return new                                                                                                                                                                                                                                                   St( t,!1).toCoordinateArray( );},Lt.reverse =function (t){for  ( var e  =t.length -1,n =Math.    trunc(e /2),i =0;i <=n;                                                                         i++ ){var r =t[i];t[i]=t[e -i],t[e -i]=r;}},Lt.removeNull =function (t){for (   var e =0,n =0;n  <                                                                                                                                                                                                                                  t.length;n++ )null !==t[n]&&e++ ;var  i =new Array(e).fill(null);if (0 ===e)    return i;for (var r                                                                               =0,o =0;o <t.length;o++ )null !==t[o]&&(i[r++ ]=t[o]);return i;},Lt.copyDeep =  function (){ if (1                                                                                                                                                                                                                                  ===arguments.length){ for  (var t =arguments[0], e  =new Array(t.length).fill(   null) ,n =0;n <t.                                                                            length;n++ )e[ n]=new C(t[n]);return e;}if (5 ===arguments.length)for (var i =  arguments[ 0],  r =                                                                                                                                                                                                                                                                                                                                                                                                        arguments[1],o =arguments[2],s =arguments[3],a =arguments[4],u =0;u <a;u++ )    o[s +u]=new C(i[r +                                                                 u])    ;},Lt.isEqualReversed =function (t,e){for (var n =0;n <t.length;n++ ){var i =t[    n],r =e[ t.                                                                                                                                                                                        length  -n  -1];if (0 !==i. compareTo(r))return !1;}return ! 0;} ,Lt.envelope =   function (t) {for (var e =                                                                                     
            new        j(),n =0;n <t.length;n++ )e.expandToInclude(t[n]);return e;},Lt.toCoordinateArray =function (t){return t.toArray(Lt.coordArrayType);},Lt.atLeastNCoordinatesOrNothing =function (t,e){return e.length >=t ?e :[];},Lt.indexOf =function (t,e){for (var n =0;n <e.length;n++ )if (t.equals(e[n]))return n;return ( -1);},Lt.increasingDirection =function (t){for (var e =0;e <Math.trunc(t.length /2);e++ ){var n =t.length -1 -e,i =t[e].compareTo(t[n]);if (0 !==i)return i;}return 1;},Lt.compare =function (t,e){for (var n =0;n <t.length &&n <e.length;){var i =t[n].compareTo(e[n]);if (0 !==i)return i;n++ ;}return n <e.length ? -1 :n <t.length ?1 :0;},Lt.minCoordinate =function (t){for (var e =null,n =0;n <t.length;n++ )(null ===e ||e.compareTo(t[n])>0)&&(e =t[n]);return e;},Lt.extract =function (t,e,n){e =R.clamp(e,0,t.length);var i =(n =R.clamp(n, -1,t.length))-e +1;n <0 &&(i        =0),e >=t.length &&(i =0),                                                n <e &&(i =0);var r =new Array(i).fill(null);if (0 ===i)return r;for (var o =0,s    =e;s <=n;s++ )r[o++                                                                                                                                               ]=t[s];return r;},Object.defineProperties(Lt,bt);var wt =function (){};wt.prototype.compare =function (t,e){return Lt.compare(t,e);},wt.prototype.interfaces_ =function (){return [N];},wt.prototype.getClass =function (){return wt;};var Ot    =function (){};Ot.                                                                                        prototype.compare =function (t,e){var n =t,i =e;if (n.length <i.length)return (     -1);if (n.length >                                                                                                                                                                                                                                                                 i.length)return 1;if (0 === n.length)return 0;var  r  = Lt.compare(n,i);return  Lt.    isEqualReversed(n,i)?                                                                                                                                                                                                                      0  :r;}, Ot.    prototype.OLDcompare =function (t,e){var n =t,i =e;if (n.length <i.length)return ( -1);if (n.length    >i. length)return  1;if  ( 0 ===n.                                                                                                                                                                                                                                                                                                                                                                                                                                          length)return 0;for (var r =Lt.increasingDirection(n),o =Lt.increasingDirection(   i),s =r >0 ?0  : n.                                                                                                                                                                                                                                                length -1,a =o >0 ?0 :n.length -1,u =0;u <n.length;u++ ){var l =n[s].compareTo(i[a]);if (0 !==l)     return l;s +=r,a +=o;}                                                                         return  0;},Ot.prototype.interfaces_ =function (){return [N];},Ot.prototype.    getClass =function                                                                                                                                                                                                                                  () {return Ot;};var Tt =function (){ };Tt.prototype.get  =function (){ },Tt.      prototype. put =                                                                                function (){},Tt.prototype.size =function (){},Tt.prototype.values =function (   ) {},Tt.prototype.                                                                                                                                                                                                                                  entrySet =function  ()  {};var Rt = function ( t){function e(){t.apply( this,     arguments)   ;}                                                                            return  t  &&(e.__proto__ =t),e.prototype =Object. create(t &&t.prototype) ,e.           prototype.                                                                                                                                                                                                                                                                                                                                                                                                         constructor  =e,   e;}  (Tt);(r.   prototype  =new   Error(   ))  . name  =    "OperationNotSupported"                                                             ,(o.     prototype =new It()).contains =function (){};var Pt =function (t){function e(    ){t.  call(                                                                                                                                                                                        this),this.array_ =[],arguments[0]instanceof It &&this.addAll(arguments[0]);}    return t &&(e.__proto__ =t)                                                                                     
             ,         e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e.prototype.contains =function (t){for (var e =0,n =this.array_.length;e <n;e++ ){if (this.array_[e]===t)return !0;}return !1;},e.prototype.add =function (t){return !this.contains(t)&&(this.array_.push(t),!0);},e.prototype.addAll =function (t){for (var e =t.iterator();e.hasNext();)this.add(e.next());return !0;},e.prototype.remove =function (t){throw new Error();},e. prototype.size =function (){return this.array_.length;},e.prototype.isEmpty =function (){return 0 ===this.array_.length;},e.prototype.toArray =function (){for (var t =[],e =0,n =this.array_.length;e <n;e++ )t.push(this.array_[e]);return t;},e.prototype.iterator =function (){return new Dt(this);},e;}(o),Dt =function (t){function e(e){t.call(this),this.hashSet_ =e,this.position_ =0;}return t &&(e.__proto__ =t),e.prototype =Object.        create(t &&t.prototype) ,                                                 e.prototype.constructor =e,e.prototype.next =function (){ if (this.position_ ===     this.   hashSet_.                                                                                                                                                size())throw new i();return this.hashSet_.array_[this.position_++ ];},e.prototype.hasNext =function (){return this.position_ <this.hashSet_.size();},e.prototype. remove =function ( ){throw new r();},e;}(Et),Mt =0;(p.prototype =new Rt()).    get = function (t) {                                                                                      for (var e  = this.root_;null !==e;){ var n =t.compareTo(e.key);if (n <0)e  =e.    left;else {if (!(n >                                                                                                                                                                                                                                                               0))return  e.value;e =e.right;}}return null;}, p.prototype.put =function (t,e){if  (   null  ===  this.root_)                                                                                                                                                                                                                       return this.     root_ =   {key:t,  value: e,  left: null,right: null,parent:null,color:Mt,getValue:function (){    return this.value;},getKey:function                                                                                                                                                                                                                                                                                                                                                                                                                                          () {return this.key;}},this.size_ =1,null;var n,i,r =this.root_;do {if (n =r,(i =   t.compareTo(r.key))                                                                                                                                                                                                                                             <0)r =r.left;else {if (!(i >0)){var o =r.value;return r.value =e, o;}r =r.right;}}while (null !==r)    ;var   s ={ key:t,left:                                                                         null,right:null,value:e,parent: n,color:Mt,getValue:function (){return this.     value;} ,  getKey:                                                                                                                                                                                                                                 function (){return this.key;}};return i  <0 ?n.left =  s : n.right =s, this.    fixAfterInsertion(                                                                                s),this.size_++ ,null;},p.prototype.fixAfterInsertion  =function (t){for ( t.    color =1;null !=t                                                                                                                                                                                                                                  &&t !==this.root_ &&1 ===t.parent.color;)if (a(t)===l(a(a(t)))){var e =c(a( a(  t)));1 ===s(e)?(u(                                                                            a(t),Mt), u(e,Mt),u(a(a(t)), 1),t =a( a(t))):(t  ===c(  a(t))&&( t =a(t),this.  rotateLeft(t)),u(a(                                                                                                                                                                                                                                                                                                                                                                                                        t),Mt),u(a(a(t)),1),this.rotateRight(a(a(t))));}else {var n =l(a(a(t)));1 ===   s(n)?(u(a( t),Mt),                                                                    u(     n,Mt),u(a(a(t)),1),t =a(a(t))):(t ===l(a(t))&&(t =a(t),this. rotateRight(t)),u(   a(t),Mt),u(                                                                                                                                                                                     a(a(t)),1),this.rotateLeft(a(a(t))));}this.root_.color =Mt;},p.prototype.values    =function (){var t =new Nt(                                                                                     
            ),         e =this.getFirstEntry();if (null !==e)for (t. add(e.value);null !==(e =p.successor( e));)t.add(e.value);return t;},p.prototype.entrySet =function (){var t =new Pt(),e =this.getFirstEntry();if (null !==e)for (t.add(e);null !==(e =p.successor(e));)t.add(e);return t;},p.prototype.rotateLeft =function (t){if (null !=t){var e =t.right;t.right =e.left,null !=e.left &&(e.left.parent =t),e.parent =t.parent,null ===t.parent ?this.root_ =e :t.parent.left ===t ?t.parent.left  =e :t.parent.right =e,e.left  =t,t.parent =e;}},p.prototype.rotateRight = function (t){if (null !=t){var e =t.left;t.left =e.right,null !=e.right &&(e.right.parent =t),e.parent =t.parent,null ===t.parent ?this. root_ =e :t.parent.right ===t ?t.parent.right =e :t.parent. left =e,e.right =t,t.parent =e;}},p.prototype.getFirstEntry =function (){var t =this.root_;if  (null !=t)for (;null !=t.left;)t =t.         left;return   t;} ,    p.                                                successor =function (t){if (null ===t)return null;if (null !==t.right){for (var e   =t. right;null !==                                                                                                                                                e.left;)e =e.left;return e;}for (var n =t.parent,i =t;null !==n &&i ===n.right;)i =n,n =n.parent;return n;},p.prototype.size = function (){return this.size_;};var At =function  (){};At.prototype.interfaces_ =function (){return  [] ;},At.    prototype.getClass                                                                                        =function (){return At;},h.prototype =new o(),(f.prototype =new h()).contains =    function (t) {for (                                                                                                                                                                                                                                                                var e =0,n =this.array_.length;e <n; e++ ){if  (0 === this.array_[e].compareTo( t) )   return !0;}return !1;}                                                                                                                                                                                                                               ,  f.    prototype.add =function  (t) {if  (this. contains(t))return !1;for  (var e =0, n =this.array_.    length; e < n;e++ ){ if (1 ===this.                                                                                                                                                                                                                                                                                                                                                                                                                                           array_[e].compareTo(t))return this. array_.splice(e,0, t),!0;}return this.array_.   push(  t), !0;} ,f.                                                                                                                                                                                                                                          prototype.addAll =function (t){for (var e =t.iterator();e.hasNext();)this.add(e.next());return !0;},      f.prototype.remove   =                                                                          function (t){throw new r(  ) ;},f. prototype.size =function (){return  this.    array_.length;} ,f.                                                                                                                                                                                                                                 prototype.isEmpty =function (){return 0 ===this.array_.length;},f.prototype.    toArray =function (                                                                               ){for (var t =[],e  =0,n =this.array_.length;e <n;e++ )t.push(this.array_[e])   ;return t;}  ,  f.                                                                                                                                                                                                                                  prototype.iterator = function ( ){return new Ft( this);};var Ft =function (t){  this.treeSet_  =t,                                                                            this.position_ =0;};Ft.prototype.next =function (){if (this.position_ ===this.   treeSet_. size( ))                                                                                                                                                                                                                                                                                                                                                                                                        throw new i();return this.treeSet_.array_[this.position_++ ];},Ft.prototype.    hasNext =function (                                                                    ){    return this.position_ <this.treeSet_.size();},Ft.prototype.remove =function (){   throw new r(                                                                                                                                                                                    );};var Gt =function (){};Gt.sort =function (){var t,e,n,i,r =arguments[0];if (   1 ===arguments.length) i =                                                                                       
            function   (t,e) {return t.compareTo(e);},r.sort(i);else if ( 2 ===arguments.length)n =arguments[1],i =function (t,e){return n.compare(t,e);},r.sort( i);else if (3 ===arguments.length){(e =r.slice(arguments[1],arguments[2])).sort();var o =r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length));for (r.splice(0,r.length),t  =0;t <o.length; t++ )r.push(o[t]);}else if (4 ===arguments.length)for (e =r.slice(arguments[1],arguments[2]),n =arguments[3],i =function (t,e){return n.compare(t,e);},e.sort(i),o =r.slice(0,arguments[1]).concat(e, r.slice(arguments[2],r.length)),r.splice(0,r.length),t =0;t <o.length;t++ )r.push(o[t]);},Gt.asList =function (t){for (var  e =new Nt(),n =0,i =t.length;n <i;n++ )e.add(t[n]);return e;};var qt =function (){},Bt ={P:{configurable:!0 },L:{configurable:!0 },A:{configurable:!0 } ,FALSE:{configurable:!0 },TRUE:{configurable:!0 },DONTCARE:{          configurable: !  0   } ,                                                  SYM_FALSE:{configurable: !0 },SYM_TRUE: { configurable:! 0   } ,SYM_DONTCARE:{    configurable:!0 },                                                                                                                                                SYM_P:{configurable:!0 },SYM_L:{configurable:!0 },SYM_A:{configurable:!0 }};Bt.P.get =function (){return 0;},Bt.L.get =function (){return 1;},Bt.A.get =function (){return 2;},Bt.FALSE.get =function (){return ( -1);},Bt.TRUE.get =function     (){return ( -2);},                                                                                       Bt.DONTCARE.get =function  ( )  {return ( -3);}, Bt.SYM_FALSE.get =function (){      return "F";} ,Bt.                                                                                                                                                                                                                                                              SYM_TRUE. get =function (){return "T";},Bt.SYM_DONTCARE.get =function (){return "*";},   Bt.SYM_P.get =function                                                                                                                                                                                                                            (    )  {    return "0";},Bt.SYM_L.get =function (){return "1";},Bt.SYM_A.get =function ( ){return "2";},    qt.prototype.interfaces_ =function                                                                                                                                                                                                                                                                                                                                                                                                                                             ()  {return  [  ];}    , qt.prototype. getClass =  function  () {return  qt;},qt.    toDimensionSymbol                                                                                                                                                                                                                                      = function (  t){switch  (t){case  qt.FALSE:return qt. SYM_FALSE;case qt.TRUE:return qt.SYM_TRUE;case qt.     DONTCARE:  return   qt.                                                                          SYM_DONTCARE;case qt.P:return qt.SYM_P;case qt.L:return  qt.SYM_L;case qt.A:     return  qt.SYM_A;}                                                                                                                                                                                                                                 throw new m("Unknown dimension value: "+t);},qt.toDimensionValue =function (    t) {switch    ( A.                                                                                toUpperCase(t)){case qt.SYM_FALSE:return qt.FALSE;case qt.SYM_TRUE:return qt.       TRUE;case  qt.                                                                                                                                                                                                                                    SYM_DONTCARE:return qt.DONTCARE;case qt.  SYM_P:return  qt.P;case qt. SYM_L:  return  qt. L;case                                                                            qt.SYM_A:return qt. A;} throw new m( "Unknown dimension symbol: "+t);},Object.    defineProperties(                                                                                                                                                                                                                                                                                                                                                                                                        qt,Bt);var Vt  =  function () {} ;Vt. prototype.filter  =function (t){} ,Vt.            prototype.                                                                    interfaces_ =function (){return [];},Vt.prototype.getClass =function (){return Vt;};var Ut = function ()                                                                                                                                                                                 {};Ut.prototype.filter =function (t,e){},Ut.prototype.isDone =function  (){} ,           Ut.      prototype.                                                                                       
            isGeometryChanged =function (){},Ut.prototype.interfaces_ =function (){return [];},Ut.prototype.getClass =function (){return Ut;};var zt =function (t){function e(e,n){if (t.call(this,n),this._geometries =e ||[],t.hasNullElements(this._geometries))throw new m("geometries must not contain null elements");}t &&(e.__proto__ =t),(e.prototype =Object.create(t &&t.prototype)).constructor =e;var n ={serialVersionUID:{configurable:!0  }};return e.prototype.computeEnvelopeInternal =function (){for (var t =new j(),e =0;e <this._geometries.length;e++ )t.expandToInclude(this._geometries[e].getEnvelopeInternal());return t;},e.prototype.getGeometryN =function (t){return this._geometries[t];},e.prototype.getSortIndex =function (){return t.SORTINDEX_GEOMETRYCOLLECTION;},e.prototype.getCoordinates =function (){for (var t =new Array(this.getNumPoints()).fill(null),e = -1,n =0;n <this._geometries.  length;n++ )for (var i  =                                                 this._geometries[n]. getCoordinates( ), r  =0; r <i. length;r++ ) t[ ++e] =i[r]     ;return   t;} ,e.                                                                                                                                                prototype.getArea =function (){for (var t =0,e =0;e <this._geometries.length;e++ )t +=this._geometries[e].getArea();return t;},e.prototype.equalsExact =function (){if (2 ===arguments.length){var e =arguments[0],n =arguments[1];if (!this.    isEquivalentClass(                                                                                         e)) return ! 1;var i  =e;if ( this._geometries.length !==i._geometries.length)    return !1;for (var r                                                                                                                                                                                                                                                           =0;r <this._geometries.length;r++ )if (!this._geometries[r].equalsExact(i._geometries[r]   ,n))return !1;return !                                                                                                                                                                                                                                  0;}    return  t.prototype.equalsExact.apply(this,arguments);},e. prototype.normalize =function (){      for (  var   t =0;  t <   this.                                                                                                                                                                                                                                                                                                                                                                                                                                              _geometries.length;t++ )this._geometries[t].normalize();Gt.sort(this._geometries)                                                                                                                                                                                                                                                    ;},e.prototype.getCoordinate = function (){return this. isEmpty()?null :this._geometries[0].getCoordinate();},e.                  prototype.                                                                          getBoundaryDimension =function  ( ){for ( var  t = qt.FALSE, e = 0; e <this.    _geometries.length;                                                                                                                                                                                                                                 e++ )t =Math.max(t,this._geometries[e].getBoundaryDimension());return t;},e.            prototype.                                                                                  getDimension =function ( ){for (var  t =qt.FALSE,e =0;e <this. _geometries.    length;e++ )t   =                                                                                                                                                                                                                                   Math.max(  t, this. _geometries[e].getDimension( )) ;return  t;},e.prototype.     getLength     =                                                                            function (){ for (var t = 0, e =0; e  <this._geometries.length;e++ )t  +=this.  _geometries[   e] .                                                                                                                                                                                                                                                                                                                                                                                                        getLength();return t;},e.prototype.getNumPoints =function (){for (var t =0,e    =0;   e   <  this.                                                                     _geometries. length;e++ )  t +=this. _geometries[e].getNumPoints( );return  t;} ,e.prototype. getNumGeometries                                                                                                                                                                        =function (){return this._geometries.length;},e.prototype.reverse =function (){      for  (   var   t  =this.                                                                                        
            _geometries. length,e =new Array(t).fill(null),n =0;n <this._geometries.length;n++ )e[n]=this._geometries[n].reverse();return this.getFactory().createGeometryCollection(e);},e.prototype.compareToSameClass =function (){if (1 ===arguments.length){var t =arguments[0],e =new f(Gt.asList(this._geometries)),n =new f(Gt.asList(t._geometries));return this.compare(e,n);}if (2 ===arguments.length){for (var i =arguments[0],r =arguments[1],o =i,s =this.getNumGeometries(),a =o.getNumGeometries(),u =0;u <s &&u <a;){var l =this.getGeometryN(u),c =o.getGeometryN(u),p =l.compareToSameClass(c,r);if (0 !==p)return p;u++ ;}return u <s ?1 :u <a ? -1 :0;}},e.prototype.apply =function (){if (T(arguments[0],ft))for (var t =arguments[0],e =0;e <this._geometries.length;e++ )this._geometries[e].apply(t);else if (T(arguments[0],Ut)){var n =arguments[0];if (0 ===this._geometries.length)return null;for         ( var i  =0;i   <  this.                                               _geometries.length  &&(this._geometries[i].apply(  n), ! n. isDone());i++  ) ;n.    isGeometryChanged(                                                                                                                                                )&&this.geometryChanged();}else if (T(arguments[0],Vt)){var r =arguments[0] ;r.filter(this);for (var o =0;o <this._geometries.length;o++ )this._geometries[o].apply(r);}else if (T(arguments[0],lt)){var s =arguments[0];s.filter(this);for (    var  a = 0;a <this.                                                                                       _geometries.length;a++ )this._geometries[a].apply(s);}},e.prototype.getBoundary     =   function  ( ){                                                                                                                                                                                                                                                             return this.checkNotGeometryCollection(this),  et.shouldNeverReachHere( ) ,  null;},e.   prototype.  clone     =                                                                                                                                                                                                                           function     () {var e =t.prototype.clone.call(this);e._geometries =new Array(this._geometries.length).fill(    null);for  (var n  =0;n <this.                                                                                                                                                                                                                                                                                                                                                                                                                                               _geometries.length;n++ )e. _geometries[n]=this._geometries[n].clone();return e;},                                                                                                                                                                                                                                     e.prototype.getGeometryType =function (){return  "GeometryCollection";},e.prototype.copy =function () { for (var t =new Array(   this. _geometries.length).                                                                          fill(null) ,n =0;n <t.length;n++ )t[n]=this._geometries[n].copy();return new    e(t,this._factory)                                                                                                                                                                                                                                   ;},e.prototype.isEmpty =function (){for (  var t = 0;t < this. _geometries.    length; t++ )if ( !                                                                               this._geometries[t].isEmpty())return !1;return !0;},e.prototype.interfaces_ =     function  ( )  {                                                                                                                                                                                                                                  return [];},e.prototype.getClass = function  (){return e;},n.serialVersionUID.  get = function (){                                                                             return ( - 0x4f07bcb1f857d800);} ,Object. defineProperties(e,n) ,e;}(ct),Xt =    function (  t)  {                                                                                                                                                                                                                                                                                                                                                                                                        function e() {t.apply(this,arguments);}t  &&(e.__proto__  =t),(e.prototype =    Object.create(t &&                                                                       t.     prototype) ).constructor   =e;var n  = { serialVersionUID:{configurable:!0 } }    ;return e.                                                                                                                                                                                  prototype.getSortIndex =function  (){return ct.SORTINDEX_MULTILINESTRING;}, e.   prototype.  equalsExact   =                                                                                        
            function   (){if (2 ===arguments. length){var e =arguments[0],n =arguments[1];return !!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n);}return t.prototype.equalsExact.apply(this,arguments);},e.prototype.getBoundaryDimension =function (){return this.isClosed()?qt.FALSE :0;},e.prototype.isClosed =function (){if ( this.isEmpty())return !1;for (var t =0;t <this._geometries.length;t++ )if (!this._geometries[t] .isClosed())return !1;return !0;},e.prototype.getDimension =function (){return 1;},e.prototype. reverse =function (){for  ( var t =this._geometries.length,e =new Array(t).fill(null),n =0;n <this._geometries.length;n++ )e[t - 1 -n]=this._geometries[n].reverse();return this.getFactory().createMultiLineString(e);},e.prototype.getBoundary =function (){return new Yt(this).getBoundary();},e.prototype.getGeometryType =function (){return "MultiLineString";},e.        prototype.copy =function (                                                ){for (var t =new Array(this._geometries.length).fill(null),n =0;n <t.length;n++       ) t[ n] = this.                                                                                                                                                _geometries[ n]. copy( ) ;return new e( t,this._factory);},  e. prototype.interfaces_ =function (){ return  [At];},e. prototype.getClass  =function ( ){ return e;}  ,n.serialVersionUID.get =function (){return 0x7155d2ab4afa8000;},Object.     defineProperties(                                                                                         e,n),e;} (zt),Yt =function ( ){if (this._geom =null,this._geomFact =null,this.    _bnRule =null,this.                                                                                                                                                                                                                                                            _endpointMap   = null, 1    ===   arguments.   length){ var  t  =arguments[0],  e =gt.    MOD2_BOUNDARY_RULE;this.                                                                                                                                                                                                                           _geom =   t, this._geomFact =t.getFactory(   ), this._bnRule =e;} else if (2 ===arguments. length){var n  =    arguments[0],i = arguments[1]                                                                                                                                                                                                                                                                                                                                                                                                                                                ;this._geom =n,this._geomFact =n.getFactory(),this._bnRule =i;}};Yt.prototype.boundaryMultiLineString =function (t){if (this._geom.isEmpty())return this.getEmptyMultiPoint();var e =this.computeBoundaryCoordinates(t);return 1 ===e.length ?this._geomFact.createPoint(e[0]):this._geomFact.createMultiPointFromCoords(e);},Yt.prototype.getBoundary =function (){return this._geom instanceof Kt ?this.boundaryLineString(this._geom):this._geom     instanceof  Xt    ?this.                                                                           boundaryMultiLineString(this._geom):this._geom.getBoundary();},Yt.prototype.    boundaryLineString                                                                                                                                                                                                                                  =function (t){if (this._geom.isEmpty())return this.getEmptyMultiPoint();if (      t.isClosed() )  {                                                                                return this. _bnRule.isInBoundary( 2)?t.getStartPoint()  : this.  _geomFact.   createMultiPoint()                                                                                                                                                                                                                                  ;}return this._geomFact.createMultiPoint([ t.getStartPoint(),t.getEndPoint()])  ;},  Yt. prototype.                                                                           getEmptyMultiPoint =function (){return this._geomFact.createMultiPoint();},Yt.           prototype.                                                                                                                                                                                                                                                                                                                                                                                                        computeBoundaryCoordinates =function (t){var e =new Nt();this._endpointMap =    new p();for (var n                                                                      =0;    n <t.getNumGeometries();n++ ){var i =t.getGeometryN(n);0 !==i.getNumPoints()&&(          this.                                                                                                                                                                                  addEndpoint( i. getCoordinateN(    0)),this. addEndpoint( i.getCoordinateN(i.   getNumPoints()-1)));}for (                                                                                         
            var        r =this._endpointMap.entrySet().iterator();r.hasNext();){var o =r.next(), s =o.getValue().count;this._bnRule.isInBoundary(s)&&e.add(o.getKey());}return Lt.toCoordinateArray(e);},Yt. prototype.addEndpoint =function (t){var e =this._endpointMap.get(t);null === e &&(e = new kt(),this._endpointMap.put(t,e)),e.count++ ;},Yt.prototype.interfaces_ = function (){return [];},Yt.prototype.getClass = function ( ){return Yt;},Yt.getBoundary =function (){if (1 ===arguments.length){var t =arguments[0];return new Yt(t).getBoundary();}if (2 ===arguments.length){var e =arguments[0],n =arguments[1];return new Yt(e,n).getBoundary();}};var kt =function (){this.count =null;};kt.prototype.interfaces_ =function (){return   [];},kt.prototype.getClass =function (){return kt;};var jt =function (){},Ht ={NEWLINE:{configurable:!0 },SIMPLE_ORDINATE_FORMAT:{configurable:!0 }};jt.prototype.        interfaces_  =function (){                                                return [];},jt.prototype.getClass =function (){return jt;}, jt.chars =function (    t, e){for (var n =                                                                                                                                                new Array(e).fill(null),i =0;i <e;i++ )n[i]=t;return String(n);},jt.getStackTrace =function (){if (1 ===arguments.length){var t =arguments[0],e = new function (){}(),n =new function (){}(e);return t.printStackTrace(n),e.toString();}if (2     ===    arguments.                                                                                        length){for (var i =arguments[0],r =arguments[1],o ="",s =new function (){}(new    function (){ } (jt.                                                                                                                                                                                                                                                        getStackTrace( i))),a = 0;a <r; a++ )try { o +=s. readLine()+jt.NEWLINE;}catch (t){if (!(t      instanceof  g)     )                                                                                                                                                                                                                               throw t;et. shouldNeverReachHere();}return o;}},jt.split =function (t,e){for (var n =e.length,i =new Nt(),r =""+ t,o = r.indexOf(e);o >=0;){                                                                                                                                                                                                                                                                                                                                                                                                                                              var s =r.substring(0,o) ;i.add(s),o =(r = r.substring(o +n)) .indexOf( e);}r.length >0 &&i.add(r);for  (var a =new Array(i.size()).fill(null),u =0;u <a.length;u++ )a[u]=i.get(u);return a;},jt.toString =function ( ){if  (1 ===arguments.length) {var t =arguments[0];return jt.SIMPLE_ORDINATE_FORMAT.format(t) ;}},jt. spaces =function (t){return jt.chars(" ",t);}  ,Ht.NEWLINE.get =function (){return Y.getProperty("line.separator");},Ht.   SIMPLE_ORDINATE_FORMAT.get                                                                            =function (){return new function (){}("0.#");} ,Object.defineProperties(jt,     Ht)    ;var Wt   =                                                                                                                                                                                                                                 function  ()  {};Wt.prototype.interfaces_ =  function (){return  [ ] ;} ,Wt.    prototype.getClass =                                                                              function (){return Wt;},Wt.copyCoord  =function (t,e,n,i){for ( var  r =Math.          min(     t.                                                                                                                                                                                                                                    getDimension(),n.getDimension( )), o  = 0;o < r;o++ )n. setOrdinate( i,o, t.  getOrdinate(e,o));}                                                                           , Wt.isRing =function (t){var  e =t. size( );return 0 ===e ||!(e    <= 3) &&t.  getOrdinate( 0,V.X)                                                                                                                                                                                                                                                                                                                                                                                                        ===t.getOrdinate(e -1,V.X)&&t.getOrdinate(0,V.Y)===t.getOrdinate(e -1,V.Y);}     ,  Wt.  isEqual =                                                                      function ( t, e){var n =t.size( );if  (n !==e.  size())return !1;for (var i =Math.min(t.  getDimension(                                                                                                                                                                             ),e.getDimension() )  , r = 0;r <n; r++ ) for (var  o =0;o <i; o++ ){var s =t.      getOrdinate( r,o),a   =e.                                                                                         
            getOrdinate( r,o);if (t.getOrdinate(r,o)!==e.getOrdinate(r,o)&&(!v.isNaN(s)||!v.isNaN(a)))return !1;}return !0;},Wt.extend =function (t,e,n){var i =t.create(n,e.getDimension()),r =e.size();if (Wt.copy(e,0,i,0,r),r >0)for (var o =r;o <n;o++ )Wt.copy(e,r -1,i,o,1);return i;},Wt.reverse =function (t){for (var e =t.size()-1,n =Math.trunc(e /2),i =0;i <=n;i++ )Wt.swap(t,i,e -i);},Wt.swap =function (t,e,n){if (e ===n)return null;for (var i =0;i <t.getDimension();i++ ){var r =t.getOrdinate(e,i);t.setOrdinate(e,i,t.getOrdinate(n,i)),t.setOrdinate(n,i,r);}},Wt.copy =function (t,e,n,i,r){for (var o =0;o <r;o++ )Wt.copyCoord(t,e +o,n,i +o);},Wt.toString =function (){if (1 ===arguments.length){var t =arguments[0],e =t.size();if (0 ===e)return "()";var n =t.getDimension(),i =new D();i.append("(");for (var r =0;r <e;r++ ){r >0 &&i.append(" ");for (var o =0;o <n;o++ )o >0 &&i.append(",")      ,i. append(jt.toString( t.                                                 getOrdinate(r,o))) ;}return i.append( ")"),i.toString();}},Wt.ensureValidRing =    function (t,e){var                                                                                                                                                n =e.size();if (0 ===n)return e;if (n <=3)return Wt. createClosedRing(t,e,4);return e.getOrdinate(0,V.X)===e.getOrdinate(n  -1,V.X)&&e.getOrdinate(0,V.Y)===e.getOrdinate(n -1,V.Y)? e :Wt.createClosedRing(t,e,n +1);},Wt.createClosedRing =    function  (t,e,n){                                                                                        var i =t.create(n,e.getDimension()),r =e.size();Wt.copy(e,0,i,0,r);for (var o =    r;  o <n; o++ ) Wt.                                                                                                                                                                                                                                                      copy(e,0,i,o,1);return i;};var Kt =function (t){function e(e,n){t.call(this,n),this._points =  null,this.init(e);}t &&                                                                                                                                                                                                                                     ( e.__proto__ =t),(e.prototype = Object.create(t  &&t.   prototype) )  .    constructor  =e;var n  = {      serialVersionUID:    {                                                                                                                                                                                                                                                                                                                                                                                                                                                  configurable:!0 }};return e.prototype.computeEnvelopeInternal =function (){return this.isEmpty()?new j():this._points.expandEnvelope(new j());},e.prototype.isRing =function (){return this.isClosed()&&this.isSimple();},e.prototype.getSortIndex =function (){return t.SORTINDEX_LINESTRING;},e.prototype.getCoordinates =function (){return this._points.toCoordinateArray();},e.prototype.equalsExact =function (){if (2 ===arguments.length){   var e =arguments[ 0] , n =                                                                            arguments[1];if (! this.isEquivalentClass(e))return ! 1;var  i =e;if  (this.    _points.size()!== i.                                                                                                                                                                                                                                _points. size())return  !1;for (var r =0;r <this. _points.size();r++ ) if (!      this.equal( this.                                                                               _points.getCoordinate(r),i._points. getCoordinate(r),n))return !1;return !0;}   return t.prototype.                                                                                                                                                                                                                                 equalsExact.apply(this,arguments);} ,e.prototype. normalize =function (){for (  var  t =0;t  <Math.                                                                           trunc(this._points.size()/2);t++ ){var e = this._points.size()-1 -t;if (!this.             _points.                                                                                                                                                                                                                                                                                                                                                                                                        getCoordinate(t).equals(this._points.getCoordinate(e)))return this. _points.    getCoordinate(t) .                                                                       compareTo( this._points.getCoordinate(e))>0 &&Wt.reverse(this._points),null;}},e.prototype. getCoordinate                                                                                                                                                                         =function () {return  this. isEmpty()?null : this._points.getCoordinate(0);},e.                    prototype.                                                                                          
           getBoundaryDimension =function (){return this.isClosed()?qt.FALSE :0;} ,e.prototype.isClosed =function (){return !this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1));},e.prototype.getEndPoint =function (){return this.isEmpty()?null :this.getPointN(this.getNumPoints()-1);},e.prototype.getDimension =function (){return 1;},e.prototype.getLength =function (){return at.computeLength(this._points);},e.prototype.getNumPoints =function (){return this._points.size();},e.prototype.reverse =function (){var t =this._points.copy();Wt.reverse(t);return this.getFactory().createLineString(t);},e.prototype.compareToSameClass =function (){if (1 ===arguments.length){for (var t =arguments[0],e =0,n =0;e <this._points.size()&&n <t._points.size();){var i =this._points.getCoordinate(e).compareTo(t._points.getCoordinate(n));if (0 !==i)return i;e++ ,n++ ;}return e < this._points.size()?1 :n <                                              t._points.size(  ) ?  -1 :0;}if (2  ===arguments. length){ var  r = arguments[0]    ;return arguments[                                                                                                                                                1].compare(this._points,r._points);}},e.prototype.apply =function (){if (T(arguments[0],ft))for (var t =arguments[0],e =0;e <this._points.size();e++ )t.filter(this._points.getCoordinate(e));else if (T(arguments[0],Ut)){var n = arguments[    0];if  (0 === this.                                                                                       _points. size()) return  null;for ( var i =0;i <this._points.size()&&(n.filter(    this._points,i),!n.                                                                                                                                                                                                                                                    isDone());i++ );n.isGeometryChanged()&&this.geometryChanged();}else  if (T(arguments[0],Vt)){    arguments[ 0] . filter(                                                                                                                                                                                                                                    this);}else if (T(arguments[0],lt)){arguments[0] .filter( this);}},e.prototype.getBoundary =function (){      return new Yt(this).                                                                                                                                                                                                                                                                                                                                                                                                                                                   getBoundary();},e.prototype.isEquivalentClass =function (t){return t instanceof e;} ,e.prototype.clone =function (){var e =t.prototype.clone.call(this);return e._points =this._points.clone(),e;},e.prototype.getCoordinateN =function (t){return this._points.getCoordinate(t);},e.prototype.getGeometryType =  function (){return "LineString" ;},e.prototype.copy =function (){return new e(this._points.copy(),this._factory);},e.prototype.     getCoordinateSequence   =                                                                            function (){return this._points;},e.prototype. isEmpty =function (){return 0       ===this._points.                                                                                                                                                                                                                                 size();},e.prototype.init =function (t){if (null ===t &&(t =this.getFactory(              )       .                                                                               getCoordinateSequenceFactory( ).create([])),1  ===t.  size( )  )throw  new m(   "Invalid number of points in LineString (found "                                                                                                                                                                                                    +t.size()+" - must be 0 or >= 2)");this._points =t;},e.prototype.isCoordinate = function  (t){for (                                                                           var e =0;e <this._points.size();e++ )if (this._points.getCoordinate(e).equals(   t) )     return  !                                                                                                                                                                                                                                                                                                                                                                                                        0;return !1;},e.prototype.getStartPoint =function ( ){return this.isEmpty()?    null     :   this.                                                                       getPointN( 0);},e.prototype.getPointN = function (t){return this.getFactory().createPoint(       this.                                                                                                                                                                            _points.getCoordinate(t));},e.prototype.interfaces_ =function (){return [At];},     e. prototype.getClass  =                                                                                           
            function   (){return e;},n.serialVersionUID.get =function (){return 0x2b2b51ba435c8e00;},Object.defineProperties(e,n),e;}(ct),Jt =function (){};Jt.prototype.interfaces_ =function (){return [];},Jt.prototype.getClass =function (){return Jt;};var Qt =function (t){function e(e,n){t.call(this,n),this._coordinates =e ||null,this.init(this._coordinates);}t &&(e.__proto__ =t),(e.prototype =Object.create(t &&t.prototype)).constructor =e;var n ={serialVersionUID:{configurable:!0 }};return e.prototype.computeEnvelopeInternal =function (){if (this.isEmpty())return new j();var t =new j();return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t;},e.prototype.getSortIndex =function (){return t.SORTINDEX_POINT;},e.prototype.getCoordinates =function (){return this.isEmpty()?[]:[this.getCoordinate()];},e.prototype.equalsExact =function (){if (2 ===arguments.length)         {var e =arguments[ 0],n =                                                arguments[1];return !!this.isEquivalentClass(e)&&(!(!this.isEmpty()||!e.isEmpty(    ))||this.isEmpty()                                                                                                                                                ===e.isEmpty()&&this.equal(e.getCoordinate(),this.getCoordinate(),n));}return t.prototype.equalsExact.apply(this,arguments);},e.prototype.normalize =function (){},e.prototype.getCoordinate =function (){return 0 !==this._coordinates.size(           ) ?   this.                                                                                        _coordinates.getCoordinate(0):null;},e.prototype.getBoundaryDimension =function       (){ return   qt.                                                                                                                                                                                                                                                  FALSE;},e.prototype.getDimension =function (){return 0;},e.prototype.getNumPoints =function (){  return this.isEmpty()?0 :                                                                                                                                                                                                                                   1;},e.prototype.reverse =function (){return this.copy();},e.prototype.getX =function (){if (null ===  this.    getCoordinate( )  )                                                                                                                                                                                                                                                                                                                                                                                                                                                    throw new Error("getX called on empty Point");return this.getCoordinate().x;},e.prototype.compareToSameClass =function (){if (1 ===arguments.length){var t =arguments[0];return this.getCoordinate().compareTo(t.getCoordinate());}if (2 ===arguments.length){var e =arguments[0];return arguments[1].compare(this._coordinates,e._coordinates);}},e.prototype.apply =function (){if (T(arguments[0],ft)){var t =arguments[0];if (this.isEmpty()    )  return  null;t. filter(                                                                             this.getCoordinate());}else if (T(arguments[0],Ut)){var e =arguments[0];if (    this. isEmpty( ) )                                                                                                                                                                                                                                  return null;e.filter(this.  _coordinates,  0),e.isGeometryChanged(  )&&this.    geometryChanged();}                                                                               else if (T(arguments[0],Vt)){arguments[0].filter(this);}else if (T(arguments[   0],lt)){arguments[                                                                                                                                                                                                                                   0].filter( this);}}  , e.prototype.getBoundary  =function (){    return this.    getFactory(    ).                                                                            createGeometryCollection(null);}, e. prototype.clone  =function (){var  e =t.     prototype.clone.                                                                                                                                                                                                                                                                                                                                                                                                        call(this);return e._coordinates =this._coordinates.clone(),e;},e.prototype.     getGeometryType =                                                                        function (){ return "Point" ;},  e.   prototype.copy = function (  ){return new e(this.   _coordinates.                                                                                                                                                                          copy() , this._factory);}  ,e.prototype.getCoordinateSequence = function  () {    return this._coordinates;}                                                                                           
            ,e.        prototype.getY =function (){if (null ===this.getCoordinate())throw new Error("getY called on empty Point");return this.getCoordinate().y;},e.prototype.isEmpty =function (){return 0 ===this._coordinates.size();},e.prototype.init =function (t){null ===t &&(t =this.getFactory().getCoordinateSequenceFactory().create([])),et.isTrue(t.size()<=1),this._coordinates =t;},e.prototype.isSimple =function (){return !0;},e.prototype.interfaces_ =function (){ return [Jt];},e.prototype.getClass =function (){return e;},n.serialVersionUID.get =function (){return 0x44077bad161cbc00;},Object.defineProperties(e,n),e;}(ct),Zt =function (){};Zt.prototype.interfaces_ =function (){return [];},Zt.prototype.getClass =function (){return Zt;};var $t =function (t){function e(e,n,i){if (t.call(this,i),this._shell =null,this._holes =null,null ===e &&(e =this.getFactory().createLinearRing()),         null ===n &&( n =[] ), t.                                                hasNullElements(n) )throw new m( "holes must not contain null elements");if  (e.      isEmpty(  ) && t.                                                                                                                                               hasNonEmptyElements(n) )throw new  m("shell is empty but holes are not");this._shell  =e, this._holes =n;}t &&(e.__proto__ =t),(e.prototype =  Object.create(t &&t. prototype) ).constructor = e;var n ={serialVersionUID:{configurable:!0 }}        ;return      e.                                                                                        prototype.   computeEnvelopeInternal  = function   (  ){  return this. _shell.    getEnvelopeInternal(                                                                                                                                                                                                                                               );},e.prototype.getSortIndex =function (){return t.SORTINDEX_POLYGON;},e.prototype.getCoordinates  =function  (){if ( this.                                                                                                                                                                                                                                   isEmpty() )return  [];for   (var t  =new   Array(this. getNumPoints( )).fill(null) ,e = -1, n = this._shell.    getCoordinates(),                                                                                                                                                                                                                                                                                                                                                                                                                                                      i =0;i <n.length;i++ )t[ ++e]=n[i];for (var r =0;r <this._holes.length;r++ )for (var o =this._holes[r].getCoordinates(),s =0;s <o.length;s++ )t[ ++e]=o[s];return t;},e.prototype.getArea =function (){var t =0;t +=Math.abs(at.signedArea(this._shell.getCoordinateSequence()));for (var e =0;e <this._holes.length;e++ )t -=Math.abs(at.signedArea(this._holes[e].getCoordinateSequence()));return t;},e.prototype.isRectangle =function (){if       (    0        !== this.                                                                             getNumInteriorRing())return !1;if  ( null ===this._shell)return !1;if (5 !==       this.   _shell.                                                                                                                                                                                                                                  getNumPoints())return !1;for (var t =this._shell.getCoordinateSequence(),e =                  this.                                                                               getEnvelopeInternal(),n =0;n <5;n++ ){var i =t.getX(n);if (i !==e.getMinX()&&   i !==e.getMaxX( ))                                                                                                                                                                                                                                  return !1;var r =t.getY(n);if (r !==e.getMinY()&&r !==e.getMaxY() )return !1;}  for (var o =t.getX(                                                                           0),s =t.getY(0),a =1;a <=4;a++ ){var u =t.getX(a),l =t.getY(a);if (u !==o ===(  l !==s))return !1;o                                                                                                                                                                                                                                                                                                                                                                                                         =u,s   =l;}return  !0;}, e.prototype.equalsExact =function  () { if (2  ===    arguments.length){                                                                         var    e =arguments[0],n =arguments[1];if (!this.isEquivalentClass(e))return !1;var i =  e, r = this.                                                                                                                                                                         _shell,o =i._shell;if (! r.equalsExact(o,n))return !1;if (this._holes.length !==   i. _holes. length)return !                                                                                            
           1;for       (var s =0;s <this._holes.length;s++ )if (!this._holes[s] .equalsExact(i._holes[s],n))return !1;return !0;}return t.prototype.equalsExact.apply(this,arguments);},e.prototype.normalize = function (){if (0 ===arguments.length){this.normalize(this._shell,!0);for (var t =0;t <this._holes.length;t++ )this.normalize(this._holes[t],!1);Gt.sort(this._holes);}else if  (2 ===arguments.length){var e =arguments[0],n =arguments[1];if (e.isEmpty())return null;var i =new Array(e.getCoordinates().length -1).fill(null);Y.arraycopy(e.getCoordinates(),0,i,0,i.length);var r =Lt.minCoordinate(e.getCoordinates());Lt.scroll(i,r),Y.arraycopy(i,0,e.getCoordinates(),0,i.length),e.getCoordinates()[i.length]=i[0],at.isCCW(e.getCoordinates( ))===n &&Lt.reverse(e.getCoordinates());}},e.prototype.getCoordinate =function (){return this._shell.getCoordinate();},e.prototype.getNumInteriorRing =         function () {return this.                                                 _holes.length;},e.prototype.  getBoundaryDimension = function (){return 1;} ,e.             prototype.                                                                                                                                               getDimension =function (){return 2;},e. prototype.getLength =function (){var t =0;t +=this._shell.getLength();for  (var e =0;e <this._holes.length;e++ )t +=this._holes[e].getLength();return t;},e.prototype.getNumPoints =function (){for (    var t =this._shell.                                                                                       getNumPoints(),e =0;e <this._holes.length;e++ )t +=this._holes[e].getNumPoints(    );return    t;}, e.                                                                                                                                                                                                                                             prototype.reverse =function (){var t =this.copy();t._shell =this._shell.copy().reverse(),t._holes =    new  Array(this._holes.                                                                                                                                                                                                                                  length) .fill( null);for (  var e  =0;e <this._holes.length;e++ )t._holes[  e]=this._holes[ e].copy().reverse()    ;return t;},e.                                                                                                                                                                                                                                                                                                                                                                                                                                                       prototype.convexHull =function (){return this.getExteriorRing().convexHull();} ,e.prototype.compareToSameClass =function (){if (1 ===arguments.length){var  t =arguments[0] , e =this._shell,n =t._shell;return e. compareToSameClass(n);}if  (2 ===arguments. length){var i =arguments[0],r =arguments[1] ,  o =i,s =this._shell,a =o._shell,u =s.compareToSameClass( a,r);if (0 !==u) return u;for (var  l =this.getNumInteriorRing(), c =o.    getNumInteriorRing(),p =0;p                                                                              <l &&p <c;){var h =this.getInteriorRingN( p), f =o.getInteriorRingN(p),g =h.    compareToSameClass(                                                                                                                                                                                                                                 f,r);if (0 !==g)return g;p++ ;}return p <l ?1 :p <c ? - 1 :0;}},e.prototype.    apply =function (t)                                                                               {if (T(t,ft)){ this._shell.apply(t);for (var e =0;e <this._holes.length;e++ )     this. _holes[e].                                                                                                                                                                                                                                  apply(t);}else if ( T(t,Ut)){if (this._shell.apply(t),!t.isDone())for (var n =   0;n  <this._holes.                                                                           length &&(this._holes[n]. apply(t),!t.isDone()); n++ );t.isGeometryChanged()&&                this.                                                                                                                                                                                                                                                                                                                                                                                                        geometryChanged();}else  if  (T(t, Vt))t.filter(this);else if (T(t,lt)) { t.    filter(this),this.                                                                         _shell. apply(t);for (var i =0;i <this._holes.length;i++ )this._holes[i].apply(t);}},e.    prototype.                                                                                                                                                                         getBoundary  =function  ( ){  if ( this. isEmpty() ) return this.getFactory() .    createMultiLineString(  )                                                                                             
           ;var        t =new Array(this._holes.length +1).fill(null);t[0]=this._shell;for (var e =0;e  <this._holes.length;e++ )t[e +1]=this._holes[e];return t.length <=1 ?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t);},e.prototype.clone =function (){var e =t.prototype.clone.call(this);e._shell =this._shell.clone(),e._holes =new Array(this._holes.length).fill(null);for (var  n =0;n <this._holes.length;n++ )e._holes[n]=this._holes[n].clone();return e;},e.prototype.getGeometryType =function (){return "Polygon";},e.prototype.copy =function (){for (var t =this._shell.copy(),n =new Array(this._holes.length).fill(null),i =0;i <n.length;i++ )n[i]=this._holes[i].copy();return new e(t,n,this._factory);},e.prototype.getExteriorRing =function (){return this._shell;},e.prototype.isEmpty =function (){return this._shell.isEmpty();},e.        prototype.getInteriorRingN =                                              function (t){return this._holes[ t];},e.prototype. interfaces_   = function () {    return [ Zt];}, e.                                                                                                                                                prototype.getClass =function (){return e;},n.serialVersionUID.get =function (){return ( -0x307ffefd8dc97200);},Object.defineProperties(e,n),e;}(ct),te =function (t){function e(){t.apply(this,arguments);}t &&(e.__proto__ =t),(e.prototype =   Object.create(t  &&                                                                                       t.prototype) ).constructor =e;var n  = {serialVersionUID: {configurable: ! 0 }}        ;return      e.                                                                                                                                                                                                                                         prototype.getSortIndex =function (){return ct.SORTINDEX_MULTIPOINT;},e.prototype.isValid =function (){   return !0;},e.prototype.                                                                                                                                                                                                                                  equalsExact =function (){if  ( 2 ===arguments. length) {var  e =arguments[0] ,n    = arguments[1];return  !!this.   isEquivalentClass(                                                                                                                                                                                                                                                                                                                                                                                                                                                    e)&&t.prototype.equalsExact.call(this,e,n);}return t.prototype. equalsExact.apply(this,arguments);},e.prototype.getCoordinate =function (){ if (1  ===arguments.length){var e =arguments[0];return this._geometries[e].getCoordinate();}return t.prototype.getCoordinate.apply(this,arguments);}, e.prototype.getBoundaryDimension =function (){return qt.FALSE;},e.prototype.getDimension =function (){return 0;},e.prototype. getBoundary =     function (){ return  this.                                                                              getFactory().createGeometryCollection(null);},e.prototype.getGeometryType  =     function  (  )   {                                                                                                                                                                                                                                 return  "MultiPoint";},e.prototype.copy =function (){for ( var t =new Array(    this.  _geometries.                                                                               length).fill(null),n = 0;n <t.length; n++ ) t[ n]=this. _geometries[n].copy()   ;return new  e( t,                                                                                                                                                                                                                                  this._factory);} ,e.prototype.interfaces_   =function ( ){return  [Jt] ;}  ,e.  prototype.getClass =                                                                          function () { return e;},n.   serialVersionUID.get =function (){return  (    -  0x6fb1ed4162e0fc00)                                                                                                                                                                                                                                                                                                                                                                                                        ;},Object.defineProperties( e,n),e;}(zt),ee  =function (t){function e(e,n){e     instanceof  C &&n                                                                          instanceof _e &&(e =n.getCoordinateSequenceFactory().create( e)), t.call(this,e, n),this. validateConstruction(                                                                                                                                                                ) ;} t &&( e.__proto__ = t),(e.prototype = Object.create(t &&t. prototype)).     constructor = e;var n = {                                                                                             
           MINIMUM_VALID_SIZE: {configurable:!0 },serialVersionUID:{configurable:!0 }};return e.prototype.getSortIndex =function (){return ct.SORTINDEX_LINEARRING;},e.prototype.getBoundaryDimension =function (){return qt.FALSE;},e.prototype.isClosed =function (){return !!this.isEmpty()||t.prototype.isClosed.call(this);},e.prototype.reverse =function (){var t =this._points.copy();Wt.reverse(t);return this.getFactory().createLinearRing(t);},e.prototype.validateConstruction =function (){if (!this.isEmpty()&&!t.prototype.isClosed.call(this))throw new m( "Points of LinearRing do not form a closed linestring");if (this.getCoordinateSequence().size()>=1 &&this.getCoordinateSequence().size()<e.MINIMUM_VALID_SIZE)throw new m("Invalid number of points in LinearRing (found "+this.getCoordinateSequence().size()+" - must be 0 or >= 4)");},e.prototype.getGeometryType =function (){return "LinearRing";},e. prototype.copy =function ()                                              { return  new e(this._points.copy(),this._factory);},e. prototype.interfaces_  =    function  (  )   {                                                                                                                                                return [ ];},e.prototype.getClass =function (){return e;},n.MINIMUM_VALID_SIZE.get =function (){return 4;},n.serialVersionUID.get =function (){return ( -0x3b229e262367a600);},Object.defineProperties(e,n),e;}(Kt),ne =function (t){function     e(){t. apply(this,                                                                                       arguments);}t &&(e.__proto__ =t),(e.prototype =Object.create(t &&t.prototype)).      constructor                                                                                                                                                                                                                                           =e;var n ={serialVersionUID:{configurable:!0 } };return e. prototype.getSortIndex =function  (){return ct.  SORTINDEX_MULTIPOLYGON;},                                                                                                                                                                                                                                 e.prototype.equalsExact =function (){if (2 ===arguments.length){var e =arguments[0],n =arguments[1];return !!this.     isEquivalentClass(                                                                                                                                                                                                                                                                                                                                                                                                                                                  e)&&t.prototype. equalsExact.call(this,e,n);}return t.prototype.equalsExact.apply(this,arguments);},e.prototype.getBoundaryDimension  =function (){return 1;} ,e.prototype.getDimension =function (){return 2;}, e.prototype.reverse =function (){for (var t =this._geometries.length,e =new Array(t).fill(null),n =0;n <this._geometries.length;n++ )e[n]=this._geometries[n].reverse();return this.getFactory().createMultiPolygon(e);},e.    prototype.   getBoundary   =                                                                               function  ( ){   if   (this. isEmpty(  ))  return     this. getFactory(  ).    createMultiLineString(                                                                                                                                                                                                                               );for (var t =new Nt(),e =0;e <this. _geometries.length; e++ )for ( var n =    this._geometries[e]                                                                               .getBoundary(),i =0;i <n.getNumGeometries();i++ )t.add(n.getGeometryN(i));var    r  =new Array( t.                                                                                                                                                                                                                                  size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(r)  ) ;},  e.prototype.                                                                           getGeometryType = function  ( ){ return   "MultiPolygon";},e. prototype.copy =  function  () {for (                                                                                                                                                                                                                                                                                                                                                                                                        var t =new Array(this._geometries.length).fill(null),n =0;n < t.length;n++ )        t[ n]  = this.                                                                          _geometries[ n].copy();return new e(t,this._factory);},e.prototype.interfaces_ =function (){ return [Zt]                                                                                                                                                                      ;},e.  prototype.getClass =function  ( ){return  e;},n.serialVersionUID.get =   function ( ){return  (   -                                                                                              
           0x7a5aa1369171980) ;},Object.defineProperties(e,n),e;}(zt),ie =function (t){this._factory =t ||null,this._isUserDataCopied =!1;},re ={NoOpGeometryOperation:{configurable:!0 },CoordinateOperation:{configurable:!0 },CoordinateSequenceOperation:{configurable:!0 }};ie.prototype.setCopyUserData =function (t){this._isUserDataCopied =t;},ie.prototype.edit =function (t,e){if (null ===t)return null;var n =this.editInternal(t,e);return this._isUserDataCopied &&n.setUserData(t.getUserData()),n;},ie.prototype.editInternal =function (t,e){return null ===this._factory &&(this._factory =t.getFactory()),t instanceof zt ?this.editGeometryCollection(t,e):t instanceof $t ?this.editPolygon(t,e):t instanceof Qt ?e.edit(t,this._factory):t instanceof Kt ?e.edit(t,this._factory):(et.shouldNeverReachHere("Unsupported Geometry class: "+t.getClass().getName()),null);},ie.prototype.editGeometryCollection = function (t,e){for (var n =                                               e.edit(t,this._factory) ,i =new  Nt(),r =0;r <n.getNumGeometries();r++ ){var o =    this.  edit(    n.                                                                                                                                                getGeometryN(r),e) ;null === o ||o.isEmpty()||i.add(o);}return  n.getClass() ===te ?this._factory.createMultiPoint(i.toArray([])): n. getClass()===Xt ?this._factory.createMultiLineString( i. toArray([])):n.getClass()===ne ?this._factory.    createMultiPolygon(                                                                                       i. toArray([]) ):this. _factory.createGeometryCollection(i.toArray([ ]));}, ie.                                                                                                                                                                                                                                                     prototype. editPolygon =  function (t, e){var n =e.edit(t, this._factory);if ( null  === n &&(n =this. _factory.   createPolygon( null) ),n.                                                                                                                                                                                                                                isEmpty())return n;var i =this.edit( n.  getExteriorRing(),e) ;if (  null ===i ||i.isEmpty() )return  this. _factory.    createPolygon(                                                                                                                                                                                                                                                                                                                                                                                                                                                    );for (var r =new Nt(),o =0;o <n. getNumInteriorRing();o++ ){var s =this.edit(n.getInteriorRingN(o),e);null ===s ||s.isEmpty()||r.add(s);}return this._factory. createPolygon(i,r.toArray([]));},ie.prototype.interfaces_ =function (){return [];},ie.prototype.getClass =function (){return ie;}, ie.GeometryEditorOperation =function (){},re.NoOpGeometryOperation. get =function (){return oe;},re.CoordinateOperation.get =function (){     return   se;}    ,      re.                                                                                CoordinateSequenceOperation.get     = function   () {  return  ae;},Object.     defineProperties(                                                                                                                                                                                                                                  ie,re);var  oe =function (){};oe.prototype.edit =function (t,e) {return t;},        oe.  prototype.                                                                               interfaces_ =function () {return [ie.GeometryEditorOperation];},oe.prototype.   getClass =function (                                                                                                                                                                                                                                ){ return oe;};var se =function (){};se.prototype.edit =function (t,e){var n =                this.                                                                           editCoordinates(t.getCoordinates(),t);return null ===n ?t :t instanceof ee ?e.  createLinearRing(n)                                                                                                                                                                                                                                                                                                                                                                                                        :t instanceof Kt ? e.createLineString(n):t instanceof Qt ? n.length >  0 ?e.    createPoint(n[ 0]):                                                                            e.   createPoint()  : t;},se. prototype.  interfaces_   = function  ( ){return  [ie.   GeometryEditorOperation]                                                                                                                                                         ;} ,se.prototype.getClass = function ( ){ return se;} ;var ae =function (){};ae.  prototype.edit =function  (                                                                                              
           t,e)        {return t instanceof ee ?e.createLinearRing(this.edit(t.getCoordinateSequence(),t)):t instanceof Kt ?e.createLineString(this.edit(t.getCoordinateSequence(),t)):t instanceof Qt ?e.createPoint(this.edit(t.getCoordinateSequence(),t)):t;},ae.prototype.interfaces_ =function (){return [ie.GeometryEditorOperation];},ae.prototype.getClass =function (){return ae;};var ue =function (){if (this._dimension =3,this._coordinates =null,1 ===arguments.length){if (arguments[0]instanceof Array)this._coordinates =arguments[0],this._dimension =3;else if (Number.isInteger(arguments[0])){var t =arguments[0];this._coordinates =new Array(t).fill(null);for (var e =0;e <t;e++ )this._coordinates[e]=new C();}else if (T(arguments[0],V)){var n =arguments[0];if (null ===n)return this._coordinates =new Array(0).fill(null),null;this._dimension =n.getDimension(),this._coordinates =new Array(n.       size()).fill(null);for (var i                                              =0;i <this._coordinates.length;i++ )this._coordinates[i]=n.getCoordinateCopy( i)     ;}}else if (2 ===                                                                                                                                                arguments.length)if (arguments[0]instanceof Array &&Number.isInteger(arguments[1])){var r =arguments[0],o =arguments[1];this._coordinates =r,this._dimension =o,null === r &&(this._coordinates =new Array(0).fill(null)) ;}else if  (Number.             isInteger(                                                                                       arguments[  0])&&Number.isInteger(arguments[1]) ){ var s  =arguments[0]  ,  a =                                                                                                                                                                                                                                       arguments[1];this._coordinates =new Array(s).fill(null),this._dimension =a;for (var u =0;u <s;u++ )this._coordinates[u]=new C(    )  ;}   }   ,  le   =  {                                                                                                                                                                                                                             serialVersionUID:{configurable:!0 }};ue.prototype.setOrdinate =function (t,e,n){switch (e){case V.X:this._coordinates[t].x         =                                                                                                                                                                                                                                                                                                                                                                                                                                                          n;break ;case V.Y:this._coordinates[t].y =n;break ;case V.Z:this._coordinates[t].z =n;break ;default:throw new m("invalid ordinateIndex");}},ue.prototype.size =function (){return this._coordinates.length;},ue.prototype.getOrdinate =function (t,e){switch (e){case V.X:return this._coordinates[t].x;case V.Y:return this._coordinates[t].y;case V.Z:return this._coordinates[t].z;}return v.NaN;},ue.prototype.getCoordinate =function   (){if (1 ===arguments.length)                                                                                {var t =arguments[0];return this._coordinates[t];}if (2 ===arguments.length)     {var e =arguments[                                                                                                                                                                                                                                 0],n =arguments[1];n.x =this._coordinates[e].x,n.y =this._coordinates[ e].y,      n.   z  =   this.                                                                               _coordinates[e].z;}},ue.prototype.getCoordinateCopy =function  (t){return new          C(     this.                                                                                                                                                                                                                                 _coordinates[ t]) ;} , ue.  prototype.getDimension = function  (){return this.   _dimension;} , ue.                                                                            prototype.getX =function (t) {return this. _coordinates[t] .x;},ue.prototype.  clone =function (){                                                                                                                                                                                                                                                                                                                                                                                                        for (var t =new Array(this.size( )).fill(null), e = 0;e  <this._coordinates.    length;e++ ) t[e] =                                                                           this.   _coordinates[ e].clone();return new ue( t,this. _dimension) ;} ,ue.prototype.    expandEnvelope                                                                                                                                                                    =  function   (t) {for  (var  e  = 0; e  < this._coordinates.length;e++  )t.       expandToInclude(  this.                                                                                               
           _coordinates[ e]);return t;} ,ue.prototype.copy =function (){for (var t =new Array(this.size()).fill(null),e =0;e <this._coordinates.length; e++  )t[e]=this._coordinates[e]. copy();return  new ue( t,this._dimension);},ue.prototype.toString =function (){if (this._coordinates.length >0){var t  =new D(17  *this._coordinates.length);t.append("("),t.append(this._coordinates[0] );for (var e =1;e <this._coordinates.length;e++ )t.append(", "),t.append(this._coordinates[e]);return t.append( ")")  ,t.toString();}return "()";},ue.prototype.getY =function (t) {return this._coordinates[t].y;},ue.prototype.toCoordinateArray =function (){ return this._coordinates;},ue.prototype.interfaces_ =function (){return [V,e];},ue.prototype. getClass =function (){return ue;},le.serialVersionUID.get =function (){return ( -0xcb44a778db18e00);},Object.defineProperties(ue,le);var ce =function (){},pe ={          serialVersionUID:     {                                               configurable:!0 },instanceObject:{configurable:!0  }};ce.prototype.readResolve =      function   (  ){                                                                                                                                                 return ce. instance();},ce.prototype.create =function (){if (1 ===arguments.length){if (arguments[0]instanceof  Array){var t  =arguments[0];return new  ue(t) ;}if (T(arguments[0],V)){var e =arguments[0];return new ue(e);}}else if (2 ===     arguments.length){                                                                                       var n =arguments[0],i =arguments[1];return i >3 &&(i =3),i <2 ?new ue(n):new ue(n,i);}},ce.prototype.interfaces_ =function (){return [b,e];},ce.prototype.getClass =function (){return ce;},ce.instance =function (){return ce.instanceObject;},pe.serialVersionUID.get =function (){return ( -0x38e49fa6cf6f2e00);},pe.instanceObject.get =function (){return  new ce();},Object.defineProperties(ce,pe);var he =function (t){function e(){t.call(  this),this.map_ =new Map()                                                                                                                                                                                                                              ;}return t  &&(e.__proto__ =t), e.prototype =Object.create( t &&t.prototype), e.prototype.constructor =e,e.prototype.get =     function                                                                                                                                                                                                                                                                                                                                                                                                                                                       (t){return this.map_.get( t)||null;},e.prototype.put =function (t,e){return this.map_.set(t,e), e;},e.prototype.values =function (){for (var t =new Nt(),e =this.map_.values(),n =e.next( );!n.done;)t.add(n.value),n =e.next();return t;}, e.prototype.entrySet =function (){var t =new Pt();return this.map_.entries().forEach(function (e){return t.add(e);}) ,t;},e.prototype.size =function (){return this.map_.size();},e;}(Tt),fe =   function t(  )  {  if  (this.                                                                                 _modelType =null,this._scale =null,0 ===arguments.length)this._modelType =t.    FLOATING;else if (1                                                                                                                                                                                                                                 ===arguments.length)if (arguments[0]instanceof de){var e =arguments[0];this.    _modelType =e,e ===                                                                               t.FIXED &&this.setScale(1);}else if ("number" ==typeof arguments[0]) {var n =   arguments[0] ;this.                                                                                                                                                                                                                                 _modelType =t.FIXED,this.setScale(n);}else if (arguments[0]instanceof t){var i  =arguments[0];this.                                                                            _modelType =i._modelType,this._scale  =i. _scale;} },ge ={serialVersionUID: {  configurable:! 0 },                                                                                                                                                                                                                                                                                                                                                                                                        maximumPreciseValue:{configurable:!0 }};fe.prototype.equals =function (t){if    (!(t instanceof fe)                                                                             )     return !1;var e =t;return this._modelType === e._modelType &&this._scale === e.    _scale;} ,                                                                                                                                                                     fe. prototype. compareTo   =   function  (  t)  {var  e     = t, n    = this.   getMaximumSignificantDigits(                                                                                              
           ),i =       e.getMaximumSignificantDigits();return new M(n).compareTo(new M(i));},fe.prototype.getScale =function (){return this._scale;},fe.prototype.isFloating =function (){return this._modelType ===fe.FLOATING ||this._modelType ===fe.FLOATING_SINGLE;},fe.prototype.getType =function (){return this._modelType;},fe.prototype.toString =function (){var  t ="UNKNOWN";return this._modelType ===fe.FLOATING ?t ="Floating":this. _modelType ===fe.FLOATING_SINGLE ?t ="Floating-Single":this._modelType ===fe.FIXED &&(t ="Fixed (Scale="+this.getScale()+")"),t;},fe.prototype.makePrecise =function (){if ("number"==typeof arguments[0]){var  t =arguments[0];if (v.isNaN(t) )return t;if (this._modelType  ===fe.FLOATING_SINGLE){return t;}return this._modelType ===fe.FIXED ?Math.round(t *this._scale)/this._scale :t;}if (arguments[0]instanceof C){var e =arguments[0];if (this._modelType ===fe.       FLOATING) return null;e.x  =                                               this.makePrecise(   e.x),  e. y  = this.  makePrecise(    e.y);}} ,fe.prototype.    getMaximumSignificantDigits                                                                                                                                       = function ( ){ var t =16;return this. _modelType ===fe.FLOATING ?t =16 :this._modelType ===fe.FLOATING_SINGLE ? t =6 : this._modelType ===fe.FIXED &&(t =1 +Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t;},fe.prototype.    setScale =function (                                                                                      t){this._scale =Math.abs(t);},fe.prototype.interfaces_ =function (){return [e,E];},fe.prototype.getClass =function (){return fe;},fe.mostPrecise =function (t,e){return t.compareTo(e)>=0 ?t :e;},ge.serialVersionUID.get =function (){return 0x6bee6404e9a25c00;},ge.maximumPreciseValue.get =function (){return 9007199254740992;},Object.defineProperties(fe,ge);var de =function t(e){this._name =e ||null,t.nameToTypeMap.put(e,this);},ye ={     serialVersionUID:      {                                                                                                                                                                                                                            configurable:!0 },nameToTypeMap:{configurable:!0 }} ;de.prototype.readResolve =function (){ return  de.nameToTypeMap.get(this.    _name)                                                                                                                                                                                                                                                                                                                                                                                                                                                        ;},de.prototype.toString =function (){return this._name;},de.prototype.interfaces_ =function () {return [e];},de.prototype.getClass =function (){return de;},ye.serialVersionUID.get =function (){return ( -552860263173159e4);},ye.nameToTypeMap.get =function (){return new he();},Object.defineProperties(de,ye),fe. Type =de,fe.FIXED =new de("FIXED"),fe.FLOATING =new de("FLOATING"),fe.FLOATING_SINGLE =new de("FLOATING SINGLE")     ;var _e  = function t(){this.                                                                                 _precisionModel =new fe(),this._SRID = 0,this._coordinateSequenceFactory =t.    getDefaultCoordinateSequenceFactory(                                                                                                                                                                                                                 ), 0 ===arguments.length ||(1 ===arguments.length  ?T(arguments[0],b)?this.    _coordinateSequenceFactory                                                                        =arguments[0]:arguments[0]instanceof fe &&(this._precisionModel =arguments[0]   ):2   ===arguments.                                                                                                                                                                                                                                  length ?(this._precisionModel =arguments[0],this._SRID  = arguments[1]):3 ===  arguments.length &&                                                                            ( this._precisionModel  =arguments[  0] ,this._SRID  =arguments[   1] , this.  _coordinateSequenceFactory                                                                                                                                                                                                                                                                                                                                                                                                 =arguments[2] ));},me ={serialVersionUID: {configurable:!0  }};_e.prototype.        toGeometry    =                                                                            function (t){return  t.isNull()?this. createPoint(null):t.getMinX( ) ===t.getMaxX()&& t. getMinY()===                                                                                                                                                                  t.getMaxY()?this. createPoint(new C(t.getMinX(), t.getMinY())):t.getMinX()===t.  getMaxX()||t.getMinY()===t.                                                                                                
            getMaxY(   )?this.createLineString([new C(t.getMinX(),t.getMinY()),new C(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new C(t.getMinX(),t.getMinY()),new C(t.getMinX(),t.getMaxY()),new C(t.getMaxX(),t.getMaxY() ),new C(t.getMaxX(),t.getMinY()),new C(t.getMinX(),t.getMinY())]),null);},_e.prototype.createLineString = function (t){return t ?t instanceof  Array ?new Kt(this.getCoordinateSequenceFactory().create(t) ,this):T(t, V)?new Kt(t,this):void 0 :new Kt( this.getCoordinateSequenceFactory( ).create([]),this);},_e.prototype.createMultiLineString =function (){if (0 ===arguments.length)return new Xt(null,this);if (1 ===arguments.length){var t =arguments[0];return new Xt(t,this);}},_e.prototype.buildGeometry =function (t){ for (var e =null,n =!1,i =!1,r =t.iterator();r.hasNext();){var o =r.next(),s =o.getClass();null ===e  &&(e =s) ,s !==e &&(n =!0),o.       isGeometryCollectionOrDerived(                                             )&&( i =!0);}if (null ===e) return this. createGeometryCollection() ;if  (n ||i)      return     this.                                                                                                                                                 createGeometryCollection(_e. toGeometryArray(t)) ;var a =t. iterator()   .next();if (t. size( )>1){if (a instanceof $t)return this.createMultiPolygon(_e.toPolygonArray( t)  );if  (a  instanceof Kt)return this. createMultiLineString( _e.     toLineStringArray(                                                                                       t));if (a instanceof Qt)return this.createMultiPoint(_e.toPointArray(t));et.shouldNeverReachHere("Unhandled class: "+a.getClass().getName());}return a;},_e.prototype.createMultiPointFromCoords =function (t){return this.createMultiPoint(null !==t ?this.getCoordinateSequenceFactory().create(t):null);},_e.prototype.createPoint =function (){if (0 ===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([   ]) );if   (1 ===arguments.                                                                                                                                                                                                                            length){if (arguments[0]instanceof C){var t =arguments[0];return this.createPoint(null !==t ?this.getCoordinateSequenceFactory()       .                                                                                                                                                                                                                                                                                                                                                                                                                                                         create([t]):null);}if (T(arguments[0],V)){var e =arguments[ 0];return new Qt( e, this);}}},_e.prototype.getCoordinateSequenceFactory =function (){return this._coordinateSequenceFactory;},_e.prototype.createPolygon =function (){if (0 ===arguments.length)return new $t(null,null,this);if (1 ===arguments.length){if (T( arguments[0],V)){var  t =arguments[0];return this.createPolygon(this.createLinearRing(t));}if (arguments[0]   instanceof Array)    {var e  =                                                                                   arguments[0] ;return this.createPolygon(this.createLinearRing( e) );} if  (       arguments[   0]                                                                                                                                                                                                                                  instanceof  ee){var n =arguments[0];return this.createPolygon(n,null);}}else    if (2 ===arguments.                                                                               length){var i =arguments[0], r  =arguments[1];return new $t(i,r,this);} },_e.   prototype.getSRID =                                                                                                                                                                                                                                  function ( ){return this. _SRID;} , _e. prototype. createGeometryCollection =  function  ( ){if (0                                                                           ===arguments.length)return new zt(null,this);if (1 ===arguments.length){var t =    arguments[    0]                                                                                                                                                                                                                                                                                                                                                                                                         ;return new  zt(t,this) ;} },_e. prototype.createGeometry = function (t)  {      return  new  ie(                                                                             this)    .edit(t,{edit:function  (){if  (2 === arguments. length){var  t =arguments[0]    ;return this.                                                                                                                                                               _coordinateSequenceFactory.create(t);}}} ) ;} ,_e.prototype.getPrecisionModel =   function ( ){return  this.                                                                                                 
           _precisionModel;} ,_e.prototype. createLinearRing = function (){if (0 ===arguments.length)return this.createLinearRing(this. getCoordinateSequenceFactory().create([]));if (1 ===arguments.length) {if (arguments[0]instanceof Array){var t =arguments[0];return this.createLinearRing(null !==t ?this.getCoordinateSequenceFactory().create(t):null);}if (T(arguments[0], V)){var e = arguments[0];return new ee(e,this);}}},_e.prototype.createMultiPolygon  =function (){if (0 ===arguments.length)return   new ne( null,this);if (1  ===arguments.length) {var t =arguments[0];return new ne(t,this);}},_e.prototype.createMultiPoint =function (){if (0 ===arguments.length)return new te(null,this);if (1 ===arguments. length){if (arguments[0]instanceof Array){ var  t =arguments[0];return new te(t,this);}if  (arguments[0]instanceof Array){var  e =arguments[0];return this.createMultiPoint(null !==e ?this. getCoordinateSequenceFactory(                                              ).create(e):null);}if ( T(arguments[0] ,  V)){var n =arguments[0];if (null ===n)      return     this.                                                                                                                                                createMultiPoint(new Array(0).fill(null));for (var i =new Array(n.size()).fill(null),r = 0;r <n.size();r++ ){var o =this.getCoordinateSequenceFactory().create(1,n.getDimension());Wt.copy(n,r,o,0, 1),i[r]=this.createPoint(o);}return this.    createMultiPoint(i)                                                                                       ;}}},_e.prototype.interfaces_ =function (){return [e];},_e.prototype.getClass =function (){return _e;},_e.toMultiPolygonArray =function (t){var e =new Array(t.size()).fill(null);return t.toArray(e);},_e.toGeometryArray =function (t){if (null ===t)return null;var e =new Array(t.size()). fill(null);return t.toArray(e);},_e.getDefaultCoordinateSequenceFactory =function (){return ce.instance();},_e.toMultiLineStringArray =function (   t){var e =new Array(t.size(                                                                                                                                                                                                                           )).fill(null);return t.toArray(e);},_e.toLineStringArray =function (t){var e =new Array(t.size()).fill(null);return t.toArray(e);}       ,                                                                                                                                                                                                                                                                                                                                                                                                                                                        _e.toMultiPointArray =function (t){var e =new Array(t.size()).fill(null);return t.toArray(e);},_e.toLinearRingArray =function (t){var e =new Array(t.size()).fill(null);return t.toArray(e);},_e.toPointArray =function (t){var e =new Array(t.size()).fill(null);return t.toArray(e);},_e.toPolygonArray =function ( t){var e =new Array(t.size()).fill(null);return t.toArray( e);},_e.createPointFromInternalCoord =function (t,e){   return  e. getPrecisionModel( ).                                                                                  makePrecise(t),e.getFactory() .createPoint(t) ;} ,me. serialVersionUID.get =    function   ( )   {                                                                                                                                                                                                                                  return ( - 0x5ea75f2051eeb400);}, Object.defineProperties(_e, me);var ve = [           "Point"    ,                                                                               "MultiPoint","LineString","MultiLineString","Polygon", "MultiPolygon"]  ,Ie =    function (t){this.                                                                                                                                                                                                                                 geometryFactory =t ||new _e();};Ie.prototype.read =function (t){var  e,n =(e =  "string"==typeof t ?                                                                          JSON.parse(t):t).type;if (!Ee[  n])throw new Error("Unknown GeoJSON type: "+e.  type);return  ( - 1                                                                                                                                                                                                                                                                                                                                                                                                        !==ve.indexOf(n)?Ee[n].apply(this,[e.coordinates]):"GeometryCollection"===n ?   Ee[n].apply(this,[                                                                               e.     geometries]):Ee[n].apply(this,[e]));},Ie.prototype.write =function (t){ var e =            t.                                                                                                                                                               getGeometryType() ;if (! xe[e]) throw  new   Error("Geometry is not supported")   ;return xe[e] .apply(this,[                                                                                                 
            t])        ;};var Ee ={Feature:function (t){var e ={};for (var n in t)e[n]=t[n];if (t.geometry){var i =t.geometry.type;if (!Ee[i])throw new Error("Unknown GeoJSON type: "+t.type);e.geometry =this.read(t.geometry);}return t.bbox &&(e.bbox =Ee.bbox.apply(this,[t.bbox])),e;},FeatureCollection:function (t){var e ={};if (t.features){e.features =[];for (var n =0;n <t.features.length; ++n)e.features.push(this.read(t.features[n]));}return t.bbox &&(e.bbox =this.parse.bbox.apply(this,[t.bbox])),e;},coordinates:function (t){for (var e =[],n =0;n <t.length; ++n){var i =t[n];e.push(new C(i[0],i[1]));}return e;},bbox:function (t){return this.geometryFactory.createLinearRing([new C(t[0],t[1]),new C(t[2],t[1]),new C(t[2],t[3]),new C(t[0],t[3]),new C(t[0],t[1])]);},Point:function (t){var e =new C(t[0],t[1]);return this.geometryFactory.createPoint(e);},MultiPoint:function (t){for (var e =      [ ],n =0;n <t.length; ++n)e.                                               push(Ee.Point.apply(this,[t[ n]]));return this.geometryFactory.createMultiPoint(     e);} ,LineString:                                                                                                                                                                                                                                                                                                              function (t){var e =Ee.coordinates.apply(this,[t]);return this.geometryFactory.    createLineString(e)                                                                                       ;},MultiLineString:function (t){for (var e = [],n =0;n  <t.length; ++ n)e.push(Ee.LineString.apply( this,[t[n]]));return this.geometryFactory.createMultiLineString(e);},Polygon:function ( t){for (var  e =Ee.coordinates.apply(this,[t[0]]),n =this.geometryFactory. createLinearRing(e) ,i =  [],r =1;r <t.length; ++r){var o = t[r],s = Ee.coordinates.apply(this,[ o]),a =this.geometryFactory.createLinearRing(s);i.push(a);}return this.               geometryFactory.                                                                                                                                                                                                                          createPolygon(n, i);},MultiPolygon:function (t){for (var e =[],n =0;n <t.length; ++n){var i =t[n];e.push(Ee.Polygon.apply(this,[i]))      ;}                                                                                                                                                                                                                                                                                                                                                                                                                                                       return this.geometryFactory.createMultiPolygon(e);},GeometryCollection:function (t) {for ( var e =[],n =0;n <t.length; ++n){var i =t[n] ;e.push(this.read(i));}return this.geometryFactory.createGeometryCollection(e);}},xe ={coordinate:function (t){return  [t.x,t.y];},Point:function (t) {return {type:"Point",coordinates:xe.coordinate.apply(this,[t. getCoordinate()])};}, MultiPoint:function (t){for  (var e =[],n =0;n <t.   _geometries.length; ++n){var i =                                                                                   t._geometries[n],r =xe.Point.apply(this,[i]);e.push(r.coordinates);}return {    type:"MultiPoint",                                                                                                                                                                                                                                  coordinates:e  } ;}  ,LineString: function  (t)  { for  (var e   =[],n   =t.    getCoordinates(),i =                                                                              0;i <n.length; ++i){var  r =n[i];e.push( xe. coordinate. apply( this,[ r]));}       return  {type:                                                                                                                                                                                                                                  "LineString",coordinates:e };},MultiLineString:function (t){for (var e =[],n =  0;n <t._geometries.                                                                           length; ++n){var i =t._geometries[n],r =xe.LineString.apply( this,[i]);e.push(  r.  coordinates) ;}                                                                                                                                                                                                                                                                                                                                                                                                        return {type:"MultiLineString",coordinates:e };},Polygon:function (t){var e =    [  ]  ,   n = xe.                                                                               LineString. apply( this,[t._shell]);e.push(n.coordinates);for (var i =0;i <t._holes.length; ++i){var r =                                                                                                                                                           t._holes[ i],o =xe.LineString. apply(this,[r]);e.push(o.coordinates);} return {       type:    "Polygon"   ,                                                                                                  
            coordinates: e };},MultiPolygon:function (t){for (var e =[],n =0;n <t._geometries.length; ++n){var i =t._geometries[n],r = xe.Polygon.apply(this,[i]);e.push(r.coordinates);}return {type:"MultiPolygon",coordinates:e };},GeometryCollection:function (t){for (var e =[],n =0;n <t._geometries.length; ++n){ var i =t._geometries[n],r =i.getGeometryType() ;e.push(xe[r].apply(this,[i]));}return {type:"GeometryCollection",geometries:e };}},Ne =function (t){ this.geometryFactory =t ||new _e(),this.precisionModel =this.geometryFactory.getPrecisionModel(),this.parser =new Ie(this.geometryFactory);};Ne.prototype.read  =function (t){var e =this.parser.read( t);return this.precisionModel.getType()===fe.FIXED &&this.reducePrecision(e),e;},Ne.prototype.reducePrecision =function (t){var e,n;if (t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if (t.points)for (e =0,n =t.points.      length; e  <n;e++  ) this.                                                precisionModel.makePrecise( t.points[e]);else if  (t.geometries)for (e =0,n  =t.    geometries.length;                                                                                                                                                                                                                                                                                                              e <n;e++ ) this.reducePrecision(t.  geometries[e]);} ;var Ce =function (){this.     parser =  new  Ie(                                                                                       this.geometryFactory) ;};Ce.prototype.write =function (t){return this.parser.write(t);};var Se =function (){},Le ={ ON:{configurable:!0 },LEFT:{configurable:!0 },RIGHT:{configurable:!0 }} ;Se.prototype.interfaces_ =function (){return [];},Se.prototype.getClass =function (){return Se;},Se.opposite =function (t){return t ===Se.LEFT ?Se.RIGHT  :t ===Se.RIGHT ?Se.LEFT :t;},Le.ON.get =function (){return 0;},Le.LEFT.get =function (){   return 1;}  ,Le.RIGHT.get =                                                                                                                                                                                                                          function (){return 2;},Object.defineProperties(Se,Le),(d.prototype =new Error( )).name ="EmptyStackException",(y.prototype =new xt()).     add =                                                                                                                                                                                                                                                                                                                                                                                                                                                    function (t){return this.array_.push(t),!0;},y.prototype.get =function (t){if (t <0 ||t >=this.size())throw new Error();return this.array_[t];},y.prototype.push =function (t){return this.array_.push(t),t;},y.prototype.pop =function (t){if (0 ===this.array_.length)throw new d();return this.array_.pop();},y.prototype.peek =function (){if ( 0 ===this.array_.length)throw new d();return this.array_[this.array_.length -1]    ;},y.prototype.empty =function ()                                                                                   {return  0 === this. array_.length;} , y. prototype. isEmpty  = function (){    return this.empty(                                                                                                                                                                                                                                  );},y.prototype.search = function   ( t){ return this.array_.indexOf(t);},y.      prototype. size =                                                                               function (){return this.array_.length;},y.prototype.toArray =function (){for (  var t =[],e =0,n =                                                                                                                                                                                                                                   this.array_.length;e  <n;e++   )t. push(this.array_[ e]);return t;} ;var be =   function  (){this.                                                                           _minIndex = -1,this._minCoord =null,this._minDe =null,this._orientedDe =null;}     ;be.  prototype.                                                                                                                                                                                                                                                                                                                                                                                                         getCoordinate  =function     ( ){return this. _minCoord;},   be. prototype.    getRightmostSide =                                                                               function (t,e) { var n =this.getRightmostSideOfSegment(t,e);return n < 0 && (n  = this.   getRightmostSideOfSegment(                                                                                                                                               t,e -1)),n <0 &&(this._minCoord =null,this.checkForRightmostCoordinate(t)),n;},          be.      prototype.                                                                                                  
           findRightmostEdgeAtVertex =function (){var t =this._minDe.getEdge().getCoordinates();et.isTrue(this._minIndex >0 &&this._minIndex <t.length,"rightmost point expected to be interior vertex of edge");var e =t[this._minIndex -1],n =t[this._minIndex +1],i =at.computeOrientation(this._minCoord,n,e),r =!1;e. y <this._minCoord.y &&n. y <this._minCoord.y &&i ===at.COUNTERCLOCKWISE ? r =!0 :e.y >this._minCoord.y &&n.y >this._minCoord.y &&i ===at.CLOCKWISE &&(r =!0),r &&(this._minIndex =this._minIndex -1);},be.prototype.getRightmostSideOfSegment =function (t,e){var n =t.getEdge().getCoordinates();if (e <0 ||e +1 >=n.length)return ( -1);if (n[e].y ===n[e +1].y)return ( -1);var i =Se.LEFT;return n[e].y < n[e +1].y &&(i =Se.RIGHT),i;},be.prototype.getEdge =function (){return this._orientedDe;},be.prototype.checkForRightmostCoordinate =function (t){for (var e =t.getEdge().getCoordinates(),n =0;n <e. length  -1; n++ )( null ===                                        this._minCoord ||e[n].x >this._minCoord.x)&&( this._minDe =t,this. _minIndex =n,    this._minCoord =e[                                                                                                                                                                                                                                                                                                              n]) ;}, be.prototype. findRightmostEdgeAtNode =function (){var t  =this._minDe.    getNode().getEdges(                                                                                       );this._minDe =t.getRightmostEdge(),this._minDe.isForward()||(this._minDe =this._minDe.getSym(),this._minIndex =this._minDe.getEdge().getCoordinates().length -1);},be.prototype.findEdge =function (t){for (var e =t.iterator();e.hasNext();){var n =e.next();n.isForward()&&this.checkForRightmostCoordinate(n);}et.isTrue(0 !==this._minIndex ||this._minCoord.equals(this._minDe.getCoordinate()),"inconsistency in rightmost processing"    ),0  ===this.  _minIndex  ?                                                                                                                                                                                                                          this.findRightmostEdgeAtNode( ): this.findRightmostEdgeAtVertex(),this._orientedDe =this._minDe;this. getRightmostSide(this._minDe,this.     _minIndex)                                                                                                                                                                                                                                                                                                                                                                                                                                              ===Se.LEFT &&(this._orientedDe =this._minDe.getSym());},be.prototype.interfaces_ =function (){return [];},be.prototype.getClass =function (){return be;};var we =function (t){function e(n,i){t.call(this,e.msgWithCoord(n,i)),this.pt =i ?new C(i):null,this.name ="TopologyException";}return t &&(e.__proto__ =t),e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e.prototype.getCoordinate =function ()    { return this. pt;} ,e.prototype.                                                                                      interfaces_ =function (){return [ ] ;},e. prototype.getClass =function (){      return  e;} , e.                                                                                                                                                                                                                                  msgWithCoord =function (t,e){return  e ?t :t +" [ " + e +" ]";},e;} ($),Oe =    function  ( ){this.                                                                               array_ =[];};Oe.prototype.addLast  =function  (t){ this.array_. push(t);},Oe.           prototype.                                                                                                                                                                                                                                  removeFirst =function  (){return this.array_.shift();},Oe.prototype.isEmpty  =     function (  )  {                                                                           return 0 === this.array_.length;};var Te =function (){this._finder =null,this.   _dirEdgeList = new                                                                                                                                                                                                                                                                                                                                                                                                        Nt(),this._nodes  =new Nt(),this._rightMostCoord =null,this._env =null,this.    _finder = new be()                                                                                 ;}     ;Te.prototype.clearVisitedEdges =function  (){for (var t  = this._dirEdgeList.    iterator();                                                                                                                                                             t.hasNext();){t.next().setVisited(!1);}},Te.prototype.getRightmostCoordinate =   function () {return  this.                                                                                                   
            _rightMostCoord;} ,Te.prototype.computeNodeDepth =function (t){for (var e =null,n =t.getEdges().iterator();n.hasNext();){var i =n.next();if (i.isVisited()||i.getSym().isVisited()){e =i;break ;}}if (null ===e)throw new we("unable to find edge to compute depths at "+t.getCoordinate());t.getEdges().computeDepths(e);for (var r =t.getEdges().iterator();r.hasNext();){var o =r.next();o.setVisited(!0),this.copySymDepths(o);}},Te.prototype.computeDepth =function (t){this.clearVisitedEdges();var e =this._finder.getEdge();e.setEdgeDepths(Se.RIGHT,t),this.copySymDepths(e),this.computeDepths(e);},Te.prototype.create =function (t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord =this._finder.getCoordinate();},Te.prototype.findResultEdges =function (){for (var t =this._dirEdgeList.iterator();t.hasNext();){var e =t.next();e.getDepth(Se.RIGHT)>=1 &&e.getDepth(     Se.LEFT)<=  0   &&!   e.                                              isInteriorAreaEdge()&&e.setInResult(!0);}},Te.prototype.computeDepths =function (   t){var e =new Pt()                                                                                                                                                ,n =new Oe(),i =t.getNode();for (n.addLast(i),e.add(i),t.setVisited(!0);!n.isEmpty();){var r =n.removeFirst();e.add(r),this.computeNodeDepth(r);for (var o    =r. getEdges(   ).iterator();o.hasNext( );){var s = o.next() .getSym();if  (!s.    isVisited()){var a =                                                                                      s.getNode();e.contains(a)||(n.addLast(a),e.add(a)) ;}}}},Te.prototype.compareTo =function (t){var e =t;return this._rightMostCoord.x <e._rightMostCoord.x ? -1 :this._rightMostCoord.x >e._rightMostCoord.x ?1 :0;},Te.prototype.getEnvelope =function (){if (null ===this._env){for (var t =new j(),e =this._dirEdgeList.iterator();e.hasNext();)for (var n =e.next().getEdge().getCoordinates(),i =0;i <n.length -1;i++ )t.expandToInclude(      n[  i] ) ;this._env  =t;}                                                                                                                                                                                                                        return this._env;},Te.prototype.addReachable  =function (t){var e =new y();for (e.add(t); !e.empty();){var n =e.pop();this.add(n,e) ;}},Te.     prototype.                                                                                                                                                                                                                                                                                                                                                                                                                                             copySymDepths =function (t){var e =t.getSym();e.setDepth(Se.LEFT,t.getDepth(Se.RIGHT)),e.setDepth(Se.RIGHT,t.getDepth(Se.LEFT));},Te.prototype.add =function (t,e){t.setVisited(!0),this._nodes.add(t);for (var n =t.getEdges().iterator();n.hasNext( );){var i =n.next();this._dirEdgeList.add(i);var r =i.getSym().getNode();r.isVisited()||e.push(r);}},Te.prototype.getNodes =function (){return this._nodes;},Te.prototype.      getDirectedEdges  = function (){                                                                                     return this. _dirEdgeList;},Te.prototype.interfaces_ =function (){return [E]    ;}, Te. prototype.                                                                                                                                                                                                                                  getClass =function  (){return Te;};var Re =function t() {if (this.location =       null,     1  ===                                                                               arguments.length){if (arguments[0]instanceof Array){var e =arguments[0];this.    init(e. length);}                                                                                                                                                                                                                                  else  if (Number. isInteger(arguments[ 0])){var n =arguments[ 0];this.init(1),  this. location[ Se.                                                                           ON]=n;}else if (arguments[0]instanceof t){var i =arguments[0];if (this.init(i.   location. length),                                                                                                                                                                                                                                                                                                                                                                                                        null !==i)for (var  r  =0;r < this.location.length; r++ )this.location[r]=i.    location[r];}}else                                                                                if (    3 ===arguments. length){ var o =arguments[ 0],s  =arguments[ 1],a =arguments[2]   ;this.init(                                                                                                                                                           3),this.location[Se.ON]=o,this.location[Se.LEFT]=s,this.location[Se.RIGHT]=a;}}       ;Re.        prototype.                                                                                                    
           setAllLocations =function (t){for (var e =0;e <this.location.length;e++ )this.location[e]= t;},Re.prototype.isNull = function (){for (var t =0;t <this.location.length;t++ )if (this.location[t]!==w.NONE)return !1;return ! 0;},Re.prototype.setAllLocationsIfNull =function (t){for  (var e =0;e <this.location.length;e++ )this.location[e]===w. NONE &&(this.location[e]=t);},Re.prototype.isLine =function (){return 1 ===this.location.length;} ,Re.prototype.merge =function (t){if (t.location. length >this.location.length){var e =new Array(3).fill(null);e[Se.ON]=this.location[Se.ON],e[Se.LEFT]=w.NONE,e[Se.RIGHT]=w.NONE,this.location =e;}for  (var n =0;n <this.location.length;n++ )this.location[n]===w.NONE &&n <t.location.length &&(this.location[n]=t.location[n] );},Re.prototype.getLocations =function (){return this.location;}, Re.prototype.flip =function (){if (this.location.length <=1)   return  null;var   t =this.                                                 location[Se.LEFT];this.location[Se.LEFT]=this.location[Se.RIGHT],this.location[    Se.RIGHT]=t;} ,Re.                                                                                                                                                prototype. toString =function ( ){ var t =new D( )  ;return this.location.length >1 &&t.append( w. toLocationSymbol( this.location[Se. LEFT])),t.append(w.    toLocationSymbol(this.location[Se.ON]) ),this.location.length >1  &&t.append(w.      toLocationSymbol(                                                                                       this.location[Se.RIGHT])),t.toString();},Re.prototype.setLocations =function (t,e,n){this.location[Se.ON]=t,this.location[Se.LEFT]=e,this.location[Se.RIGHT]=n;},Re. prototype.get =function (t){return t <this.location.length ?this.location[t]:w.NONE;},Re.prototype.isArea =function (){return this.location.length >1;},Re.prototype.isAnyNull = function (){for  (var t =0;t <this.location.length;t++ )if (this.location[t]===w.NONE)    return  !0;return   !1;},Re.                                                                                                                                                                                                                        prototype.setLocation =function (){if (1 ===arguments.length){var t =arguments[0];this.setLocation(Se.ON,t);}else if (2 ===arguments.length)     {var                                                                                                                                                                                                                                                                                                                                                                                                                                                  e =arguments[0],n =arguments[1];this.location[e]=n;}},Re.prototype.init =function (t){this.location =new Array(t).fill(null),this.setAllLocations(w.NONE);},Re.prototype.isEqualOnSide =function (t,e){return this.location[e]===t.location[e];},Re.prototype.allPositionsEqual =function (t){for (var e =0;e <this.location.length;e++ )if (this.location[e]!==t)return !1;return !0;},Re. prototype.interfaces_ =function (){    return [];},Re.prototype.getClass =                                                                                     function (){return Re;};var  Pe =function t(){ if (this. elt = new Array(2).    fill(null),1   ===                                                                                                                                                                                                                                  arguments.length) {if (Number.isInteger(arguments[0])) {var  e =arguments[0]    ;this.elt[0]=new Re(                                                                              e), this.elt[1]=new  Re( e);}else if ( arguments[ 0]instanceof t){ var    n =   arguments[0];this.                                                                                                                                                                                                                                  elt[0] =new Re(n.elt[0]) ,this.elt[1] =new Re( n. elt[  1] );}}else if (2  ===  arguments. length){                                                                           var i =arguments[0],r =arguments[1];this.elt[0]=new Re(w.NONE),this.elt[1]=new   Re( w. NONE),this.                                                                                                                                                                                                                                                                                                                                                                                                        elt[i].setLocation(r);}else if (3 ===arguments.length){var o =arguments[0],s    =arguments[1], a =                                                                                 arguments[ 2];this.elt[0]= new Re(o, s,a),this.elt[1]=new  Re( o,s, a);}else if  ( 4  ===   arguments.                                                                                                                                                         length) {var u =arguments[ 0],l =arguments[1],c = arguments[ 2],p =arguments[3]   ;this.elt[0] =new   Re( w.                                                                                                    
           NONE,       w.NONE,w.NONE),this.elt[1]=new Re(w.NONE,w.NONE,w.NONE),this.elt[u].setLocations(l,c,p);}};Pe.prototype.getGeometryCount =function (){var t =0;return this.elt[0].isNull()||t++ ,this.elt[1].isNull()||t++ ,t;},Pe.prototype.setAllLocations =function (t,e){this.elt[t].setAllLocations(e);},Pe.prototype.isNull =function (t){return this.elt[t].isNull();},Pe.prototype.setAllLocationsIfNull =function (){if (1 ===arguments.length){var t =arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t);}else if (2 ===arguments.length){var e =arguments[0],n =arguments[1];this.elt[e].setAllLocationsIfNull(n);}},Pe.prototype.isLine =function (t){return this.elt[t].isLine();},Pe.prototype.merge =function (t){for (var e =0;e <2;e++ )null ===this.elt[e]&&null !==t.elt[e]?this.elt[e]=new Re(t.elt[e]):this.elt[e].merge(t.elt[e]);},Pe.prototype.flip =function (){this.      elt[0]. flip(),this.elt[1] .                                                flip();},Pe.prototype.getLocation =function (){if (1 ===arguments.length){var t =        arguments[ 0]                                                                                                                                                ;return this. elt[t].get(Se.ON);}if ( 2 ===arguments.length){var e =arguments[0] ,n =arguments[ 1];return this.elt[e].get( n)  ;}},Pe.prototype.toString =    function (){var t =new D( );return null  !== this. elt[0]&& (t.append("A:") ,t.    append(this.elt[0].                                                                                       toString())),null !==this.elt[1]&&(t.append(" B:"),t.append(this.elt[1].toString())),t.toString();},Pe.prototype.isArea =function (){if (0 ===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if (1 ===arguments.length){var t =arguments[0];return this.elt[t].isArea();}},Pe.prototype.isAnyNull =function (t){return this.elt[t].isAnyNull();},Pe.prototype.setLocation =function (){if (2 ===arguments.length){var t   =arguments[0],e =arguments[1]                                                                                                                                                                                                                       ;this. elt[t].setLocation(Se.ON,e);}else if (3 ===arguments.length){var n =arguments[0],i =arguments[1],r =arguments[2];this.elt[n].setLocation(      i,                                                                                                                                                                                                                                                                                                                                                                                                                                                 r);}},Pe.prototype.isEqualOnSide =function (t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e);},Pe.prototype.allPositionsEqual =function (t,e){return this.elt[t].allPositionsEqual(e);},Pe.prototype.toLine =function (t){this.elt[t].isArea()&&(this.elt[t]=new Re(this.elt[t].location[0]));},Pe.prototype.interfaces_ =function (){return [];},Pe.prototype.getClass =function (){    return    Pe;}  , Pe. toLineLabel =                                                                                       function (t){for (var e = new Pe(w.NONE),n =0; n <2;n++  )e.setLocation(n,t.     getLocation( n) )                                                                                                                                                                                                                                  ;return e;};var  De =function (){this._startDe =null,this._maxNodeDegree = -     1,this._edges =new                                                                                Nt(),this._pts =new Nt(),this._label =new  Pe(w.NONE),this._ring =null,this.    _isHole    =null,                                                                                                                                                                                                                                  this.  _shell =null,this. _holes =new Nt(),this._geometryFactory =null;var t =   arguments[0],  e =                                                                           arguments[1];this._geometryFactory =e,this.computePoints(t),this.computeRing()   ;} ;De. prototype.                                                                                                                                                                                                                                                                                                                                                                                                        computeRing =function  (){if (null !==this._ring)return null;for (var t =new    Array(  this._pts.                                                                                  size(  )).fill(null),e =0;e <this._pts.size();e++ )t[ e]=this._pts.get(e);this._ring =         this.                                                                                                                                                           _geometryFactory.createLinearRing( t),this._isHole  =at. isCCW( this. _ring.    getCoordinates(  )) ;},De.                                                                                                     
           prototype.   isIsolated =function (){return 1 ===this._label.getGeometryCount();},De.prototype.computePoints =function (t){this._startDe =t;var e =t,n =!0;do {if (null ===e)throw new we("Found null DirectedEdge");if (e.getEdgeRing()===this)throw new we("Directed Edge visited twice during ring-building at "+e.getCoordinate());this._edges.add(e);var i =e.getLabel();et.isTrue(i.isArea()),this.mergeLabel(i),this.addPoints(e.getEdge(),e.isForward(),n),n =!1,this.setEdgeRing(e,this),e =this.getNext(e);}while (e !==this._startDe);},De.prototype.getLinearRing =function (){return this._ring;},De.prototype.getCoordinate =function (t){return this._pts.get(t);},De.prototype.computeMaxNodeDegree =function (){this._maxNodeDegree =0;var t =this._startDe;do {var e =t.getNode().getEdges().getOutgoingDegree(this);e >this._maxNodeDegree &&(this._maxNodeDegree =e),t =this.getNext(t);}while (       t   !==this._startDe);this.                                                _maxNodeDegree  *= 2;}, De.prototype. addPoints  = function  (t, e,n){var i = t.      getCoordinates()                                                                                                                                                ;if (e){var r =1;n &&(r = 0);for (var o =r;o <i.length;o++  )this._pts.add(i[o]);}else {var s =i.length -2;n &&(s =i.length -1);for  (var a =s;a >=0;a-- )    this._pts.add(i[a]);}},De.prototype.isHole =function ( ){return this._isHole;},      De.    prototype.                                                                                       setInResult =function (){var t =this._startDe;do {t.getEdge( ).setInResult(!0),t =t.getNext();}while (t !==this._startDe);},De.prototype.containsPoint =function (t){var e =this.getLinearRing();if (!e.getEnvelopeInternal().contains(t))return !1;if (!at.isPointInRing(t,e.getCoordinates()))return !1;for (var n = this._holes.iterator(); n.hasNext();){if (n.next( ).containsPoint(t) )return !1;}return !0;},De.prototype.addHole =    function (t){this._holes.add(                                                                                                                                                                                                                      t);},De.prototype.isShell =function (){return null ===this._shell;},De.prototype.getLabel =function (){return this._label;},De.prototype.getEdges        =                                                                                                                                                                                                                                                                                                                                                                                                                                                function (){return this._edges;},De.prototype.getMaxNodeDegree =function (){return this._maxNodeDegree <0 &&this.computeMaxNodeDegree(),this._maxNodeDegree;},De.prototype.getShell =function (){return this._shell;},De.prototype.mergeLabel =function (){if (1 ===arguments.length){var t =arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1);}else if (2 ===arguments.length){var e =arguments[0],n =arguments[1],i =    e.getLocation(n,Se.RIGHT);if  (i ===                                                                                       w. NONE)return null;if (this._label.  getLocation(n)=== w. NONE)return this.    _label.setLocation(                                                                                                                                                                                                                                 n,i),null;}},De.prototype.setShell =function (t){this._shell =t,null !==t &&    t.addHole(this) ;},                                                                               De.prototype.toPolygon =function (t){for (var e =new Array(this._holes.size()   ).fill(null),n =0;n                                                                                                                                                                                                                                 <this._holes.size(); n++ )e[n]=this._holes.get(n) .getLinearRing() ;return  t.  createPolygon(this.                                                                           getLinearRing(),e);},De.prototype.interfaces_ = function  ( ){return  [];},De.  prototype.getClass =                                                                                                                                                                                                                                                                                                                                                                                                       function (){return De;};var Me =function (t) {function e(){var e =arguments[    0],n =arguments[1]                                                                                   ;t.    call(this,e, n);}return t &&(e.__proto__ =t),e.prototype =Object.create(t  &&t.  prototype) ,                                                                                                                                                       e. prototype.constructor =e, e. prototype.   setEdgeRing =  function (t, e) {t.      setMinEdgeRing(e) ;} ,e.                                                                                                     
           prototype.   getNext =function (t){return t.getNextMin();},e.prototype.interfaces_ =function (){return [];},e.prototype.getClass =function (){return e;},e;}(De),Ae =function (t){function e(){var e =arguments[0],n =arguments[1];t.call(this,e,n);}return t &&(e.__proto__ =t),e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e.prototype.buildMinimalRings =function (){var t =new Nt(),e =this._startDe;do {if (null ===e.getMinEdgeRing()){var n =new Me(e,this._geometryFactory);t.add(n);}e =e.getNext();}while (e !==this._startDe);return t;},e.prototype.setEdgeRing =function (t,e){t.setEdgeRing(e);},e.prototype.linkDirectedEdgesForMinimalEdgeRings =function (){var t =this._startDe;do {t.getNode().getEdges().linkMinimalDirectedEdges(this),t =t.getNext();}while (t !==this._startDe);},e.prototype.getNext =function (t){return t.getNext();},e.prototype.interfaces_ =      function () {return [ ];},e.                                                 prototype.getClass =function (){ return e;},e;} (De),Fe =function ( ){if (this.    _label =null,this.                                                                                                                                                _isInResult =!1,this._isCovered =! 1,this._isCoveredSet =!1,this._isVisited =!1,0 ===arguments.length);else if (1 ===arguments.length){var t =arguments[0]    ;this. _label =t;}};Fe.prototype.setVisited =function (t){this._isVisited =t;},        Fe.  prototype.                                                                                       setInResult =function (t){this._isInResult =t;},Fe.prototype.isCovered =function (){return this._isCovered;},Fe.prototype.isCoveredSet =function (){return this._isCoveredSet;},Fe.prototype.setLabel =function (t){this._label =t;},Fe.prototype.getLabel =function (){return this._label;},Fe.prototype.setCovered =function (t){this._isCovered =t,this._isCoveredSet =!0;},Fe.prototype.updateIM =function (t){et.isTrue(this._label.      getGeometryCount( )  >=  2,                                                                                                                                                                                                                      "found partial label"),this.computeIM(t);} ,Fe. prototype.isInResult = function  (){return this._isInResult;}, Fe.prototype.isVisited =function  (){     return this.                                                                                                                                                                                                                                                                                                                                                                                                                                      _isVisited;},Fe.prototype.interfaces_ =function (){return  [];},Fe.prototype.getClass =function (){return  Fe;};var Ge =function (t){function e(){t.call(this), this._coord =null,this._edges = null;var e = arguments[0],n = arguments[1];this._coord  =e,this._edges =n,this._label =new Pe(0,w.NONE) ;}return t && (e.__proto__ =t),e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e.prototype.     isIncidentEdgeInResult =function (){                                                                                        for (var t =this.getEdges().getEdges().iterator();t.hasNext();){if (t.next()      .    getEdge( ) .                                                                                                                                                                                                                                 isInResult() )return !0;}return ! 1;}, e.prototype.isIsolated =function  (){    return 1  === this.                                                                               _label.  getGeometryCount( )  ;},   e.prototype.getCoordinate  = function (){      return     this.                                                                                                                                                                                                                                  _coord;},e.prototype.print =  function (t){t. println("node "+this.  _coord +  " lbl: "  +   this.                                                                            _label) ;}   ,  e.  prototype. computeIM  =  function   ( t) {} ,e.prototype.  computeMergedLocation                                                                                                                                                                                                                                                                                                                                                                                                      =function (t,e){var n =w.NONE;if (n =this._label.getLocation(e),!t.isNull(e)    )   { var  i   =t.                                                                                   getLocation( e);n !==w.BOUNDARY &&(n =i);}return n;},e.prototype.setLabel =function (){if (2         !==                                                                                                                                                    arguments.length)  return t.prototype.setLabel.apply(this, arguments) ;var e =   arguments[0],n =arguments[                                                                                                      
               1]        ;null ===this._label ? this._label =new Pe(e,n):this._label.setLocation(e,n);},e.prototype.getEdges =function (){return  this._edges;}, e.prototype.mergeLabel =function (){if (arguments[0]instanceof e){var t =arguments[0];this.mergeLabel(t._label);}else if (arguments[0]instanceof Pe)for (var n =arguments[0],i  =0;i <2;i++ ){var r =this.computeMergedLocation(n,i);this._label.getLocation(i)===w.NONE && this._label.setLocation(i, r);}},e.prototype.add =function (t){this._edges.insert(t),t.setNode(this);}, e.prototype.setLabelBoundary =function (t){if (null ===this._label)return null;var e =w.NONE;null !==this._label &&(e =this._label.getLocation(t));var n =null;switch (e){case w.BOUNDARY:n =w.INTERIOR;break ;case w.INTERIOR:default:n =w.BOUNDARY;}this._label.setLocation(t,n);},e.prototype.interfaces_ =function (){return [];},e. prototype.getClass =function (){       return e;},e;}  (Fe)  ,qe   =                                               function ( ){this.nodeMap =new p(),this.nodeFact =null;var t =arguments[0];this.     nodeFact =t;};qe.                                                                                                                                                prototype.find = function (t){ return this.nodeMap.get(t);},qe.prototype.addNode  = function (){if (arguments[0]instanceof C){var t =arguments[0],e =this.    nodeMap.get(t);return null ===e &&(e =this.nodeFact.createNode(t),this.nodeMap.    put(t,e)), e;}if  (                                                                                       arguments[0]instanceof Ge) {var n =arguments[0],i =this.nodeMap.get(n.getCoordinate());return null ===i ?(this.nodeMap.put(n.getCoordinate(),n),n):(i.mergeLabel(n),i);}},qe.prototype.print =function   (t){for (var e =this. iterator();e.hasNext();){e.next( ).print(t);}},qe.prototype.iterator =function (){return this.nodeMap.values().iterator();},qe.prototype.values =function (){return this.nodeMap.values();},qe.prototype.   getBoundaryNodes =function (t)                                                                                                                                                                                                                      {for (var e =new Nt(),n =this.iterator();n.hasNext();){var i =n.next();i.getLabel().getLocation(t)===w.BOUNDARY &&e.add(i);}return e;},qe.prototype.add      =                                                                                                                                                                                                                                                                                                                                                                                                                                              function (t){var e =t.getCoordinate();this.addNode(e).add(t);},qe.prototype.interfaces_ =function (){return [];} ,qe.prototype.getClass = function (){return qe;};var Be =function (){},Ve ={NE:{configurable:!0 },NW:{configurable:!0 },SW: {configurable:!0 },SE:{configurable:!0 }} ;Be.prototype.interfaces_ =function (){return [];},Be.prototype.  getClass  =function (){return Be;},Be.isNorthern =function (t){     return t ===Be.NE ||t ===Be.NW;}, Be.                                                                                         isOpposite = function (t,e){if (t ===e)return !1;return 2 ===(t -e +4)% 4;},    Be.commonHalfPlane =                                                                                                                                                                                                                                function (t,e){if (t ===e)return t;if (2 ===(t -e +4)%4)return ( -1);var n =    t <e ?t :e;return 0                                                                               ===n &&3 ===(t >e ?t :e)?3 :n;},Be.isInHalfPlane =function (t,e){return e ===   Be.SE ?t ===Be.SE ||                                                                                                                                                                                                                                t ===Be.SW :t ===e ||t ===e +1;},Be.quadrant =function (){if ("number"==typeof  arguments[   0]  &&                                                                           "number"==typeof arguments[1]){var t =arguments[0],e =arguments[1];if (0 === t   &&0 ===e)throw new                                                                                                                                                                                                                                                                                                                                                                                                        m("Cannot compute the quadrant for point ( "+t +", "+e +" )");return t >=0 ?    e >=0 ?Be.NE  :Be.                                                                                   SE :    e >=0 ?Be.NW :Be.SW;}if (arguments[0]instanceof C &&arguments[1]instanceof C){    var   n   =                                                                                                                                                       arguments[0],i  = arguments[1];if  ( i.x  ===n. x && i.y ===n.y)throw new m(    "Cannot compute the quadrant for two identical points "                                                                          
             + n)        ;return i.x >=n. x ?i.y >=n.y ?Be.NE :Be.SE :i.y >=n.y ?Be.NW :Be.SW;}},Ve.NE.get =function () {return 0;},Ve.NW.get =function (){return 1;},Ve.SW. get =function (){return 2;},Ve.SE.get =function (){return 3;},Object.defineProperties(Be,Ve);var Ue =function (){if (this._edge =null,this._label =null,this._node =null,this._p0 =null,this. _p1 =null,this._dx =null,this._dy =null,this._quadrant =null, 1 ===arguments.length){var t =arguments[0];this._edge =t;}else if (3 ===arguments.length){var e =arguments[0] ,n =arguments[1],i =arguments[2];this._edge =e,this.init(n,i),this._label =null;}else if (4 ===arguments.length){var r =arguments[0],o = arguments[1],s =arguments[2],a =arguments[3];this._edge =r,this.init(o,s),this._label =a;}};Ue.prototype.compareDirection =function (t){return this._dx ===t._dx &&this._dy ===t._dy ?0 :this._quadrant >t._quadrant ?1 :this.       _quadrant <t._quadrant ? -1 :                                               at.computeOrientation(t._p0,t. _p1,this._p1);} ,Ue.prototype.getDy =function (){    return this._dy;},                                                                                                                                                Ue.prototype.getCoordinate =function (){return this._p0;},Ue.prototype.setNode =function (t){this._node =t;},Ue.prototype.print =function (t){var e =Math.    atan2(this._dy,this._dx),n =this.getClass().getName(),i =n.lastIndexOf("."),r =    n.substring(i  +1)                                                                                        ;t.print( "  "+r +": "+this._p0  +" - "+ this. _p1 +" "+this._quadrant +":"+e +"   "+this._label);} ,Ue. prototype.compareTo =function (t){var e  =t;return this.compareDirection(e);},Ue.prototype.getDirectedCoordinate =function (){return this._p1;},Ue.prototype.getDx =function (){return this._dx;},Ue.prototype.getLabel =function (){return this._label;}, Ue.prototype.getEdge =function (){return this._edge;},Ue.prototype.     getQuadrant = function  (  ){                                                                                                                                                                                                                    return this._quadrant;},Ue.prototype.getNode =function (){return this._node;},Ue.prototype.toString =function (){var t =Math.atan2(this._dy,this._dx),e =     this.                                                                                                                                                                                                                                                                                                                                                                                                                                           getClass().getName(), n =e.lastIndexOf("." );return "  "+e. substring(n  +1)+": "+this._p0 +" - "+this._p1 +" "+this. _quadrant +":"+t  + "   "+this._label;}, Ue.prototype.computeLabel  =function ( t){} ,Ue.prototype.init  =function  (t, e){ this._p0  = t,this._p1 = e, this. _dx =e.x -t. x,this._dy = e. y -t.y,this._quadrant =Be.quadrant( this._dx, this._dy),et.isTrue(! (0 ===this._dx  &&0 ===this._dy),    "EdgeEnd with identical endpoints found"                                                                                         );},Ue.prototype.interfaces_ =function (){return [E];},Ue.prototype.getClass     =  function ( ) {                                                                                                                                                                                                                                  return Ue;}  ;var ze =function (t) { function e(  ){ var e =arguments[0],n =    arguments[1];if (t.                                                                               call(this,e) ,this._isForward =null,this._isInResult =!1,this._isVisited =!1,   this. _sym  =null,                                                                                                                                                                                                                                  this._next  =null,this._nextMin =null,this._edgeRing =null,this._minEdgeRing =  null,this._depth =[                                                                           0,  - 999,   -999], this. _isForward  =n,n)this.init(  e.  getCoordinate(0),e.   getCoordinate(1) )                                                                                                                                                                                                                                                                                                                                                                                                        ;else { var i    =e.  getNumPoints( )-1;this.init(  e.getCoordinate(i),   e.    getCoordinate(i  -                                                                                    1))    ;}this.computeDirectedLabel();}return t &&(e.__proto__ =t),e.prototype =Object.   create( t &&                                                                                                                                                    t.prototype),e.prototype.constructor =e,e. prototype. getNextMin =function (){   return  this._nextMin;} ,e.                                                                                                       
            prototype.   getDepth =function (t){return this._depth[t];},e. prototype.setVisited =function (t){this._isVisited =t;},e.prototype.computeDirectedLabel =function (){this._label =new Pe(this._edge.getLabel()),this._isForward ||this._label.flip();},e.prototype.getNext =function (){return this._next;},e.prototype.setDepth =function (t,e){if ( -999 !==this._depth[t]&&this._depth[t]!==e)throw new we("assigned depths do not match",this.getCoordinate());this._depth[t]=e;},e. prototype.isInteriorAreaEdge =function (){for (var t = !0,e =0;e <2;e++ )this._label.isArea(e)&&this._label.getLocation(e,Se.LEFT)===w.INTERIOR &&this. _label.getLocation(e,Se.RIGHT)===w.INTERIOR ||(t =!1);return t;},e.prototype.setNextMin =function (t){this._nextMin =t;},e.prototype.print =function (e){t.prototype.print.call(this,e),e.print(" "+this._depth[Se.LEFT]+"/"+this._depth[Se.RIGHT]),e.print(" ("+       this.getDepthDelta() +")") ,                                                this._isInResult &&e.print(" inResult");},e.prototype.setMinEdgeRing =function (        t)    {  this.                                                                                                                                                 _minEdgeRing =t;} ,e.prototype.isLineEdge =function  (){var t =this. _label.isLine(0)  ||this. _label.isLine(1), e = !this._label.isArea(0)||this._label.    allPositionsEqual( 0, w. EXTERIOR),n   =!this._label.  isArea( 1)||this._label.    allPositionsEqual(                                                                                        1,w.EXTERIOR);return t &&e && n;},e.prototype.setEdgeRing =function (t){ this._edgeRing =t;},e. prototype. getMinEdgeRing =function (){return this._minEdgeRing;},e.prototype.getDepthDelta =function (){var t =this._edge.getDepthDelta();return this._isForward ||(t  = -t),t;},e.prototype.setInResult =function  (t){this._isInResult =t;},e.prototype.getSym =function (){return this. _sym;},e.prototype.isForward =function (){    return   this._isForward;}, e.                                                                                                                                                                                                                     prototype.getEdge =function (){return this. _edge;},e.prototype.printEdge =function (t) {this.print(t),t.print(" "),this._isForward ? this._edge.print(t) :     this.                                                                                                                                                                                                                                                                                                                                                                                                                                         _edge.printReverse(t);},e.prototype.setSym =function (t){this._sym =t;},e.prototype.setVisitedEdge =function (t){this.setVisited(t),this._sym.setVisited(t);},e.prototype.setEdgeDepths =function (t,e){var n =this.getEdge().getDepthDelta();this._isForward ||(n = -n);var i =1;t ===Se.LEFT &&(i = -1);var r =Se.opposite(t),o =e +n *i;this.setDepth(t,e),this.setDepth(r,o);},e.prototype.getEdgeRing =function    () {return this._edgeRing;},e.prototype.                                                                                           isInResult =function (){ return  this. _isInResult;}, e.prototype. setNext =    function (t){ this.                                                                                                                                                                                                                                 _next =t;} ,e.prototype.isVisited  =function (){ return this._isVisited;},e.             prototype.                                                                               interfaces_ =function ( ){return  [];},e. prototype.  getClass =function  (){   return   e;} ,  e.                                                                                                                                                                                                                                  depthFactor =function (t,e){return t ===w.EXTERIOR &&e ===w.INTERIOR ?1 :t ===  w.INTERIOR  &&e ===                                                                            w.EXTERIOR ? -1 : 0;},e;}(Ue) , Xe =function () { };Xe.prototype.createNode =    function ( t)   {                                                                                                                                                                                                                                                                                                                                                                                                        return new Ge(t,null);},Xe.prototype.interfaces_  =function (){return [];} ,       Xe.  prototype.                                                                                     getClass = function  (){ return Xe;};var Ye =function (){if (this._edges =new Nt(),this. _nodes    =                                                                                                                                                   null,this._edgeEndList =new Nt(),0 ===arguments.length) this._nodes =new qe(new    Xe(  ) );else  if ( 1  ===                                                                                                       
            arguments.   length){var t =arguments[0];this._nodes =new qe(t);}};Ye.prototype.printEdges =function (t){t.println("Edges:" ) ;for (var e =0;e <this._edges.size();e++ ){t.println("edge "+e +":");var n =this._edges.get(e);n.print(t),n.eiList.print(t);}},Ye.prototype.find =function (t){return this._nodes.find(t);},Ye.prototype.addNode =function (){if (arguments[0]instanceof Ge){var t =arguments[0];return this._nodes.addNode(t);}if (arguments[0]instanceof C){var e =arguments[0];return this._nodes.addNode(e);}},Ye.prototype.getNodeIterator =function (){return this._nodes.iterator( );},Ye.prototype.linkResultDirectedEdges =function (){ for (var t =this._nodes.iterator();t.hasNext();){t.next().getEdges().linkResultDirectedEdges();}},Ye.prototype.debugPrintln =function (t){Y.out.println(t) ;},Ye.prototype.isBoundaryNode =function (t,e){var n =this._nodes.find(e);if (null ===n)      return !1;var i =n.getLabel()                                                 ;return null   !== i  &&i. getLocation(   t)===w.     BOUNDARY;} ,Ye.prototype.    linkAllDirectedEdges                                                                                                                                               =function (){for (var t =this._nodes.iterator();t.hasNext();){t.next().getEdges().linkAllDirectedEdges();}},Ye.prototype.matchInSameDirection =function (    t,e,n, i){return !!t.equals(n)&&at.computeOrientation(t,e,i)===at. COLLINEAR &&    Be.quadrant(t,e)===                                                                                        Be.quadrant(n,i);},Ye.prototype.getEdgeEnds =function (){return this._edgeEndList;},Ye.prototype.debugPrint =function (t){Y.out.print(t);},Ye.prototype.getEdgeIterator =function (){return this._edges.iterator();},Ye.prototype.findEdgeInSameDirection =function (t,e){for (var n =0;n <this._edges.size();n++ ){var i =this._edges.get(n),r =i.getCoordinates();if (this.matchInSameDirection(t,e,r[0],r[1]))return i;if (this.      matchInSameDirection(t,e,r[r.                                                                                                                                                                                                                    length -1],r[r.length -2]))return i;}return null;},Ye.prototype.insertEdge =function (t){this._edges.add(t);},Ye.prototype.findEdgeEnd =function (t){for (var e      =                                                                                                                                                                                                                                                                                                                                                                                                                                          this.getEdgeEnds().iterator();e.hasNext();){var n =e.next();if (n.getEdge()===t)return n;}return null;},Ye.prototype.addEdges =function (t){for (var e =t.iterator();e.hasNext();){var n =e.next();this._edges.add(n);var i =new ze(n,!0),r =new ze(n,!1);i.setSym(r),r.setSym(i),this.add(i),this.add(r);}},Ye.prototype.add =function (t){this._nodes.add(t),this._edgeEndList.add(t);},Ye. prototype.getNodes =    function (){return this._nodes.values();}                                                                                            ,Ye.prototype.findEdge =function  (t,e){for (var n =0;n <this._edges.size();    n++ ){var i  =this.                                                                                                                                                                                                                                 _edges.get(n),r =i. getCoordinates( );if (t. equals( r[0])&&e.equals(r[ 1]))        return      i;}                                                                               return null;},Ye.prototype.interfaces_ =function (){return [];},Ye.prototype.   getClass =function                                                                                                                                                                                                                                  (){return Ye;},  Ye.linkResultDirectedEdges = function ( t){ for (var e   = t.   iterator(  ) ;  e.                                                                           hasNext();){e.next().getEdges().linkResultDirectedEdges();}};var ke =function (      )   {    this.                                                                                                                                                                                                   _geometryFactory =null,this._shellList =new Nt();var t =arguments[0];this._geometryFactory =t;};ke.prototype.sortShellsAndHoles =function (t,e,n){for (var i =t.iterator();i.hasNext();){var r =i.next();r.isHole()?n.add(r):e.add(r);}},ke.prototype.computePolygons =function (    t){for (var e =new                                                                                     Nt(       )  , n =t. iterator();n.hasNext(  ); ) {var i =n. next()    .toPolygon(this.    _geometryFactory)                                                                                                                                            ;e.add(i);}return e;},ke.prototype.placeFreeHoles =function (t,e){for (var n =    e.iterator();n.hasNext();)                                                                                                        
            {var i       =n.next() ;if (null ===i.getShell()){var r =this.findEdgeRingContaining(i,t);if (null   ===r)throw new we("unable to assign hole to a shell",i.getCoordinate(0));i.setShell(r);}}} ,ke.prototype.buildMinimalEdgeRings =function (t,e,n){for (var i =new Nt(),r =t.iterator();r.hasNext(); ){var o =r.next();if (o.getMaxNodeDegree()>2){o.linkDirectedEdgesForMinimalEdgeRings();var s =o.buildMinimalRings(),a =this.findShell(s);null !==a ?(this.placePolygonHoles(a,s),e.add(a)):n.addAll( s);}else i.add(o);} return i;},ke.prototype.containsPoint =function ( t){for (var e =this._shellList.iterator();e.hasNext();){if (e.next() .containsPoint(t))return !0;}return !1;},ke.prototype.buildMaximalEdgeRings =function (t){for (var e = new Nt( ),n =t.iterator();n.hasNext();) {var i =n.next();if (i.isInResult()&&i.getLabel(). isArea()&&null ===i.getEdgeRing()){var r =new Ae(i,this.      _geometryFactory);e.add(r),r.                                                setInResult();}}return e;} ,ke.prototype.placePolygonHoles =function (t,e){for (    var n =e.iterator(                                                                                                                                                 );n.hasNext();){var i =n.next( );i.isHole() &&i.setShell(t);}} ,ke.prototype.getPolygons =function (){return this.computePolygons( this._shellList);},ke.    prototype.findEdgeRingContaining =function (t,e){for (var n =t.getLinearRing(),         i  =        n.                                                                                       getEnvelopeInternal(),r = n.getCoordinateN(0),o =null,s =null,a =e. iterator();a.hasNext();){var u =a.next(),l =u.getLinearRing(),c =l.getEnvelopeInternal();null !==o &&(s =o.getLinearRing().getEnvelopeInternal());var p =!1;c.contains(i)&&at.isPointInRing(r,l.getCoordinates())&&(p =!0), p &&(null ===o ||s.contains(c))&&(o =u);}return o;} ,ke.prototype.findShell =function (t){for (var e =0,n =null,i =t.iterator();i.     hasNext();){var r = i.next() ;r.                                                                                                                                                                                                                     isHole()||(n =r,e++ );}return et.isTrue(e <=1,"found two shells in MinimalEdgeRing list"),n;},ke.prototype.add =function (){if (1 ===arguments.length){var t =     arguments[                                                                                                                                                                                                                                                                                                                                                                                                                                  0];this.add(t.getEdgeEnds(),t.getNodes());}else if (2 ===arguments.length){var e =arguments[0],n =arguments[1];Ye.linkResultDirectedEdges(n);var i =this.buildMaximalEdgeRings(e),r =new Nt(),o =this.buildMinimalEdgeRings(i,this._shellList,r);this.sortShellsAndHoles(o,this._shellList,r),this.placeFreeHoles(this._shellList,r);}},ke.prototype.interfaces_ =function (){return [];},ke.prototype.getClass =   function (){return ke;};var je =function (                                                                                             ){};je.prototype.getBounds =function (){},je.prototype.interfaces_ =function    (){return [] ;} ,                                                                                                                                                                                                                                   je.prototype.getClass = function ()  {return je;};var He =function  (){this.    _bounds =null,this.                                                                               _item =null;var t =arguments[0],e =arguments[1];this. _bounds =t,this._item =   e;};He. prototype.                                                                                                                                                                                                                                  getItem =function (){return this._item;},He. prototype.getBounds =function (){     return     this.                                                                           _bounds;} ,He.prototype.interfaces_ =function (){return [je,e];},He.prototype.  getClass =function (                                                                                                                                                                                      ){return He;};var We =function (){this._size =null,this._items =null,this._size =0,this._items =new Nt(),this._items.add(null);};We.prototype.poll =function (){if (this.isEmpty())return null;var t =this._items.get(1);return this._items.set(1,this. _items.get(this._size)),this._size -=    1,this.reorder(1),                                                                                      t;}    , We. prototype. size =function  (){return this._size;} ,We.prototype.reorder =   function  (                                                                                                                                                 t){for (var e  =null,n = this._items.get(t); 2 *t <=this._size &&(( e =2 *t)!==  this.  _size &&this._items.                                                                                                         
            get(e        +1).compareTo(this._items.get(e))<0 &&e++ ,this._items.get(e).compareTo(n)<0);t =e)this._items.set(t,this._items.get(e));this._items.set(t,n);},We.prototype.clear =function (){this._size =0,this._items.clear();},We.prototype.isEmpty =function (){return 0 ===this._size;},We.prototype.add =function (t){this._items.add(null),this._size +=1;var e =this._size;for (this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(e /2)))<0;e /=2)this._items.set(e,this._items.get(Math. trunc(e /2)));this._items. set(e,t);},We.prototype.interfaces_ =function (){return [];},We.prototype.getClass =function (){return We;};var Ke =function (){};Ke.prototype.visitItem =function (t){},Ke.prototype.interfaces_ =function (){return [];},Ke.prototype.getClass =function (){return Ke;};var Je =function (){};Je.prototype.insert =function (t,e){},Je.prototype.remove =function (t,e){},      Je.prototype.query =function (                                                ){},Je.prototype.interfaces_  =function (){return [];},Je.prototype.getClass  =      function (  )  {                                                                                                                                                 return Je;};var Qe =function ( ){if (this._childBoundables =new Nt(),this._bounds =null,this._level =null,0 ===arguments.length);else if (1 ===arguments.    length) { var   t   = arguments[0];this._level =t;}},Ze  ={ serialVersionUID: {    configurable:!0 }}                                                                                        ;Qe.prototype.getLevel =function (){return this._level;},Qe.prototype.size =function (){return this._childBoundables.size();},Qe.prototype.getChildBoundables =function (){return this._childBoundables;},Qe.prototype.addChildBoundable =function (t){et.isTrue(null ===this._bounds),this._childBoundables.add(t);},Qe.prototype.isEmpty =function (){return this._childBoundables.isEmpty();},Qe.prototype.getBounds =function (  ){return null ===this._bounds &&(                                                                                                                                                                                                                   this._bounds =this.computeBounds()),this._bounds;} ,Qe.prototype.interfaces_ =  function  ( ){return [je,e];},Qe.prototype.getClass = function  (){return Qe;},Ze.     serialVersionUID.                                                                                                                                                                                                                                                                                                                                                                                                                          get =function (){return 0x5a1e55ec41369800;},Object.defineProperties(Qe,Ze);var $e =function (){};$e.reverseOrder =function (){return {compare:function (t,e){return e.compareTo(t);}};},$e.min =function (t){return $e.sort(t),t.get(0);},$e.sort =function (t,e){var n =t.toArray();e ?Gt.sort(n,e):Gt.sort(n);for (var i =t.iterator(),r =0,o =n.length;r <o;r++ )i.next(),i.set(n[r]);},$e.singletonList      =function  (t){ var e =new Nt();return  e.                                                                                               add(t),e;};var tn =function  (){ this. _boundable1  =null,this._boundable2 =                                                                                                                                                                                                                                                        null,this._distance =null,this. _itemDistance = null;var t =arguments[0],e =     arguments[1],  n =                                                                               arguments[ 2];this._boundable1 =t, this._boundable2 =e,this._itemDistance =n,   this._distance   =                                                                                                                                                                                                                                   this. distance();};tn. prototype.expandToQueue  = function (t, e){var n  =tn.   isComposite( this.                                                                           _boundable1), i =tn. isComposite( this._boundable2);if (n && i)return tn.area(  this. _boundable1)>                                                                                                                                                                               tn.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,t,e),null):(this.expand(this._boundable2,this._boundable1,t,e),null);if (n)return this.expand(this._boundable1,this._boundable2,t,e),null;if (i)return this.expand(this. _boundable2,this._boundable1,t,e),null;throw new m(    "neither boundable is composite"                                                                        );},   tn.prototype.isLeaves =function  (){return !(tn.isComposite(this. _boundable1)||            tn.                                                                                                                                              isComposite(this._boundable2));},tn.prototype. compareTo = function (t){var e =   t;return this._distance <e.                                                                                                         
          _distance      ? -1 :this._distance >e. _distance ?1 :0;},tn.prototype.expand =function (t,e,n,i){for (var r =t.getChildBoundables().iterator();r.hasNext();){var o =r.next(),s =new tn(o,e,this._itemDistance);s.getDistance()<i &&n.add(s);}},tn.prototype.getBoundable =function (t){return 0 ===t ?this._boundable1 :this._boundable2;},tn.prototype.getDistance =function (){return this._distance;},tn.prototype.distance =function (){return this.isLeaves()?this._itemDistance.distance(this._boundable1, this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds());},tn.prototype.interfaces_ =function (){return [E];},tn.prototype.getClass =function  (){return tn;},tn.area =function (t) {return t.getBounds().getArea();},tn.isComposite =function (t){return t instanceof Qe;};var en =function t(){if (this._root =null,this._built =!1,this._itemBoundables =new Nt(),      this._nodeCapacity =null,0 ===                                               arguments.length){var e =t.DEFAULT_NODE_CAPACITY;this._nodeCapacity =e;}else if (   1  ===  arguments.                                                                                                                                                  length){var n =arguments[0];et.isTrue(n >1,"Node capacity must be greater than 1") ,this._nodeCapacity =n;}} ,nn  ={IntersectsOp:{ configurable:  ! 0 },     serialVersionUID:{configurable:!0 },DEFAULT_NODE_CAPACITY:{ configurable:!0 }}       ;en.  prototype.                                                                                       getNodeCapacity =function (){return this._nodeCapacity;},en.prototype.lastNode =function (t){return t.get(t.size()-1);},en.prototype.size =function (){if (0 ===arguments.length)return this.isEmpty()?0 :(this.build(),this.size(this._root));if (1 ===arguments.length){for (var t =0,e =arguments[0].getChildBoundables().iterator();e.hasNext();){var n =e.next();n instanceof Qe ?t +=this.size(n):n instanceof He &&( t +=    1) ;}return t;}} , en. prototype.                                                                                                                                                                                                                   removeItem =function (t,e){ for  (var n =null,i  =t.getChildBoundables(). iterator();i.hasNext();){ var r =i.next();r instanceof He &&r. getItem()===e &&  (n =r) ;}     return null                                                                                                                                                                                                                                                                                                                                                                                                                               !==n &&(t.getChildBoundables().remove(n),!0);},en.prototype.itemsTree =function (){if (0 ===arguments.length){this.build();var t =this.itemsTree(this._root);return null ===t ?new Nt():t;}if (1 ===arguments.length){for (var e =arguments[0], n =new Nt(),i =e.getChildBoundables().iterator();i.hasNext();){var r =i.next() ;if (r instanceof Qe){var o =this.itemsTree(r);null !==o &&n.add(o);}else r       instanceof He ?n.  add(  r. getItem()):et.                                                                                                shouldNeverReachHere();}return n.size()<=0 ?null :n;}},en.prototype.insert =                                                                                                                                                                                                                                                              function      (    t,     e)   {    et.    isTrue( !    this.  _built,    "Cannot insert items into an STR packed R-tree after it has been built."                          ),this._itemBoundables.add( new He(t,e));} ,en. prototype.boundablesAtLevel =   function (){if ( 1                                                                                                                                                                                                                                   ===arguments.   length){ var   t  = arguments[0],e =  new Nt(  );return this.   boundablesAtLevel(                                                                           t, this._root,e), e;}if (3  ===  arguments. length) { var n =arguments[ 0],i =  arguments[ 1]  ,r =                                                                                                                                                                         arguments[2];if ( et.isTrue(n > -2),i.getLevel()===n)return r.add(i),null;for (var o =i.getChildBoundables().iterator();o.hasNext();){var s =o.next();s instanceof Qe ?this.boundablesAtLevel(n,s,r):(et.isTrue(s instanceof He), -1 ===n &&r.add(s));}return null;}},en.prototype.query =function (){if (1     ===    arguments.                                                                                       length) {var t =arguments[0];this.build();var e  =new Nt( );return this.isEmpty()?e :(         this.                                                                                                                                               getIntersectsOp( ) .intersects(this._root. getBounds(),t)&&this. query(t,this.    _root,e) , e);}if   (2 ===                                                                                                          
            arguments.   length){var n =arguments[0],i =arguments[1];if (this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),n)&&this.query(n,this._root,i);}else if (3 ===arguments.length)if (T(arguments[2],Ke)&&arguments[0]instanceof Object &&arguments[1]instanceof Qe)for (var r =arguments[0],o =arguments[1],s =arguments[2],a =o.getChildBoundables(),u =0;u <a.size();u++ ){var l =a.get(u);this.getIntersectsOp().intersects(l.getBounds(),r)&&(l instanceof Qe ?this.query(r,l,s):l instanceof He ?s.visitItem(l.getItem()):et.shouldNeverReachHere());}else if (T(arguments[2],xt)&&arguments[0]instanceof Object &&arguments[1]instanceof Qe)for (var c =arguments[0],p =arguments[1],h =arguments[2],f =p.getChildBoundables(),g =0;g <f.size();g++ ){var d =f.get(g);this.getIntersectsOp().intersects(d.getBounds(),c)&&(d instanceof Qe ?this.query(c,d,h):d          instanceof He ? h.add( d.                                                 getItem()):et.shouldNeverReachHere());}},en.prototype.build = function  (){ if (      this.    _built)                                                                                                                                                  return null;this._root =this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels( this._itemBoundables, -1),this._itemBoundables =null,    this._built =!0;},en.prototype.getRoot =function (){return this.build( ), this.       _root;} ,    en.                                                                                       prototype.remove =function (){if (2 ===arguments.length){var t =arguments[0],e =arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.remove(t,this._root,e);}if (3 ===arguments.length){var n =arguments[0],i =arguments[1],r =arguments[2],o =this.removeItem(i,r);if (o)return !0;for (var s =null,a =i. getChildBoundables().iterator();a.hasNext();){var u =a.next();if  (    this.getIntersectsOp().intersects(                                                                                                                                                                                                                   u.getBounds(),n)&&u instanceof Qe &&(o =this.remove(n,u,r))){s =u;break ;}}return null !==s &&s.getChildBoundables().isEmpty()&&i.getChildBoundables().remove(s),o;}},      en.                                                                                                                                                                                                                                                                                                                                                                                                                                     prototype.createHigherLevels =function (t,e){et.isTrue(!t. isEmpty());var n =this.createParentBoundables(t,e +1);return 1 === n.size()?n.get(0):this.createHigherLevels(n,e +1);},en.prototype. depth =function (){if (0 ===arguments.length)return this.isEmpty()?0 :(this.build(),this.depth(this._root));if (1 ===arguments.length){for (var t =0,e =arguments[0].getChildBoundables().iterator();e.      hasNext();){var n = e.next();if (n instanceof                                                                                                 Qe){var i =this.depth(n);i >t &&(t = i);}}return t + 1;}},en.prototype.createParentBoundables  =function (t,e){et.isTrue(!t.isEmpty());var n =new Nt();n.add(this.createNode(e));var i =new Nt(t);$e.sort(i,this.getComparator()) ;for (var r =i.iterator();r.hasNext(); ){var o =r.next();this.lastNode(n).getChildBoundables() .size()===this.getNodeCapacity() &&n.add( this.createNode(e)),this.lastNode(n).     addChildBoundable(                                                                                o);}return n;},en.prototype.isEmpty =function (){return this._built ?  this.   _root.isEmpty(  ):                                                                                                                                                                                                                                  this._itemBoundables.isEmpty( )  ;},en.prototype. interfaces_ =function  ( ) {   return [ e];}, en.                                                                           prototype.getClass =function (){return en;},en.compareDoubles =function (t,e){  return t >e ?1 :t <                                                                                                                                                                      e ? -1 : 0;},nn.IntersectsOp.get =function (){return rn;},nn.serialVersionUID.get =function (){return  ( - 0x35ef64c82d4c5400);},nn.DEFAULT_NODE_CAPACITY.get =function  () {return 10;},Object.defineProperties(en,nn);var rn =function ( ) {},on =function (){};on.prototype.distance = function (t,e){},on.            prototype.                                                                                       interfaces_ =function (){return [];},on.prototype.getClass =function (){return on;};var sn =  function (                                                                                                                                           t){ function  n(e){e =  e ||n.DEFAULT_NODE_CAPACITY,t.call( this,e);} t && (n.   __proto__ =t),(n.prototype                                                                                                           
                 =       Object.create(t &&t.prototype)).constructor =n;var i ={STRtreeNode:{configurable:!0 },serialVersionUID:{configurable:!0 },xComparator:{configurable:!0 },yComparator:{configurable:!0 },intersectsOp:{configurable:!0 },DEFAULT_NODE_CAPACITY:{configurable:!0 }};return n.prototype.createParentBoundablesFromVerticalSlices =function (t,e){et.isTrue(t.length >0);for (var n =new Nt(),i =0;i <t.length;i++ )n.addAll(this.createParentBoundablesFromVerticalSlice(t[i],e));return n;},n.prototype.createNode =function  (t){return new an(t);},n.prototype. size =function (){return 0 ===arguments.length ?t.prototype.size.call(this):t.prototype.size.apply(this,arguments);},n.prototype.insert =function (){if (2 !==arguments.length)return t.prototype.insert.apply(this,arguments);var e =arguments[0],n =arguments[1];if (e.isNull())return null;t.prototype.insert.call(this,e,n);},n.       prototype. getIntersectsOp =                                                  function (){return n.intersectsOp;},n.prototype.verticalSlices =function (t,e){    for  (var n =Math.                                                                                                                                                  trunc(Math.ceil(t.size()/e)),i =new Array(e). fill(null),r =t.iterator(),o =0;o <e;o++ ){i[o]=new Nt();for (var s =0;r.hasNext()&&s <n;){var a =r.next()    ;i[  o] .add(a),s++  ;}}return i;}, n.prototype.query  = function (){if (1  ===    arguments. length){                                                                                       var e  =arguments[0];return t.prototype.query.call(this,e);}if (2 ===arguments.length){var n =arguments[0],i =arguments[1] ;t.prototype.query.call(this,n,i);}else if (3 ===arguments.length)if (T(arguments[2],Ke)&&arguments[0]instanceof Object &&arguments[1]instanceof Qe){var r =arguments[0],o  =arguments[1],s =arguments[2];t.prototype. query.call(this,r,o,s);}else if (T(arguments[2],xt)&&arguments[0]instanceof    Object &&arguments[1]instanceof Qe)                                                                                                                                                                                                                  {var  a =arguments[0],u =arguments[1],l =arguments[2];t.prototype.query.call(this,a,u,l);}}, n.prototype. getComparator =function (){return n.yComparator;},n.prototype.     createParentBoundablesFromVerticalSlice                                                                                                                                                                                                                                                                                                                                                                                                 =function (e,n){return t.prototype.createParentBoundables.call(this,e,n);},n.prototype.remove =function (){if ( 2  ===arguments.length){ var e =arguments[0],n =arguments[1] ;return t.prototype.remove.call(this,e,n);}return t. prototype. remove.apply(this, arguments);},n.prototype.depth =function (){return 0 ===arguments.length ?t.prototype.depth.call(this):t.prototype.depth.apply(this,              arguments)     ;} ,    n.    prototype.                                                                                                  createParentBoundables =function (t,e){et.isTrue(!t.isEmpty());var i =Math.trunc(Math.ceil(t. size()/this.getNodeCapacity())),r =new Nt(t);$e.sort(r,n.xComparator);var o =this.verticalSlices(r,Math.trunc(Math.ceil(Math.sqrt(i))));return this.createParentBoundablesFromVerticalSlices(o,e);},n.prototype.nearestNeighbour =function (){if (1 ===arguments.length){if (T(arguments[0],on)){var t =arguments[    0],e =new  tn(this.                                                                               getRoot(),this.getRoot(),t);return this.nearestNeighbour(e);}if (arguments[0]   instanceof tn){var                                                                                                                                                                                                                                  i =arguments[0];return this.nearestNeighbour(i,v.POSITIVE_INFINITY);}}else if (   2  === arguments.                                                                           length){if (arguments[0]instanceof n &&T(arguments[1],on)){var r =arguments[0]  ,o =arguments[1],s =                                                                                                                                                                new tn(this.getRoot(),r.getRoot(),o);return this.nearestNeighbour(s);}if (arguments[ 0]instanceof tn &&"number"==typeof arguments[1]){var a =arguments[0],u =arguments[ 1],l =null,c =new We();for (c.add(a);!c.isEmpty()&& u >0;){var p = c.poll(),h =p.getDistance();if (h >=u)break ;p.isLeaves()?(u =h,l =p):p.    expandToQueue(c,u)                                                                                          ;}   return [l.getBoundable(0).getItem() ,l.getBoundable(1).getItem() ];}}else if (3           ===                                                                                                                                            arguments.length){var f =arguments[0],g =arguments[1],d =arguments[2],y =new He(  f,  g)   , _ =new tn( this.                                                                                                           
             getRoot(      ),y,d);return this.nearestNeighbour(_)[0];}},n.prototype.interfaces_ =function (){return [Je,e];},n.prototype.getClass =function (){return n;},n.centreX =function (t){return n.avg(t.getMinX(),t.getMaxX());},n.avg =function (t,e){return (t +e)/2;},n.centreY =function (t){return n.avg(t.getMinY(),t.getMaxY());},i.STRtreeNode.get =function (){return an;},i.serialVersionUID.get =function (){return 0x39920f7d5f261e0;},i.xComparator.get =function (){return {interfaces_:function (){return [N];},compare:function (e,i){return t.compareDoubles(n.centreX(e.getBounds()),n.centreX(i.getBounds()));}};},i.yComparator.get =function (){return {interfaces_:function (){return [N];},compare:function (e,i){return t.compareDoubles(n.centreY(e.getBounds()), n.centreY(i.getBounds()));}};},i.intersectsOp.get =function (){return {interfaces_:function (){return [t.IntersectsOp];},        intersects:function (t, e){                                                 return t.intersects(e);}};},i.DEFAULT_NODE_CAPACITY.get =function (){return 10;}          ,    Object.                                                                                                                                                    defineProperties(n,i),n;}(en),an = function  (t){ function e(){var e =arguments[0];t.call(this,e) ;}return t &&( e.__proto__ =t),e.prototype =Object.     create(t &&t. prototype),e.prototype.constructor =e,e.prototype.computeBounds =    function ( ){for (                                                                                        var t =null,e =this.getChildBoundables().iterator();e.hasNext();){var n =e.next();null ===t ?t =new j(n.getBounds()):t.expandToInclude(n.getBounds());}return t;},e.prototype.interfaces_ =function (){return [];},e.prototype.getClass =function (){return e;},e;}(Qe),un =function (){};un.prototype.interfaces_ =function (){return [];},un.prototype.getClass =function (){return un;},un.relativeSign =function (t,e){    return t <e ? -1 :t >e  ?1  :0;},un.                                                                                                                                                                                                                  compare = function (t,e,n){if (e.equals2D(n))return 0;var i =un.relativeSign(e.x,n.x),r  =un.relativeSign(e.y,n.y);switch (t) {case 0:return un.compareValue(i,r);case  1:     return un.                                                                                                                                                                                                                                                                                                                                                                                                                             compareValue(r,i);case 2:return un.compareValue(r, -i);case 3:return un.compareValue( -i,r);case 4:return un. compareValue( -i, -r);case 5:return un.compareValue( -r, -i);case 6:return un.compareValue( -r,i);case 7:return un.compareValue(i, -r);}return et.shouldNeverReachHere("invalid octant value"),0;},un.compareValue =function (t,e){ return t <0 ? -1 :t >0 ?1 :e <0 ? -1 :e >0 ?1 :      0;};var  ln  =function (){this._segString =null,                                                                                                    this.coord =null,this.segmentIndex =null,this._segmentOctant =null,this._isInterior =null;var t =arguments[0],e =arguments[1],n =arguments[2],i =arguments[3];this._segString =t,this.coord =new C(e),this.segmentIndex =n,this._segmentOctant =i,this._isInterior =!e.equals2D(t.getCoordinate(n));};ln.prototype.getCoordinate =function (){return this.coord;},ln.prototype.print =function (t){t.print(this.       coord) ,t.print(                                                                               " seg # = "+this.segmentIndex);},ln.prototype.compareTo =function (t){var e =    t;return    this.                                                                                                                                                                                                                                  segmentIndex <e.segmentIndex ? -1 :this.segmentIndex >e.segmentIndex ?1 :this.  coord.equals2D(  e.                                                                           coord) ?0 :un.compare(this._segmentOctant,this.coord,e.coord);},ln. prototype.      isEndPoint    =                                                                                                                                                           function (t){return 0 ===this.segmentIndex &&!this._isInterior ||this.segmentIndex === t;},ln.prototype.isInterior =function  (){return this._isInterior;},ln. prototype. interfaces_ =function (){return [E];} ,ln.prototype.getClass =function (){ return ln;};var cn =function (){this._nodeMap  =new p(),this._edge =       null;var  t   =                                                                                         arguments[ 0];this. _edge =t;};cn.prototype. getSplitCoordinates =function (){var t =new  St();this.                                                                                                                                           addEndpoints();for (var e =this.iterator(),n =e.next();e.hasNext();){var i =e.         next(      )   ;this.                                                                                                            
            addEdgeCoordinates( n,i,t),n =i;}return t.toCoordinateArray();},cn.prototype.addCollapsedNodes =function (){var t =new Nt();this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for (var e =t.iterator();e.hasNext();){var n =e.next().intValue();this.add(this._edge.getCoordinate(n),n) ;}},cn.prototype.print =function (t){t.println("Intersections:");for (var e =this.iterator();e.hasNext();){e.next(). print(t);}},cn.prototype.findCollapsesFromExistingVertices =function (t){for (var e =0;e <this._edge.size()-2;e++ ){var n =this._edge.getCoordinate(e) ,i =this._edge.getCoordinate(e +2);n.equals2D(i)&&t.add(new M(e +1));}},cn.prototype.addEdgeCoordinates =function (t,e,n){var i =this._edge.getCoordinate(e.segmentIndex),r =e.isInterior()||!e.coord.equals2D(i);n.add(new C(t.coord),!1);for (var o =t.segmentIndex +1;o <=e.segmentIndex;o++ )n.add(this._edge.  getCoordinate(o));r && n.add(                                                  new C(e.coord));}   ,cn.prototype.iterator =function () {return this. _nodeMap.    values().iterator(                                                                                                                                                       );},cn.prototype.addSplitEdges =function (t){this.addEndpoints(), this.addCollapsedNodes();for  (var e =this.iterator(),n =e.next();e.hasNext();){     var  i =e.next(),r  =this.createSplitEdge(n, i);t. add(r),n =i;}},cn.prototype.    findCollapseIndex =                                                                                       function (t,e,n){if (!t.coord.equals2D(e.coord))return !1;var i =e.segmentIndex -t.segmentIndex;return e.isInterior()||i-- ,1 ===i &&(n[0]=t.segmentIndex +1,!0);},cn.prototype.findCollapsesFromInsertedNodes =function (t){for (var e =new Array(1).fill(null),n =this.iterator(),i =n.next();n.hasNext();){var r =n.next();this.findCollapseIndex(i,r,e)&&t.add(new M(e[0])),i =r;}},cn.prototype.getEdge =function ()    {return  this. _edge;},cn. prototype.                                                                                                                                                                                                                 addEndpoints =function (){var t =this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t);},cn.prototype.createSplitEdge =function (     t,                                                                                                                                                                                                                                                                                                                                                                                                                                  e){var n =e.segmentIndex -t.segmentIndex +2,i =this._edge.getCoordinate(e.segmentIndex),r =e.isInterior()||!e.coord.equals2D(i);r ||n-- ;var o =new Array(n).fill(null),s =0;o[s++ ] =new C(t.coord);for (var a =t.segmentIndex +1;a <=e.segmentIndex;a++ )o[s++ ]=this._edge.getCoordinate(a);return r &&(o[s]=new C(e.coord)),new gn(o,this._edge.getData());},cn.prototype.add =function (t,     e){ var n  =new  ln(  this. _edge, t,e,this._edge.                                                                                                     getSegmentOctant( e)),i =this._nodeMap.get(n);return  null !==i ? (et.isTrue(i.coord.equals2D(t),"Found equal nodes with different coordinates"),i):(this._nodeMap.put(n,n),n);} ,cn. prototype.checkSplitEdgesCorrectness =function (t){var e   =this._edge.getCoordinates(), n  =t.get(0).getCoordinate(0);if (!n.equals2D(e[0]))throw new $("bad split edge start point at " +n);var i =t.get( t.size(  )-1).    getCoordinates(),r =                                                                              i[ i.length  -1];if ( !  r.equals2D(  e[ e. length   -1]   ) ) throw  new  $(   "bad split edge end point at "                                                                                                                                                                                                                      +r);},cn.prototype.interfaces_ =function (){return [];},cn.prototype.getClass =  function  (   )  {                                                                           return  cn;} ;var  pn =function ()  {};pn.prototype.interfaces_ =function () {  return  [];} ,  pn.                                                                                                                                                       prototype.getClass =function (){return pn;},pn.octant =function (){if ("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t =arguments[0],e =arguments[1];if (0 ===t &&0 ===e)throw new m("Cannot compute the octant for point ( "+t +", "+e +" )");var n =Math.abs(t),i =Math.abs(e);return t >=0 ?e >=0 ?n >=   i ?0 :1 :n >=i ?7 :                                                                                        6 :e    >=0 ? n >=i ?3 :2 :n >=i ?4  :5;}if (arguments[0] instanceof  C &&arguments[1]     instanceof                                                                                                                                          C){var r =arguments[0],o =arguments[1], s =o.x -r.x,a =o.y -r.y;if (0 ===s &&0    === a)    throw   new   m(                                                                                                            
             "Cannot compute the octant for two identical points " +r);return pn.octant(s,a);}};var hn =function (){};hn.prototype.getCoordinates =function  (){},hn.prototype.size =function (){},hn.prototype.getCoordinate =function (t){},hn.prototype.isClosed =function  (){},hn.prototype.setData =function (t){},hn.prototype.getData =function (){},hn.prototype.interfaces_ =function (){return [];},hn.prototype.getClass =function (){return hn;};var fn =function (){};fn.prototype.addIntersection =function (t,e){},fn.prototype.interfaces_ =function (){return [hn];},fn.prototype.getClass =function (){return fn;};var gn =function (){this._nodeList =new cn(this),this._pts =null,this._data =null;var t =arguments[0],e =arguments[1];this._pts =t,this._data =e;};gn.prototype.getCoordinates =function (){return this._pts;},gn.prototype.size =function (){return this._pts.length;},gn.prototype.getCoordinate =function (t){return  this. _pts[  t];} ,  gn. prototype.               isClosed =function (){return this._pts[0].equals(this._pts[this._pts.length -1])      ;},gn.prototype.                                                                                                                                                              getSegmentOctant =function (t){return t ===this._pts.length -1 ? -1 :this.safeOctant(this.getCoordinate(t),this.getCoordinate(t  +1));},gn.     prototype.setData =function  (t){  this. _data =t;} , gn.prototype.safeOctant =     function  (t,  e){                                                                                       return t.equals2D(e)?0 :pn.octant(t,e);},gn.prototype.getData =function (){return this._data;},gn.prototype.addIntersection =function (){if (2 ===arguments.length){var t =arguments[0],e =arguments[1];this.addIntersectionNode(t,e);}else if (4 ===arguments.length){var n =arguments[0],i =arguments[1],r =arguments[3],o =new C(n.getIntersection(r));this.addIntersection(o,i);}},gn.prototype.toString =function (    ){return Z.toLineString(new  ue(this.                                                                                                                                                                                                                 _pts));},gn.prototype.getNodeList =function () {return this._nodeList;},gn.prototype.addIntersectionNode =function (t,e){var n = e,i =n +1;if (i <this._pts.length){var r =this.     _pts[                                                                                                                                                                                                                                                                                                                                                                                                                               i];t.equals2D(r)&&(n =i);}return this._nodeList.add(t,n);},gn.prototype.addIntersections =function (t,e,n){for (var i =0;i <t.getIntersectionNum();i++ )this.addIntersection(t,e,n,i);},gn.prototype.interfaces_ =function (){return [fn];},gn.prototype.getClass =function (){return gn;},gn.getNodedSubstrings =function (){if (1 ===arguments. length) {var t = arguments[0],e =new Nt()       ;return  gn. getNodedSubstrings(t, e),e;}if ( 2 ===                                                                                                      arguments.length)for (var n =arguments[0], i =arguments[1],r =n.iterator();r.hasNext();){r.next().getNodeList() .addSplitEdges(i);}};var dn =function (){if (this.p0 =null,this.p1 =null,0 ===arguments.length)this. p0 =new C(),this.p1 =new C();else if (1 ===arguments.length){var t =arguments[0];this.p0 =new C(t.p0),this.p1 =new  C(t.p1);}else if (2 ===arguments.length)this.p0 =arguments[0],this.p1 =    arguments[1];else if                                                                              (4 ===arguments.length){var e =arguments[0],n =arguments[1],i =arguments[2],r      = arguments[ 3]                                                                                                                                                                                                                                   ;this.p0 = new C(e, n),this. p1   = new C(i,r);} }  ,yn ={serialVersionUID: {  configurable:!0 } }                                                                           ;dn.prototype.minX  =function (){return Math.min( this.p0.x, this.p1. x);},dn.           prototype.                                                                                                                                                   orientationIndex =function (){if (arguments[0]instanceof dn){var t =arguments[0],e =at.orientationIndex(this.p0,this.p1,t.p0),n =at.orientationIndex(this.p0,this.p1,t.p1);return e >=0 &&n >=0 ?Math.max(e,n):e <=0 &&n <=0 ?Math.max(e,n):0;}if (arguments[0]instanceof C){var i =arguments[0];return at.orientationIndex(this.    p0,this. p1,i);}},                                                                                          dn.    prototype.toGeometry =function (t){return t.createLineString([this.p0,this.p1])      ;} , dn.                                                                                                                                         prototype.isVertical =function (){return this.p0.x ===this.p1.x;},dn.prototype.  equals =function (t){if (!(                                                                                                             
                  t        instanceof dn))return !1;var e =t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1);},dn.prototype.intersection =function (t){var e =new rt();return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null;},dn.prototype.project =function (){if (arguments[0]instanceof C){var t =arguments[0];if (t.equals(this.p0)||t.equals(this.p1))return new C(t);var e =this.projectionFactor(t),n =new C();return n.x =this.p0.x +e *(this.p1.x -this.p0.x),n.y =this.p0.y +e *(this.p1. y -this.p0.y),n;}if (arguments[0]instanceof dn){var i =arguments[0],r =this.projectionFactor(i.p0),o =this.projectionFactor(i.p1);if (r >=1 &&o >=1)return null;if (r <=0 &&o <=0)return null;var s =this.project(i.p0);r <0 &&(s =this.p0),r >1 &&(s =this.p1);var a =this.project(i.p1);return o <0 &&(a =this.p0),o >1 &&(a =this.p1),new dn(s,a);}},dn.prototype.      normalize  =function () {this.                                                 p1. compareTo(this.p0)< 0 &&this.reverse();} , dn. prototype.angle =function (){    return Math.atan2(                                                                                                                                                                                                                                                                                                              this.p1.y  -this.p0.y, this. p1.x -this. p0.x);} , dn.prototype.getCoordinate =      function   (  t){                                                                                       return 0 ===t ?this.p0 :this.p1;},dn.prototype.distancePerpendicular =function (t){return at.distancePointLinePerpendicular(t,this.p0,this.p1);},dn.prototype.minY =function (){return Math.min(this.p0.y,this.p1.y);},dn.prototype.midPoint =function (){return dn.midPoint(this.p0,this.p1);},dn.prototype.projectionFactor =function (t){if (t.equals(this.p0))return 0;if (t.equals(this.p1))return 1;var e =this.    p1.x -this.p0.x,n =this.p1.y -this.p0.                                                                                                                                                                                                                 y,i =e * e  +n *n;if (i <=0)return v.NaN;return ((t.x -this.p0.x)*e +(t.y -this.p0.y)*n)/i;}, dn.prototype. closestPoints =function (t){var e =this.intersection(t);if (null !==e)     return [                                                                                                                                                                                                                                                                                                                                                                                                                           e,e];var n =new Array(2).fill(null),i =v.MAX_VALUE,r =null,o =this.closestPoint(t.p0);i =o.distance(t.p0),n[0]=o,n[1]=t.p0;var s =this.closestPoint(t.p1);(r =s.distance(t.p1))<i &&(i =r,n[0]=s,n[1]=t.p1);var a =t.closestPoint(this.p0);(r =a.distance(this.p0))<i &&(i =r,n[0]=this.p0,n[1]=a);var u =t.closestPoint(this.p1);return (r =u.distance(this.p1))<i &&(i =r,n[0]=this.       p1,n[1]=u),n;},dn.prototype.closestPoint =function (t)                                                                                                        {var e =this.projectionFactor(t);if (e >0 &&e <1)return this.project(t);return this.p0.distance(t)<this.p1.distance(t)?this.p0 :this.p1;},dn.prototype.maxX =function (){return Math.max(this.p0.x,this.p1.x);},dn.prototype.getLength = function (){return this.p0.distance(this.p1);},dn.prototype.compareTo =function (t){var e =t,n =this.p0.compareTo(e.p0);return 0 !==n ?n :this.p1.compareTo(e.p1);},dn.    prototype.reverse =                                                                               function (){var  t =this.p0;this.p0 =this.  p1, this.p1 = t;}  ,dn.prototype.      equalsTopo     =                                                                                                                                                                                                                                 function (t){ return this. p0.equals(t.p0)&&( this.p1.equals(t. p1) ||this.p0.   equals( t.  p1))&&                                                                           this. p1.equals(t. p0);}, dn.prototype.lineIntersection =  function (t) {try {         return    k.                                                                                                                                                intersection(this.p0,this.p1,t.p0,t.p1);}catch (t){if (!(t instanceof X))throw t;}return null;},dn.prototype.maxY =function (){return Math.max(this. p0.y,this.p1.y);},dn.prototype.pointAlongOffset =function (t,e){var n =this.p0.x +t *(this.p1.x -this.p0.x),i =this.p0.y +t *(this.p1.y -this.p0.y),r =this.p1.x -this.p0.x,o =    this. p1.y  -this.                                                                                           p0.     y,s =Math.sqrt(r *r +o *o),a =0, u = 0;if (0 !==e){if (s <=0)throw new Error(    "Cannot compute offset from zero-length line segment"                                                                                              );a =e *r /s,u =e *o /s;}return new C(n -u,i +a);},dn.prototype.setCoordinates   = function ( ){if (  1  ===                                                                                                             
             arguments.    length){var t =arguments[0];this.setCoordinates(t.p0,t.p1);}else if (2 ===arguments.length){var e =arguments[0],n =arguments[1];this.p0.x =e.x,this.p0.y =e.y,this.p1.x =n.x,this.p1.y =n.y;}},dn.prototype.segmentFraction =function (t){var e =this.projectionFactor(t);return e <0 ?e =0 :(e >1 ||v.isNaN(e))&&(e =1),e;},dn.prototype.toString =function (){return "LINESTRING( "+this.p0.x +" "+this.p0.y +", "+this.p1.x +" "+this.p1.y +")";},dn.prototype.isHorizontal =function (){return this.p0.y ===this.p1.y;},dn.prototype.distance =function (){if (arguments[0]instanceof dn){var t =arguments[0];return at.distanceLineLine(this.p0,this.p1,t.p0,t.p1);}if (arguments[0]instanceof C){var e =arguments[0];return at.distancePointLine(e,this.p0,this.p1);}},dn.prototype.pointAlong =function (t){var e =new C();return e.x =this.p0.x +t *(this.p1.x -this.p0.x),e.y =this.p0.y      +t *(this.p1.y  -this.p0. y),                                                  e;},dn.prototype.hashCode =function (){var t =v.doubleToLongBits(this.p0.x);t ^=           31     * v.                                                                                                                                                                                                                                                                                                              doubleToLongBits(this.p0.y);var e = Math.trunc( t)^ Math. trunc(t  >>32) ,n =v.      doubleToLongBits(                                                                                       this.p1.x);n ^=31 *v.doubleToLongBits(this.p1.y);return e ^(Math.trunc(n)^Math.trunc(n >>32));},dn.prototype.interfaces_ =function (){return [E,e];},dn.prototype.getClass =function (){return dn;},dn.midPoint =function (t,e){return new C((t.x +e.x)/2,(t.y +e.y)/2);},yn.serialVersionUID.get =function (){return 0x2d2172135f411c00;},Object.defineProperties(dn,yn);var _n =function (){this.tempEnv1 =new j(     )  , this.tempEnv2 =  new j( ) ,  this.                                                                                                                                                                                                                 _overlapSeg1 =new dn(),this._overlapSeg2 =new dn();};_n. prototype.overlap =function (){    if  (2 ===arguments. length);else if (4  ===arguments. length) {var t =arguments[0] ,e  =    arguments[                                                                                                                                                                                                                                                                                                                                                                                                                        1],n =arguments[2],i =arguments[3];t.getLineSegment(e,this._overlapSeg1),n.getLineSegment( i,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2);}},_n.prototype.interfaces_ =function (){return [];},_n.prototype.getClass =function (){return _n;};var mn =function (){this._pts =null,this._start =null,this._end =null,this._env =null,this._context  =null,        this._id =null;var t =arguments[0],e =  arguments[1],n =                                                                                                          arguments[2],i =arguments[3];this._pts =t,this._start =e,this._end =n,this._context =i;};mn.prototype.getLineSegment =function (t,e){e.p0 =this._pts[t],e.p1 =this._pts[t +1];} ,mn.prototype.computeSelect =function (t,e,n,i){var r =this._pts[e],o =this._pts[n];if (i.tempEnv1.init(r,o),n -e ==1)return i.select(this,e),null;if (!t.intersects(i.tempEnv1))return null;var s =Math.trunc((e +n)/2);e <s &&    this.computeSelect(                                                                               t,e,s,i),s  <n &&this.computeSelect(t, s,n,i);},mn.prototype.getCoordinates =   function (){for   (                                                                                                                                                                                                                                 var t =new Array(this._end -this._start +1).fill(null),e =0,n =this._start;n <=  this. _end;n++ )t[                                                                           e++ ]=this._pts[n];return t;},mn. prototype.computeOverlaps =function  (t,e) {                this.                                                                                                                                            computeOverlapsInternal(this._start,this._end,t,t._start,t._end,e) ;},mn.prototype. setId =function (t){this._id =t;},mn.prototype.select =function (t,e){this.computeSelect(t,this._start,this._end,e);},mn.prototype.getEnvelope =function (){if (null ===this._env){var t =this._pts[this._start],e =this._pts[this._end];this._env =       new j(  t, e);}                                                                                           return this. _env;},mn. prototype.getEndIndex =function (){return this._end;},mn.prototype. getStartIndex                                                                                                                                  =function (){ return this._start;}  , mn.prototype.getContext   =function () {   return this._context;} ,mn.                                                                                                              
           prototype. getId = function (){return this._id;},mn.prototype.computeOverlapsInternal =function (t,e,n,i,r,o){var s =this._pts[t],a =this._pts[e],u =n._pts[i],l =n._pts[r];if (e -t ==1 &&r -i ==1)return o.overlap(this,t,n,i),null;if (o.tempEnv1.init(s,a),o.tempEnv2.init(u,l),!o.tempEnv1.intersects(o.tempEnv2))return null;var c =Math.trunc((t +e)/2),p =Math.trunc((i +r)/2);t <c &&(i <p &&this.computeOverlapsInternal(t,c,n,i,p,o),p <r &&this.computeOverlapsInternal(t,c,n,p,r,o)),c <e &&(i <p &&this.computeOverlapsInternal(c,e,n,i,p,o),p <r &&this.computeOverlapsInternal(c,e,n,p,r,o));},mn.prototype.interfaces_ =function (){return [];},mn.prototype.getClass =function (){return mn;};var vn =function (){};vn.prototype.interfaces_ =function (){return [];},vn.prototype.getClass =function (){return vn;},vn.getChainStartIndices =function (t){var e =0,n =new Nt();n.add(new M(e));do   { var i =vn.findChainEnd(t,e)                                                  ;n.add(new M(i))  , e =i;} while (e < t.length -1);return vn.toIntArray(n);},vn.       findChainEnd  =                                                                                                                                                                                                                                                                                                              function (t,e){for (var n =e;n <t.length -1 &&t[n].equals2D(t[n +1]);)n++ ;if (    n >=t. length   -1)                                                                                       return t.length -1;for (var i =Be.quadrant(t[n],t[n +1]),r =e +1;r <t.length;){if (!t[r -1].equals2D(t[r])){if (Be.quadrant(t[r -1],t[r])!==i)break ;}r++ ;}return r -1;},vn.getChains =function (){if (1 ===arguments.length){var t =arguments[0];return vn.getChains(t,null);}if (2 ===arguments.length){for (var e =arguments[0],n =arguments[1],i =new Nt() ,r =vn.getChainStartIndices(e),o =0;o <r.length -     1;o++ ){var s =new mn(e,r[o],r[o +1] ,n)                                                                                                                                                                                                                 ;i.add(s);}return i;}},vn.toIntArray =function (t){for (var e =new Array(t.size()).fill(     null),n =0;n <e.length;n++ )e[n]=t.get(n).intValue();return e;};var In =function (){};In.     prototype.                                                                                                                                                                                                                                                                                                                                                                                                                       computeNodes =function (t){},In.prototype.getNodedSubstrings =function (){},In.prototype.interfaces_ =function (){return [];},In.prototype.getClass =function (){return In;} ;var En =function (){if  (this._segInt =null,0 ===arguments.length);else if (1 === arguments.length){var t =arguments[0];this.setSegmentIntersector(t);}};En.prototype.setSegmentIntersector =         function  ( t){this. _segInt =t;},En.prototype.interfaces_ =                                                                                                           function (){return [In];},En.prototype.getClass =function (){return En;};var xn =function ( t){function e(e){e  ?t.call(this,e):t.call(this),this._monoChains =new Nt(),this._index =new sn(),this._idCounter =0,this._nodedSegStrings =null, this._nOverlaps =0;}t &&(e.__proto__ =t),(e.prototype =Object. create(t &&t.prototype)).constructor =e;var n ={SegmentOverlapAction:{configurable:! 0 }};return e.             prototype.                                                                               getMonotoneChains  =function ()  { return  this._monoChains;} ,e.  prototype.   getNodedSubstrings =                                                                                                                                                                                                                                function (){return gn.getNodedSubstrings(this._nodedSegStrings);},e.prototype.  getIndex =function (                                                                          ){return this._index;},e.prototype.add =function (t){for (var e =vn.getChains(  t.getCoordinates(),                                                                                                                                         t) .iterator();e.hasNext();){var n =e.next();n.setId(this._idCounter++ ),this._index.insert(n.getEnvelope(),n),this._monoChains.add(n);}},e.prototype.computeNodes =function (t) {this._nodedSegStrings =t;for (var e =t.iterator();e.hasNext();)this.add(e.next());this.intersectChains();},e.prototype.intersectChains =function (){for (    var t  = new   Nn(                                                                                           this.   _segInt),e =this. _monoChains.iterator();e.hasNext();)for (var  n =e.next(),i =         this.                                                                                                                                     _index.query(n.getEnvelope()).iterator();i.hasNext();){var r = i.next();if  (r.    getId()>n. getId( )&&(  n.                                                                                                              
             computeOverlaps( r,t),this._nOverlaps++ ),this._segInt.isDone())return null;}},e.prototype.interfaces_ =function (){return [];},e.prototype.getClass =function (){return e;},n.SegmentOverlapAction.get =function (){return Nn;},Object.defineProperties(e,n),e;}(En),Nn =function (t){function e(){t.call(this),this._si =null;var e =arguments[0];this._si =e;}return t &&(e. __proto__ =t),e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e.prototype.overlap =function (){if (4 !==arguments.length)return t.prototype.overlap.apply(this,arguments);var e =arguments[0],n =arguments[1],i =arguments[2],r =arguments[3],o =e.getContext(),s =i.getContext();this._si.processIntersections(o,n,s,r);},e.prototype.interfaces_ =function (){return [];},e.prototype.getClass =function (){return e;},e;}(_n),Cn  =function t(){if (this._quadrantSegments =t.DEFAULT_QUADRANT_SEGMENTS,   this.  _endCapStyle   =    t.                                                  CAP_ROUND,this._joinStyle =t.JOIN_ROUND,this._mitreLimit =t.DEFAULT_MITRE_LIMIT,                 this.                                                                                                                                                                                                                                                                                                              _isSingleSided  = !1,this. _simplifyFactor  =t. DEFAULT_SIMPLIFY_FACTOR,  0 ===     arguments. length)                                                                                       ;else if (1 ===arguments.length){var e =arguments[0];this.setQuadrantSegments(e);}else if (2 ===arguments.length){var n =arguments[0],i =arguments[1];this.setQuadrantSegments(n),this.setEndCapStyle(i);}else if (4 ===arguments.length){var r =arguments[ 0],o =arguments[1],s =arguments[2],a =arguments[3];this.setQuadrantSegments(r),this.setEndCapStyle(o),this.setJoinStyle(s),this.setMitreLimit(a);}},    Sn ={CAP_ROUND:{configurable:!  0    }  ,                                                                                                                                                                                                                 CAP_FLAT:{configurable:!0 },CAP_SQUARE:{configurable:!0 },JOIN_ROUND:{configurable:!0 },        JOIN_MITRE: {configurable: !0 },JOIN_BEVEL:{configurable:!0 },DEFAULT_QUADRANT_SEGMENTS:{    configurable:                                                                                                                                                                                                                                                                                                                                                                                                                   !0 },DEFAULT_MITRE_LIMIT: {configurable:!0 },DEFAULT_SIMPLIFY_FACTOR:{configurable:!0 }};Cn.prototype.getEndCapStyle = function  () { return this._endCapStyle;},Cn.prototype. isSingleSided =function (){return this._isSingleSided;},Cn.prototype.setQuadrantSegments  =function (t){this._quadrantSegments =t,0 === this._quadrantSegments &&(this._joinStyle =Cn.          JOIN_BEVEL),this._quadrantSegments  <0 &&(this. _joinStyle =Cn.                                                                                                             JOIN_MITRE,this._mitreLimit =Math.abs(this._quadrantSegments)),t <=0 &&(this._quadrantSegments =1),this._joinStyle !==Cn.JOIN_ROUND &&(this._quadrantSegments =Cn.DEFAULT_QUADRANT_SEGMENTS);},Cn.prototype.getJoinStyle =function (){return this._joinStyle;},Cn.prototype. setJoinStyle =function (t){this._joinStyle =t;},Cn.prototype.setSimplifyFactor =function (t){this._simplifyFactor =t <0 ?0 :t;},Cn.             prototype.                                                                               getSimplifyFactor = function (){return this._simplifyFactor;}, Cn. prototype.   getQuadrantSegments                                                                                                                                                                                                                                 = function (){return  this._quadrantSegments;}, Cn. prototype.setEndCapStyle =  function (t){this.                                                                            _endCapStyle   = t;}, Cn.prototype. getMitreLimit =function  (){return   this.   _mitreLimit;} ,Cn.                                                                                                                                      prototype.setMitreLimit =function (t){this._mitreLimit   =t;}, Cn.prototype.setSingleSided =function  (t){this._isSingleSided =t;},Cn.prototype.interfaces_ =function (){return [];},Cn.prototype.getClass =function (){return Cn;},Cn.bufferDistanceError =function (t) {var e =Math.PI /2 /t;return 1  -Math. cos(e /2);},Sn.CAP_ROUND.get =      function (  )  {                                                                                            return 1;} , Sn.CAP_FLAT.get =function (){return  2;} , Sn.CAP_SQUARE.get =function ( ) { return  3;},                                                                                                                                   Sn.JOIN_ROUND.get  =function ( ) {return  1;},Sn.JOIN_MITRE. get =function (){     return 2;},Sn.JOIN_BEVEL.                                                                                                               
               get =       function (){return 3;},Sn.DEFAULT_QUADRANT_SEGMENTS.get =function (){return 8;},Sn.DEFAULT_MITRE_LIMIT.get =function (){return 5;},Sn.DEFAULT_SIMPLIFY_FACTOR.get =function (){return .01;},Object.defineProperties(Cn,Sn) ;var Ln =function (t){this._distanceTol =null,this._isDeleted =null,this._angleOrientation =at.COUNTERCLOCKWISE,this._inputLine =t ||null;},bn ={INIT:{configurable:!0 },DELETE:{configurable:!0 },KEEP:{configurable:!0  },NUM_PTS_TO_CHECK:{configurable:!0 }};Ln.prototype.isDeletable =function (t,e,n,i){var  r =this._inputLine[t],o =this._inputLine[e],s =this._inputLine[n];return !!this.isConcave(r,o,s)&&!!this.isShallow(r,o,s,i)&&this.isShallowSampled(r,o,t,n, i);},Ln.prototype.deleteShallowConcavities =function (){for (var t =1,e =this.findNextNonDeletedIndex(t),n =this.findNextNonDeletedIndex(e),i =!1;n <this._inputLine.length;){var r =!       1;this.isDeletable(  t,  e,n,                                                  this. _distanceTol)&&(this._isDeleted[e]=Ln.DELETE,r  =! 0,i =!0),t =r ?n :e,e =                 this.                                                                                                                                                                                                                                                                                                               findNextNonDeletedIndex(t),n = this.findNextNonDeletedIndex(e);}return i;},Ln.            prototype.                                                                                        isShallowConcavity =function (t,e,n,i){if (!(at.computeOrientation(t,e,n)===this._angleOrientation))return !1;return at.distancePointLine(e,t, n)<i;},Ln.prototype.isShallowSampled =function (t,e,n,i,r){var o =Math.trunc((i -n)/Ln.NUM_PTS_TO_CHECK);o <=0 &&(o =1);for (var s =n;s <i;s +=o)if (!this.isShallow(t,e,this._inputLine[s],r))return !1;return !0;},Ln.prototype.isConcave =function (t,e,n){     var i = at.computeOrientation(t, e,n) ===                                                                                                                                                                                                                 this._angleOrientation;return i;},Ln.prototype.simplify =function (t){this._distanceTol =    Math. abs(t),t <0 &&(this._angleOrientation = at.CLOCKWISE) , this._isDeleted  =new Array(this.    _inputLine.                                                                                                                                                                                                                                                                                                                                                                                                                    length).fill(null);var e =!1;do {e =this.deleteShallowConcavities();}while (e);return this.collapseLine();},Ln.prototype.findNextNonDeletedIndex =function (t){for  (var e =t +1;e <this._inputLine.length &&this._isDeleted[e]===Ln.DELETE;)e++ ;return e;},Ln.prototype.isShallow =function (t,e,n,i){return at.distancePointLine(e,t,n)<i;},Ln.prototype.             collapseLine = function (){for  (var  t =new  St( ) ,e =0;e  <this.                                                                                                               _inputLine.length;e++ ) this._isDeleted[e]!==Ln.DELETE &&t.add(this._inputLine[e]);return t.toCoordinateArray();},Ln.prototype.interfaces_ =function (){return [];},Ln.prototype.getClass =function (){return Ln;},Ln.simplify =function (t,e){return new Ln(t).simplify(e);},bn.INIT.get =function (){return 0;},bn.DELETE.get =function (){return 1;},bn.KEEP.get =function (){return 1;},bn.NUM_PTS_TO_CHECK.     get  =function (){                                                                               return 10;},Object.defineProperties(Ln,bn);var wn =function (){this._ptList =      null,     this.                                                                                                                                                                                                                                  _precisionModel =null,this._minimimVertexDistance =0,this._ptList =new Nt();},     On          =  {                                                                           COORDINATE_ARRAY_TYPE:{  configurable:! 0 } } ;wn.prototype.  getCoordinates =  function   (  )   {                                                                                                                                    return this._ptList.toArray(wn.COORDINATE_ARRAY_TYPE);},wn.prototype.setPrecisionModel =function (t){this._precisionModel =t;},wn.prototype.addPt =function (t){var e =new C(t);if (this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e);},wn.prototype.revere =function (){},wn.prototype.addPts =function (     t,e) {if (e)for (                                                                                             var     n =0;n <t.length;n++ )this.addPt(t[n]);else for (var i =t.length -1;i >=0;i--       )  this.                                                                                                                                    addPt(t[i]);},wn.prototype.isRedundant =function (t){if (this._ptList.size()<    1)return  !1;var  e =this.                                                                                                                
             _ptList.       get(this._ptList.size()-1);return t.distance(e) <this._minimimVertexDistance;},wn.prototype.toString =function (){return new _e().createLineString(this. getCoordinates()).toString();},wn.prototype.closeRing =function (){if (this._ptList.size()<1)return null;var t =new C(this._ptList.get(0)),e =this._ptList.get(this._ptList.size()-1);if (t.equals(e))return null;this._ptList.add(t);},wn.prototype.setMinimumVertexDistance =function (t){this._minimimVertexDistance =t;}, wn.prototype. interfaces_ =function (){return [];},wn.prototype.getClass =function (){return wn;},On.COORDINATE_ARRAY_TYPE.get =function (){return new Array(0).fill(null);},Object.defineProperties(wn,On);var Tn =function  (){},Rn ={PI_TIMES_2:{configurable:!0 },PI_OVER_2:{configurable:!0 },PI_OVER_4:{configurable:!0 },COUNTERCLOCKWISE:{configurable:!0 },CLOCKWISE:{configurable:!0 },NONE:{        configurable:   !0 }  }  ;Tn.                                                  prototype.interfaces_ =function (){return [];},Tn.prototype.getClass =function (    ){return Tn;}, Tn.                                                                                                                                                                                                                                                                                                              toDegrees =function (t){return 180 *t /Math.PI;},Tn.normalize =function (t){for     (;t >Math.PI;)t -=                                                                                       Tn.PI_TIMES_2;for (;t <= -Math.PI;)t +=Tn.PI_TIMES_2;return t;},Tn.angle =function (){if (1 ===arguments.length){var t =arguments[0];return Math.atan2(t.y,t.x);}if (2 ===arguments.length){var e =arguments[0],n =arguments[1],i =n.x -e.x,r =n.y -e.y;return Math.atan2(r,i);}},Tn.isAcute =function (t,e,n){var i = t.x -e.x,r =t.y -e.y;return i *(n.x -e.x)+r *(n.y -e.y)>0;},Tn.isObtuse =function (      t,e,n){ var  i =   t.x   -e. x,r  =t.y -e.                                                                                                                                                                                                                  y;return i *(n.x -e.x)+r *(n.y -e.y)<0;}, Tn.interiorAngle  =function (t,e,n){var i =Tn.   angle(   e,t), r =Tn.angle(e,n);return Math.abs(r -i);},Tn.normalizePositive =function (t){if (t <     0){                                                                                                                                                                                                                                                                                                                                                                                                                          for (;t <0;)t +=Tn.PI_TIMES_2;t >=Tn.PI_TIMES_2 &&(t  =0);}else {for (;t >=Tn.PI_TIMES_2;)t -=Tn.PI_TIMES_2;t < 0 && (t =0) ;}return t;},Tn. angleBetween =function  (t,e,n){ var i =Tn.angle(e,t),r =Tn.angle(e,n);return Tn.diff(i,r);},Tn.diff =function (t,e){var n =null;return (n =t <e ?e -t :t -e)>Math.PI &&(n =2 *Math.PI -n),n;},Tn.toRadians =         function (t){return t *Math.PI /180;},Tn.getTurn =function (t,e){var n =                                                                                                                Math.sin( e    -t);return n >0 ?Tn.COUNTERCLOCKWISE :n  <0 ?Tn.CLOCKWISE :Tn. NONE;},Tn.angleBetweenOriented =function (t,e,n){var i =Tn. angle(e,t),r =Tn.angle(e,n)-i;return  r <= -Math.PI ?r +Tn. PI_TIMES_2 :r >Math.PI ?r -Tn.PI_TIMES_2 :r;},Rn.PI_TIMES_2.get =function (){return 2 *Math.PI;} ,Rn.PI_OVER_2.get =function (){return Math.PI / 2;},Rn.PI_OVER_4.get =function (){return Math.PI /4;},Rn.      COUNTERCLOCKWISE.                                                                               get =function ( ){return at.COUNTERCLOCKWISE;},Rn.CLOCKWISE.get =function (){       return     at.                                                                                                                                                                                                                                    CLOCKWISE;} , Rn.NONE.get  =function ( ){ return  at.  COLLINEAR;}  ,Object.    defineProperties(                                                                           Tn,  Rn) ;var   Pn   = function  t(  ) { this._maxCurveSegmentError =  0,this.  _filletAngleQuantum                                                                                                                                 =null,this._closingSegLengthFactor =1,this._segList = null,this._distance =0,this._precisionModel =null,this._bufParams =null,this._li =null,this._s0 =null,this._s1 =null,this._s2 =null,this._seg0 =new dn(),this._seg1 =new dn(),this._offset0 =new dn(),this._offset1 =new dn(),this._side =0,this._hasNarrowConcaveAngle =!1;var e =arguments[    0],n =arguments[1]                                                                                             ,i =     arguments[2] ;this._precisionModel =e,this._bufParams   =n,this._li =new rt(),         this.                                                                                                                                 _filletAngleQuantum =Math.PI /2 /n.getQuadrantSegments(),n.getQuadrantSegments(    )>=8 &&n.getJoinStyle()===                                                                                                                
                  Cn.        JOIN_ROUND &&(this._closingSegLengthFactor =t.MAX_CLOSING_SEG_LEN_FACTOR),this.init(i);},Dn ={OFFSET_SEGMENT_SEPARATION_FACTOR:{configurable:!0 },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0 },CURVE_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0 }, MAX_CLOSING_SEG_LEN_FACTOR:{configurable:!0 }};Pn.prototype.addNextSegment =function (t,e){ if (this._s0 =this._s1,this._s1 =this._s2,this._s2 =t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this. _seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this. _s1.equals(this._s2))return null;var n = at. computeOrientation(this._s0,this._s1,this._s2),i =n ===at.CLOCKWISE &&this. _side ===Se.LEFT ||n ===at.COUNTERCLOCKWISE &&this._side ===Se.RIGHT;0 ===n ?this.        addCollinear(e) :  i  ? this.                                                  addOutsideTurn(n, e):this. addInsideTurn( n,  e);},Pn.prototype.addLineEndCap  =    function (t,e){var                                                                                                                                                                                                                                                                                                              n =new dn(t,e),i =new  dn();this.computeOffsetSegment(n,Se.LEFT,this._distance,    i) ;var r =new dn()                                                                                       ;this.computeOffsetSegment( n,Se.RIGHT,this._distance,r);var o =e.x -t.x,s =e. y -t.y,a =Math.atan2(s,o);switch (this._bufParams.getEndCapStyle()){case Cn.CAP_ROUND:this._segList.addPt(i.p1), this.addFilletArc( e,a +Math. PI /2,a -Math.PI /2,at.CLOCKWISE,this._distance) ,this._segList. addPt(r.p1);break ;case Cn.CAP_FLAT:this. _segList.addPt(i.p1),this._segList.addPt(r.p1);break ;case Cn.      CAP_SQUARE:var  u = new C() ;u.x =Math. abs(                                                                                                                                                                                                                 this._distance)*Math.cos(a),u.y =Math.abs(this._distance)*Math.sin(a);var l =new C(i.p1.x   +u. x,i.    p1.y +u.y),c =new C(r.p1.x +u.x,r.p1.y +u.y);this._segList.addPt(l),this._segList.addPt(      c)                                                                                                                                                                                                                                                                                                                                                                                                                         ;}},Pn.prototype.getCoordinates =function (){return this._segList.getCoordinates();},Pn.prototype.addMitreJoin =function (t,e,n, i){var r =!0,o = null;try {o =k.intersection(e.p0, e.p1,n.p0,n.p1);(i <=0  ?1 :o.distance(t)/Math.abs(i))>this._bufParams.getMitreLimit()&&(r =!1);}catch ( t){if (!(t instanceof X))throw t;o =new C(0,0),r =!1;}r ?this.     _segList.addPt(o)  :  this.addLimitedMitreJoin( e,n,i,  this. _bufParams.                                                                                                                  getMitreLimit());},Pn.prototype.addFilletCorner =function (t,e,n,i,r){var o =e.x -t.x,s =e.y -t.y,a =Math.atan2(s,o),u =n.x -t.x,l =n.y  -t.y,c =Math.atan2(l,u);i ===at.CLOCKWISE ?a <=c &&(a +=2 *Math.PI):a >=c &&(a -=2 *Math.PI),this._segList.addPt(e),this.addFilletArc(t,a,c,i,r),this._segList.addPt(n);},Pn.prototype.addOutsideTurn  =function (t,e){if (this._offset0.p1.distance(this._offset1.p0)<    this._distance *Pn.                                                                               OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1)     ,     null;this.                                                                                                                                                                                                                                  _bufParams. getJoinStyle()=== Cn.JOIN_MITRE ?this. addMitreJoin(this._s1,this.    _offset0,   this.                                                                           _offset1,this._distance):this._bufParams.getJoinStyle()===Cn.JOIN_BEVEL ?this.   addBevelJoin(this.                                                                                                                                _offset0, this._offset1) :(e &&this._segList.addPt(this._offset0.p1), this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0));},Pn.prototype.createSquare =function  (t){ this._segList.addPt(new C( t.x +this._distance,t.y +this._distance)),this._segList.addPt(new C(t.x +this.    _distance,  t.y  -                                                                                              this.   _distance)),this._segList.addPt(new C(t.x -this._distance,t.y -this._distance)   ) ,   this.                                                                                                                                 _segList.addPt(new C(t.x - this._distance,t.y +this._distance)) ,this._segList.  closeRing();},Pn.prototype.                                                                                                                 
              addSegments    =function (t,e){ this._segList.addPts(t,e);},Pn.prototype.addFirstSegment =function (){this._segList.addPt(this._offset1.p0);},Pn.prototype.addLastSegment =function ( ){this._segList.addPt(this._offset1.p1);},Pn.prototype.initSideSegments =function (t,e,n){this._s1 =t,this._s2 =e,this._side =n,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1);},Pn.prototype.addLimitedMitreJoin =function (t,e,n,i){var r =this._seg0.p1,o =Tn.angle(r,this._seg0.p0),s =Tn.angleBetweenOriented(this._seg0.p0,r, this._seg1.p1)/2,a =Tn.normalize(o +s),u =Tn.normalize(a +Math.PI),l =i *n,c =n -l *Math.abs(Math.sin(s)) ,p =r.x +l *Math.cos( u),h =r.y +l *Math.sin(u), f =new C(p,h),g =new dn(r,f),d =g.pointAlongOffset(1,c),y =g.pointAlongOffset(1, -c);this._side ===Se.LEFT ?(this._segList.addPt(d),this._segList.addPt(y)):(this.        _segList.  addPt( y)  , this.                                                  _segList.addPt(d));},Pn.prototype.computeOffsetSegment =function (t,e,n,i){var r    =e ===Se.LEFT ?1 : -                                                                                                                                                                                                                                                                                                            1,o =t.p1.x -t.p0.x,s =t.p1.y -t.p0.y,a =Math.sqrt(o *o +s *s),u =r *n *o /a,l =   r *n *s /a;i.p0.x =                                                                                       t.p0.x -l,i.p0.y =t.p0.y +u,i.p1.x =t.p1.x -l,i.p1.y = t.p1.y +u;},Pn.prototype.addFilletArc =function (t,e,n,i,r){var o =i ===at.CLOCKWISE ? -1 :1,s =Math.abs(e - n),a =Math.trunc(s /this._filletAngleQuantum +.5);if (a <1)return null;for (var u =s /a,l =0, c =new C();l <s;){var p =e +o *l;c.x =t.x +r *Math. cos(p),c. y =t.y +r *Math.sin(p),this._segList.addPt(c),l +=u;}},Pn.prototype.       addInsideTurn =function ( t,e){if  (this._li.                                                                                                                                                                                                                 computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1)    ,this._li.    hasIntersection())  this._segList. addPt( this._li.getIntersection(0));else  if ( this.      _hasNarrowConcaveAngle                                                                                                                                                                                                                                                                                                                                                                                                      =! 0, this. _offset0.p1.distance(   this. _offset1.   p0) < this._distance * Pn.                                                                                                                                                                                   INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else {if (   this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor >0){                                                                                                                     var n =new C((this. _closingSegLengthFactor *this._offset0.p1.x +this._s1.x)/(this._closingSegLengthFactor +1),(this._closingSegLengthFactor *this._offset0.p1.y +this._s1.y)/(this._closingSegLengthFactor +1));this._segList.addPt(n);var i =new C((this._closingSegLengthFactor  *this._offset1.p0.x +this._s1.x) /(this._closingSegLengthFactor +1),(this._closingSegLengthFactor *this._offset1.p0.y +this.      _s1.  y) / (this.                                                                                _closingSegLengthFactor +1) );this. _segList.addPt( i) ;}else this._segList.     addPt( this. _s1)                                                                                                                                                                                                                                 ;this._segList.addPt(this._offset1.p0);}},Pn.prototype.createCircle =function ( t){var e =new C(t.x                                                                           +this._distance,t.y);this._segList.addPt(e),this.addFilletArc(t,0,2 *Math.PI, - 1,this._distance) ,                                                                                                                              this._segList.closeRing();},Pn.prototype.addBevelJoin =function (t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0);},Pn.prototype.init =function (t){ this._distance =t,this._maxCurveSegmentError =t *(1 -Math.cos(this._filletAngleQuantum /2)),this._segList =new wn(),this._segList.setPrecisionModel(this._precisionModel),this. _segList.    setMinimumVertexDistance(                                                                                        t *    Pn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);},Pn.prototype.addCollinear = function (     t){  this.                                                                                                                                _li.   computeIntersection(this._s0, this. _s1,this. _s1,this. _s2);this._li.    getIntersectionNum()>=2 &&                                                                                                                  
              ( this.        _bufParams.getJoinStyle()===Cn.JOIN_BEVEL ||this._bufParams.getJoinStyle()===Cn.JOIN_MITRE ?(t &&this._segList.addPt(this._offset0.p1), this._segList.addPt(this._offset1.p0)):this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,at.CLOCKWISE,this._distance));},Pn.prototype.closeRing =function (){this._segList.closeRing();},Pn.prototype.hasNarrowConcaveAngle =function (){return this._hasNarrowConcaveAngle;},Pn.prototype. interfaces_ =function (){return [];},Pn.prototype.getClass =function (){return Pn;},Dn.OFFSET_SEGMENT_SEPARATION_FACTOR.get =function (){return .001;},Dn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get =function (){return .001;},Dn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get =function (){return 1e-6;},Dn.MAX_CLOSING_SEG_LEN_FACTOR.get =function ( ){return 80;},Object.defineProperties(Pn,Dn);var Mn =function (){this._distance =0,this.       _precisionModel =null,  this.                                                   _bufParams =null;var t =arguments[0],e  = arguments[1];this._precisionModel = t,    this._bufParams  =                                                                                                                                                                                                                                                                                                              e;};Mn.prototype.getOffsetCurve =function ( t,e){if ( this._distance =e,0 ===e)    return null;var n =                                                                                       e <0,i =Math.abs(e),r  =this.getSegGen(i);t.length <=1 ?this.computePointCurve(t[0],r):this.computeOffsetCurve(t,n,r);var  o =r.getCoordinates();return n  &&Lt.reverse(o),o;},Mn.prototype.computeSingleSidedBufferCurve =function (t,e,n){var i =this.simplifyTolerance(this._distance);if (e){n.addSegments(t,!0);var r =Ln.simplify(t, -i),o =r.length -1;n.initSideSegments(r[o],r[o -1],Se.       LEFT),n.addFirstSegment();for (var s =o -2;s >=                                                                                                                                                                                                                 0;s-- )n.addNextSegment(r[s],!0);}else {n.addSegments(t,!1);var a =Ln.simplify( t,i),u =      a.length -    1;n.initSideSegments(a[0],a[1],Se.LEFT),n.addFirstSegment();for (var l =2;l <= u;l++ )n.     addNextSegment(                                                                                                                                                                                                                                                                                                                                                                                                           a[l],!0);}n.addLastSegment(),n.closeRing();},Mn.prototype.computeRingBufferCurve =                                                                                                                                                                                  function (t,e,n){var i =this.simplifyTolerance(this._distance);e ===Se.RIGHT &&(i =  -i)    ;var r =Ln.simplify(t,i),o =r.length -1;n.initSideSegments(r[o -1],r[                                                                                                                      0],e);for (var s =1;s <=o;s++ ){var a =1 !==s;n.addNextSegment(r[s],a);}n.closeRing();},Mn.prototype.computeLineBufferCurve =function (t,e){var n =this.simplifyTolerance(this._distance),i =Ln.simplify(t,n),r =i.length -1;e.initSideSegments(i[0],i[1],Se.LEFT);for (var o =2;o <=r; o++ )e.addNextSegment(i[o],!0);e.addLastSegment(),e.addLineEndCap(i[r -1], i[r]);var s =Ln.simplify(t, -n),a =s.length -                   1;e.                                                                               initSideSegments(s[a] ,s[a  -1],  Se.LEFT);for (var u = a  -2; u >= 0;u-- )e.   addNextSegment( s[                                                                                                                                                                                                                                  u],!0);e.addLastSegment() ,  e. addLineEndCap(s[1],s[0]), e. closeRing();},Mn.           prototype.                                                                           computePointCurve =function (t,e){switch  (this._bufParams.getEndCapStyle( )){  case Cn. CAP_ROUND:                                                                                                                            e.createCircle(t);break ;case Cn.CAP_SQUARE:e.createSquare(t);}},Mn.prototype.getLineCurve =function (t,e){if (this._distance =e,e <0 &&!this._bufParams.isSingleSided())return null;if (0 ===e)return null;var n =Math.abs(e),i =this.getSegGen(n);if (t.length <=1)this.computePointCurve(t[0],i);else if (this._bufParams.isSingleSided()){var r =e <               0;this.                                                                                               computeSingleSidedBufferCurve(  t,r,i) ;}else this.computeLineBufferCurve(t,i);return i.getCoordinates();},Mn.  prototype.                                                                                                          getBufferParameters =function (){ return  this. _bufParams;},Mn.   prototype.   simplifyTolerance =function                                                                                                                  
                ( t) {       return t *this._bufParams.getSimplifyFactor();},Mn.prototype.getRingCurve =function (t,e,n){if (this._distance =n,t.length <=2)return this.getLineCurve(t,n);if (0 ===n)return Mn.copyCoordinates(t);var i =this.getSegGen(n);return this.computeRingBufferCurve(t,e,i),i.getCoordinates();},Mn.prototype.computeOffsetCurve =function (t,e,n){var i =this.simplifyTolerance(this._distance);if (e){var r =Ln.simplify(t, -i),o =r.length -1;n.initSideSegments(r[o],r[o -1],Se.LEFT),n.addFirstSegment();for (var s =o -2;s >=0;s-- )n.addNextSegment(r[s],!0);}else {var a =Ln.simplify(t,i),u =a.length -1;n.initSideSegments(a[0],a[1],Se.LEFT),n.addFirstSegment();for (var l =2;l <=u;l++ )n.addNextSegment(a[l],!0);}n.addLastSegment();},Mn.prototype.getSegGen =function (t){return new Pn(this._precisionModel,this._bufParams,t);},Mn.prototype.interfaces_ =function (){return []      ;} ,  Mn. prototype.getClass =                                                   function (){return Mn;},Mn.copyCoordinates =function (t){ for (var e =new Array(     t. length) .fill(                                                                                                                                                                                                                                                                                                               null),n =0;n <e.length;n++ )e[n]=new C( t[n]) ;return e;};var An =function (){    this. _subgraphs  =                                                                                       null,this._seg =new dn(),this._cga =new at();var t =arguments[0];this._subgraphs =t;},Fn ={DepthSegment:{configurable:!0 }};An.prototype.findStabbedSegments =function (){if (1 ===arguments.length){for (var t =arguments[0],e =new Nt(),n =this._subgraphs.iterator(); n. hasNext();){var i =n.next(),r =i.getEnvelope() ;t.y <r.getMinY()||t.y >r. getMaxY()||this.findStabbedSegments(t, i.       getDirectedEdges() ,e)   ;}return e;}if ( 3 ===                                                                                                                                                                                                                 arguments. length)if (T(  arguments[2], xt) &&arguments[ 0]instanceof C   && arguments[1]    instanceof ze)    for (var o =arguments[0],s =arguments[1],a =arguments[2],u =s.getEdge().getCoordinates(),     l =                                                                                                                                                                                                                                                                                                                                                                                                                     0;l <u.length -1;l++ ){this._seg.p0 =u[l],this._seg.p1 =u[l  +1],this._seg.p0.y >                                                                                                                                                                                   this._seg.p1.y &&this._seg.reverse();if (!(Math.max(this._seg.p0.x,this._seg.p1.x)<o.x)&&!   (this. _seg.isHorizontal()||o.y <this._seg.p0.y ||o.y >this._seg.                                                                                                                         p1.y ||at.computeOrientation(this._seg.p0,this._seg.p1,o)===at.RIGHT)){var c  =  s.getDepth(Se.LEFT);this._seg.p0. equals(u[l])|| (c = s.getDepth(Se.RIGHT));var p =new  Gn(this._seg,c);a.add( p);}}else if (T(arguments[2],xt)&&arguments[0]instanceof C &&T(arguments[1],xt))for (var h =arguments[0],f =arguments[1],g =arguments[2],d = f.iterator();d.hasNext(  );){var  y = d.next();y.isForward()&&this.    findStabbedSegments(                                                                               h,y,g) ;}  }     ,An.  prototype.  getDepth  = function  ( t){ var e = this.   findStabbedSegments(                                                                                                                                                                                                                                t);if (0 ===e.size())return 0;return $e. min( e) . _leftDepth;},An. prototype.     interfaces_    =                                                                           function (){ return [];}, An.prototype.getClass =function  (){return  An;},Fn.  DepthSegment.get  =                                                                                                                          function (){return Gn;},Object.defineProperties(An,Fn);var  Gn  =function () {this. _upwardSeg =null,this._leftDepth =null;var t = arguments[0],e =arguments[1];this._upwardSeg =new  dn(t),this. _leftDepth =e;};Gn.prototype.compareTo =function (t){var e =t;if (this._upwardSeg. minX()>= e._upwardSeg.maxX())return  1;if (this._upwardSeg.maxX()<=e.    _upwardSeg.minX())                                                                                                return ( -1);var n =this._upwardSeg.orientationIndex(e._upwardSeg);return 0 !==n ?n :0 != (n = -1  *e.                                                                                                                           _upwardSeg.orientationIndex(this._upwardSeg))?n   :this._upwardSeg.compareTo(e.        _upwardSeg)  ;} , Gn.                                                                                                                   
            prototype. compareX =function (t,e){var n =t.p0.compareTo(e.p0);return 0 !== n  ?n :t.p1.compareTo(e.p1);},Gn.prototype.toString =function () {return this._upwardSeg.toString();},Gn. prototype. interfaces_ =function (){return [E];},Gn.prototype.getClass =function (){return Gn;};var qn =function (t,e,n){this.p0 =t ||null,this.p1 =e ||null,this.p2 =n ||null;};qn.prototype.area =function (){return qn.area(this.p0,this.p1,this.p2);},qn.prototype.signedArea =function (){return qn.signedArea(this.p0,this.p1,this.p2);},qn.prototype.interpolateZ =function (t){if (null ===t)throw new m("Supplied point is null.");return qn.interpolateZ(t,this.p0,this.p1,this.p2);},qn.prototype.longestSideLength =function (){return qn.longestSideLength(this.p0,this.p1,this.p2);},qn.prototype.isAcute =function (){return qn.isAcute(this.p0,this.p1,this.p2);},qn.prototype.circumcentre =function () {    return  qn.circumcentre(this.                                                   p0,this.p1,this.p2);},qn.prototype.area3D =function (){return qn.area3D(this.p0,    this.p1,this.p2);}                                                                                                                                                                                                                                                                                                              ,qn.prototype.centroid =function (){return qn.centroid(this.p0,this.p1,this.p2)    ;} ,  qn.prototype.                                                                                       inCentre =function (){return qn.inCentre(this.p0,this.p1,this.p2);},qn.prototype.interfaces_ =function (){return [];},qn.prototype.getClass =function (){return qn;} ,qn.area =function (t,e,n) {return Math.abs(((n.x - t.x)*(e.y -t.y) -(e.x -t.x)*(n.y -t.y))/2);} ,qn.signedArea =function (t,e,n){return ((n.x -t.x)*(e.y -t.y)-(e.x -t. x)*(n.y -t.y))/2;},qn.det =function (t,e,n,i){      return t *i -e *n;},qn.interpolateZ =function (t,                                                                                                                                                                                                                  e,n,i){var r =e.x,o =e.y,s =n.x -r,a =i.x -r,u =n.y -o,l =i.y -o,c =s *l -a *u,p =t.x -r,   h =t.y -o,f =(l *p   - a * h)/c,g =( - u *p +s *h)/ c;return e.z +f * ( n. z -e. z)+g *  ( i.z   -e. z);},qn.     longestSideLength                                                                                                                                                                                                                                                                                                                                                                                                       =function (t,e,n){var  i =t.distance(e), r =e.distance( n),o  =n.distance(t) ,s =   i;return r >s &&(s =r),o >s &&(s =o),s;},qn.isAcute =function (t,e,n){return !!Tn.isAcute(t,e,n)&&!!Tn.isAcute(e,n,t)&&!!Tn.isAcute(n,t,e);},qn.circumcentre =function (t,e,n)   {var i =n.x,r =n.y,o =t.x -i,s =t.y -r,a =e.x  -i,u =e.y -r,l = 2 *qn.det(o,s,a,u),c =qn.    det(s,o *o +s *s,u,a *a +u *u),p =qn.det(o,o *o +s *s,a,a *a +                                                                                                                           u *u);return new C(i -c /l,r +p /l);},qn.perpendicularBisector =function (t,e){var n =e.x -t.x,i =e.y -t.y,r =new k(t.x +n /2,t.y +i /2,1),o =new k(t.x -i +n /2,t.y +n +i /2,1);return new k(r,o);},qn.angleBisector =function (t,e,n){var i =e.distance(t),r =i /(i +e.distance(n)),o =n.x -t.x,s =n.y -t.y;return new C(t.x +r *o,t.y +r *s);},qn.area3D =function (t,e,n){var i =e.x -t.x,r =e.y -t.y,o =e.z    -t.z,s =n.x -t.x,a =                                                                              n.y -t.y,u =n.z -t.z,l =r *u -o *a,c =o *s -i *u,p =i *a -r *s,h =l *l +c *c +  p *p,f =Math.sqrt(                                                                                                                                                                                                                                  h)/2;return f;},qn.centroid =function (t,e,n){var i =(t.x +e.x +n.x)/3,r =(t.y    +e. y + n.   y) /                                                                           3;return new C(i,r);},qn.inCentre =function (t,e,n){var i =e.distance(n),r =t.   distance(n),o = t.                                                                                                                        distance(e),s =i + r +o,a =(i *t.x +r *e.x +o *n.x)/s,u =(i *t.y  +r *e.y +o *n.y)/s;return new C(a,u);};var Bn =function (){this._inputGeom =null,this._distance =null,this._curveBuilder =null,this._curveList =new Nt() ;var t  = arguments[0],e =arguments[1],n =arguments[2];this._inputGeom =t,this._distance =e,this._curveBuilder =n;};Bn.prototype.    addPoint =function                                                                                                  (      t){if ( this. _distance <= 0)return null;var e =t.getCoordinates(),n  = this.    _curveBuilder.                                                                                                                         getLineCurve( e,this._distance);this. addCurve(n,w. EXTERIOR,w.INTERIOR);},Bn.    prototype. addPolygon   =                                                                                                                    
               function       (t){var e =this._distance,n =Se.LEFT;this._distance <0 &&(e = -this._distance,n =Se.RIGHT);var i =t.getExteriorRing(),r =Lt.removeRepeatedPoints(i.getCoordinates());if (this._distance <0 &&this.isErodedCompletely(i,this._distance))return null;if  (this._distance <=0 &&r.length <3)return null;this.addPolygonRing(r,e,n,w.EXTERIOR,w.INTERIOR);for (var o =0;o <t.getNumInteriorRing();o++ ){var s =t.getInteriorRingN(o),a =Lt.removeRepeatedPoints(s.getCoordinates());this._distance >0 &&this.isErodedCompletely(s, -this._distance)||this.addPolygonRing(a,e,Se.opposite(n),w.INTERIOR,w.EXTERIOR);}},Bn.prototype.isTriangleErodedCompletely =function (t,e){var n =new qn(t[0],t[1],t[2]),i =n.inCentre();return at.distancePointLine(i,n.p0,n.p1)<Math.abs(e);},Bn.prototype.addLineString =function (t){if (this._distance <=0 &&!this._curveBuilder.getBufferParameters().            isSingleSided(       )  )                                                   return  null;var  e  =Lt.removeRepeatedPoints(t.getCoordinates( ) ) ,   n =this.        _curveBuilder.                                                                                                                                                                                                                                                                                                              getLineCurve(e,this. _distance);this. addCurve(n,w.EXTERIOR, w. INTERIOR);},Bn.    prototype.addCurve =                                                                                      function (t,e,n){if (null ===t ||t.length <2)return null;var i =new gn(t,new Pe(0,w.BOUNDARY,e,n));this._curveList.add(i);},Bn.prototype.getCurves =function (){return this.add(this._inputGeom),this._curveList;},Bn.prototype.addPolygonRing =function (t,e,n,i,r){if (0 ===e &&t.length <ee.MINIMUM_VALID_SIZE)return null;var o =i,s =r;t.length >=ee.MINIMUM_VALID_SIZE &&at.isCCW(      t)&&(o  =r, s =i,n  =Se. opposite(n));var a  = this.                                                                                                                                                                                                                  _curveBuilder.getRingCurve(t,n,e);this. addCurve(a,o,s);},Bn.prototype.add =function (t){   if   (t.isEmpty( ))     return null;t instanceof $t ?this.addPolygon(t):t instanceof Kt ?this.addLineString(t):t     instanceof                                                                                                                                                                                                                                                                                                                                                                                                            Qt ?this.addPoint(t) :t instanceof te ?this. addCollection(t):t instanceof Xt   ?   this.addCollection(t):t instanceof ne ?this.addCollection(t):t instanceof zt &&this.addCollection(t);},Bn.prototype.isErodedCompletely =function (t,e){var n =t.getCoordinates(   );if (n.length <4)return e <0;if (4 ===n.length) return this.isTriangleErodedCompletely(n,   e);var i =t.getEnvelopeInternal(),r =Math.min(i.getHeight(                                                                                                                              ),i.getWidth());return e <0 &&2 *Math.abs(e)>r;},Bn.prototype.addCollection =function (t){for (var e =0;e <t.getNumGeometries();e++ ){var n =t.getGeometryN(e);this.add(n);}},Bn.prototype.interfaces_ =function (){return [];},Bn.prototype.getClass =function (){return Bn;};var Vn =function (){};Vn.prototype.locate =function (t){},Vn.prototype.interfaces_ =function (){return [];},Vn.prototype.getClass      =  function  ( ){                                                                               return Vn;};var Un =function (){this. _parent =null,this._atStart =null,this.    _max =null, this.                                                                                                                                                                                                                                   _index  =null,this. _subcollectionIterator =null;var  t = arguments[0] ;this.   _parent = t, this.                                                                           _atStart =!0,this. _index =0, this._max =t.getNumGeometries( );};Un.prototype.  next =function ( ){                                                                                                                      if (this._atStart)return this._atStart =! 1,Un.isAtomic(this._parent)&&this._index++ ,this._parent;if (null !==this._subcollectionIterator){if (this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator = null;}if (this._index >=this._max)throw new i();var t =this._parent.getGeometryN(this._index++ )          ;return    t                                                                                                 instanceof zt ?(this._subcollectionIterator =new Un(t),this._subcollectionIterator.next() ): t;} ,Un.                                                                                                                          prototype.remove =function (){throw new Error(this.getClass().getName());},Un.   prototype.hasNext =function                                                                                                                    
               (){if (         this._atStart)return !0;if (null !==this._subcollectionIterator){if (this._subcollectionIterator.hasNext())return !0;this._subcollectionIterator =null;}return !(this._index >=this._max);},Un.prototype.interfaces_ =function (){return [Et];},Un.prototype.getClass =function (){return Un;},Un.isAtomic =function (t){return !(t instanceof zt);};var zn =function (){this._geom =null;var t =arguments[0];this._geom = t;};zn.prototype.locate =function (t){return zn.locate(t,this._geom);},zn.prototype.interfaces_ =function () {return [Vn];},zn.prototype.getClass =function (){return zn;},zn.isPointInRing =function (t,e){return !! e.getEnvelopeInternal().intersects(t)&&at.isPointInRing(t,e.getCoordinates());},zn.containsPointInPolygon =function (t,e){if (e.isEmpty())return !1;var n =e. getExteriorRing();if (!zn.isPointInRing(t,n))return !1;for (var i =0;i <e.        getNumInteriorRing();i++ ){var                                                   r = e.getInteriorRingN(i);if  (zn.isPointInRing(t,r))return !1;} return !0;},zn.     containsPoint   =                                                                                                                                                                                                                                                                                                              function (t,e){if (e instanceof $t)return zn.containsPointInPolygon(t,e);if  (e    instanceof zt)for (                                                                                       var n =new Un(e);n.hasNext();){var i =n.next();if (i !==e &&zn.containsPoint(t,i))return !0;}return !1;},zn.locate =function (t,e){return e.isEmpty()?w.EXTERIOR :zn.containsPoint(t,e)?w.INTERIOR :w.EXTERIOR;};var Xn =function (){this._edgeMap =new p(),this._edgeList =null,this._ptInAreaLocation =[w.NONE,w.NONE];};Xn.prototype.getNextCW =function (t){this.getEdges();var       e =this._edgeList.indexOf(t),n =e -1;return 0 ===e &&(n                                                                                                                                                                                                                   =this._edgeList.size() -1) ,this._edgeList. get(n);},Xn. prototype.propagateSideLabels =   function (t){for (var e  =w. NONE, n =this. iterator();n.hasNext();) {var i = n.next().getLabel();i.isArea( t)&&i.     getLocation(                                                                                                                                                                                                                                                                                                                                                                                                          t, Se. LEFT)!==  w.NONE &&(e  =i.  getLocation(t, Se.LEFT)) ;}if (e === w. NONE)   return null;for (var r =e,o =this.iterator();o.hasNext();){var s =o. next(),a =s.getLabel();if (a.getLocation(t,Se.ON)===w.NONE &&a.setLocation(t,Se.ON,r),a.isArea(t)){var u =    a.getLocation( t,Se.LEFT) ,l =a.getLocation(t, Se.RIGHT);if ( l !==w.NONE) {if ( l !== r)    throw new we("side location conflict",s.getCoordinate()                                                                                                                                );u ===w.NONE &&et.shouldNeverReachHere("found single null side (at "+s.getCoordinate()+")"),r =u;}else et.isTrue(a.getLocation(t,Se.LEFT)===w.NONE,"found single null side"),a.setLocation(t,Se.RIGHT,r),a.setLocation(t,Se.LEFT,r);}}}, Xn.prototype.getCoordinate =function (){var t = this.iterator();if (!t.hasNext())return null;return t.next().getCoordinate();},Xn.prototype.print =function (t){Y.out.               println(                                                                               "EdgeEndStar:   "+this. getCoordinate( ));for  ( var e   =this.iterator( );e.    hasNext(); ){  e.                                                                                                                                                                                                                                  next(). print(  t) ;}} ,Xn.prototype.isAreaLabelsConsistent  = function (t)  {    return      this.                                                                           computeEdgeEndLabels(t. getBoundaryNodeRule()),this.checkAreaLabelsConsistent(  0);} ,Xn.prototype.                                                                                                                    checkAreaLabelsConsistent =function (t){var e =this.getEdges();if (e.size()<=0)return !0;var n =e.size()-1,i =e.get(n).getLabel().getLocation(t,Se.LEFT);et.isTrue(i !==w.NONE,"Found unlabelled area edge");for (var r =i,o =this.iterator();o.hasNext();){var s =o.next().getLabel();et.isTrue(s.isArea(t),"Found non-area edge");var  a =s. getLocation(t,Se.     LEFT) , u   =   s.                                                                                                getLocation( t,Se.RIGHT);if (a ===u)return  ! 1;if ( u !==r)return !1;r =a;}return ! 0;},Xn.   prototype.                                                                                                                     findIndex =function (t){this.iterator();for (var e =0;e <this._edgeList.size();   e++ ){if (this. _edgeList.                                                                                                                     
                get( e)        ===t)return e;}return ( -1);},Xn.prototype.iterator =function (){return this.getEdges().iterator();},Xn.prototype.getEdges =function (){return null ===this._edgeList &&(this._edgeList =new Nt(this._edgeMap.values())),this._edgeList;},Xn.prototype.getLocation =function (t,e,n){return this._ptInAreaLocation[t]===w. NONE &&(this._ptInAreaLocation[t]=zn.locate(e,n[t].getGeometry())),this._ptInAreaLocation[t];},Xn.prototype.toString =function (){var t =new D();t.append("EdgeEndStar:   "+this.getCoordinate()),t.append("\n");for (var  e =this.iterator();e.hasNext();){var n =e.next();t.append(n),t.append("\n");}return t.toString();},Xn. prototype.computeEdgeEndLabels =function (t){ for (var e  =this.iterator();e.hasNext();){e.next().computeLabel(t);}},Xn.prototype.computeLabelling =function (t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.       propagateSideLabels( 0) , this.                                                   propagateSideLabels(1);for (var e =[!1,!1],n =this.iterator();n.hasNext();)for (    var i  =n.next() .                                                                                                                                                                                                                                                                                                              getLabel(),r =0;r <2;r++ )i.isLine(r)&&i.getLocation(r)===w.BOUNDARY &&(e[r] =!     0) ;for ( var  o =                                                                                       this.iterator();o.hasNext();)for (var s =o.next(),a =s.getLabel(),u =0;u <2;u++ )if (a.isAnyNull(u)){var l =w.NONE;if (e[u])l =w.EXTERIOR;else {var c =s.getCoordinate();l =this.getLocation(u,c,t);}a.setAllLocationsIfNull(u,l);}},Xn.prototype.getDegree =function (){return this._edgeMap.size();},Xn.prototype.insertEdgeEnd =function (t,e){this._edgeMap.put(t,e),this.        _edgeList =null;},Xn.prototype.interfaces_ =function ( ){                                                                                                                                                                                                                   return [];},Xn.prototype.getClass =function (){return Xn;};var  Yn =function (t){function   e() {t.call( this),this.      _resultAreaEdgeList  = null, this._label =null,this.  _SCANNING_FOR_INCOMING = 1,this.     _LINKING_TO_OUTGOING                                                                                                                                                                                                                                                                                                                                                                                                =2;} return t &&(e.__proto__ =t), e.prototype =Object.create( t &&t.prototype),e.   prototype.constructor =e,e. prototype.linkResultDirectedEdges =function (){ this.getResultAreaEdges();for  (var  t  =null,e =null,n =this.  _SCANNING_FOR_INCOMING, i =0;i <this.  _resultAreaEdgeList.size();i++ ){var r =this._resultAreaEdgeList.get(i), o =r.getSym();if (    r.getLabel( ) . isArea(  ))switch (null ===t  &&r.                                                                                                                                   isInResult()  &&(t =r), n){case this._SCANNING_FOR_INCOMING:if  (! o.isInResult( ))continue ;e  =  o,n =this.  _LINKING_TO_OUTGOING;break   ;case this._LINKING_TO_OUTGOING:if  (! r.isInResult())continue ;e.setNext(r),n =this. _SCANNING_FOR_INCOMING;} }if (n ===this. _LINKING_TO_OUTGOING){  if  (null  ===t)throw new we("no outgoing dirEdge found" ,this.getCoordinate());et.  isTrue(t.isInResult( ) ,    "unable to link last incoming dirEdge"                                                            )  , e.setNext(t) ;}},  e.prototype.  insert =function (t) { var e =  t;this.   insertEdgeEnd(e,e)                                                                                                                                                                                                                                  ;},e.prototype.getRightmostEdge =function (){var t =this.getEdges(),e =t.size(     ) ;if (  e   <1)                                                                           return null;var n = t.get( 0);if (1  === e)return n;var  i =t. get(e -1),r =n.  getQuadrant(),o =i.                                                                                                                   getQuadrant();return Be.isNorthern(r)&&Be.isNorthern(o)?n :Be.isNorthern(r)||Be.isNorthern(o)?0 !==n.getDy()?n :0 !==i.getDy()?i :(et.shouldNeverReachHere("found two horizontal edges incident on node"),null):i;},e.prototype.print =function (t){Y.out.println("DirectedEdgeStar: "+this.getCoordinate());for (var e =this.iterator();e.hasNext( );){var n =e.     next( ) ;t. print(                                                                                                 "out "  ),n.print(t),t.println() ,t.print("in "),n.getSym().print(t),t.println();}},e.    prototype.                                                                                                                          getResultAreaEdges =function  ()   {if ( null !== this.  _resultAreaEdgeList)            return       this.                                                                                                                     
               _resultAreaEdgeList;this. _resultAreaEdgeList =new Nt();for (var t =this.iterator();t.hasNext();){var e  = t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add( e) ;}return this._resultAreaEdgeList;},e.prototype.updateLabelling =function (t){for (var e =this.iterator();e.hasNext();){var n =e.next().getLabel();n.setAllLocationsIfNull(0,t.getLocation(0)),n.setAllLocationsIfNull(1,t.getLocation(1));}},e.prototype.linkAllDirectedEdges =function (){this.getEdges();for (var t =null,e =null,n =this._edgeList.size()-1;n >=0;n-- ){var i =this._edgeList.get(n),r =i.getSym();null ===e &&(e =r),null !== t &&r.setNext(t),t =i;}e.setNext(t);},e.prototype.computeDepths =function (){if  (1 ===arguments.length){var t =arguments[0],e  =this.findIndex(t),n =t.getDepth(Se.LEFT),i =t.getDepth(Se.RIGHT),r =this.computeDepths(e +1,this._edgeList.size() ,n);if (this.  computeDepths( 0,  e,  r)!== i)                                              throw new we("depth mismatch at "+t.getCoordinate());}else if (3   ===arguments.    length){for (var o                                                                                                                                                                                                                                                                                                              = arguments[ 0],s =arguments[1] ,a =arguments[2],u =o;u <s;u++ ){ var  l =this.    _edgeList.get(u);l.                                                                                       setEdgeDepths(Se.RIGHT,a),a =l.getDepth(Se.LEFT);}return a;}},e.prototype.mergeSymLabels =function (){for (var t =this.iterator();t.hasNext();){var e =t.next();e.getLabel().merge(e.getSym().getLabel());}},e.prototype.linkMinimalDirectedEdges =function (t){for (var e =null,n =null,i =this._SCANNING_FOR_INCOMING,r =this._resultAreaEdgeList.size()-1;r >=0;r-- ){        var o =this._resultAreaEdgeList.get(r),s =o.getSym();switch (                                                                                                                                                                                                                    null  ===e &&o.getEdgeRing( )===t &&(e =o),i){ case this._SCANNING_FOR_INCOMING: if (s.     getEdgeRing( )  !==    t)    continue ;n =s,i =this._LINKING_TO_OUTGOING;break ;case this._LINKING_TO_OUTGOING:if (o.     getEdgeRing(                                                                                                                                                                                                                                                                                                                                                                                                        )!== t)continue ;n.setNextMin(o) ,  i  =this._SCANNING_FOR_INCOMING;}}i ===this.   _LINKING_TO_OUTGOING &&(et.isTrue(null !==e,"found null for first outgoing dirEdge"),et.isTrue(e.getEdgeRing()===t,"unable to link last incoming dirEdge"),n.setNextMin(e) );},e.    prototype. getOutgoingDegree =function (){if  (0 ===arguments.length){ for (var t  =0,e =     this. iterator( );e.hasNext()  ;){e.   next().                                                                                                                                      isInResult( )&&t++  ;}return t;}if (1 ===arguments.length){for (var n =arguments[0],i =0,r =this.iterator();r.hasNext();){r.next().getEdgeRing()===n &&i++ ;}return i;}},e.prototype.getLabel =function (){return this._label;},e.prototype.findCoveredLineEdges = function (){for (var t =w.NONE,e =this. iterator();e.hasNext();){var n =e.next(),i =n.getSym();if (!n.isLineEdge()){if (n.isInResult()){t =w.    INTERIOR;break ;}if                                                                               (i.isInResult()){t =w.EXTERIOR;break ;}}}if (t ===w.NONE)return null;for (var   r   = t,  o = this.                                                                                                                                                                                                                                 iterator();o.hasNext( );){ var  s =o. next( ),a =s.getSym();s. isLineEdge()?s.     getEdge(  )    .                                                                           setCovered(r ===w.INTERIOR):(s.isInResult()&&(r =w.EXTERIOR),a.isInResult()&&(  r =w.INTERIOR));}},                                                                                                                 e.prototype.computeLabelling =function (e){t.prototype.computeLabelling.call(this,e),this._label =new Pe( w.NONE);for  (var n =this.iterator();n.hasNext();)for (var i =n.next().getEdge().getLabel(),r =0;r  <2;r++ ){var o =i.getLocation(r);o !==w.INTERIOR &&o !==w.BOUNDARY ||this. _label.setLocation(r,w.INTERIOR);}},e.prototype.interfaces_ =function () {      return [] ;} ,e.                                                                                                   prototype. getClass =function (){ return  e;}, e;}(Xn), kn =function (t){function e() {t. apply(this,                                                                                                                      arguments);} return t  && (e. __proto__ =t),e. prototype  =Object.create(t &&t.    prototype),  e.prototype.                                                                                                                      
                constructor    =e,e.prototype.createNode =function (t){return new Ge(t,new Yn());},e.prototype.interfaces_ =function (){return [];},e.prototype.getClass =function (){return e;},e;}(Xe),jn =function t(){this._pts =null,this._orientation =null;var e =arguments[0];this._pts =e,this._orientation =t.orientation(e);};jn.prototype.compareTo =function (t){var e =t;return jn.compareOriented(this._pts,this._orientation,e._pts,e._orientation);},jn.prototype.interfaces_ =function (){return [E];},jn.prototype.getClass =function (){return jn;},jn.orientation =function (t){return 1 ===Lt.increasingDirection(t);},jn.compareOriented =function (t,e,n,i){for (var r =e ?1 : -1,o =i ?1 : -1,s =e ?t.length : -1,a =i ?n.length : -1,u =e ?0 :t.length -1,l =i ?0 :n.length -1;;){var c =t[u].compareTo(n[l]);if (0 !==c)return c;var p =(u +=r)===s,h =(l +=o)===a;if (p &&!h)return ( -1);if      (! p  &&h)return 1;if ( p  &&h)                                                    return 0;} };var Hn =function (){this. _edges =new Nt(),this._ocaMap = new p();}       ;Hn. prototype.                                                                                                                                                                                                                                                                                                              print =function (t){t.print("MULTILINESTRING ( ");for (var e =0;e <this._edges.    size();e++ ){var n =                                                                                      this._edges.get(e);e >0 &&t.print(","),t.print("(");for (var i =n.getCoordinates(),r =0;r <i.length;r++ )r >0 &&t.print(","),t.print(i[r].x +" "+i[r].y);t.println(")");}t.print(")  ");},Hn.prototype.addAll =function (t){for (var e =t.iterator();e.hasNext();)this.add(e.next());},Hn.prototype.findEdgeIndex =function (t){for (var e =0;e <this._edges.size(          );e++ )if (this._edges.get(e).equals(t))return e;return ( -1);},                                                                                                                                                                                                                   Hn.prototype.iterator =function (){return this._edges.iterator();},Hn.prototype.getEdges =    function  ()  {return this.   _edges;},Hn. prototype.  get =function  ( t) {return this._edges. get(t) ;}, Hn.prototype.    findEqualEdge                                                                                                                                                                                                                                                                                                                                                                                                     =function (t){var e =new jn( t.getCoordinates());return this._ocaMap.get(e);},Hn.   prototype.add =function (t){this._edges.add(t);var e =new jn(t.getCoordinates());this._ocaMap.put(e,t);},Hn.prototype.interfaces_ =function (){return [];},Hn.prototype.getClass =   function (){return Hn;};var Wn =function (){};Wn.prototype.processIntersections =function (  t,e,n,i){},Wn.prototype.isDone =function (){                                                                                                                                         },Wn.prototype.interfaces_ =function (){return [];},Wn.prototype.getClass =function (){return Wn;};var Kn =function (){this._hasIntersection =!1,this._hasProper =!1,this._hasProperInterior =!1,this._hasInterior =!1,this._properIntersectionPoint =null,this._li =null,this._isSelfIntersection =null,this.numIntersections =0,this.numInteriorIntersections =0,this.numProperIntersections =0,this.numTests =   0;var t =arguments[                                                                               0];this._li =t;};Kn.prototype.isTrivialIntersection =function (t,e,n,i){if (t   === n && 1 ===this.                                                                                                                                                                                                                                  _li.getIntersectionNum(  )){if (Kn. isAdjacentSegments(e,i))return ! 0;if (t.  isClosed()){var r =                                                                           t.size()-1;if ( 0 ===e && i ===r ||0 ===i &&e ===r)return !0;}}return !1;},Kn.           prototype.                                                                                                               getProperIntersectionPoint =function (){return this._properIntersectionPoint;},Kn.prototype.hasProperInteriorIntersection =function (){return this._hasProperInterior;},Kn.prototype.getLineIntersector =function (){return this._li;},Kn.prototype.hasProperIntersection =function (){return this._hasProper;},Kn.prototype.processIntersections =function (t,e,n,i)    {if (t ===n &&e ===                                                                                                    i)   return null;this.numTests++ ;var r =t.getCoordinates()[e],o =t.getCoordinates()   [e +1],s =n.                                                                                                                     getCoordinates()[i], a =n.getCoordinates()[i +1];this._li.computeIntersection(r,    o,  s,   a)  ,this.  _li.                                                                                                                      
                hasIntersection( )&&(this.numIntersections++ ,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++ ,this._hasInterior =!0),this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection =!0,t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1),this._li.isProper()&&(this.numProperIntersections++ ,this._hasProper =!0,this._hasProperInterior =!0)));},Kn.prototype.hasIntersection =function (){return this._hasIntersection;},Kn.prototype.isDone =function (){return !1;},Kn.prototype.hasInteriorIntersection =function (){return this._hasInterior;},Kn.prototype.interfaces_ =function (){return [Wn];},Kn.prototype.getClass =function (){return Kn;},Kn.isAdjacentSegments =function (t,e){return 1 ===Math.abs(t -e);};var Jn =function (){this.coord =null,this.segmentIndex =null,this.dist =null;var t =arguments[0],e =arguments[1],n =arguments[2];this.coord    =new C(t),this.segmentIndex =e,                                                    this. dist =  n;} ;Jn.prototype. getSegmentIndex =  function   () { return this.    segmentIndex;},Jn.                                                                                                                                                                                                                                                                                                              prototype.getCoordinate =function (){ return this.coord;}, Jn.prototype.print =     function (t)  { t.                                                                                       print(this.coord) ,t.print(" seg # = " +this.segmentIndex),t.println(" dist = "+this. dist);},Jn.prototype.compareTo =function (t){var e =t;return this. compare(e.segmentIndex,e.dist);},Jn.prototype.isEndPoint =function (t){return 0 ===this.segmentIndex &&0 ===this.dist ||this.segmentIndex ===t;},Jn.prototype.toString =function (){return this.             coord +   " seg # = " +this.segmentIndex +" dist = "+this.dist;},Jn.                                                                                                                                                                                                                     prototype.getDistance =function (){return this.dist;},Jn.prototype.compare =function (t,   e){return this.segmentIndex <t ?   -1 :this. segmentIndex > t ?1 :this. dist <e ? -1 :   this.dist >e ?1 :0;},Jn.prototype.     interfaces_                                                                                                                                                                                                                                                                                                                                                                                                      =function (){return [E];},Jn.prototype.getClass =function (){return Jn;};var Qn =    function (){this._nodeMap =new p(),this.edge =null;var t =arguments[0];this.edge =t;};Qn.prototype.print =function (t){t.println("Intersections:");for (var e =this.iterator( );e.   hasNext(); ){e.next().print(t);}},Qn.prototype.iterator =function (){return this._nodeMap.   values(  ). iterator( );},Qn. prototype.                                                                                                                                            addSplitEdges =function ( t){this.addEndpoints();for (var e =this.iterator(),n =e.next();e.hasNext();){var i =e.next() ,r =this.createSplitEdge(n,i);t.add(r),n =i;}},Qn.prototype.addEndpoints =function (){var t =this.edge.pts.length -1;this.add(this.edge.pts[0],0,0) ,this.add(this.edge.pts[t],t,0);},Qn.prototype.createSplitEdge =function (t,e){var n =e.segmentIndex -t.segmentIndex +2,i =this.edge.    pts[e.segmentIndex]                                                                               ,r =e.dist >0 ||!e.coord.equals2D(i);r ||n-- ;var o =new Array(n).fill(null),   s =0;o[s++ ]=new C(                                                                                                                                                                                                                                 t.coord);for (var a =t.segmentIndex +1; a <=e.segmentIndex;a++ ) o[s++ ]=this.      edge.    pts[a]                                                                           ;return r &&(o[s]=e. coord),new ni(o,new Pe(this.edge._label));},Qn.prototype.  add =function (t,e,                                                                                                              n){var i =new Jn(t,e,n),r =this._nodeMap.get(i);return null !==r ?r :(this._nodeMap.put(i,i),i);},Qn.prototype.isIntersection =function (t){for (var e =this.iterator();e.hasNext();){if ( e.next().coord.equals(t))return !0;}return !1;},Qn.prototype.interfaces_ = function (){return [];},Qn.prototype.getClass =function (){return Qn;};var Zn =function (){};Zn.            prototype.                                                                                                    getChainStartIndices  = function ( t){  var e  =0, n =new Nt();n.add( new  M(e) );do {var i  =this. findChainEnd(                                                                                                        t,e);n.add(new M(i)),e =i;} while ( e <t.length -1);return Zn.toIntArray(n);},    Zn.prototype.findChainEnd =                                                                                                                      
                function        (t,e){for (var n =Be.quadrant(t[e],t[e +1]), i =e +1;i <t.length;){if (Be.quadrant(t[i -1],t[i])!==n)break ;i++ ;}return i -1;},Zn.prototype.interfaces_ =function (){return [];},Zn.prototype.getClass =function (){return Zn;},Zn.toIntArray =function (t){for (var e =new Array(t.size()).fill(null),n =0;n <e.length;n++ )e[n]=t.get(n).intValue();return e;};var $n =function (){this.e =null,this.pts =null,this.startIndex =null,this.env1 =new j(),this.env2 =new j();var t =arguments[0];this.e =t,this.pts =t.getCoordinates();var e =new Zn();this.startIndex =e.getChainStartIndices(this.pts);};$n.prototype.getCoordinates =function (){return this.pts;},$n.prototype.getMaxX =function (t){var e =this.pts[this.startIndex[t]].x,n =this.pts[this.startIndex[t +1]].x;return e >n ?e :n;},$n.prototype.getMinX =function (t){var e =this.pts[this.startIndex[t]].x,n =        this.pts[this.startIndex[t +1]                                                     ].x;return e <n ?e :n;},$n.prototype.computeIntersectsForChain =function (){if (      4 === arguments.                                                                                                                                                                                                                                                                                                              length){var t =arguments[ 0],e =arguments[ 1] ,n =arguments[2] ,i =arguments[3]                 ;this.                                                                                       computeIntersectsForChain(this.startIndex[t],this.startIndex[t +1],e,e.startIndex[n],e.startIndex[n  +1],i) ;}else if (6 ===arguments.length){var r =arguments[0] ,o =arguments[1],s =arguments[2],a =arguments[3],u =arguments[4],l =arguments[5],c =this. pts[r], p = this.pts[o],h = s.pts[a],f =s.pts[u];if (o -r ==1 &&u -a ==1)return l.                  addIntersections(this.e,r,s.e,a),null;if (this.env1.init(c,p),this.env2.                                                                                                                                                                                                                     init(h, f),!this.env1.intersects( this.env2))return null;var g =Math.trunc((r  +o)/2),d =    Math.trunc((a +u)/2);r <g &&(a <    d &&this.computeIntersectsForChain(r,g,s,a,d,l), d <u &&this.computeIntersectsForChain(r,      g,                                                                                                                                                                                                                                                                                                                                                                                                            s,d,u,l)),g <o &&(a <d &&this.computeIntersectsForChain(g,o,s,a,d,l),d <u &&this.    computeIntersectsForChain(g,o,s,d,u,l));}},$n.prototype.getStartIndexes =function (){return this.startIndex;},$n.prototype.computeIntersects =function (t,e){for (var n =0;n <this.    startIndex. length  -1; n++ )for   ( var i  = 0;i  < t.startIndex. length  - 1;i++ )this.   computeIntersectsForChain(n,t,i,e);}                                                                                                                                               ,$n.prototype.interfaces_ =function (){return [];},$n.prototype.getClass =function (){return $n;};var ti =function t(){this._depth =Array(2).fill().map(function (){return Array(3);});for (var e =0;e <2;e++ )for (var n =0;n <3;n++ )this._depth[e][n]=t.NULL_VALUE;},ei ={NULL_VALUE:{configurable:!0 }};ti.prototype.getDepth =function (t,e){return this._depth[t][e];},ti.prototype.setDepth =function (t,    e,n){this._depth[t]                                                                               [e]=n;},ti.prototype.isNull =function (){if (0 ===arguments.length){for (var t  =0;t <2;t++ )for (                                                                                                                                                                                                                                  var e =0;e <3;e++ )if (this._depth[t][e]!==ti.NULL_VALUE)return !1;return !0;}  if (1 ===arguments.                                                                           length){var n =arguments[0];return this._depth[n][1]===ti.NULL_VALUE;}if (2 === arguments.length) {                                                                                                             var i =arguments[0],r =arguments[1];return this._depth[i][ r]===ti.NULL_VALUE;}},ti.prototype.normalize =function (){for (var t =0;t <2;t++ )if (!this.isNull(t)){var  e =this._depth[t][1];this._depth[t][2]<e &&(e =this._depth[t][2]),e  <0 &&(e =0);for (var n =1;n <3;n++ ) {var i =0;this._depth[t][n]>e &&(i =1),this._depth[t][n]=i;}}},ti.prototype.getDelta =       function  (t) {                                                                                                     return this. _depth[t] [Se. RIGHT] -this. _depth[t] [Se.LEFT];},ti.prototype. getLocation =  function (                                                                                                                 t,e){return this._depth[t][ e] <=0 ?w. EXTERIOR :  w.INTERIOR;}, ti.prototype.   toString  =  function ( ){                                                                                                                        
                 return "A: "   +this._depth[0][1]+","+this._depth[0][2]+" B: "+this._depth[1][1]+","+this._depth[1][2];},ti.prototype.add =function (){if (1 ===arguments.length)for (var t =arguments[0],e =0; e <2;e++ )for (var n =1;n <3;n++ ){var i =t.getLocation(e,n);i !==w.EXTERIOR &&i !==w.INTERIOR ||(this.isNull(e,n)?this._depth[e][n]=ti.depthAtLocation(i):this._depth[e][n]+=ti.depthAtLocation(i));}else if (3 ===arguments.length){var r =arguments[0],o =arguments[1];arguments[2]===w.INTERIOR &&this._depth[r][o]++ ;}},ti.prototype.interfaces_ =function (){return  [];},ti.prototype.getClass =function (){return ti;},ti.depthAtLocation =function (t){return t ===w.EXTERIOR ?0 :t ===w.INTERIOR ?1 :ti.NULL_VALUE;},ei.NULL_VALUE.get =function (){return (  -1);},Object.defineProperties(ti,ei);var ni =function (t){function e(){if (t.call(this),this.pts =null,this._env =null,this.       eiList =new Qn(this),this._name                                                     = null, this._mce  =null,this._isIsolated = !0, this._depth   = new  ti( ),this.    _depthDelta  =0, 1                                                                                                                                                                                                                                                                                                               ===arguments.length){var n =arguments[0];e.call(this,n,null);}else  if (2  ===    arguments.length){                                                                                        var i =arguments[0],r =arguments[1];this.pts =i,this._label =r;}}return t &&(e.                                                                                                                                                                                                                                                                          __proto__ =  t) ,e.prototype =Object.create(t &&t. prototype) , e. prototype.                                                                                                                                                                                                                       constructor =e,  e.prototype. getDepth =function ( ){return  this._depth;}, e.prototype.   getCollapsedEdge =function (){var t      =new Array(2) .fill(null);t[ 0] =this.pts[0],t[ 1]= this.  pts[ 1] ;return new e(t,Pe.      toLineLabel(                                                                                                                                                                                                                                                                                                                                                                                                  this._label));},e.prototype.isIsolated = function (){return this._isIsolated;},e.   prototype.getCoordinates =function (){return this.pts;},e.prototype.setIsolated =function (t){this._isIsolated = t;},e.prototype.setName =function (t){  this._name =t;},e.prototype.    equals =function (t){if (!(t instanceof e))return !1;var n =t;if ( this. pts.length !==n.   pts.length)return !1;for (var i                                                                                                                                                   =!0,r =!0,o =this.pts.length,s =0;s <this.pts.length;s++ )if (this.pts[s].equals2D(n.pts[s])||(i =!1),this.pts[s].equals2D(n.pts[ --o])||(r =!1),!i &&!r)return !1;return !0;},e.prototype.getCoordinate =function (){if (0 ===arguments.length)return this.pts.length >0 ?this.pts[0]:null;if (1 ===arguments.length){var t =arguments[0];return this.pts[t];}},e.prototype.print =function (t){t.print("edge "    +this._name +": "),                                                                               t.print("LINESTRING (");for (var e =0;e <this.pts.length;e++ )e >0 &&t.print(   ","),t.print(this.                                                                                                                                                                                                                                  pts[ e].x +" "+this.pts[e].y);t.print(")  "+this._label +" "+this._depthDelta)  ;},  e.  prototype.                                                                           computeIM =function (t){e.updateIM(this. _label,t);},e.prototype.isCollapsed =   function  (  )   {                                                                                                           return !!this._label.isArea()&&3 ===this.pts.length &&!!this.pts[0].equals(this.pts[2]);},e.prototype.isClosed =function (){return this.pts[0].equals(this.pts[this.pts.length -1]);},e.prototype.getMaximumSegmentIndex =function (){return this.pts.length -1;},e.prototype.getDepthDelta =function (){return this._depthDelta;},e.prototype.getNumPoints =function (){    return this.  pts.                                                                                                     length;} ,e.prototype.printReverse =function (t){t.print("edge "+this._name +": ");for (   var  e  =                                                                                                                   this.pts.length - 1;e >=0;e--  ) t.print(this.pts[e]+" ") ;t.println("") ;}, e.                   prototype.                                                                                                                        
                 getMonotoneChainEdge =function (){return null ===this._mce &&(this._mce =new $n(this)),this._mce;},e.prototype.getEnvelope =function (){if (null ===this._env){this._env =new j();for (var t =0;t <this.pts.length;t++ )this._env.expandToInclude(this.pts[t]);}return this._env;},e.prototype.addIntersection =function (t,e,n,i){var r =new C(t.getIntersection(i)),o =e,s =t.getEdgeDistance(n,i),a =o +1;if (a <this.pts.length){var u =this.pts[a];r.equals2D(u)&&(o =a,s =0);}this.eiList.add(r,o,s);},e.prototype.toString =function (){var t =new D();t.append("edge "+this._name +": "),t.append("LINESTRING (");for (var e =0;e <this.pts.length;e++ )e >0 &&t.append(","),t.append(this.pts[e].x +" "+this.pts[e].y);return t.append(")  "+this._label +" "+this._depthDelta),t.toString();},e.prototype.isPointwiseEqual =function (t){if (this.pts.length !==t.pts.length)return !1;for (var e =0;e <this.pts.length;e++ )if (!                                                    this.pts[e].equals2D(t.pts[e]))return !1;return !0;},e.prototype.setDepthDelta =    function (t){this.                                                                                                                                                                                                                                                                                                              _depthDelta =t;},e.prototype.getEdgeIntersectionList =function ( ){return this.         eiList;},   e.                                                                                       prototype.addIntersections   = function   (  t,e,n)   {for  (var i = 0;  i < t.                                                                                                                                                                                                                                                                getIntersectionNum();i++ )this.addIntersection(t,e,n, i);}, e. prototype.interfaces_ =                                                                                                                                                                                                                      function (){return [];},e.prototype.getClass =function (){return e;},e.updateIM =function    ()  { if  (2  !==  arguments.length)     return t.prototype.updateIM.apply(this,arguments);var e =arguments[0],n =arguments[1];n.     setAtLeastIfValid(                                                                                                                                                                                                                                                                                                                                                                                           e.getLocation(0,Se.   ON)  , e. getLocation( 1,Se.ON)  , 1) ,  e. isArea()&& ( n.   setAtLeastIfValid(e. getLocation(0,Se.LEFT),e.getLocation(1,Se.LEFT),2),n.setAtLeastIfValid(e.getLocation(0,Se.RIGHT),e.getLocation(1, Se.RIGHT), 2));},e;}(Fe),ii =function (t){this.   _workingPrecisionModel =null, this._workingNoder =null,this._geomFact =null,this._graph =    null,this._edgeList  =new                                                                                                                                                        Hn() ,this._bufParams =t ||null;};ii.prototype.setWorkingPrecisionModel =function (t){this._workingPrecisionModel =t;},ii.prototype.insertUniqueEdge =function (t){var e =this._edgeList.findEqualEdge(t);if (null !==e){var  n =e.getLabel(),i =t.getLabel() ;e.isPointwiseEqual(t)||(i =new Pe(t.getLabel())).flip(), n.merge(i);var r =ii.depthDelta(i),o =e.getDepthDelta()+r;e.setDepthDelta(o);}else this.    _edgeList.add(t),t.                                                                               setDepthDelta(ii. depthDelta(t.getLabel() ) );},ii.prototype.buildSubgraphs =   function (t,e){for (                                                                                                                                                                                                                                var n =new Nt(  ),i = t.iterator();i. hasNext( ) ;  ) {var   r =i.next(),o =r.  getRightmostCoordinate(                                                                       ) ,s =new An(n).getDepth(o);r.computeDepth(s),r. findResultEdges(),n.add(r),e.     add(          r.                                                                                                           getDirectedEdges(),r.getNodes());}},ii.prototype.createSubgraphs =function (t){for (var e =new Nt(),n =t.getNodes().iterator();n.hasNext();){var i =n.next();if (!i.isVisited()){var r =new Te();r.create(i),e.add(r);}}return $e.sort(e,$e.reverseOrder()),e;},ii.prototype.createEmptyResultGeometry =function (){return this._geomFact.createPolygon();},ii.prototype.    getNoder =function                                                                                                      (t)     {if (null !==this._workingNoder)return this._workingNoder;var e =new xn(),n =    new rt(   )                                                                                                                   ;return n.setPrecisionModel(t), e.setSegmentIntersector(new Kn( n) ),e;},ii.    prototype.buffer =function                                                                                                                         
                 (t,e){var       n =this._workingPrecisionModel;null ===n &&(n =t.getPrecisionModel()),this._geomFact =t.getFactory();var i =new Mn(n,this._bufParams),r =new Bn(t,e,i).getCurves();if (r.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(r,n),this._graph =new Ye(new kn()),this._graph.addEdges(this._edgeList.getEdges());var o =this.createSubgraphs(this._graph),s =new ke(this._geomFact);this.buildSubgraphs(o,s);var a =s.getPolygons();if (a.size()<=0)return this.createEmptyResultGeometry();return this._geomFact.buildGeometry(a);},ii.prototype.computeNodedEdges =function (t,e){var n =this.getNoder(e);n.computeNodes(t);for (var i =n.getNodedSubstrings().iterator();i.hasNext();){var r =i.next(),o =r.getCoordinates();if (2 !==o.length ||!o[0].equals2D(o[1])){var s =r.getData(),a =new ni(r.getCoordinates(),new Pe(s));this.insertUniqueEdge(a);}}}        ,  ii.  prototype. setNoder =                                                      function  ( t){this._workingNoder =t;},ii.prototype.interfaces_  =function   (){    return  [  ];} ,ii.                                                                                                                                                                                                                                                                                                             prototype.getClass =function (){return ii;},ii.depthDelta =function (t){var e =    t. getLocation( 0,                                                                                        Se.LEFT),n =t.getLocation(0,Se.RIGHT);return e ===w.INTERIOR &&n ===w.EXTERIOR ?                                                                                                                                                                                                                                             1 :e ===w.EXTERIOR &&n ===w.INTERIOR ? -1 :0;},ii.convertSegStrings =function (t){for (var e =new _e(                                                                                                                                                                                                                        ),n =new Nt();t.hasNext();){var i =t.next(),r =e.createLineString(i.getCoordinates());n.    add(r);}return e. buildGeometry(n);};var    ri =function (){if (this. _noder =null,this._scaleFactor =null,this._offsetX =null,this.     _offsetY                                                                                                                                                                                                                                                                                                                                                                                                    =null,this._isScaled =!1,2 ===arguments.length){var t =arguments[0],e =arguments[   1];this._noder =t,this._scaleFactor =e,this._offsetX =0,this._offsetY =0,this._isScaled =!this.isIntegerPrecision();}else if (4 ===arguments.length){var n =arguments[0],i =arguments[    1],r =arguments[2],o =arguments[3];this._noder =n,this._scaleFactor  =i,this._offsetX =r,     this. _offsetY =o,                                                                                                                                                             this._isScaled =!this.isIntegerPrecision();}};ri.prototype.rescale =function (){if (T(arguments[0],It))for (var t =arguments[0].iterator();t.hasNext();){var e =t.next();this.rescale(e.getCoordinates());}else if (arguments[0]instanceof Array){for (var n =arguments[0],i =0;i <n.length;i++ )n[i].x =n[i].x /this._scaleFactor +this._offsetX,n[i].y =n[i].y /this._scaleFactor +this._offsetY;2 ===n.length    &&n[0]. equals2D(n[                                                                               1])&&Y.out.println(n) ;}},ri.prototype.scale =function (){if (T(arguments[0],   It)) {for (var t =                                                                                                                                                                                                                                  arguments[0],e =new Nt(),n =t.iterator();n.hasNext();){var  i =n.next();e.add(  new gn(this. scale(                                                                           i.getCoordinates()),i.getData()));}return e;}if (arguments[0]instanceof Array)    { for  (var r   =                                                                                                         arguments[0],o =new Array(r.length).fill(null),s =0;s <r.length;s++ )o[s]=new C(Math.round(( r[s].x -this._offsetX)*this._scaleFactor),Math.round((r[s].y -this._offsetY)*this._scaleFactor),r[s].z);return Lt.removeRepeatedPoints(o);}},ri.prototype.isIntegerPrecision =function (){return 1 ===this._scaleFactor;},ri.prototype.getNodedSubstrings =function (){var t =        this.  _noder.                                                                                                      getNodedSubstrings( ) ;return  this. _isScaled &&this. rescale(t),t;},ri.prototype.computeNodes = function  (                                                                                                        t){var e =t;this._isScaled &&(e =this.scale(t)),this._noder.computeNodes(e);},   ri.prototype.interfaces_  =                                                                                                                         
                  function       (){return [In];},ri.prototype.getClass =function (){return ri;};var oi =function (){this._li =new rt(),this._segStrings =null;var t =arguments[0];this._segStrings =t;},si ={fact:{configurable:!0  }};oi.prototype.checkEndPtVertexIntersections =function (){if (0 ===arguments.length)for (var t = this._segStrings. iterator();t.hasNext();){var e =t.next().getCoordinates();this.checkEndPtVertexIntersections(e[0],this. _segStrings),this.checkEndPtVertexIntersections(e[e.length -1],this._segStrings);}else if (2 ===arguments.length)for (var n =arguments[0] ,i =arguments[1].iterator(); i.hasNext();)for (var r =i.next().getCoordinates(),o =1;o <r.length -1;o++ )if (r[o].equals(n))throw new $("found endpt/interior pt intersection at index "+o +" :pt "+n);},oi.prototype.checkInteriorIntersections =function (){if (0 ===arguments. length)for (var t = this.        _segStrings.iterator(   );  t.                                                     hasNext();)for (var e =t.next(),n =this._segStrings.iterator();n.hasNext();){var    i =n.next() ;this.                                                                                                                                                                                                                                                                                                              checkInteriorIntersections(e,i);} else if  ( 2 ===arguments.length)for (var r =    arguments[  0],o  =                                                                                       arguments[1],s =r.getCoordinates(),a =o.getCoordinates(),u =0;u  <s. length -1;    u++ )for (var l =0;l <a.length -1;l++ )this.checkInteriorIntersections(r,u,o,l);else if (4 ===arguments.length){ var c =arguments[0],p =arguments[1],h =arguments[2],f =arguments[3];if (c ===h &&p ===f)return null;var g =c.getCoordinates()[p],d =c.getCoordinates()[p +1], y =h.getCoordinates()[f],_ =h.getCoordinates()[f +1];if (this.                                                                                                                                                                                                                         _li.computeIntersection(g,d,y,_),this._li.hasIntersection() &&(this._li.isProper()||this.    hasInteriorIntersection( this._li,g,d)||      this. hasInteriorIntersection(    this.       _li,    y, _))     )   throw   new     $(     "found non-noded intersection at "                                                                                                                                                                                                                                                                                                                                                                         + g +  "-" +d + " and " +y +"-"+_);}},oi.prototype.checkValid  =function (){this.   checkEndPtVertexIntersections( ), this.checkInteriorIntersections() ,  this.checkCollapses() ;}, oi.prototype.checkCollapses = function (){if (0 ===arguments.length)for (var  t =this.    _segStrings.iterator();t. hasNext();){var e =t.next();this.checkCollapses(e);}else if (1     === arguments.                                                                                                                                                                 length)for (var  n = arguments[0].getCoordinates(),i =0;i < n.length -2;i++ )this. checkCollapse(n[i],n[i +1], n[ i +2]);} , oi.prototype.hasInteriorIntersection = function (t,e,n){for   (var i =0; i <t. getIntersectionNum();  i++ ) { var   r =t.getIntersection(i);if (!r. equals(e)&&! r.equals(n)) return !0;}return  !1;},oi.prototype.checkCollapse =function  (t, e,n){if (t.equals(  n))throw new $(    "found non-noded collapse at "                                                                    +oi.fact.createLineString([t,e,n])) ;},oi.prototype.interfaces_ =function (){    return [];} , oi.                                                                                                                                                                                                                                   prototype. getClass =function  () {return oi;},si.fact.get  =function  (  ) {   return new _e();},                                                                           Object.defineProperties(oi,si);var ai =function ( ){this._li =null,this. _pt =      null,     this.                                                                                                        _originalPt = null,this._ptScaled = null,this._p0Scaled =null,this._p1Scaled =null,this._scaleFactor =null,this._minx =null,this._maxx =null,this._miny =null,this._maxy =null,this._corner =new Array(4).fill(null),this._safeEnv =null;var t =arguments[ 0],e =arguments[1],n =arguments[2] ;if (this._originalPt =t,this. _pt =t,this._scaleFactor =e,this._li = n,e <=0)        throw  new  m(                                                                                                      "Scale factor must be non-zero" );1 !==e &&(this._pt  =new C(this. scale(t.x),this.scale(t.y)),this._p0Scaled =  new C(  ),                                                                                         this._p1Scaled   =   new C(  ))  , this. initCorners(  this. _pt)  ;} , ui   ={  SAFE_ENV_EXPANSION_FACTOR:{                                                                                                                          
                  configurable:   !0 }};ai.prototype.intersectsScaled =function (t,e){var n = Math.min(t.x,e.x), i =Math.max(t.x,e.x),r =Math.min(t.y,e.y),o =Math.max(t.y,e.y),s =this._maxx <n ||this._minx >i ||this._maxy <r ||this._miny >o;if (s)return !1;var a =this.intersectsToleranceSquare(t,e);return et.isTrue(!(s &&a),"Found bad envelope test"),a;},ai.prototype.initCorners =function (t){this._minx =t.x -.5,this._maxx =t.x +.5,this._miny =t.y -.5,this._maxy =t.y +.5,this._corner[0]=new C(this._maxx,this._maxy),this._corner[1]=new C(this._minx,this._maxy),this._corner[2]=new C(this._minx,this._miny),this._corner[3]=new C(this._maxx,this._miny);},ai.prototype.intersects =function (t,e){return 1 ===this._scaleFactor ?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled));},ai.         prototype.scale =function (t){                                                      return Math.round(t *this._scaleFactor);},ai.prototype.getCoordinate =function (      ){return   this.                                                                                                                                                                                                                                                                                                              _originalPt;},ai.prototype.copyScaled =function (t,e){e.x =this.scale(t.x),e.y =   this.scale(t.y);} ,                                                                                       ai.prototype.getSafeEnvelope =function (){if (null ===this._safeEnv){var t =ai.    SAFE_ENV_EXPANSION_FACTOR /this._scaleFactor;this._safeEnv =new j(this._originalPt.x -t,this._originalPt.x +t,this._originalPt.y -t,this._originalPt.y +t);}return this._safeEnv;},ai.prototype.intersectsPixelClosure =function (t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.hasIntersection(                                                                                                                                                                                                                          ) ||(this._li.computeIntersection( t,e, this._corner[1], this. _corner[2] ),!!this. _li.          hasIntersection()    ||  (  this. _li.    computeIntersection(t,e,this._corner[2],this._corner[3]),!! this._li.hasIntersection()||(    this.                                                                                                                                                                                                                                                                                                                                                                                                     _li.computeIntersection( t,e,this._corner[  3] , this._corner[0]) , !!this.  _li.   hasIntersection())));},ai.prototype.intersectsToleranceSquare =function (t,e) {var  n =!1,i  = ! 1;return this._li.computeIntersection(t,e,this. _corner[0],this._corner[1]),!!this._li.   isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.   isProper()||                                                                                                                                                                     (this._li.hasIntersection() &&(n =!0),this._li.computeIntersection( t,e, this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&& (i =!0), this._li.computeIntersection(t,e,this._corner[ 3] ,this._corner[0]),!!this._li.isProper()|| !( !n  ||!i)||!!t.equals(this._pt) ||!!e.equals(this._pt))));},ai.prototype.addSnappedNode =function (t,e){var n =t.getCoordinate(e),i =t.    getCoordinate(e +1)                                                                               ;return !!this.intersects(n,i)&&( t.addIntersection(this.getCoordinate(),e),!   0);},ai.prototype.                                                                                                                                                                                                                                  interfaces_ =function (){return [];}   ,ai.prototype. getClass  =function () {    return ai;} , ui.                                                                           SAFE_ENV_EXPANSION_FACTOR.  get   =  function   (){ return  .75;} ,    Object.    defineProperties(                                                                                                        ai,ui);var li =function (){ this.tempEnv1 =new j(),this.selectedSegment =new dn();};li.prototype.select =function  (){if (1 ===arguments.length);else if (2 ===arguments.length){var t =arguments[0],e =arguments[1];t.getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment);}},li.prototype.interfaces_ =function (){return [];},li.prototype.getClass =     function   ( )  {                                                                                                       return li;} ;var ci =function (){this._index =null;var t =arguments[0];this._index =t;},pi     =     {                                                                                                             HotPixelSnapAction:{configurable:!0 }};ci.prototype.snap =function (){if (1 ===  arguments.length){ var t  =                                                                                                                          
                  arguments[      0];return this.snap(t,null, -1);}if (3 ===arguments.length){var e =arguments[0],n =arguments[1],i =arguments[2],r =e.getSafeEnvelope(),o =new hi(e,n,i);return this._index.query(r,{interfaces_:function (){return [Ke];},visitItem:function (t){t.select(r,o);}}),o.isNodeAdded();}},ci.prototype.interfaces_ =function (){return [];},ci.prototype.getClass =function (){return ci;},pi.HotPixelSnapAction.get =function (){return hi;}, Object.defineProperties(ci,pi);var hi =function (t){function e(){t.call(this),this._hotPixel =null,this._parentEdge = null,this._hotPixelVertexIndex =null,this._isNodeAdded = !1;var e =arguments[0],n  =arguments[1],i =arguments[2];this._hotPixel =e,this._parentEdge =n,this._hotPixelVertexIndex =i;}return t &&(e.__proto__ =t),e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e.prototype.isNodeAdded =          function    (){ return  this.                                                        _isNodeAdded;},e.prototype.select =  function   (){if ( 2 !==arguments.length)        return      t.                                                                                                                                                                                                                                                                                                              prototype.select.apply(this,arguments);var e =arguments[0], n =arguments[1],i =    e.getContext();if (                                                                                        null !==  this. _parentEdge   && i   ===  this.   _parentEdge  && n ===  this.    _hotPixelVertexIndex)return  null;this._isNodeAdded =this._hotPixel.addSnappedNode(i,n);},e.prototype.interfaces_ =function (){return [];},e.prototype.getClass =function (){return e;},e;}(li),fi =function (){this._li =null,this._interiorIntersections =null;var t =arguments[0];this._li =t,this._interiorIntersections =new Nt();}                                                                                                                                                                                                                           ;fi.prototype.processIntersections =function (t,e,n,i){if (t ===n &&e ===i)return null;var   r =t.getCoordinates()[e],o =t.getCoordinates()   [e +  1],  s =n.getCoordinates(   )[i],a =n. getCoordinates(  )  [ i +1]  ;if ( this. _li.    computeIntersection(                                                                                                                                                                                                                                                                                                                                                                                     r,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for (var u  =0;u <this._li.getIntersectionNum();u++ )this._interiorIntersections.add(this. _li.getIntersection(u));t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1);}},fi.prototype.    isDone  =function () {return  ! 1;},fi.prototype.getInteriorIntersections =function  (){     return this.                                                                                                                                                                 _interiorIntersections;},fi.prototype.interfaces_ =function (){return [Wn];},fi.prototype.getClass  =function (){return fi;};var gi =function (){this._pm =null,this._li  =null,this._scaleFactor =null,this._noder =null,this._pointSnapper =null,this._nodedSegStrings =null;var t =arguments[0];this._pm =t,this. _li =new rt(),this._li.setPrecisionModel(t),this._scaleFactor =t.getScale();};gi.prototype.    checkCorrectness  =                                                                               function (t){var e =gn.getNodedSubstrings(t),n =new oi(e);try {n.checkValid()   ;}catch (t){if (!(t                                                                                                                                                                                                                                 instanceof z))throw t;t.printStackTrace();}},gi.prototype.getNodedSubstrings =   function    (   ){                                                                           return gn.getNodedSubstrings(this._nodedSegStrings);},gi.prototype.snapRound =  function (t,e){var n                                                                                                     =this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t);},gi.prototype.findInteriorIntersections =function (t,e){var n =new fi(e);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(t),n.getInteriorIntersections();},gi.prototype.computeVertexSnaps =function (){if (T(arguments[0],It))for (var t =arguments[0]      .iterator(  );t.                                                                                                        hasNext( ); ){var e =t. next();this.computeVertexSnaps( e)  ;}else   if ( arguments[0]    instanceof                                                                                                              gn)for (var n =arguments[0],i =n.getCoordinates(),r =0;r <i.length;r++ ){var o     =  new  ai(i[ r] , this.                                                                                                                           
                  _scaleFactor,   this._li);this._pointSnapper.snap(o,n,r)&&n.addIntersection(i[r],r);}},gi.prototype.computeNodes =function (t){this._nodedSegStrings =t,this._noder = new xn( ),this._pointSnapper =new ci(this. _noder.getIndex( )),this.snapRound(t,this._li);},gi.prototype.computeIntersectionSnaps =function (t){for (var e =t. iterator();e.hasNext();){var n =e.next(),i =new ai(n,this._scaleFactor,this._li);this._pointSnapper.snap(i);}},gi.prototype.interfaces_ =function ( ){return [In];},gi.prototype.getClass =function (){return gi;};var di =function (){if (this._argGeom =null,this._distance =null,this._bufParams =new Cn(),this._resultGeometry =null,this._saveException =null,1 ===arguments.length){var t =arguments[0];this._argGeom =t;}else if (2 ===arguments.  length){var e =arguments[0],n =arguments[1];this._argGeom =e,this._bufParams =n;}},yi ={CAP_ROUND:{       configurable: ! 0  } ,CAP_BUTT:{                                                       configurable:! 0 },CAP_FLAT:{configurable:!0 }, CAP_SQUARE: {configurable:!0 },    MAX_PRECISION_DIGITS:                                                                                                                                                                                                                                                                                                           {configurable: !0 }};di.prototype.bufferFixedPrecision =function (t){var e =new    ri(new gi(new fe(1)                                                                                       ),t.getScale()),n =new ii( this._bufParams) ;n.setWorkingPrecisionModel(t) , n.    setNoder(e),this._resultGeometry =n.buffer(this._argGeom,this._distance);},di.prototype.bufferReducedPrecision =function (){var t =this;if  (0 ===arguments.length){for (var e =di.MAX_PRECISION_DIGITS;e  >=0;e-- ){try {t. bufferReducedPrecision(e);}catch (e){if (! (e instanceof we)) throw e;t._saveException =e;}if (null !==t.                                                                                                                                                                                                                             _resultGeometry)return null;}throw this._saveException;}if (1 ===arguments.length){var n     =arguments[0],i =di.precisionScaleFactor( this.     _argGeom,this._distance,n) ,r =new fe(i);this.bufferFixedPrecision(r);}} , di.prototype.     computeGeometry                                                                                                                                                                                                                                                                                                                                                                                        =function (){if  ( this. bufferOriginalPrecision(), null !==this._resultGeometry)   return null;var t =this._argGeom.getFactory().getPrecisionModel() ;t.getType()===fe.FIXED ?this.bufferFixedPrecision(t):this.bufferReducedPrecision();},di.prototype.setQuadrantSegments =   function (t){this._bufParams.setQuadrantSegments(t);},di.prototype.bufferOriginalPrecision          =                                                                                                                                                                     function (){ try {var t =new ii(this._bufParams);this._resultGeometry =t.buffer(this._argGeom,this._distance);}catch (t){if ( !(t instanceof $))throw t;this._saveException =t;}},di.prototype.getResultGeometry =function (t){return this._distance  =t,this.computeGeometry(), this._resultGeometry;},di.prototype.setEndCapStyle =function (t){this._bufParams.setEndCapStyle(t);},di.prototype.interfaces_ =    function   (    ) {                                                                               return [];},di.prototype.getClass =function ()  {return  di;},di. bufferOp  =   function (){ if (2                                                                                                                                                                                                                                  ===arguments.length){ var t =arguments[0],e =arguments[1] ;return new  di( t).   getResultGeometry(                                                                           e);}if (3 ===arguments.length){if (Number. isInteger(arguments[2])&&arguments[  0]instanceof ct  &&                                                                                                     "number"==typeof arguments[1]){var n =arguments[0],i = arguments[1],r =arguments[2],o =new di(n);o.setQuadrantSegments(r);return o.getResultGeometry(i);} if (arguments[2]instanceof Cn &&arguments[0]instanceof  ct &&"number"==typeof arguments[1]){var s =arguments[0],a =arguments[1] ,u =arguments[ 2];return new di(s,u).getResultGeometry(a);} }else if (4 ===arguments.    length){ var  l  =                                                                                                        arguments[ 0]  ,c  =arguments[1],p =arguments[2] , h  =arguments[ 3] ,f = new di( l)  ;f. setQuadrantSegments(                                                                                                  p),f.setEndCapStyle(h);return f.getResultGeometry(c);}},di.precisionScaleFactor   =function (t,e,n){ var i =                                                                                                                            
                          t.      getEnvelopeInternal(),r =R.max(Math.abs(i.getMaxX()),Math.abs(i.getMaxY()),Math.abs(i.getMinX()),Math.abs(i.getMinY()))+2 *(e >0 ?e :0),o =n -Math.trunc(Math.log(r)/Math.log(10)+ 1);return Math.pow(10,o);},yi.CAP_ROUND.get =function (){return Cn.CAP_ROUND;},yi.CAP_BUTT.get =function (){return Cn.CAP_FLAT;},yi.CAP_FLAT.get =function (){return Cn.CAP_FLAT;},yi.CAP_SQUARE.get =function (){return Cn.CAP_SQUARE;},yi.MAX_PRECISION_DIGITS.get =function (){return 12;},Object.defineProperties(di,yi);var _i =function (){this._pt =[new C(),new C()],this._distance =v.NaN,this._isNull =!0;};_i.prototype.getCoordinates =function (){return this._pt;},_i.prototype.getCoordinate =function (t){return this._pt[t];},_i.prototype.setMinimum =function (){if (1 ===arguments.length){var t =arguments[0];this.setMinimum(t._pt[0],t._pt[1]);}else if (2 ===arguments.       length){var e =arguments[0],n =                                                        arguments[1];if ( this._isNull) return  this.  initialize(e,n),null;var i   =e.    distance( n);i   <                                                                                                                                                                                                                                                                                                              this._distance &&this.initialize(e,n,i);}},_i.prototype.initialize =function ()      {  if  (  0   ===                                                                                       arguments.  length)this._isNull  = !0;else if (2  ===arguments.length){var  t =    arguments[0],e = arguments[1];this._pt[0].setCoordinate(t) ,this._pt[1].setCoordinate(e),this._distance =t.distance(e),this._isNull =!1;}else if ( 3 ===arguments.length){var n =arguments[0],i =arguments[1],r =arguments[ 2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(i),this._distance =r,this._isNull = !1;}},_i.                                                                                                                                                                                                                               prototype.getDistance  =function () {return this._distance;},_i.  prototype.setMaximum =   function (){ if  (1 ===arguments. length) {var t  =    arguments[0];this.setMaximum(t._pt[0],t._pt[1]);}else if (2  ===arguments.length){var e =     arguments[                                                                                                                                                                                                                                                                                                                                                                                            0],n =arguments[  1];if (this._isNull)return this.initialize(e,n),null;var i  =e.   distance(n);i >this._distance &&this.initialize(e,n,i) ;}},_i.prototype.interfaces_ =function ( ){return [];},_i.prototype.getClass =function (){return _i;};var   mi =function () { };mi.     prototype.interfaces_ =function  ( ){return [];} , mi.prototype. getClass = function (){    return mi;}                                                                                                                                                                 ,mi.computeDistance =function (){if (arguments[2]instanceof _i &&arguments[0]instanceof Kt &&arguments[1]instanceof C)for (var t =arguments[0],e =arguments[1],n =arguments[2],i =t.getCoordinates(),r =new dn(),o =0;o <i.length -1;o++ ){r.setCoordinates(i[o],i[o +1]);var s =r.closestPoint(e);n.setMinimum(s,e);}else if (arguments[2]instanceof _i &&arguments[0]instanceof $t &&arguments[1]instanceof C)     {var a =arguments[                                                                               0],u =arguments[1],l =arguments[2] ;mi.computeDistance(a.getExteriorRing(),u,   l);for (var c =0;c                                                                                                                                                                                                                                  <a.getNumInteriorRing();  c++ )mi.computeDistance(a.getInteriorRingN(c),u,l);}  else if (arguments[                                                                           2]instanceof _i &&arguments[0]instanceof ct &&arguments[1]instanceof C){var p = arguments[ 0] ,h  =                                                                                                    arguments[1],f =arguments[2];if (p instanceof Kt)mi.computeDistance(p,h,f);else if (p instanceof $t)mi.computeDistance(p,h,f);else if (p instanceof zt)for (var g =p,d =0;d <g.getNumGeometries();d++ ){var y =g.getGeometryN(d);mi.computeDistance(y,h,f);}else f.setMinimum(p.getCoordinate(),h);} else if (arguments[2]instanceof _i &&arguments[0]instanceof dn &&arguments[    1] instanceof C) {                                                                                                         var _   =arguments[  0],m  = arguments[  1],v =arguments[ 2], I =_. closestPoint(m);v.   setMinimum(                                                                                                           I,m);}};var vi =function ( t){this._maxPtDist =new  _i(),this._inputGeom =t  ||        null;}  ,  Ii   =   {                                                                                                                            
                   MaxPointDistanceFilter: {configurable:!0 },MaxMidpointDistanceFilter:{configurable:!0 }};vi.prototype.computeMaxMidpointDistance =function (t){var e =new xi(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance());},vi.prototype.computeMaxVertexDistance =function (t){var e =new Ei(this._inputGeom);t.apply(e),this. _maxPtDist.setMaximum(e.getMaxPointDistance());},vi.prototype.findDistance  =function (t){return this.computeMaxVertexDistance(t),this.computeMaxMidpointDistance(t),this._maxPtDist.getDistance();},vi.prototype.getDistancePoints =function (){return this._maxPtDist;},vi.prototype.interfaces_ =function (){return [];},vi.prototype.getClass =function (){return vi;},Ii.MaxPointDistanceFilter.get =function (){return Ei;},Ii.MaxMidpointDistanceFilter.get =function () {return xi;},Object.defineProperties(vi,Ii);var Ei =function (t){this.    _maxPtDist =new _i( ),  this.                                                    _minPtDist =new _i(),this._geom =t ||null;};Ei.  prototype.filter =function (t){     this.  _minPtDist.                                                                                                                                                                                                                                                                                                             initialize(),mi.computeDistance(this._geom,t,this._minPtDist), this._maxPtDist.      setMaximum( this.                                                                                        _minPtDist) ;} , Ei.prototype.getMaxPointDistance =function ()  { return this.    _maxPtDist;},Ei.prototype.interfaces_ =function (){return [ft];},Ei.prototype.getClass =function (){return Ei;};var xi =function (t){this._maxPtDist =new _i(),this._minPtDist =new _i(),this._geom =t ||null;};xi.prototype.filter =function (t,e){if (0 ===e)return null;var n =t.getCoordinate(e -1),i =t.getCoordinate(e),r =                                                                                                                                                                                                                               new C((n.x +i.x)/2,(n.y  +i.y) /2);this._minPtDist.initialize(),mi. computeDistance(this.     _geom,  r,this. _minPtDist) ,this.      _maxPtDist.    setMaximum(this._minPtDist);},xi.prototype. isDone =function (){return !1;},xi.prototype.     isGeometryChanged                                                                                                                                                                                                                                                                                                                                                                                      =function  ()  { return !1;}, xi.  prototype.getMaxPointDistance =function  (){   return this._maxPtDist;},xi.prototype.interfaces_ =function (){return [Ut];}  ,xi.prototype.getClass =function (){return xi;};var Ni = function (t){this._comps = t ||null;};Ni. prototype.    filter =function (t){t instanceof $t && this._comps.add(t);}  , Ni.prototype.interfaces_ =   function                                                                                                                                                                   (){return [Vt];},Ni.prototype.getClass =function (){return Ni;},Ni.getPolygons =function (){if (1 ===arguments.length){var t =arguments[0];return Ni.getPolygons(t,new Nt());}if (2 ===arguments.length){var e =arguments[0],n =arguments[1];return e instanceof $t ?n.add(e):e instanceof zt &&e.apply(new Ni(n)),n;}};var Ci =function (){if (this._lines =null,this._isForcedToLineString =!1,1 ===arguments.    length){ var  t   =                                                                               arguments[0];this._lines  = t;} else  if  (2 ===arguments.length) {  var  e =    arguments[0] ,n =                                                                                                                                                                                                                                  arguments[1] ;this._lines = e,this.  _isForcedToLineString =n;}};Ci.prototype.  filter = function (                                                                           t){if (this. _isForcedToLineString &&t instanceof ee){ var e =t.getFactory() .  createLineString(t.                                                                                                   getCoordinateSequence());return this. _lines.add(e),null;}t instanceof Kt &&this._lines.add(t);},Ci.prototype.setForceToLineString = function ( t){this._isForcedToLineString =t;}, Ci.prototype.interfaces_ =function (){return [lt];},Ci. prototype.getClass  = function () {return Ci;},Ci. getGeometry =function (){if (1 ===arguments.length){var  t =arguments[0];return t.     getFactory()    .                                                                                                         buildGeometry( Ci.getLines(t));}if (2 === arguments.length){var e =arguments[0],n =arguments[          1]                                                                                                      ;return  e. getFactory().buildGeometry(Ci. getLines(e,n) );} },Ci. getLines =    function   (){ if  ( 1 ===                                                                                                                             
                   arguments.       length){var t =arguments[0];return Ci.getLines(t,!1);}if (2 ===arguments.length){if (T(arguments[0],It)&&T(arguments[1],It)){for (var e =arguments[0],n =arguments[1],i =e.iterator();i.hasNext();){var r =i.next();Ci.getLines(r,n);}return n;}if (arguments[0]instanceof ct &&"boolean"==typeof arguments[1]){var o =arguments[0],s =arguments[1],a =new Nt();return o.apply(new Ci(a,s)),a;}if (arguments[0]instanceof ct &&T(arguments[1],It)){var u =arguments[0],l =arguments[1];return u instanceof Kt ?l.add(u):u.apply(new Ci(l)),l;}}else if (3 ===arguments.length){if ("boolean"==typeof arguments[2]&&T(arguments[0],It)&&T(arguments[1],It)){for (var c =arguments[0],p =arguments[1],h =arguments[2],f =c.iterator();f.hasNext();){var g =f.next();Ci.getLines(g,p,h);}return p;}if ("boolean"==typeof arguments[2]&&arguments[0]instanceof ct &&T(arguments[1],        It)){ var  d  =arguments[0],y =                                                       arguments[1],_ =arguments[2];return d.apply(new Ci(y,_)),y;}}};var Si =function (    )    {  if (this.                                                                                                                                                                                                                                                                                                              _boundaryRule =gt.OGC_SFS_BOUNDARY_RULE, this._isIn =null,this._numBoundaries =          null,   0 ===                                                                                       arguments.length);else if (1 ===arguments.length){var t =arguments[0];if  (null    ===t)throw new m("Rule must be non-null");this._boundaryRule =t;}};Si.prototype.locateInternal =function (){if (arguments[0]instanceof C &&arguments[1]instanceof $t){var t =arguments[0],e =arguments[1];if (e.isEmpty())return w.EXTERIOR;var n =e.getExteriorRing(),i =this.locateInPolygonRing(t, n);if (i ===w.EXTERIOR)                                                                                                                                                                                                                                  return w.EXTERIOR;if (i  === w. BOUNDARY)return  w.  BOUNDARY;for   ( var r  =0;r   <  e.   getNumInteriorRing();r++ ){var o  =                   e.    getInteriorRingN(r) ,s =this.locateInPolygonRing( t,o);if  (s ===w.  INTERIOR) return w.     EXTERIOR;if                                                                                                                                                                                                                                                                                                                                                                                         (s ===w.BOUNDARY)return w.BOUNDARY;}return w.INTERIOR;}if (arguments[0]instanceof    C   &&  arguments[  1]                                                                                                                  instanceof                             Kt){var  a =     arguments[0] ,u = arguments[1] ;if (! u.getEnvelopeInternal( ).intersects( a) )return w.    EXTERIOR;var                                                                                                                                                              l =u.getCoordinates( );return u.isClosed( )||!a.equals(l[0])&&!a.equals(l[l.length -1])?at.isOnLine(a,l)?w.INTERIOR :w. EXTERIOR : w.BOUNDARY;}if (arguments[ 0]instanceof C &&arguments[1]instanceof Qt){var c =arguments[0];return arguments[1] .getCoordinate().equals2D(c)?w.INTERIOR  :w.EXTERIOR;}},Si.prototype.locateInPolygonRing =function  (t, e) {return e. getEnvelopeInternal( ).intersects(t)?at.     locatePointInRing(                                                                               t,e.getCoordinates()): w.EXTERIOR;},Si. prototype.intersects =function (t,e){      return    this.                                                                                                                                                                                                                                  locate(t,e)!==w.EXTERIOR;},Si.prototype.updateLocationInfo =function (t){t ===  w.INTERIOR &&(this.                                                                           _isIn =!0), t  ===w.  BOUNDARY   && this. _numBoundaries++   ;}, Si.prototype.    computeLocation =                                                                                                  function (t,e){if (e  instanceof Qt &&this.updateLocationInfo(this.locateInternal(t,e)),e instanceof Kt)this.updateLocationInfo( this.locateInternal(t,e) );else  if (e instanceof $t)this.updateLocationInfo(this.locateInternal(t, e));else if (e instanceof Xt)for (var  n  = e,i =0; i <n.getNumGeometries() ; i++ ){var r = n.getGeometryN(i) ;this. updateLocationInfo(this.     locateInternal(t,                                                                                                          r) )     ;}else if (e instanceof ne)for (var o =e,s =0;s <o.getNumGeometries();s++ ) {    var a = o.                                                                                                         getGeometryN(s);this.updateLocationInfo( this.locateInternal(t,a));}else if (e   instanceof zt) for (var u =                                                                                                                             
                   new Un(e)        ;u. hasNext();){var l =u.next();l !==e &&this.computeLocation(t,l);}},Si.prototype.locate =  function ( t,e){return e.isEmpty()?w.EXTERIOR :e instanceof Kt ?this.locateInternal(t,e):e instanceof $t ?this.locateInternal(t,e):(this._isIn =!1, this._numBoundaries =0,this.computeLocation(t,e),this._boundaryRule.isInBoundary(this._numBoundaries)?w.BOUNDARY : this._numBoundaries >0 ||this._isIn ?w.INTERIOR :w.EXTERIOR);},Si.prototype.interfaces_ =function (){return [];},Si.prototype.getClass =function (){return Si;};var Li =function t(){if (this._component =null,this._segIndex =null,this._pt =null,2 ===arguments.length){var e = arguments[0],n =arguments[1];t.call(this,e,t.INSIDE_AREA,n);}else if (3 ===arguments.length){var i =arguments[0],r =arguments[1],o =arguments[2];this._component =i,this._segIndex =r,this._pt =o;}},bi = {INSIDE_AREA:{       configurable:!0 }};Li.prototype.                                                        isInsideArea = function     ( ){ return this._segIndex ===Li.INSIDE_AREA;},  Li.            prototype.                                                                                                                                                                                                                                                                                                              getCoordinate =function (){return this._pt;},Li.prototype.getGeometryComponent =     function   (   ){                                                                                       return this._component;},Li.prototype.getSegmentIndex =function (){return this.    _segIndex;},Li.prototype.interfaces_ = function (){return [];} ,Li.prototype.getClass =function (){return Li;},bi.INSIDE_AREA.get =function (){return ( -1);},Object.defineProperties(Li, bi);var wi =function  ( t){this._pts  =t ||null;};wi.prototype.filter =function (t){ t  instanceof Qt  &&this._pts.add(t);},wi.                                                                                                                                                                                                                                     prototype.interfaces_ =function (){return  [Vt] ;},wi. prototype.getClass =function  ( ){   return wi;},wi.getPoints =function (          ){if  (1 ===   arguments.length) {var t  = arguments[0];return t instanceof   Qt ?$e.singletonList(t):wi.    getPoints(                                                                                                                                                                                                                                                                                                                                                                                         t,new Nt());} if (2   ===arguments. length){var e =arguments[0],n  =arguments[ 1]   ;return e instanceof                                                                                                                                                                Qt   ? n.   add(e):e instanceof zt && e.apply(new  wi(n)), n;}};var Oi =function (){this._locations  =    null;var                                                                                                                                                                 t =arguments[0];this._locations =t;};Oi.prototype.filter =function (t){(t instanceof Qt ||t instanceof Kt ||t instanceof $t)&&this._locations.add(new Li(t,0,t.getCoordinate()));},Oi.prototype.interfaces_ =function (){return [Vt];},Oi.prototype.getClass =function (){return Oi;},Oi.getLocations =function (t){var e =new Nt();return t.apply(new Oi(e)),e;};var Ti =function (){if (this._geom =null,this.    _terminateDistance =                                                                              0,this._ptLocator =new Si(),this._minDistanceLocation =null,this._minDistance   =v.MAX_VALUE,2 ===                                                                                                                                                                                                                                  arguments.length){var t =arguments[0],e =arguments[1];this._geom =[ t,e],this.  _terminateDistance =                                                                          0;}else if (3 ===arguments.length){var n =arguments[0] , i = arguments[1],r  =  arguments[ 2];this.                                                                                                   _geom =new Array(2). fill(null),this._geom[ 0]=n,this._geom[1]=i,this._terminateDistance =r;}} ;Ti.prototype.                                                                                                                                                                                        computeContainmentDistance =function () {if (0 ===arguments.length){var t  =    new Array(2).fill(                                                                                                           null)     ;if  ( this. computeContainmentDistance(0,t) ,  this._minDistance  <=  this.  _terminateDistance)                                                                                                return  null;this. computeContainmentDistance(1,t);}else if (   2 ===arguments.    length){var e =arguments[                                                                                                                              
                    0] , n  =       arguments[1],i =1 -e,r =Ni.getPolygons(this._geom[e]);if (r.size()>0){var o =Oi.getLocations(this._geom[i]);if (this.computeContainmentDistance(o,r,n),this._minDistance <=this._terminateDistance)return this._minDistanceLocation[i]=n[0],this._minDistanceLocation[e]=n[1],null;}}else if (3 ===arguments.length)if (arguments[2]instanceof Array &&T(arguments[0],xt)&&T(arguments[1],xt)){for (var s =arguments[0],a =arguments[1] ,u =arguments[2],l =0;l <s. size();l++ )for (var c =s.get(l),p =0;p <a.size();p++ )if (this.computeContainmentDistance(c,a.get(p),u),this._minDistance <=this._terminateDistance)return  null;}else if (arguments[2]instanceof Array && arguments[0]instanceof Li &&arguments[1]instanceof $t){var  h =arguments[0], f =arguments[1],g =arguments[2],d =h.getCoordinate() ;if (w.EXTERIOR !==this._ptLocator.locate(d,f))return  this.       _minDistance =0,g[0]= h,g[1]=new                                                        Li(f,d),null;}},Ti.prototype.computeMinDistanceLinesPoints =function (t,e,n){for     (var i  =0;i < t.                                                                                                                                                                                                                                                                                                              size();i++ )for (var r =t. get(i),o =0;o <e. size();o++ ){var s  =e.get(o);if (                  this.                                                                                         computeMinDistance( r, s, n), this. _minDistance <= this. _terminateDistance)    return null;}},Ti.prototype.computeFacetDistance =function (){var t =new Array(2).fill(null),e =Ci.getLines(this._geom[0]),n =Ci.getLines(this._geom[1]),i = wi.getPoints(this._geom[0]),r =wi.getPoints(this._geom[1]);return this.computeMinDistanceLines(e,n,t),this.updateMinDistance(t,! 1),this._minDistance <=                                                                                                                                                                                                                                        this._terminateDistance ?null :(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(e,   r,t),this.updateMinDistance(t,! 1),                    this.    _minDistance  <= this.   _terminateDistance   ? null :(t[ 0]  =null,t[  1] =  null,this.     computeMinDistanceLinesPoints(                                                                                                                                                                                                                                                                                                                                                                    n,i,t),this.updateMinDistance(t,!0),this._minDistance <=this._terminateDistance ?   null :(t[0]=null,t[                                                                                                                                                                  1]= null,   this.computeMinDistancePoints(i,r,t) ,void this.updateMinDistance(t,!1))));},Ti.prototype.    nearestLocations                                                                                                                                                        =function (){return this.computeMinDistance(),this._minDistanceLocation;},Ti.prototype.updateMinDistance =function (t,e){if (null ===t[0])return null;e ?(this._minDistanceLocation[0]=t[1],this._minDistanceLocation[1]=t[0]):(this._minDistanceLocation[0]=t[0], this. _minDistanceLocation[1]=t[1]);},Ti.prototype.nearestPoints =function (){this.computeMinDistance();return [this._minDistanceLocation[0].    getCoordinate(  ) ,                                                                               this. _minDistanceLocation[  1]  . getCoordinate(  ) ]    ;},  Ti. prototype.   computeMinDistance                                                                                                                                                                                                                                  =function (){if (0 ===arguments.length){if (null !==this._minDistanceLocation)    return null;if  (                                                                            this.   _minDistanceLocation   =new  Array(  2)    .   fill(    null)  ,this.  computeContainmentDistance(                                                                                        ),this. _minDistance <=this._terminateDistance)return null;this.computeFacetDistance( );}else if (3 ===                                                                                                                                                                                                 arguments.length)if (arguments[2]instanceof Array &&arguments[0]instanceof Kt       &&arguments[1]                                                                                                           instanceof Qt){  var   t   =arguments[0],e   =arguments[  1] , n  =arguments[2];if   ( t. getEnvelopeInternal(                                                                                             ).distance(e.getEnvelopeInternal())>this._minDistance)return null;for (var i =   t. getCoordinates( ) ,r =e.                                                                                                                              
                    getCoordinate(   ),o =0;o <i.length -1;o++ ){var s =at.distancePointLine(r,i[o],i[o +1]);if (s <this._minDistance){this._minDistance =s;var a =new dn(i[o],i[o +1]).closestPoint(r);n[0]=new Li(t,o,a),n[1]=new Li(e,0,r);}if (this._minDistance <=this._terminateDistance)return null;}}else if (arguments[2]instanceof Array &&arguments[0]instanceof Kt &&arguments[1]instanceof Kt){var u =arguments[0],l =arguments[1],c =arguments[2];if (u.getEnvelopeInternal().distance(l.getEnvelopeInternal())>this._minDistance)return null;for (var p =u.getCoordinates(),h =l.getCoordinates(),f =0;f <p.length -1;f++ )for (var g =0;g <h.length -1;g++ ){var d =at.distanceLineLine(p[f],p[f +1],h[g],h[g +1]);if (d <this._minDistance){this._minDistance =d;var y =new dn(p[f],p[f +1]),_ =new dn(h[g],h[g +1]),m =y.closestPoints(_);c[0]=new Li(u,f,m[0]),c[1]=new Li(l,g,m[1]);}if (this.          _minDistance    <=      this.                                                        _terminateDistance) return  null;}  }} ,Ti.prototype. computeMinDistancePoints =    function (t,e,n) {                                                                                                                                                                                                                                                                                                              for (var i =0;i <t.size();i++ )for (var r =t.get(i),o =0;o <e.size();o++ ){var s   =e.get( o)  ,a = r.                                                                                       getCoordinate().distance(s.getCoordinate());if  (a <this._minDistance && (this.    _minDistance = a,n[0]=new Li(r,0,r.getCoordinate()),n[1]= new Li(s,0,s.getCoordinate())),this._minDistance <=this._terminateDistance)return null;}},Ti.prototype.distance =function (){if (null ===this._geom[ 0]|| null ===this._geom[ 1])throw new m("null geometries are not supported");return this._geom[0].                                                                                                                                                                                                                                          isEmpty()||this._geom[1].isEmpty()?0 :(this.computeMinDistance(),this._minDistance);},Ti.    prototype.computeMinDistanceLines =               function (t,    e,n){for (var i =0;i <t.size();i++ )for (var r =t.get(i),o =0;o <e.size();o++ ){var s =e.     get(                                                                                                                                                                                                                                                                                                                                                                                              o);if  (this.  computeMinDistance( r, s,   n)  , this. _minDistance   <=  this.   _terminateDistance)                                                                                                                                                                   return null;} },Ti.prototype.interfaces_ =function (){return [];},Ti. prototype.getClass =function ( ){  return Ti;}                                                                                                                                                             ,Ti.distance =function (t,e){return  new  Ti(t,e).distance();},Ti.isWithinDistance =function ( t,e,n){return  new Ti(t,e,n).distance()<=n;},Ti.nearestPoints =function (t,e){return new Ti(t,e).nearestPoints();};var Ri =function (){this._pt =[new C( ),new C()],this._distance =v.NaN,this._isNull =!0;};Ri.prototype.getCoordinates =function (){return this._pt;},Ri.prototype.getCoordinate =function (t){    return this. _pt[t]                                                                               ;},Ri.prototype.setMinimum  =function () {if ( 1 ===arguments.length){var t =   arguments[0];this.                                                                                                                                                                                                                                   setMinimum(t._pt[0],t._pt[1]);}else  if  (2 ===arguments. length){   var  e =  arguments[0] ,  n =                                                                            arguments[1];if  (this. _isNull) return  this.initialize(e, n),null;var i =e.   distance(  n) ;i <                                                                                                this. _distance && this.initialize(e, n,i);}} ,Ri. prototype. initialize =function  (){if  (0 ===              arguments.length)this._isNull =!0;else if (2  ===arguments.length){var  t =arguments[0],e =arguments[1];this._pt[0].setCoordinate(t),this._pt[1] .setCoordinate(e),this._distance =t.    distance(e),this._isNull =!1;}else if  ( 3 === arguments.  length) { var n =    arguments[0], i  =                                                                                                            arguments[ 1],r =arguments[2] ;this._pt[0]. setCoordinate(n),this._pt[1].setCoordinate(i),       this.                                                                                                    _distance =r,this._isNull =!1;}},Ri.prototype.toString =function (){return Z.   toLineString( this._pt[ 0],                                                                                                                               
                     this._pt[        1]);}, Ri.prototype.getDistance =function (){return this._distance;},Ri.prototype.setMaximum =function (){if (1 ===arguments.length){var t =arguments[0];this.setMaximum(t._pt[0],t._pt[1]);}else if (2 ===arguments.length){var e =arguments[0],n =arguments[1];if (this._isNull)return this.initialize(e,n),null;var i =e.distance(n);i >this._distance &&this.initialize(e,n,i);}},Ri.prototype.interfaces_ =function (){return [];},Ri.prototype.getClass =function (){return Ri;};var Pi =function (){};Pi.prototype.interfaces_ =function (){return [];},Pi.prototype.getClass =function (){return Pi;},Pi.computeDistance =function (){if (arguments[2]instanceof Ri &&arguments[0]instanceof Kt &&arguments[1]instanceof C)for (var t =arguments[0],e =arguments[1],n =arguments[2],i =new dn(),r =t.getCoordinates(),o =0;o <r.length -1;o++ ){i.setCoordinates(r[       o]   ,r[  o +1]  ) ;var s    = i.                                                         closestPoint(e);n. setMinimum(s, e);}else if ( arguments[2] instanceof  Ri   &&      arguments[     0]                                                                                                                                                                                                                                                                                                             instanceof $t &&arguments[1]instanceof C){var a =arguments[0],u =arguments[1],l      =arguments[2];Pi.                                                                                       computeDistance(a.getExteriorRing(),u,l);for (var c =0;c <a.getNumInteriorRing(    );c++ )Pi.computeDistance(a.getInteriorRingN(c),u,l);}else if (arguments[2]instanceof Ri &&arguments[0]instanceof ct &&arguments[1]instanceof C){var p =arguments[0],h =arguments[1],f =arguments[2];if (p instanceof Kt)Pi.computeDistance(p,h,f);else if (p instanceof $t)Pi.computeDistance(p,h,f);else if                                                                                                                                                                                                                                              (p instanceof zt)for (var g =p,d =0;d <g.getNumGeometries();d++ ){var y =g.getGeometryN(    d);Pi.computeDistance(y,h,f);}else                            f.    setMinimum( p. getCoordinate() , h) ;}else if  (arguments[2]instanceof Ri &&arguments[0]     instanceof                                                                                                                                                                                                                                                                                                                                                                                      dn && arguments[1]instanceof C){var _ =arguments[0],m =arguments[1],v =arguments[     2],   I    =   _.                                                                                                                                                                     closestPoint( m);v.setMinimum(I,m);}};var Di =function ( ){this._g0 =null,this._g1 =null,this._ptDist =  new Ri(                                                                                                                                                               ) ,this. _densifyFrac =0;var t =arguments[0],e =arguments[1];this._g0 =t,this._g1 =e;},Mi ={MaxPointDistanceFilter: {configurable:!0 } ,MaxDensifiedByFractionDistanceFilter:{configurable:!0 }};Di.prototype. getCoordinates =function (){return  this._ptDist.getCoordinates();},Di.prototype.setDensifyFraction = function  ( t){if (t >1  ||t <=0)throw new m("Fraction is not in range (0.0 - 1.0]") ;this.    _densifyFrac  =t;} ,                                                                              Di.prototype.compute =function (t,e){this.computeOrientedDistance(  t,e,this.     _ptDist)  ,this.                                                                                                                                                                                                                                  computeOrientedDistance(e,t,this._ptDist);},Di.prototype.distance =function ()    { return    this.                                                                           compute(this.  _g0, this._g1),this.  _ptDist.  getDistance();}, Di. prototype.  computeOrientedDistance                                                                                            =function (t,e,n){var i =new Ai(e);if (t.apply(i),n.setMaximum(i.getMaxPointDistance()),this.           _densifyFrac >0){var r =new Fi(e,this._densifyFrac);t.apply(r),n.setMaximum(r.getMaxPointDistance());}},Di.prototype.orientedDistance =function (){return this.computeOrientedDistance(this.     _g0,this._g1,this. _ptDist),this. _ptDist.getDistance();}   ,Di. prototype.      interfaces_    =                                                                                                            function (){return [] ;} ,Di.prototype.getClass =function  ( ){return Di;},Di.distance = function (){                                                                                                   if (2 ===arguments.length){var t =arguments[0],e =arguments[1];return new Di(t,    e) .distance();}if (3 ===                                                                                                                                
                     arguments.       length){var n =arguments[0],i =arguments[1],r =arguments[2],o =new Di(n,i);return o.setDensifyFraction(r),o.distance();}},Mi.MaxPointDistanceFilter.get =function (){return Ai;},Mi.MaxDensifiedByFractionDistanceFilter.get =function (){return Fi;},Object.defineProperties(Di,Mi);var Ai =function (){this._maxPtDist =new Ri(),this._minPtDist =new Ri(),this._euclideanDist =new Pi(),this._geom =null;var t =arguments[0];this._geom =t;};Ai.prototype.filter =function (t){this._minPtDist.initialize(),Pi.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist);},Ai.prototype.getMaxPointDistance =function (){return this._maxPtDist;},Ai.prototype.interfaces_ =function (){return [ft];},Ai.prototype.getClass =function (){return Ai;};var Fi =function (){this._maxPtDist =new Ri(),this._minPtDist =new Ri(),this._geom =     null, this._numSubSegs =0;var t =                                                         arguments[0],e =arguments[ 1] ;this._geom =t,this._numSubSegs = Math.trunc(Math.     round(1 /e));};Fi.                                                                                                                                                                                                                                                                                                              prototype.filter  = function ( t, e){ if (0  ===e)return null;for  (var n  =t.    getCoordinate(e -1)                                                                                       ,i =t.getCoordinate(e),r =(i.x  -   n.x)/this._numSubSegs,o =(i.y - n.y) /this.    _numSubSegs,s =0; s <this._numSubSegs;s++  ) { var  a  =n.x +s *r,u =n.y +s *o,l =new C(a,u);this._minPtDist.initialize(),Pi.computeDistance(this._geom,l,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist);}}, Fi.prototype.isDone =function (){return !1;},Fi.prototype.isGeometryChanged =                                                                                                                                                                                                                                                  function ( ) {return !1;},Fi.prototype.getMaxPointDistance  =function   () {return this.         _maxPtDist;} ,Fi.  prototype.                    interfaces_ =   function (){return [Ut];},Fi.prototype.getClass =function (){return Fi;};var Gi =function     ( t,                                                                                                                                                                                                                                                                                                                                                                                           e,n) { this. _minValidDistance  =null, this.  _maxValidDistance   = null,  this.   _minDistanceFound =                                                                                                                                                                        null,    this._maxDistanceFound =null,this._isValid = !0,this._errMsg =null,this. _errorLocation =       null,                                                                                                                                                              this._errorIndicator =null,this._input = t ||null,this. _bufDistance = e  ||                                                                                                                                                                                                                                                                                                                                        null,this._result =n                                                                              ||   null;}   ,  qi ={VERBOSE:{ configurable:!0  },  MAX_DISTANCE_DIFF_FRAC:{   configurable:!0 }}                                                                                                                                                                                                                                  ;Gi.prototype.checkMaximumDistance =function (t,e,n){var i =new Di(e,t);if (i.  setDensifyFraction(                                                                           .25),this._maxDistanceFound =i.orientedDistance(),this. _maxDistanceFound >n){   this._isValid   =!                                                                                              1;var r =i.getCoordinates();this._errorLocation =r[1],this._errorIndicator =t. getFactory().        createLineString(r),this._errMsg ="Distance between buffer curve and input is too large ("+this._maxDistanceFound +" at "+Z.toLineString(r[0],r[1])+")";}},Gi.prototype.isValid =function (){var t    =Math.abs(this._bufDistance) ,e =Gi.MAX_DISTANCE_DIFF_FRAC * t;return  this.    _minValidDistance =                                                                                                            t -      e, this._maxValidDistance  =t  + e,!(!this. _input.isEmpty() &&!this._result.   isEmpty() )                                                                                                   ||(this._bufDistance > 0 ?this.checkPositiveValid():this.checkNegativeValid(),     Gi.  VERBOSE  &&  Y. out.                                                                                                                                
                       println(       "Min Dist= " +this._minDistanceFound +"  err= "+(1 -this._minDistanceFound /this._bufDistance)+"  Max Dist= "+this._maxDistanceFound  +"  err= " +(this._maxDistanceFound /this._bufDistance -1)),this._isValid);},Gi.prototype.checkNegativeValid =function (){if (!(this._input instanceof $t ||this._input instanceof ne ||this._input instanceof zt))return null;var t =this.getPolygonLines(this._input);if (this.checkMinimumDistance(t,this._result,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(t,this._result,this._maxValidDistance);},Gi.prototype.getErrorIndicator =function (){return this._errorIndicator;},Gi.prototype.checkMinimumDistance =function (t,e,n){var i =new Ti(t,e,n);if (this. _minDistanceFound =i.distance(),this._minDistanceFound <n){this._isValid =!1;var r =i.nearestPoints();this._errorLocation =i.         nearestPoints( )  [  1] ,this.                                                         _errorIndicator = t.getFactory( ) . createLineString(  r)    , this.  _errMsg  =    "Distance between buffer curve and input is too small ("                                                                                                                                                                                                                                                                        +this._minDistanceFound +" at "+Z.toLineString(r[0],r[1])+" )";}},Gi.prototype.    checkPositiveValid =                                                                                      function  (){var t  =this._result.getBoundary() ;if (this.checkMinimumDistance(    this._input,t,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(this._input,t,this._maxValidDistance);},Gi.prototype.getErrorLocation =function (){return this._errorLocation;},Gi.prototype.getPolygonLines =function  (t){for (var e  =new Nt(),n = new  Ci(e), i =Ni.                                                                                                                                                                                                                                                     getPolygons(t).iterator(  );i.hasNext(); )  {i.next(). apply( n);}return t.getFactory().    buildGeometry(e);} ,  Gi.prototype.                      getErrorMessage =function () {return this._errMsg;},Gi.prototype.interfaces_ =function (){return [];},Gi.     prototype.                                                                                                                                                                                                                                                                                                                                                                                   getClass =  function (){return Gi;},qi.VERBOSE.get =function ( ){return  !1;},qi.   MAX_DISTANCE_DIFF_FRAC.                                                                                                                                                                  get    =     function (){return .012;},Object.defineProperties(Gi,qi);var Bi =function (t,e,n) {this.    _isValid                                                                                                                                                             =!0,this. _errorMsg =null,this._errorLocation =  null,this._errorIndicator =                                                                                                                                                                                                                                                                                                                                        null,this._input  =t                                                                              ||null, this. _distance =e ||null,this. _result = n ||null;} ,Vi ={VERBOSE: {   configurable:!0  },                                                                                                                                                                                                                                  MAX_ENV_DIFF_FRAC:{configurable: !0  } } ;Bi.prototype.isValid =function  (){     return     this.                                                                           checkPolygonal( ), this._isValid ?(this.checkExpectedEmpty(),this. _isValid ?(  this.checkEnvelope(                                                                                              ), this._isValid  ?(this.checkArea(),this._isValid ?(this.checkDistance(),this._isValid):       this._isValid):this._isValid):this._isValid):this._isValid;} ,Bi.prototype.checkEnvelope =function (){if (this._distance <0)return null;var t =this._distance *Bi.MAX_ENV_DIFF_FRAC;0 ===t &&(t =.001)    ;var e =new  j(this._input.getEnvelopeInternal());e.expandBy(this._distance)    ;var   n =new   j(                                                                                                              this.  _result.getEnvelopeInternal());n.expandBy(t),n. contains(e)||(this._isValid =!       1, this.                                                                                                  _errorMsg ="Buffer envelope is incorrect",this. _errorIndicator  =this._input.  getFactory().toGeometry(n))                                                                                                                                 
                      ,   this.       report("Envelope");},Bi.prototype.checkDistance =function ( ){var t =new Gi(this._input,this._distance,this._result);t.isValid()||(this._isValid =!1,this._errorMsg =t.getErrorMessage(),this._errorLocation = t.getErrorLocation(),this._errorIndicator =t.getErrorIndicator()),this.report("Distance");},Bi.prototype.checkArea =function (){var t =this._input.getArea(),e =this._result.getArea();this._distance >0 &&t >e &&(this._isValid =!1,this._errorMsg ="Area of positive buffer is smaller than input",this._errorIndicator =this._result) ,this._distance <0 &&t <e &&(this._isValid =!1,this._errorMsg ="Area of negative buffer is larger than input",this._errorIndicator =this._result),this.report("Area") ;},Bi.prototype.checkPolygonal =function ( ){this._result instanceof $t ||this._result instanceof ne ||(this. _isValid =!1),this._errorMsg =       "Result is not polygonal", this.                                                           _errorIndicator  =  this. _result,this.report("Polygonal" ) ;},Bi.   prototype.    getErrorIndicator =                                                                                                                                                                                                                                                                                                              function () {return this. _errorIndicator;} ,  Bi.prototype.getErrorLocation =      function  (  )  {                                                                                       return this._errorLocation;}  , Bi.prototype.checkExpectedEmpty =function  () {    return this. _input.getDimension()>=2 ?null : this. _distance  >0 ?null : (this._result.isEmpty()||(this._isValid =!1, this._errorMsg ="Result is non-empty",this._errorIndicator =this._result),void   this.report( "ExpectedEmpty"));},Bi. prototype. report =function (t){if ( !Bi.VERBOSE)                                                                                                                                                                                                                                                         return null;Y.out.println( "Check " +t +": "+  (this._isValid ?"passed":"FAILED"));} ,Bi.   prototype.getErrorMessage =function                          (    )   {    return this._errorMsg;}, Bi.prototype.interfaces_ =function (){return [];} ,Bi.prototype.     getClass                                                                                                                                                                                                                                                                                                                                                                                    =function (){return Bi;} ,Bi.isValidMsg =function (t, e,n){var  i = new Bi(t,e,n)   ;return i.isValid()                                                                                                                                                                        ?null :    i.getErrorMessage();},Bi.isValid =function (t,e,n){return !!new Bi(t,e,n).isValid();},Vi.    VERBOSE.                                                                                                                                                            get  =function  ( ) {return ! 1;}, Vi.MAX_ENV_DIFF_FRAC.get   = function (){     return .012;},Object.defineProperties(Bi,Vi);var Ui =function (){this._pts =null,this._data =null;var t =arguments[0],e =arguments[1];this._pts =t,this._data =e;};Ui.prototype.getCoordinates =function (){return this._pts;},Ui.prototype.size =function (){return this._pts.length;},Ui.prototype.getCoordinate =function (t){return this._pts[t];}                                                                               ,Ui.prototype. isClosed =function ()  {return this._pts[0].equals(this. _pts[   this. _pts.length -                                                                                                                                                                                                                                 1]);},Ui.prototype.getSegmentOctant =function (t){return t ===this._pts.length  -1 ? -1 :pn.octant(                                                                            this. getCoordinate( t) ,this.getCoordinate(t +1));}  ,Ui.prototype.setData =   function (t){this.                                                                                             _data =t;},Ui.prototype.getData =function (){return this._data;},Ui.prototype.toString =     function (){return Z.toLineString(new ue(this._pts));},Ui.prototype.interfaces_ =function (){return [hn];},Ui.prototype.getClass =function (){return Ui;};var zi =function (){this._findAllIntersections =       !    1, this.  _isCheckEndSegmentsOnly  =  !   1,this. _li   = null,this.    _interiorIntersection                                                                                                              =     null, this. _intSegments =  null,this._intersections =  new  Nt()  ,    this.   _intersectionCount                                                                                          = 0,this. _keepIntersections  = ! 0;var t = arguments[0] ;this._li   = t,this.     _interiorIntersection   =                                                                                                                                 
                      null;};zi.        prototype.getInteriorIntersection =function (){return this._interiorIntersection;},zi.prototype.setCheckEndSegmentsOnly  = function (t){this. _isCheckEndSegmentsOnly =t;},zi.prototype.getIntersectionSegments =function (){return this._intSegments;},zi.prototype.count =function (){return  this._intersectionCount;},zi.prototype.getIntersections =function (){return this._intersections;},zi.prototype.setFindAllIntersections =function (  t){this._findAllIntersections =t;},zi.prototype.setKeepIntersections =function (t){this._keepIntersections =t;},zi.prototype.processIntersections =function (t,e,n,i){if (!this._findAllIntersections  &&this.hasIntersection())return null;if (t ===n &&e ===i)return null;if (this._isCheckEndSegmentsOnly){if (!(this.isEndSegment(t,e)||this.isEndSegment(n,i)))return null;}var r =t.getCoordinates()[e],o =t.         getCoordinates( )[e +1] ,s  =n.                                                          getCoordinates()[i],a =n.getCoordinates()[i +1];this._li.computeIntersection( r,    o,s,a), this. _li.                                                                                                                                                                                                                                                                                                              hasIntersection()&&this._li.isInteriorIntersection()&&( this._intSegments = new    Array(4).fill(null)                                                                                       ,this._intSegments[0]=r,   this._intSegments[1]=o,this._intSegments[2]= s,this.    _intSegments[3]=a,this._interiorIntersection = this._li.getIntersection(0),this. _keepIntersections &&this._intersections.add(this._interiorIntersection), this._intersectionCount++ );} , zi.prototype.isEndSegment =function  (t,e){return 0 ===e ||e  >=t.size()-2;},zi.prototype.                                                                                                                                                                                                                                                                 hasIntersection =function (){return  null  !==this._interiorIntersection;},zi.prototype.     isDone =function (){return !this.                           _findAllIntersections &&null !==this._interiorIntersection;},zi.prototype.interfaces_ =function (){return [Wn];} ,zi.                                                                                                                                                                                                                                                                                                                                                                                    prototype.getClass =function (  ){return  zi;},zi. createAllIntersectionsFinder =   function (t){var e                                                                                                                                                                        = new zi(    t);return e.setFindAllIntersections(!0),e;},zi.createAnyIntersectionFinder =function (t){    return new                                                                                                                                                           zi(t);}, zi.createIntersectionCounter =function  (t){ var   e = new zi( t)    ;return e.setFindAllIntersections(!0),e.  setKeepIntersections(!1),e;} ;var Xi =function (){this. _li  =new  rt( ),this._segStrings  = null, this. _findAllIntersections  =! 1,this._segInt  =null, this._isValid  =! 0;var t =arguments[0];this._segStrings  =t;} ;Xi. prototype. execute =function ( ) {if  ( null !==this._segInt) return null;this.                                                                               checkInteriorIntersections() ;} , Xi.prototype.getIntersections =function (){        return  this.                                                                                                                                                                                                                                  _segInt. getIntersections();},  Xi.prototype.isValid =function (){return this.   execute( ) , this.                                                                            _isValid;},  Xi. prototype. setFindAllIntersections = function   (  t){ this.  _findAllIntersections                                                                                          = t;},Xi.prototype.checkInteriorIntersections  =function  (){this. _isValid = !0, this.    _segInt =new zi(  this. _li),this._segInt.setFindAllIntersections(this._findAllIntersections);var t =new  xn( );if ( t.setSegmentIntersector( this._segInt), t. computeNodes(this. _segStrings),this._segInt.    hasIntersection())return this._isValid =! 1,null;},Xi.prototype.checkValid =    function ( ){ if (                                                                                                               this.   execute(),  !this._isValid) throw new we(this.getErrorMessage() ,this._segInt.   getInteriorIntersection(                                                                                     ));} ,Xi. prototype. getErrorMessage =function  () {if  ( this.   _isValid)    return "no intersections found"                                                                                                                             
                        ;var t =        this._segInt.getIntersectionSegments();return "found non-noded intersection between "+Z.toLineString(t[0],t[1])+" and "+Z.toLineString(t[2],t[3]);}, Xi.prototype.interfaces_ =function (){return [];},Xi.prototype.getClass =function (){return Xi;},Xi.computeIntersections =function (t){var e =new Xi(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections();};var Yi =function t(){this._nv =null;var e =arguments[0];this._nv =new Xi(t.toSegmentStrings(e));};Yi.prototype.checkValid =function (){this._nv.checkValid();},Yi.prototype.interfaces_ =function (){return [];},Yi.prototype.getClass =function (){return Yi;},Yi.toSegmentStrings =function (t){for (var e =new Nt(),n =t.iterator();n.hasNext();){var i =n.next();e.add(new Ui(i.getCoordinates(),i));}return e;},Yi.checkValid =function (t){new Yi(t).checkValid();};var ki =      function (t){this._mapOp =t;} ;ki.                                                          prototype. map =function (t){for (var e =new Nt( ),n =0;n <t.getNumGeometries();    n++ ){var i =this.                                                                                                                                                                                                                                                                                                              _mapOp. map(t. getGeometryN( n));i.isEmpty()||e.add(i);}return  t.getFactory().    createGeometryCollection(                                                                                 _e.toGeometryArray(e));},ki.prototype.interfaces_ =function  (){return [];},ki.    prototype.getClass =function  (){return ki;}, ki.map =function (t,e){return new ki(e).map(t);};var ji =function  ( ){this._op =null,this._geometryFactory =null,this._ptLocator =null,this. _lineEdgesList =new Nt(),this._resultLineList =new Nt();var t =arguments[0],e =                                                                                                                                                                                                                                                                         arguments[1],n =arguments[2];this._op =t,this._geometryFactory =e,this._ptLocator =n;};ji.   prototype.collectLines =function  (                            t){for (var e    = this._op. getGraph( ).getEdgeEnds().iterator( );e.hasNext(); ){ var  n =e.next() ;this.    collectLineEdge(                                                                                                                                                                                                                                                                                                                                                                          n,t,this._lineEdgesList),this.collectBoundaryTouchEdge(n,t,this._lineEdgesList);}    }  ,ji. prototype.                                                                                                                                                                         labelIsolatedLine =function (t,e){var n =this._ptLocator.locate(t.getCoordinate(),this._op.getArgGeometry(  e));t.                                                                                                                                                         getLabel(). setLocation(e,n);},ji.prototype.build =function (t){return this.    findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this._resultLineList;},ji.prototype.collectLineEdge =function (t,e,n){var i =t.getLabel(),r =t.getEdge();t.isLineEdge()&&(t.isVisited()||!Lr.isResultOfOp(i,e)||r.isCovered() ||(n.add(r),t.setVisitedEdge(!0) ));},ji.prototype.findCoveredLineEdges =function (){for (var t =this._op.                                                                                getGraph() . getNodes().iterator() ;t. hasNext();) {  t.next( ). getEdges().   findCoveredLineEdges(                                                                                                                                                                                                                               );}for (var e =this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n = e.next(), i  = n.                                                                           getEdge();if (n.isLineEdge()&&!i.isCoveredSet()){var r =this._op.isCoveredByA(  n.getCoordinate() )                                                                                            ;i.setCovered(r) ;}} },ji.prototype.labelIsolatedLines =function ( t){for (var e  =t.    iterator();e.hasNext() ;){ var n =e.next(),i   =n.getLabel();n.isIsolated()&&(i.isNull(0)?this.labelIsolatedLine(n,0): this.labelIsolatedLine(n,1));}},ji.prototype. buildLines =function (t){for (var e =this.      _lineEdgesList. iterator();e.hasNext();) {var   n =  e.  next( ), i =this.     _geometryFactory.                                                                                                                createLineString( n.getCoordinates( ) ) ;this._resultLineList.add(i),n.setInResult(!0);} }  ,ji.  prototype.                                                                                      collectBoundaryTouchEdge =function ( t,e,  n){var i =t. getLabel() ;return  t.     isLineEdge( ) ?null :  t.                                                                                                                                  
                      isVisited()       ?null :t.isInteriorAreaEdge()?null :t.getEdge().isInResult()?null :(et.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void (Lr.isResultOfOp(i,e)&&e ===Lr.INTERSECTION &&(n.add(t.getEdge()),t.setVisitedEdge(!0))));},ji.prototype.interfaces_ =function (){return [];},ji.prototype.getClass =function (){return ji;};var Hi =function (){this._op =null,this._geometryFactory =null,this._resultPointList  =new Nt();var t =arguments[0],e =arguments[1];this._op =t,this._geometryFactory =e;};Hi.prototype.filterCoveredNodeToPoint =function (t){var e =t.getCoordinate();if (!this._op.isCoveredByLA(e)){var n =this._geometryFactory.createPoint(e) ;this._resultPointList.add(n);}},Hi.prototype.extractNonCoveredResultNodes =function (t){for (var e =this._op.getGraph().getNodes().iterator();e.hasNext();){var n =e.next()      ;if    (! n.   isInResult() &&!n.                                                           isIncidentEdgeInResult()&&(0 ===n.getEdges().getDegree()||t ===Lr.INTERSECTION))     { var     i  = n.                                                                                                                                                                                                                                                                                                              getLabel();Lr.isResultOfOp( i,t)&&this. filterCoveredNodeToPoint(n) ;}}}  , Hi.     prototype. build =                                                                                        function  (  t) {     return   this.extractNonCoveredResultNodes(    t), this.    _resultPointList;},Hi.prototype.interfaces_ =function (){return [];},Hi.prototype.getClass =function (){return Hi;};var Wi =function () {this._inputGeom =null,this._factory =null,this._pruneEmptyGeometry =!0,this._preserveGeometryCollectionType =!0,this.         _preserveCollections                                                                                                                                                                                                                                                         =! 1,this._preserveType =!1;};Wi.prototype. transformPoint =function ( t,e){return this.       _factory.  createPoint(   this.                               transformCoordinates( t.getCoordinateSequence(),t));},Wi.prototype.transformPolygon =function (t,e){var n =!0,i    =                                                                                                                                                                                                                                                                                                                                                                                   this.transformLinearRing(t.getExteriorRing(),t);null !==i &&i instanceof ee &&!i.   isEmpty()||(n  =!1)                                                                                                                                                                           ;for  (   var r =new Nt(),o =0;o <t. getNumInteriorRing();  o++ ){var s =this.transformLinearRing(t.   getInteriorRingN(                                                                                                                                                 o),t);null ===s ||s.isEmpty()||(s instanceof ee ||(n =!1),r.add(s) );}if (n)    return this._factory.createPolygon(i,r.toArray([]));var a = new Nt();return null !==i &&a.add(i),a.addAll(r),this._factory.buildGeometry(a);},Wi. prototype.createCoordinateSequence =function (t){return this._factory.getCoordinateSequenceFactory( ).create(t);},Wi.prototype.getInputGeometry =function () {return this. _inputGeom;},Wi.prototype.                                                                               transformMultiLineString =function (t,e){for (var  n =new Nt()  , i = 0;i <t.   getNumGeometries()                                                                                                                                                                                                                                  ;i++ ){var r =this.transformLineString(t.getGeometryN(i),t) ;null !==r  &&( r.  isEmpty()||n.add(r)                                                                           );}return this._factory.buildGeometry(n);},Wi.prototype.transformCoordinates =   function (  t,e) {                                                                                           return this.copy(t);} ,Wi.prototype.transformLineString =function (t,e){return this.     _factory.createLineString(this.transformCoordinates( t.getCoordinateSequence(),t));} ,Wi.prototype.transformMultiPoint =function ( t,e){for (var n =new Nt(),i  =0;i   <t.getNumGeometries() ;i++ ){var r =this.    transformPoint(t.getGeometryN(i) ,t);null !==r &&( r. isEmpty()||n.add(r));}       return    this.                                                                                                                _factory. buildGeometry(n);},Wi.prototype.transformMultiPolygon =function (t,e){for (var n =new Nt(),i                                                                                           =0;i <t.getNumGeometries();i++ ){var r =this.transformPolygon(t.getGeometryN(i)  ,t);null !==r &&(r.isEmpty(                                                                                                                                   
                       )||n.add(r)       );}return this._factory.buildGeometry(n);},Wi.prototype.copy =function (t){return t.copy();},Wi.prototype.transformGeometryCollection =function (t,e){for (var n =new Nt(),i =0;i <t.getNumGeometries();i++ ){var r =this.transform(t.getGeometryN(i));null !==r &&(this._pruneEmptyGeometry &&r.isEmpty()||n.add(r));}return this._preserveGeometryCollectionType ?this._factory.createGeometryCollection(_e.toGeometryArray(n)):this._factory.buildGeometry(n);},Wi.prototype.transform  =function (t){if (this._inputGeom =t,this._factory =t.getFactory(),t instanceof Qt)return this.transformPoint(t,null);if (t instanceof te)return this.transformMultiPoint(t,null);if (t instanceof ee)return this.transformLinearRing(t,null);if (t instanceof Kt)return this.transformLineString(t,null);if (t instanceof Xt)return this.transformMultiLineString(t,null)         ;if  (     t  instanceof   $t)                                                            return  this. transformPolygon(t,  null)   ;if  (t  instanceof   ne)return this.    transformMultiPolygon(                                                                                                                                                                                                                                                                                                          t,null);if ( t  instanceof zt) return this. transformGeometryCollection(t,null)    ;throw    new    m(                                                                                        "Unknown Geometry subtype: "+t. getClass(  ). getName()  )  ;}, Wi. prototype.     transformLinearRingfunction ( t,e){var n =this.transformCoordinates(t.getCoordinateSequence(),t);if (null ===      n) return    this.    _factory.                                  createLinearRing(    null) ;var i =n.   size() ;return i > 0  &&i < 4 &&! this._preserveType ?this._factory.  createLineString(                                                                                                                                                                                                                                                                                                                                                                       n):this. _factory.createLinearRing(n);},Wi. prototype. interfaces_ =function (){    return   [ ];},Wi.                                                                                                                                                                          prototype.   getClass =function (){return Wi;};var Ki =function t(){if (this._snapTolerance =0, this.    _srcPts =                                                                                                                                                        null,this._seg = new  dn() , this._allowSnappingToSourceVertices  = !1,this.    _isClosed =!1, arguments[0]instanceof Kt &&"number"==typeof arguments[1]){var e =arguments[0] ,n =arguments[1];t.call(this,e.getCoordinates(),n);}else if (arguments[0]instanceof Array &&"number"==  typeof arguments[1]){var i =arguments[0],r =arguments[1];this. _srcPts =i, this._isClosed =t.isClosed(i),this._snapTolerance = r;}};Ki.prototype.                                                                               snapVertices =function (t,e){for (var n =this._isClosed ?t.size()-1 :t.size()    ,i = 0;i <n;i++ ){                                                                                                                                                                                                                                 var r =t.get(i),o =this.findSnapForVertex(r,e);null !==o &&(t.set(i,new C(o)),  0  === i    &&this.                                                                           _isClosed &&t. set(t.size()-1,new C(o)));}}, Ki.prototype. findSnapForVertex =  function (t,e){for (                                                                                         var n =0;n <e.length;n++ ){if (t.equals2D(e[ n]) )return null;if (t.distance(e[n])<     this._snapTolerance) return e[n];}  return null;}, Ki.prototype.snapTo =function (t){var e =new St( this. _srcPts) ;this.snapVertices( e,t)  ,this. snapSegments(e,t);return e.toCoordinateArray();},Ki.prototype.    snapSegments =  function  (t,e) {if  ( 0  ===e.length)return null;var n = e.      length;e[ 0]   .                                                                                                                 equals2D( e[e.length -1])&&(n =e.length -1);for (var i =0;i <n;i++ ){ var r   =e[i],o =        this.                                                                                           findSegmentIndexToSnap(r,t);o >=0  && t.add(o + 1,new C(r),!1);}},Ki.prototype.   findSegmentIndexToSnap   =                                                                                                                                    
                       function  (        t,e){for (var n =v.MAX_VALUE,i = -1,r =0;r <e.size()-1;r++ ){if (this._seg.p0 =e.get(r),this._seg.p1 =e.get(r +1),this._seg.p0.equals2D(t)||this._seg.p1.equals2D(t)){if (this._allowSnappingToSourceVertices)continue ;return ( -1);}var o =this._seg.distance(t);o <this._snapTolerance &&o <n &&(n =o,i =r);}return i;},Ki.prototype.setAllowSnappingToSourceVertices =function (t){this._allowSnappingToSourceVertices =t;},Ki.prototype.interfaces_ =function (){return [];},Ki.prototype.getClass =function (){return Ki;},Ki.isClosed =function (t){return !(t.length <=1)&&t[0].equals2D(t[t.length -1]);};var Ji =function (t){this._srcGeom =t ||null;},Qi ={SNAP_PRECISION_FACTOR:{configurable:!0 }};Ji.prototype.snapTo =function (t,e){var n =this.extractTargetCoordinates(t);return new Zi(e,n).transform(this._srcGeom);},Ji.prototype.snapToSelf =      function (t,  e)  {var  n  =this.                                                            extractTargetCoordinates(this.  _srcGeom),i =  new Zi( t, n,!0).transform( this.        _srcGeom), r =                                                                                                                                                                                                                                                                                                              i;return e &&T(r,Zt) &&(r =i.buffer(0)),r;},Ji.prototype.computeSnapTolerance =     function   (  t) {                                                                                         return  this.   computeMinimumSegmentLength(   t)/    10;} ,    Ji.prototype.    extractTargetCoordinatesfunction (t){for ( var e =new f(),n =t.getCoordinates(),i =0;i <n.length;i++ )e.add(n[i])   ;return  e.  toArray(new Array( 0).                                    fill( null))    ;},Ji.prototype.computeMinimumSegmentLength =function (t){for (var e =v.MAX_VALUE,n =0;n <      t.                                                                                                                                                                                                                                                                                                                                                                                  length -1;n++ ){var i =t[n].distance( t[n  +1] );i  <e && (e =i) ;}return e;},Ji.            prototype.                                                                                                                                                                           interfaces_ =function (){return [];},Ji.prototype.getClass =function (){return Ji;},Ji.snap =function (  t, e,n){                                                                                                                                                        var i =new Array(2).fill(null),r =new Ji(t);i[0]=r.snapTo(e,n);var o =new Ji(   e);return i[1]=o.snapTo(i[0],n),i;},Ji.computeOverlaySnapTolerance  =function (){if (1 ===arguments. length){var t =arguments[0],e  =Ji.computeSizeBasedSnapTolerance(t),n =t.getPrecisionModel();if (n.getType()===fe.FIXED){var i =1 /n.getScale()*2 /1.415;i  >e &&(e =i);}return e;}if (2 ===arguments.length){var r =arguments[ 0],o =arguments[1]                                                                               ;return     Math.  min(     Ji.  computeOverlaySnapTolerance(     r)   ,  Ji.   computeOverlaySnapTolerance(                                                                                                                                                                                                                         o))  ;} }  ,  Ji. computeSizeBasedSnapTolerance =  function ( t)  {var  e =t.  getEnvelopeInternal(                                                                           );return Math.min(e.getHeight(),e.getWidth( ))*Ji.SNAP_PRECISION_FACTOR;},Ji.  snapToSelf        =                                                                                          function (t,e,n){return new Ji(t).snapToSelf(e,n);},Qi.SNAP_PRECISION_FACTOR.get =    function (){return 1e-9;},Object.defineProperties(Ji,Qi);var Zi =function (t){function e(e,n,i){t.call(this),this._snapTolerance =e ||null,this._snapPts =n ||null,this._isSelfSnap =void 0 !==i &&i;}return t &&(e.     __proto__ =t),e. prototype  =Object.create( t && t.prototype),e. prototype.    constructor  =e,e.                                                                                                                 prototype. snapLine  =function (t, e){var n =new Ki( t,  this._snapTolerance);return  n. setAllowSnappingToSourceVertices(                                                                     this._isSelfSnap),n.snapTo(e);},e.prototype.transformCoordinates =function (t,     e)     { var   n  =    t.                                                                                                                                    
                        toCoordinateArray( ),i =this.snapLine(n,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(i);},e.prototype.interfaces_ =function (){return [];},e.prototype.getClass =function (){return e;},e;}(Wi),$i =function (){this._isFirst =!0,this._commonMantissaBitsCount =53,this._commonBits =0,this._commonSignExp =null;};$i.prototype.getCommon =function (){return v.longBitsToDouble(this._commonBits);},$i.prototype.add =function (t){var e =v.doubleToLongBits(t);if (this._isFirst)return this._commonBits =e,this._commonSignExp =$i.signExpBits(this._commonBits),this._isFirst =!1,null;if ($i.signExpBits(e)!==this._commonSignExp)return this._commonBits =0,null;this._commonMantissaBitsCount =$i.numCommonMostSigMantissaBits(this._commonBits,e),this._commonBits =$i.zeroLowerBits(this._commonBits,64 -(12 +this._commonMantissaBitsCount));}     ,$i.prototype.toString =function (                                                            ){if (1  === arguments.length){var t =arguments[0],e = v.longBitsToDouble(t),n =    "0000000000000000000000000000000000000000000000000000000000000000"                                                                                                                                                                                                                                                              +v.toBinaryString(t),i =n.substring(n.length -64);return i.substring(0,1)+"  "+    i.substring( 1,12)+                                                                                       "(exp) "+i.substring(12)+" [ "+e +" ]";}},$i.prototype.interfaces_ =function ()     {return  [ ];},$iprototype.getClass =function (){return $i;},$i.getBit =function (t,e){return 0 !=(t &1 <<    e)?1 :0;},$i.signExpBits =function                                      (t){return t    >>52;} , $i. zeroLowerBits  =function    (  t,  e) { return t  &~((1 << e)  -1) ;},   $i.     numCommonMostSigMantissaBits                                                                                                                                                                                                                                                                                                                                                         =function (t,e){for (var n =0,i =52;i >=0;i-- ){if ($i.getBit(t,i)!==$i.getBit(e,   i))return n;n++ ;}                                                                                                                                                                             return 52;}  ;var tr =  function () {this._commonCoord  =null,this._ccFilter =new  nr() ;}  ,er  =  {    CommonCoordinateFilter:                                                                                                                                        {configurable:!0 },Translater:{configurable:!0 }};tr.prototype.addCommonBits    =function  (t){ var e =new ir(this._commonCoord);t.apply(e),t.geometryChanged();},tr.prototype.removeCommonBits =function  (t){if (0 ===this. _commonCoord.x &&0 ===this._commonCoord.y)return t;var e =new C(this._commonCoord);e.x = -e.x,e.y = -e.y;var  n =new ir(e);return t.apply(n),t.geometryChanged(),t;} , tr.prototype.getCommonCoordinate =                                                                               function (){  return this._commonCoord;},tr. prototype.add =function (t){  t.       apply(   this.                                                                                                                                                                                                                                  _ccFilter) ,this._commonCoord  = this._ccFilter.getCommonCoordinate();} ,  tr.           prototype.                                                                           interfaces_ =function  (  ) {return [ ];},tr.prototype.getClass =function ( ){  return tr;} ,   er.                                                                                         CommonCoordinateFilter.get =function (){return nr;},er.Translater.get =function ()   {return ir;}, Object.defineProperties(tr,er);var nr =function (){this._commonBitsX =new $i(),this._commonBitsY =new $i();};nr.prototype.filter =function ( t){this._commonBitsX.add(t.x),this._commonBitsY.add(t.y);},     nr.prototype. getCommonCoordinate  = function    (){ return  new  C(  this.         _commonBitsX.                                                                                                                  getCommon( ) ,this._commonBitsY.getCommon() );}   ,nr.prototype.interfaces_  =function (){ return [ft]                                                                                        ;},nr.prototype.getClass =function (){return nr;}  ;var ir =function () {this.   trans   =  null;var   t  =                                                                                                                                     
                         arguments[       0];this.trans =t;};ir.prototype.filter = function (t,e){var n =t.getOrdinate(e,0)+this.trans.x,i =t. getOrdinate(e,1)+this. trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,i);},ir.prototype.isDone =function (){return !1;},ir.prototype.isGeometryChanged  =function (){return !0;},ir.prototype.interfaces_ =function (){return  [Ut];},ir.prototype.getClass =function (){ return ir;} ;var rr =function (t,e){this._geom =new  Array(2).fill(null),this._snapTolerance =null,this._cbr =null,this._geom[0]=t,this._geom[1]=e,this.computeSnapTolerance();};rr.prototype.selfSnap =function (t){return new Ji(t).snapTo( t,this._snapTolerance);},rr.prototype.removeCommonBits =function (t){this._cbr =new tr(),this._cbr.add(t[0]),this._cbr.add(t[1]);var e  =new  Array(2).fill(null);return e[ 0]=this._cbr.removeCommonBits(t[0].copy()),e[1]=this._cbr.      removeCommonBits(t[1].copy()),e;}                                                             ,rr.prototype.prepareResult =function (t){return this._cbr.addCommonBits(t),t;},      rr.   prototype.                                                                                                                                                                                                                                                                                                              getResultGeometry =function (t){var e =this.snap(this._geom),n =Lr.overlayOp(e[      0]  , e[  1] , t)                                                                                        ;return this.prepareResult(n);},rr. prototype. checkValid  =function ( t) { t.     isValid( )||Y.outprintln("Snapped geometry is invalid");}, rr.prototype.computeSnapTolerance =function  (){     this.   _snapTolerance    =   Ji.                                        computeOverlaySnapTolerance( this.  _geom[0],this._geom[1])    ;} ,rr.prototype.snap =  function  ( t) {  var  e =this. removeCommonBits(                                                                                                                                                                                                                                                                                                                                                         t)  ;return Ji.snap(e[ 0] ,e[1],this._snapTolerance);},rr.prototype.interfaces_ =       function   (){                                                                                                                                                                              return [     ];}, rr.  prototype.getClass =function  (){return rr;},rr.overlayOp =function  (t, e,n) {   return new                                                                                                                                                    rr(t,e).getResultGeometry(n);},rr.union =function (t,e){return rr.overlayOp(    t,e,Lr. UNION);},rr.intersection =function (t,e) {return rr.overlayOp(t,e,Lr.INTERSECTION);},rr.symDifference   =function (t,e){return rr.overlayOp(t,e,Lr.SYMDIFFERENCE);},rr.difference =function (t,e){return rr.overlayOp(t,e,Lr.DIFFERENCE);};var or = function (t,e) {this._geom  =new Array(2).fill(null),this._geom[ 0]=t,this._geom[1]=e;};or.                                                                               prototype.getResultGeometry  =function (t){var e =null,n =!1,i =null;try {e =   Lr.overlayOp(this.                                                                                                                                                                                                                                   _geom[0],this._geom[1],t);n =!0;}catch (t){if (!(t instanceof $)) throw t;i =  t;}if ( !n)try {e =                                                                           rr.overlayOp(this._geom[0],this._geom[1],t);}catch (t){throw t instanceof $ ?i   :t;}return e;},or.                                                                                         prototype.interfaces_ =function (){return [];},or.prototype.getClass =function ()   {return or;},or.overlayOp =function (t, e,n){return new or(t,e).getResultGeometry(n);} ,or.union = function (t,e){return or.overlayOp(t,e,Lr.  UNION);}, or.intersection =function  (t,e){return or. overlayOp(t, e,Lr.    INTERSECTION);},or.symDifference =function (t,e){return or.overlayOp(t,e,Lr.    SYMDIFFERENCE) ;},                                                                                                                   or.    difference =function (t,e) {return or.overlayOp(t, e,Lr.DIFFERENCE);};var sr =   function ()                                                                                         {this.mce = null,this.chainIndex =null;var t  = arguments[0], e = arguments[1]     ;this. mce =  t,   this.                                                                                                                                      
                         chainIndex =       e;};sr.prototype.computeIntersections =function (t,e){this.mce.computeIntersectsForChain(this.chainIndex, t.mce,t.chainIndex,e);},sr.prototype.interfaces_ =function (){return [];},sr. prototype.getClass =function (){return sr;};var ar =function t(){if (this._label =null,this._xValue =null,this._eventType =null,this._insertEvent =null,this._deleteEventIndex =null,this._obj =null,2 ===arguments.length){var e =arguments[0],n  =arguments[1];this._eventType =t.DELETE,this._xValue =e,this._insertEvent =n;}else if (3 ===arguments.length){var i =arguments[0],r =arguments[1],o =arguments[2];this. _eventType =t.INSERT,this. _label =i,this._xValue = r,this._obj =o;}},ur ={INSERT:{configurable:!0 },DELETE:{configurable:!0 }};ar.prototype.isDelete =function (){return this. _eventType ===ar.DELETE;},ar.prototype.setDeleteEventIndex =         function  ( t)     {       this.                                                             _deleteEventIndex =t;},ar.prototype.getObject =function ( ){return  this._obj;},     ar.    prototype.                                                                                                                                                                                                                                                                                                               compareTo =function  (t){var e =t;return this._xValue <e. _xValue ? -1 : this.    _xValue >e._xValue ?                                                                                      1 :this._eventType <e._eventType ? -1 : this._eventType >e._eventType ?1  :0;},      ar.    prototypegetInsertEvent =function (){return this._insertEvent;},ar.prototype.isInsert =function (){    return this. _eventType  ===   ar.                                          INSERT;},ar.    prototype. isSameLabel =function  ( t){return null !==  this._label &&this._label ===  t.     _label;}                                                                                                                                                                                                                                                                                                                                                                           ,ar. prototype.getDeleteEventIndex =function (){return this. _deleteEventIndex;},     ar.    prototype.                                                                                                                                                                              interfaces_ =function (){return [E];},ar.prototype. getClass =function (){return ar;},ur.INSERT.get =    function                                                                                                                                                     (){return 1;},ur.DELETE.get =function (){return 2;},Object.defineProperties(    ar,ur);var lr =function ( ){};lr.prototype.interfaces_  =function (){return [];} ,lr.prototype.getClass =function ( ){ return lr;};var cr = function (){this._hasIntersection = !1,this. _hasProper =!1,this._hasProperInterior   =!1,this._properIntersectionPoint = null,this. _li =null,this._includeProper =null, this._recordIsolated =null,this.                                                                                 _isSelfIntersection =null,this._numIntersections =  0,this.numTests =0,this.    _bdyNodes = null,                                                                                                                                                                                                                                   this. _isDone =! 1,this._isDoneWhenProperInt = !1;var t = arguments[0],  e  =  arguments[ 1] ,n  =                                                                           arguments[2];this._li = t,this._includeProper =e,this._recordIsolated =n;};cr.           prototype.                                                                                           isTrivialIntersection  =function (t,e,n, i){ if  ( t ===n &&1 ===this.   _li.    getIntersectionNum()){if (cr.isAdjacentSegments(e,i))return !0;if ( t.isClosed()){var r =t.getNumPoints()-1;if ( 0 ===e &&i ===r ||0  === i &&e ===r)return !0;}} return !1;}, cr.prototype.getProperIntersectionPoint =     function ( ) {   return this._properIntersectionPoint;}  , cr.   prototype.    setIsDoneIfProperInt                                                                                                                   =        function   ( t)    {   this._isDoneWhenProperInt   = t;},  cr.  prototype.    hasProperInteriorIntersection                                                                        =  function  ()  {  return  this.  _hasProperInterior;}  , cr.   prototype.   isBoundaryPointInternal   =                                                                                                                                      
                         function  (        t,e){ for ( var n =e.iterator();n.hasNext( ) ;){var i =n.next() .getCoordinate();if (t.isIntersection(i))return !0;}return !1;} ,cr.prototype. hasProperIntersection =function (){return this._hasProper;},cr.prototype.hasIntersection =function (){return this._hasIntersection;},cr.prototype.isDone =function (){return this._isDone;},cr.prototype.isBoundaryPoint =function (t,e){return null !==e &&(!!this.isBoundaryPointInternal(t,e[0])||!!this.isBoundaryPointInternal(t,e[1]));},cr.prototype.setBoundaryNodes =function (t,e){this._bdyNodes =new Array(2).fill(null),this._bdyNodes[0]= t,this._bdyNodes[ 1]=e;},cr.prototype.addIntersections =function (t,e,n,i){ if ( t ===n &&e === i)return null;this.numTests++ ;var r =t.getCoordinates() [e],o =t.getCoordinates()[e +1],s = n.getCoordinates()[i],a =n.getCoordinates()[i +1];this._li.       computeIntersection(r,o,s,a),this.                                                             _li.hasIntersection()&&(this._recordIsolated &&(t.setIsolated(!1),n.setIsolated(    !   1) ) ,   this.                                                                                                                                                                                                                                                                                                               _numIntersections++  , this.isTrivialIntersection(   t, e,  n, i) || (   this.    _hasIntersection =!                                                                                       0,!this._includeProper &&this._li.isProper()||(t.addIntersections(this._li,e,0)          ,          naddIntersections( this._li,i,1)), this._li.isProper() &&( this._properIntersectionPoint =    this._li.getIntersection(0).copy(),                                                    this.   _hasProper = !0,this._isDoneWhenProperInt &&(this._isDone =! 0),this.isBoundaryPoint(this.     _li,                                                                                                                                                                                                                                                                                                                                                                              this. _bdyNodes)||(this._hasProperInterior =!0))));} ,cr.prototype.interfaces_ =     function    ( ) {                                                                                                                                                                               return [    ];},cr.prototype.getClass =function (){return cr;},cr.isAdjacentSegments =function (t,e){    return 1                                                                                                                                                    ===Math.abs(t -e);}  ;var pr =function ( t) {function e(){t.call(this),this.    events =new Nt(),this.nOverlaps =null;}return t &&(  e.__proto__ = t),e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e. prototype.prepareEvents =function (){$e.sort(this.events);for (var t =0;t <this.events.size();t++ ){var e =this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t);} },e.prototype.                                                                                computeIntersections   =function   (){if  (1  ===   arguments.length){var t =   arguments[0];this.                                                                                                                                                                                                                                  nOverlaps  =0,this.prepareEvents( );for (var e =0;e <this.events.size();e++ ){  var n =this.events.                                                                           get(e);if (n.isInsert()&&this.processOverlaps(e,n.getDeleteEventIndex(), n,t),  t.isDone())break ;}                                                                                         }else if (3 ===arguments.length)if (arguments[2]instanceof cr &&T(arguments[0],   xt)&&T(arguments[1],xt)){var i =arguments[0],r =arguments[1],o  =arguments[2];this.addEdges(i,i),this.addEdges(r,r),this.computeIntersections(o);}else if ("boolean"==typeof arguments[2]&&T(arguments[0],xt)&&arguments[     1]instanceof cr){var  s =arguments[0] , a =arguments[1];arguments[2] ?this.     addEdges(s,null) :                                                                                                                   this.  addEdges(s),this.computeIntersections(a);}},e.prototype.addEdge =function (t,     e){for (var                                                                                      n =t.getMonotoneChainEdge( ),i =n.getStartIndexes(),r =0;r <i.length -1;r++ ){   var o =new sr(n,r) ,s =new                                                                                                                                       
                           ar(e,   n.       getMinX(r),o);this.events.add(s),this.events.add(new ar(n.getMaxX(r),s));}},e.prototype.processOverlaps =function (t,e,n,i){for (var r  =n.getObject(),o =t;o <e;o++ ){var s =this.events.get(o);if (s.isInsert()){var a =s.getObject();n.isSameLabel(s) ||(r.computeIntersections(a,i),this.nOverlaps++ );}}},e.prototype.addEdges =function (){if (1 ===arguments.length)for (var t =arguments[0].iterator();t.hasNext();){var e =t.next( );this.addEdge(e,e);}else if (2 ===arguments.length)for (var n =arguments[0],i =arguments[1],r =n.iterator();r.hasNext();){var o =r.next();this.addEdge(o,i);}},e.prototype.interfaces_ =function (){return [];},e.prototype.getClass =function (){return e;},e;}(lr),hr =function (){this._min =v.POSITIVE_INFINITY,this._max =v.NEGATIVE_INFINITY;},fr ={NodeComparator:{configurable:!0 }};hr.prototype.getMin =      function (){return this._min;},hr.                                                              prototype.intersects =function (t,e){return !(this._min >e ||this._max <t);},hr.     prototype.getMax =                                                                                                                                                                                                                                                                                                             function (){return  this._max;},hr. prototype.toString = function (){ return Z.    toLineString(new C(                                                                                       this. _min,0), new C( this._max,0));},hr. prototype.interfaces_ = function ( ){     return [];}   ,hrprototype.getClass =function (){return hr;},fr.NodeComparator.get =function (){return gr;}   ,  Object.defineProperties(hr, fr)                                                 ;var gr  =    function (){};gr.prototype.compare =function (t,e){var n =t,i =e,r =(n._min +n._max)/2,o =     (i.                                                                                                                                                                                                                                                                                                                                                                             _min +i._max)/2;return r <o ? -1 :r >o ?1 :0;},gr.prototype.interfaces_ =function   (){return [N];},gr.                                                                                                                                                                                prototype.  getClass = function (){return gr;};var dr =function ( t){function e(){t.call(this), this.    _item =                                                                                                                                                    null;var e =arguments[ 0],n =arguments[1],i =arguments[2];this._min =e,this.    _max =n,this._item =i;}return t &&(e.__proto__ =t),e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e.prototype.query =function (t,e,n){if (!this.intersects(t,e))return null;n.visitItem(this._item);},e.prototype.interfaces_ =function  (){return [];},e.prototype.getClass =function (){return e;},e;}(hr),yr =function (t){                                                                                 function e(){t. call(this),  this. _node1  = null,this._node2 =null;var  e =   arguments[0], n  =                                                                                                                                                                                                                                   arguments[1];this._node1 =e,this._node2 =n,this.buildExtent(this._node1,this.  _node2);}return t &&                                                                           (e.__proto__ =t),e.prototype   = Object. create(t &&t.prototype),e.prototype.  constructor = e, e.                                                                                         prototype.buildExtent =function  (t,e){this._min  =Math.  min(t._min,e._min),     this._max = Math.max(t._max,e._max);},e.prototype.query =function  (t,e,n) {if (!this.intersects(t,e))return null;null !==this._node1 &&this._node1. query(t, e,n),null  !==this._node2 &&this._node2.query(t,e,n) ;} ,e.    prototype. interfaces_ =function (){  return [  ] ;},e.prototype. getClass =      function    ( ){                                                                                                                    return e;} ,e;}(hr),_r =function (){this._leaves =new Nt(),this._root =null,this._level =  0;}   ;_r.                                                                                    prototype.buildTree =function (){$e.sort(this._leaves,new hr.NodeComparator())   ;for (var t =this._leaves,e                                                                                                                                       
                         =null,n =new        Nt();;){if (this.buildLevel(t,n),1 ===n.size())return n.get(0);e =t,t =n,n =e;}},_r.prototype.insert =function (t,e,n){if (null !==this._root)throw new Error("Index cannot be added to once it has been queried");this._leaves.add(new dr(t,e,n));},_r.prototype.query =function (t,e,n){this.init(),this._root.query(t,e,n);},_r.prototype.buildRoot =function (){if (null !==this._root)return null;this._root =this.buildTree();}, _r.prototype.printNode =function (t){Y.out.println(Z.toLineString(new C(t._min,this._level),new C(t._max,this._level)));},_r.prototype.init =function (){if (null !==this._root)return null;this.buildRoot();},_r.prototype.buildLevel =function (t,e){this._level++ ,e.clear();for (var n =0;n < t.size();n +=2){var i =t.get(n);if (null ===(n +1 <t.size()?t.get(n):null))e.add(i);else {var r =new yr(t.get(n),t.        get(n +1))  ;e. add(  r);} }} ,_r.                                                              prototype.interfaces_ =function (){return [];},_r.prototype.getClass =function (    ){ return _r;};var                                                                                                                                                                                                                                                                                                               mr =function (){this._items =new Nt();};mr.prototype.visitItem =function  (t){    this._items. add(t)                                                                                       ;} ,mr.prototype.getItems =  function (){return  this. _items;}, mr. prototype.        interfacesfunction ( ){return [Ke];},mr. prototype.getClass =function   ( ){return mr;} ;var vr  =    function (){this._index =null;var t                                                =arguments[0]    ;if (! T(t,Zt))throw new m("Argument must be Polygonal" );this._index =new xr(t);} ,Ir ={     SegmentVisitor:                                                                                                                                                                                                                                                                                                                                                                 { configurable:!0 },IntervalIndexedGeometry: {configurable:!0  }};vr. prototype.   locate =function  (                                                                                                                                                                                 t){var e   =new st( t),n  =new Er(e);return this.  _index.query(t.y, t. y, n)  ,e.getLocation();},vr.   prototype.                                                                                                                                                 interfaces_ =function ( ){return [Vn];},vr.prototype. getClass =function (){    return vr;},Ir.SegmentVisitor.get =function  (){return Er;},Ir.IntervalIndexedGeometry.get =function (){return xr;},Object.defineProperties(vr,Ir);var Er =function () {this._counter =null;var t =arguments[0];this._counter =t;};Er.prototype.visitItem =function (t){var e =t;this._counter.countSegment(e.getCoordinate(0),e.getCoordinate(1));},                                                                                 Er.prototype.interfaces_ =function () {return [Ke];}, Er.prototype.getClass =    function  (  )  {                                                                                                                                                                                                                                   return Er;};var xr  =function (){this._index = new _r( ) ;var t =arguments[0]  ;this.init(t);};xr.                                                                           prototype.init =function (t){for (var e =Ci.getLines(t).iterator();e.hasNext()  ;){var n =e.next().                                                                                       getCoordinates();this.addLine(n);}},xr.prototype.addLine =function (t){for (var     e =1;e <t.length;e++ ){var n =new dn(t[e -1],t[ e]),i =Math.min(n.p0.y,n.p1.y),r =Math.max(n.p0.y,n.p1.y);this._index.insert(i,r,n);}},xr.prototype.query =function (){if (2 ===arguments.length){var t =arguments[0],e =    arguments[1],n =new mr();return this._index.query(t,e,n),n.getItems();}if (3      ===    arguments.                                                                                                                    length) {var i =arguments[0],r =arguments[1],o =arguments[2];this._index.query(i,r,o)     ;} } , xr.                                                                                     prototype.interfaces_ = function ( ){return  [ ];},xr. prototype.getClass  =     function ( ) {return xr;}                                                                                                                                        
                            ;var Nr =        function (t){function e(){if (t.call(this),this._parentGeom =null,this._lineEdgeMap =new he(),this._boundaryNodeRule =null,this._useBoundaryDeterminationRule =!0,this._argIndex =null,this._boundaryNodes =null,this._hasTooFewPoints =!1,this._invalidPoint =null,this._areaPtLocator =null,this._ptLocator =new Si(),2 ===arguments.length){var e =arguments[0],n =arguments[1],i =gt.OGC_SFS_BOUNDARY_RULE;this._argIndex =e,this._parentGeom =n,this._boundaryNodeRule =i,null !==n &&this.add(n);}else if (3 ===arguments.length){var r =arguments[0],o =arguments[1],s =arguments[2];this._argIndex =r,this._parentGeom =o,this._boundaryNodeRule =s,null !==o &&this.add(o);}}return t &&(e.__proto__ =t),e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e.prototype.insertBoundaryPoint =function (t,n){var i =this._nodes.        addNode( n).getLabel(), r   =1;w.                                                               NONE;i.getLocation(t,Se.ON)===w.BOUNDARY &&r++ ;var o =e.determineBoundary(this.    _boundaryNodeRule,                                                                                                                                                                                                                                                                                                              r);i.setLocation( t,o);} ,e.prototype.computeSelfNodes =function  (){if (2  ===    arguments.length) {                                                                                       var t =arguments[0],e =arguments[1];return this.computeSelfNodes(t,e,!1);}if (3       ===   arguments.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      length){  var n =arguments[0],i =arguments[1],r = arguments[2],o =new  cr( n, ! 0,!1) ;o.    setIsDoneIfProperInt( r) ;var  s  =                                                          this.   createEdgeSetIntersector(),a =this._parentGeom instanceof ee ||this._parentGeom instanceof     $t ||                                                                                                                                                                                                                                                                                                                                                                         this._parentGeom instanceof ne,u   =i  || !a;return s.computeIntersections( this.    _edges,o,u), this.                                                                                                                                                                                  addSelfIntersectionNodes( this._argIndex),o;}},e.prototype.computeSplitEdges =function (t){for (var e =this._edges. iterator(                                                                                                                                      ); e. hasNext() ;) { e.next()   .eiList.addSplitEdges( t);}}, e. prototype.    computeEdgeIntersections =function (t,e,n) {var i =new cr(e,n,!0);i.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes( ));return this.createEdgeSetIntersector().computeIntersections(this._edges,t._edges,i),i;},e.prototype.getGeometry =function (){return this._parentGeom;},e.prototype.getBoundaryNodeRule =function  (){return this.                                                                                 _boundaryNodeRule;},e.prototype.  hasTooFewPoints =function (  ){return this.   _hasTooFewPoints;}                                                                                                                                                                                                                                  ,e.prototype.addPoint = function (){ if  (arguments[0]instanceof Qt) {var t  =    arguments[  0]  .                                                                           getCoordinate() ;this.insertPoint(this._argIndex, t,   w.INTERIOR);}else  if (    arguments[     0]                                                                                        instanceof C){   var e  =arguments[ 0];this. insertPoint(this._argIndex, e,w.   INTERIOR);}},e.prototype.addPolygon  = function (t){this.addPolygonRing(t.getExteriorRing(),w.EXTERIOR,w.INTERIOR);for (var  e = 0;e <t.getNumInteriorRing( );e++ ){ var n =t.getInteriorRingN(e);this.addPolygonRing( n,w.     INTERIOR,w.EXTERIOR);}},e.prototype.addEdge =function (t){this.insertEdge(t)        ;var e   =  t.                                                                                                                     getCoordinates(  );this.insertPoint(  this._argIndex,e[0] ,w.BOUNDARY),this.insertPoint(this. _argIndex,e[                                                                              e.length -1],w.BOUNDARY);},e.prototype.addLineString =function (t){var e =Lt.     removeRepeatedPoints(  t.                                                                                                                                        
                           getCoordinates(    ));if (e.length <2)return this._hasTooFewPoints =!0,this._invalidPoint =e[0],null;var n =new ni(e,new Pe(this._argIndex,w.INTERIOR));this._lineEdgeMap.put(t,n),this.insertEdge(n),et.isTrue(e.length >=2,"found LineString with single point"),this.insertBoundaryPoint(this._argIndex,e[0]),this.insertBoundaryPoint(this._argIndex,e[e.length -1]);},e.prototype.getInvalidPoint =function (){return this._invalidPoint;},e.prototype.getBoundaryPoints =function (){for (var t =this.getBoundaryNodes(),e =new Array(t.size()).fill(null),n =0,i =t.iterator();i.hasNext();){var r =i.next();e[n++ ]=r.getCoordinate().copy();}return e;},e.prototype.getBoundaryNodes =function (){return null ===this._boundaryNodes &&(this._boundaryNodes =this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes;},e.prototype.addSelfIntersectionNode =     function (   t, e, n){ if  (  this.                                                                 isBoundaryNode( t,e)      )    return  null;n   ===    w.BOUNDARY   &&   this.    _useBoundaryDeterminationRule                                                                                                                                                                                                                                                                                                   ?this.insertBoundaryPoint( t,e) : this. insertPoint(t, e,n)  ;}  , e.prototype.     addPolygonRing   =                                                                                       function (t,e,n){if ( t.isEmpty())return null;var i =Lt.removeRepeatedPoints(t.    getCoordinatesif (i.length <4)return this._hasTooFewPoints =!0,this._invalidPoint =i[0],null;var r =e,o   =n;at.isCCW(i)&&(r =n,o =e);var s =                                                      new ni(i,new    Pe(this._argIndex,w.BOUNDARY,r,o));this._lineEdgeMap.put(t,s), this. insertEdge(s), this.     insertPoint(                                                                                                                                                                                                                                                                                                                                                                 this._argIndex,i[0],w.BOUNDARY);},e.prototype.insertPoint =function (t,e,n){var i    = this.   _nodes.                                                                                                                                                                                    addNode(    e),r =i.getLabel();null === r  ?i. _label =new Pe(t,n):r.setLocation(t,n);},e.prototype.    createEdgeSetIntersector                                                                                                                                 = function ( ){return new  pr();}  ,e.prototype. addSelfIntersectionNodes  =    function (t){for  (var e =this._edges.iterator();e.hasNext();)for (var n =e.next(),i =n.getLabel().getLocation(t),r =n.eiList.iterator();r.hasNext(); ){var o =r.next();this.addSelfIntersectionNode(t, o.coord,i);}},e.prototype.add =function (){if (1 !==arguments.length)return t.prototype.add.apply(this,arguments);var e =arguments[0];if (e.                                                                                     isEmpty(  )     )    return null;if  (   e   instanceof    ne  &&  ( this.   _useBoundaryDeterminationRule                                                                                                                                                                                                                       =!1), e instanceof $t)this.addPolygon( e);else   if (e  instanceof Kt)   this.  addLineString(   e)                                                                           ;else   if (e instanceof Qt)this.addPoint(e);else if  ( e  instanceof te)this.  addCollection(   e)                                                                                       ;else  if ( e  instanceof  Xt)this.addCollection(e);else if (e instanceof ne)   this.addCollection(e) ;else {if (!  (e instanceof zt) )                                                                                                                                                                          throw new Error(e.getClass(  ). getName( )  ) ;this.addCollection(e);}},  e.            prototype.                                                                                                                      addCollection  =function (t) {for ( var  e  =0; e <t.getNumGeometries( ) ; e++ ) {var  n =t. getGeometryN(                                                                           e);this.add(n);}}, e.prototype.locate =function (t){return T(this._parentGeom,   Zt) &&   this. _parentGeom.                                                                                                                                         
                            getNumGeometries( )>50 ?(null ===this._areaPtLocator &&(this._areaPtLocator =new vr(this._parentGeom)),this._areaPtLocator.locate(t)):this._ptLocator.locate(t,this._parentGeom);},e.prototype.findEdge =function (){if (1 ===arguments.length){var e =arguments[0];return this._lineEdgeMap.get(e);}return t.prototype.findEdge.apply(this,arguments);},e.prototype.interfaces_ =function (){return [];},e.prototype.getClass =function (){return e;},e.determineBoundary =function (t,e){return t.isInBoundary(e)?w.BOUNDARY :w.INTERIOR;},e;}(Ye),Cr =function (){if (this._li =new rt(),this._resultPrecisionModel =null,this._arg =null,1 ===arguments.length){var t =arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this._arg =new Array(1).fill(null),this._arg[0]=new Nr(0,t);}else if (2 ===arguments.length){var e =arguments[0],n =arguments[1],        i = gt. OGC_SFS_BOUNDARY_RULE;e.                                                                    getPrecisionModel( )  . compareTo( n.  getPrecisionModel(  ) )>=0   ?  this.    setComputationPrecision(                                                                                                                                                                                                                                                                                                        e. getPrecisionModel() ):  this.setComputationPrecision(n.getPrecisionModel()),    this. _arg     =new                                                                                       Array(2).fill(null),this._arg[0]=new Nr(0,e,i),this._arg[1]=new Nr(1,n,i);}else    if (3 ===argumentslength){var r =arguments[0] , o  =arguments[1],s  =arguments[2];r. getPrecisionModel( ).   compareTo(o.getPrecisionModel())>=0                                                            ?  this.     setComputationPrecision( r. getPrecisionModel()  )  :  this.  setComputationPrecision(o.     getPrecisionModel(                                                                                                                                                                                                                                                                                                                                                          )),this._arg =new Array(2).fill(null),this._arg[0]=new Nr(0,r,s),this._arg[1]=new   Nr(1, o,s);}} ;Cr.                                                                                                                                                                                    prototype.   getArgGeometry  = function (t){return this._arg[ t]   .getGeometry( ) ;} ,Cr. prototype.    setComputationPrecision                                                                                                                                 =function (t){this._resultPrecisionModel =t,this._li.setPrecisionModel(this.    _resultPrecisionModel);},Cr.prototype.interfaces_ =function (){return [];},Cr.prototype. getClass =function (){return Cr;};var   Sr =function (){ };Sr.prototype.interfaces_ =function (){return [];},Sr.prototype.getClass =function () {return Sr;},Sr.map =function (){if (arguments[0]instanceof ct &&T(arguments[1], Sr. MapOp)){for (var  t =                                                                                   arguments[0],e =arguments[1], n =new Nt(),i =0;i <t.getNumGeometries();i++ ){    var r   = e.map(t.                                                                                                                                                                                                                                 getGeometryN(i));null !==r  &&n.add(r);}return t.getFactory().buildGeometry(n)  ;}if (T( arguments[                                                                           0],It)&&T(arguments[1],Sr.MapOp)){for (var o =arguments[0],s =arguments[1],a =   new  Nt( ) ,u  =o.                                                                                       iterator();u.hasNext() ;){var l =u.next(),c =s.map(l);null !==c && a.add(c);}    return  a;}} ,Sr.MapOp =function () {};var Lr =                                                                                                                                                                                 function (t){function e(){var e =arguments[0],n =arguments[1];t.call(this,e,    n),this._ptLocator                                                                                                                         =    new  Si(),this._geomFact  =null,this._resultGeom =null,this._graph =null,this.   _edgeList =                                                                                 new Hn(),this._resultPolyList =new Nt() ,this._resultLineList =new Nt(),this.    _resultPointList =new Nt()                                                                                                                                          
                               ,  this.        _graph =new Ye(new kn()),this._geomFact =e.getFactory();}return t &&(e.__proto__ =t),e.prototype =Object.create(t &&t.prototype),e.prototype.constructor =e,e.prototype.insertUniqueEdge =function (t){var e =this._edgeList.findEqualEdge(t);if (null !==e){var n =e.getLabel(),i =t.getLabel();e.isPointwiseEqual(t)||(i =new Pe(t.getLabel())).flip();var r =e.getDepth();r.isNull()&&r.add(n),r.add(  i),n.merge(i);}else this._edgeList.add(t);},e.prototype.getGraph =function (){return this._graph;},e.prototype.cancelDuplicateResultEdges =function (){for (var t =this._graph.getEdgeEnds().iterator();t.hasNext();){var e =t.next(),n =e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1));}},e.prototype.isCoveredByLA =function (t){return !!this.isCovered(t,this._resultLineList)||!!this.isCovered(t,this.        _resultPolyList) ;}, e. prototype.                                                                computeGeometry =function (t,n,i,r){var o =new Nt();return o.addAll(t),o.addAll(    n),o.addAll(i) ,o.                                                                                                                                                                                                                                                                                                              isEmpty()? e.createEmptyResult( r,this. _arg[0] . getGeometry(), this._arg[ 1].    getGeometry(),this.                                                                                       _geomFact): this._geomFact. buildGeometry(o) ;} ,e.prototype. mergeSymLabels  =     function  (){forvar t =this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().mergeSymLabels(    );} }, e.  prototype. isCovered  =                                                           function (t,   e){for  (var n =e.iterator();n.hasNext();){var i =n.next();if (this._ptLocator.locate(t,i)     !==                                                                                                                                                                                                                                                                                                                                                                       w.EXTERIOR)return !0;}return !1;},e.prototype.replaceCollapsedEdges =function (){   for (var t =new Nt(                                                                                                                                                                                     ),e   =    this._edgeList.iterator();e.hasNext();){var n =e.next( );n.isCollapsed()&&( e.remove(),t.    add(  n.                                                                                                                                                 getCollapsedEdge( ) ) ) ;}   this. _edgeList. addAll(t)  ;} ,e. prototype.    updateNodeLabelling =function (){for (var t =this._graph.getNodes().iterator();t.hasNext();){var e =t.next(),n =e.getEdges().getLabel();e.getLabel().merge(n);}},e.prototype.getResultGeometry =function (t){return this.computeOverlay(t),this._resultGeom;},e.prototype.insertUniqueEdges =function (t){for (var e =t.iterator();e.hasNext();){                                                                                      var  n =e. next();this.insertUniqueEdge(n);}} ,e.prototype.computeOverlay  =   function (t){ this.                                                                                                                                                                                                                                 copyPoints(0),this.copyPoints(1),this._arg[ 0]. computeSelfNodes(this._li,!1),   this.  _arg[1]   .                                                                           computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[  1],this._li,!0);var                                                                                      e =new Nt();this._arg[0].computeSplitEdges(e),this._arg[1].computeSplitEdges(    e)  ,this. insertUniqueEdges( e)  , this.                                                                                                                                                                                        computeLabelsFromDepths(),this.replaceCollapsedEdges(), Yi. checkValid(this.            _edgeList.                                                                                                                       getEdges( )),this._graph.addEdges( this._edgeList.getEdges() ),this.computeLabelling(),        this.                                                                                  labelIncompleteNodes(     )  ,    this. findResultAreaEdges(   t)  ,  this.   cancelDuplicateResultEdges(                                                                                                                                          
                             );var  n  =       new ke(this._geomFact);n.add(this._graph),this._resultPolyList =n.getPolygons();var i =new ji(this,this._geomFact,this._ptLocator);this._resultLineList =i. build(t);var r =new Hi(this,this._geomFact,this._ptLocator);this._resultPointList =r.build(t),this._resultGeom =this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,t);},e.prototype.labelIncompleteNode =function (t,e){var n =this._ptLocator.locate(t.getCoordinate(),this._arg[e].getGeometry());t.getLabel().setLocation(e,n);},e.prototype.copyPoints =function (t){for (var e =this._arg[t].getNodeIterator();e.hasNext();){var n =e.next();this._graph.addNode(n.getCoordinate()).setLabel(t,n.getLabel().getLocation(t));}},e.prototype.findResultAreaEdges =function (t){for (var n =this._graph.getEdgeEnds().iterator();n.hasNext();){var i =n.       next(),r =i.getLabel();r.isArea()&&                                                                !i.isInteriorAreaEdge()&&e.isResultOfOp(r.getLocation(0,Se.RIGHT),r.getLocation(    1,Se.RIGHT),t)&&i.                                                                                                                                                                                                                                                                                                              setInResult(!0);}},e.prototype.computeLabelsFromDepths =function (){for (var t =     this. _edgeList.                                                                                        iterator();t.hasNext();){var e =t.next(),n =e.getLabel(),i =e.getDepth();if  (!    i. isNull( ) )  {i.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 normalize( );for (var r =0;  r <2;r++ ) n.isNull(r)||!n.  isArea() ||i.isNull(r)||(0 ===i.   getDelta(r)?n.toLine(r):(et.isTrue(                                                             !i.isNull(r,    Se.LEFT), "depth of LEFT side has not been initialized") ,   n. setLocation( r,Se.LEFT,i.     getLocation(                                                                                                                                                                                                                                                                                                                                                                 r, Se.      LEFT)   )     , et.  isTrue(    ! i.isNull(  r,  Se.    RIGHT)  ,   "depth of RIGHT side has not been initialized"                                                                                                                                                             ), n.   setLocation(r,Se.RIGHT,i.getLocation(r, Se.RIGHT)))) ;}}}, e.prototype. computeLabelling =   function                                                                                                                                               (){for  (var t =this._graph.getNodes()  .iterator(); t.hasNext();){t.next().    getEdges(). computeLabelling(this._arg);}this.mergeSymLabels(),this.updateNodeLabelling();},e.prototype.labelIncompleteNodes =function (){for (var t =this._graph.getNodes().iterator();t.hasNext();){var e =t.next(),n =e.getLabel();e.isIsolated()&&(n.isNull(0)?this.labelIncompleteNode(e,0):this.labelIncompleteNode(e,1)),e.getEdges().                                                                                         updateLabelling(n);}},e.prototype.  isCoveredByA =function (t){return !!this.    isCovered( t,this.                                                                                                                                                                                                                                  _resultPolyList) ;},e.   prototype. interfaces_ = function (){return  [];},e.  prototype.getClass =                                                                          function (){return e;},e;}(Cr);Lr.overlayOp =function (t,e,n){return new Lr(t,          e)        .                                                                                      getResultGeometry(n);},Lr.intersection =function ( t,e){if (t. isEmpty()||e.    isEmpty())return Lr. createEmptyResult(                                                                                                                                                                                           Lr.INTERSECTION,t,e, t.getFactory()) ;if (t.isGeometryCollection()) {var n =    e;return ki.map(t,                                                                                                                          {    interfaces_: function (){return [Sr. MapOp] ;} ,map:function (  t) { return  t.  intersection(                                                                            n);}});}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),     or.  overlayOp(t, e, Lr.                                                                                                                                           
                             INTERSECTION)      ;},Lr.symDifference =function (t,e){if (t.isEmpty()||e.isEmpty()){if (t.isEmpty()&&e.isEmpty())return Lr.createEmptyResult(Lr.SYMDIFFERENCE,t,e,t.getFactory());if (t.isEmpty())return e.copy();if (e.isEmpty())return t.copy();}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.SYMDIFFERENCE);},Lr.resultDimension =function (t,e,n){var i  =e.getDimension(),r =n.getDimension(),o = -1;switch (t){case Lr.INTERSECTION:o =Math.min(i,r);break ;case Lr.UNION:o =Math. max(i,r);break ;case Lr.DIFFERENCE:o =i;break ;case Lr.SYMDIFFERENCE: o =Math.max(i,r);}return o;},Lr.createEmptyResult =function (t,e,n,i){var r =null;switch (Lr.resultDimension( t,e,n)){case -1:r =i.createGeometryCollection(new Array( 0).fill(null));break ;case 0:r =i.createPoint();break ;case 1:r =i.createLineString()       ;break ;case 2:r =i.createPolygon()                                                                   ;} return r;},Lr.difference =function   ( t, e) { return t. isEmpty(  )  ?Lr.    createEmptyResult(                                                                                                                                                                                                                                                                                                               Lr. DIFFERENCE, t, e,t.  getFactory(  ) )  : e. isEmpty( ) ?  t. copy() : ( t.    checkNotGeometryCollection(                                                                               t), t.checkNotGeometryCollection(e),  or.overlayOp(t, e,  Lr.DIFFERENCE));},Lr.       isResultOfOp   =                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                function   (){if (  2 === arguments.length){var  t =arguments[0],e   =arguments[ 1], n =t.   getLocation(0),i = t.getLocation(1)                                                                ;return Lr.   isResultOfOp(n,i,e);}if (3 ===arguments.length) {var   r =arguments[0],o =arguments[1],s =     arguments[                                                                                                                                                                                                                                                                                                                                                              2];switch (r ===w.BOUNDARY &&(r =w.INTERIOR),o ===w.BOUNDARY &&(o =w.INTERIOR),s)      {  case      Lr.                                                                                                                                                                                      INTERSECTION: return r ===w.INTERIOR &&o  ===w.INTERIOR;case Lr.UNION:return r ===w.INTERIOR ||o ===w.   INTERIOR;case                                                                                                                                          Lr.DIFFERENCE:  return    r === w.INTERIOR  &&o   !== w.INTERIOR;case  Lr.    SYMDIFFERENCE: return  r   ===w.  INTERIOR &&o !== w.INTERIOR   || r   !==w.   INTERIOR &&  o  ===w.     INTERIOR;} return ! 1;}},Lr.INTERSECTION =1,Lr.UNION = 2,  Lr.   DIFFERENCE = 3,Lr. SYMDIFFERENCE     =  4;var br = function () {this.  _g  =   null, this. _boundaryDistanceTolerance =     null,         this. _linework =                                                                                                 null,this. _ptLocator = new Si(),this._seg =new dn();var t =arguments[ 0],e =   arguments[1];this.                                                                                                                                                                                                                                  _g =t,this._boundaryDistanceTolerance =e,this._linework =this.extractLinework(  t) ;};br.prototype.                                                                           isWithinToleranceOfBoundary   =function (t){for  (var e  =0;e <this._linework.  getNumGeometries();                                                                                     e++ )for (var n =this._linework.getGeometryN(e).getCoordinateSequence(),i =0;   i  <n.size()-1;i++ ){n.getCoordinate(                                                                                                                                                                                              i,this._seg.p0),n.getCoordinate(i +1,this._seg.p1);if (this._seg.distance(t)            <=   this.                                                                                                                         _boundaryDistanceTolerance) return  !0;}return !1;},br.prototype.getLocation =function  (t) { return this. isWithinToleranceOfBoundary(                                            t)?w.BOUNDARY :this._ptLocator.locate( t,  this.  _g) ;}   ,br. prototype.    extractLinework =function (                                                                                                                                           
                              t) {var e =        new wr();t.apply(e);var n =e.getLinework(),i =_e.toLineStringArray(n);return t.getFactory().createMultiLineString(i);},br.prototype.interfaces_ =function (){return [];},br.prototype.getClass =function (){return br;};var wr =function (){this._linework =null,this._linework =new Nt();};wr.prototype.getLinework =function (){return this._linework;},wr.prototype.filter =function (t){if (t instanceof $t){var e =t;this._linework.add(e.getExteriorRing());for (var n =0;n <e.getNumInteriorRing();n++ )this._linework.add(e.getInteriorRingN(n));}},wr.prototype.interfaces_ =function (){return [Vt];},wr.prototype.getClass =function (){return wr;};var Or =function (){this._g =null,this._doLeft =!0,this._doRight =!0;var t =arguments[0] ;this._g =t;};Or.prototype.extractPoints =function (t,e,n){for (var i =t.getCoordinates(),r =       0; r  <i.  length -1; r++  ) this.                                                                  computeOffsetPoints(i[ r], i[r + 1],e,n);}, Or.  prototype.setSidesToGenerate  =     function (  t,e){                                                                                                                                                                                                                                                                                                              this._doLeft =t,this._doRight =e;},Or.prototype.getPoints = function ( t){for (    var e =new Nt(),n =                                                                                        Ci.getLines(this.  _g). iterator();n.hasNext()    ;) {var i   =n. next();this.    extractPoints(i, t,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               e);}return e;},Or.prototype.computeOffsetPoints =function (t,e,n,i){var r =e.x -t.x,o =e.y   -t.y,s =Math.sqrt(r *r +o *o),a =n *                                                               r /s,u =n *o /   s,l =(e.x +t.x)/2,c =(e.y +t.y)/2;if (this._doLeft){var p =new C(l -u,c +a);i.add(p);}if (    this.                                                                                                                                                                                                                                                                                                                                                                  _doRight){var h =new C(l +u,c -a);i.add(h);}},Or.prototype.interfaces_ =function (  ){ return [];}, Or.                                                                                                                                                                                       prototype.  getClass =function (){return Or;};var Tr =function t(){this._geom =null,this._locFinder =      null,                                                                                                                                             this._location = new Array(3).fill(null), this._invalidLocation  =null,this.    _boundaryDistanceTolerance                                                                                                                                                                                                                                                                                                                                                                                                            =t.TOLERANCE,this._testCoords =new Nt();var e =arguments[0],n =arguments[1],i   =  arguments[   2]                                                                                                                                                                                                                                  ;this. _boundaryDistanceTolerance = t.computeBoundaryDistanceTolerance(e, n) ,  this._geom =[e,n,i]                                                                           , this._locFinder =[new br(this._geom[0],this._boundaryDistanceTolerance), new  br( this._geom[ 1],                                                                                     this.  _boundaryDistanceTolerance)   , new    br(  this.  _geom[  2] ,  this.   _boundaryDistanceTolerance)];},Rr =                                                                                                                                                                                                {TOLERANCE: {configurable:!0 }};Tr.prototype.reportResult =function (t,e,n){    Y. out.   println(                                                                                                                         "Overlay result invalid - A:" +w.toLocationSymbol(e[0])+" B:"+w.toLocationSymbol(e[1])+" expected:"+(n ?"i":   "e"  )  +                                                        " actual:"+w.toLocationSymbol( e[ 2]));} ,Tr.prototype.isValid =function (t){   this.addTestPts(this._geom[                                                                                                                                            
                              0]  ), this.       addTestPts(this._geom[1]);var e =this.checkValid(t);return e;},Tr.prototype.checkValid =function (){if (1 ===arguments.length){for (var t =arguments[0],e =0;e <this._testCoords.size();e++ ){var n =this._testCoords.get(e);if (!this.checkValid(t,n))return this._invalidLocation =n,!1;}return !0;}if (2 ===arguments.length){var i =arguments[0],r =arguments[1];return this._location[0]=this._locFinder[0].getLocation(r),this._location[1]=this._locFinder[1].getLocation(r),this._location[2]=this._locFinder[2].getLocation(r),!!Tr.hasLocation(this._location,w.BOUNDARY)||this.isValidResult(i,this._location);}},Tr.prototype.addTestPts =function (t){var e =new Or(t);this._testCoords.addAll(e.getPoints(5 *this._boundaryDistanceTolerance));},Tr.prototype.isValidResult =function (t,e){var n =Lr.isResultOfOp(e[0],e[1],t),i =!(n       ^ e[ 2] === w.INTERIOR);return i ||                                                                  this. reportResult(t,e,  n),i;}, Tr.prototype.  getInvalidLocation =function (){     return      this.                                                                                                                                                                                                                                                                                                              _invalidLocation;} ,  Tr.prototype.interfaces_ =function  () {return [ ];}, Tr.    prototype.getClass =                                                                                      function (){return Tr;},Tr.hasLocation =function (t,e){for (var n =0;n <3;n++ )     if  ( t[ n]===  e)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              return !0;return  !1;},Tr.computeBoundaryDistanceTolerance =function  ( t,e){return Math.                  min(              Ji.                                                                   computeSizeBasedSnapTolerance( t),Ji.computeSizeBasedSnapTolerance(e));},Tr.isValid =function (t,e,n,i){return new Tr(t, e,i)                                                                                                                                                                                                                                                                                                                                                       .   isValid(   n);}, Rr.  TOLERANCE.get   = function () { return 1e-6;} , Object.     defineProperties(                                                                                                                                                                                        Tr, Rr)     ;var Pr  =function t(e)  {this._geomFactory =null,this._skipEmpty =!1,this._inputGeoms =       null,                                                                                                                                            this._geomFactory =t. extractFactory(e),this._inputGeoms =e;} ;Pr.prototype.     extractElements  =                                                                                                                                                                                                                                                                                                                                                                                                                   function (t,e){if (null ===t)return null;for (var n =0;n <t.getNumGeometries(    );n++ ){var i =t.                                                                                                                                                                                                                                  getGeometryN(n);this. _skipEmpty  && i.isEmpty()||e. add(i);} },Pr. prototype.  combine =function (                                                                           ){for (var t =new Nt(),e =this._inputGeoms.iterator();e.hasNext();){var  n =e.    next( )    ;this.                                                                                     extractElements(n,t);}return 0 ===t.size()?null !==this. _geomFactory ?this.                       _geomFactory.                                                                                                                                                                                                    createGeometryCollection(null): null :this._geomFactory.buildGeometry(t);},       Pr.  prototype.                                                                                                                         interfaces_ =function  (){return [ ] ;},Pr.prototype.getClass =function (){return Pr;},Pr.   combine =                                                                         function (){if (1 ===arguments.length){var  t =arguments[0];return  new Pr(t).   combine( )   ;}if  ( 2 ===                                                                                                                                             
                                 arguments.       length){var e =arguments[0],n =arguments[1];return new Pr(Pr.createList(e,n)).combine();}if ( 3 ===arguments.length){var i =arguments[0],r =arguments[1],o  =arguments[2];return new Pr(Pr.createList(i,r,o)).combine();}},Pr.extractFactory =function (t){return t.isEmpty()?null :t.iterator().next( ).getFactory();},Pr.createList =function (){if (2 ===arguments.length){var t =arguments[0],e =arguments[1],n =new Nt();return n.add(t),n.add(e),n;}if (3 ===arguments.length){var i =arguments[0],r =arguments[1],o =arguments[2],s =new Nt();return s.add(i),s.add(r),s.add(o),s;}};var Dr =function (){this._inputPolys =null,this._geomFactory =null;var t =arguments[0];this. _inputPolys =t,null ===this._inputPolys &&(this._inputPolys =new Nt()) ;},Mr ={STRTREE_NODE_CAPACITY:{configurable:!0 }};Dr.prototype.reduceToGeometries =      function (t){for (var e =new Nt(),n                                                                   =t.iterator();n.hasNext();){var i =n.next(),r =null;T(i,xt)?r =this.unionTree(i)    :i instanceof ct &&                                                                                                                                                                                                                                                                                                             ( r =i),e.add(r);}return e;},Dr.prototype.extractByEnvelope =function  (t,e,n){    for (var i =new Nt(                                                                                         )  ,  r = 0; r  <e. getNumGeometries( ); r++ ) { var o = e.getGeometryN(r);o.    getEnvelopeInternal(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ). intersects(t) ?i.add(o):n.add(o);} return this._geomFactory.  buildGeometry(i);},  Dr.    prototype.unionOptimized =function                                                                      (t,e){var n =   t.getEnvelopeInternal(  ),i =e.getEnvelopeInternal();if (! n. intersects(i))  {return  Pr.     combine(                                                                                                                                                                                                                                                                                                                                                            t,e) ;}if  (t.getNumGeometries() <=1 &&e.getNumGeometries( ) <= 1)   return this.    unionActual(t,  e)                                                                                                                                                                                         ;var r =   n.intersection(i);return this.unionUsingEnvelopeIntersection(t,e,r);},Dr.prototype.union =   function                                                                                                                                               (     )  {  if  (   null  === this.  _inputPolys)   throw new     Error(    "union() method cannot be called twice"                                                                                                                                                                                                                                                                                                                                                                                               );if  ( this._inputPolys. isEmpty( ) )  return null;this._geomFactory = this.         _inputPolys.                                                                                                                                                                                                                                  iterator().next().getFactory();for (var t =new sn(Dr.STRTREE_NODE_CAPACITY),e =   this._inputPolys.                                                                           iterator();e.hasNext();){var n =e.next();t.insert(n.getEnvelopeInternal(),n);}  this._inputPolys  =                                                                                     null;var i =  t. itemsTree( );return  this.   unionTree( i);} ,Dr.prototype.   binaryUnion =function (){if (1                                                                                                                                                                                                      ===arguments.length){var t =arguments[0];return this.binaryUnion(t,0,t.size(    ) ) ;}if  ( 3  ===                                                                                                                          arguments. length){var e =arguments[0],n =arguments[1],i =arguments[2];if (i -n <=1){var r  =       Dr.                                                                      getGeometry(e,n);return this. unionSafe(r,null);}if ( i -n == 2)return   this.    unionSafe( Dr.getGeometry(                                                                                                                                             
                               e,  n) , Dr.        getGeometry(e,n +1));var o =Math.trunc((i +n)/2),s =this.binaryUnion(e,n,o),a = this.binaryUnion(e,o,i);return this.unionSafe(s,a);}},Dr.prototype.repeatedUnion =function (t){for (var e =null,n =t.iterator();n.hasNext();){var i =n.next();e =null ===e ?i.copy():e.union(i);}return e;},Dr.prototype.unionSafe =function (t,e){return null ===t &&null ===e ?null :null ===t ?e.copy(): null  ===e ?t.copy():this.unionOptimized(t,e);},Dr.prototype.unionActual =function (t,e){return Dr.restrictToPolygons(t.union(e));},Dr.prototype.unionTree =function (t){var e =this.reduceToGeometries(t) ;return this.binaryUnion(e);},Dr.prototype.unionUsingEnvelopeIntersection =function (t,e,n){var i =new Nt(),r =this.extractByEnvelope(n,t,i),o =this.extractByEnvelope(n,e,i),s =this.unionActual(r,o);i.add(s);return Pr.combine(i);},Dr.       prototype.bufferUnion =function (){                                                                   if  (1 === arguments.length){var t = arguments[0];return t.get( 0).getFactory().    buildGeometry(t) .                                                                                                                                                                                                                                                                                                               buffer( 0);}if  (2   ===arguments.length){var e =arguments[0],n  =arguments[1]         ;return     e.                                                                                       getFactory() .createGeometryCollection(  [e,  n]) .buffer( 0) ;}},Dr.prototype.        interfacesfunction  (){ return [] ;} ,Dr.    prototype.getClass = function ( ) {return Dr;}, Dr.    restrictToPolygons  =function (t){                                                                        if (T(t,Zt))     return t;var e  =  Ni. getPolygons(t);return  1 ===e.size() ?e.get(0):  t.getFactory() .     createMultiPolygon(                                                                                                                                                                                                                                                                                                                                                 _e.toPolygonArray(e));},Dr.getGeometry =function (t,e){return e >=t.size()?null :   t.get(e);},Dr.union                                                                                                                                                                                                =    function (t) { return new Dr(t) .union(  );} , Mr.STRTREE_NODE_CAPACITY.get =function (){    return 4;}                                                                                                                                        ,Object.defineProperties(Dr,Mr) ;var    Ar =   function ( ) {};Ar.prototype.    interfaces_      =                                                                                                                                                                                                                                                                                                                                                                                                                    function (){return  [];},Ar.prototype. getClass =function  (){return Ar;},Ar.   union =function (t,                                                                                                                                                                                                                                 e){ if  (t.isEmpty() ||e. isEmpty()){if ( t.isEmpty()&&e.isEmpty()) return Lr.   createEmptyResult(                                                                           Lr.UNION,t,e,t.getFactory());if (t.isEmpty())return e.copy();if  (e.isEmpty())  return t.copy(  );}                                                                                      return t.checkNotGeometryCollection(t) ,t.checkNotGeometryCollection(e),or.   overlayOp(t,e,Lr.UNION);} ,t.                                                                                                                                                                                                       GeoJSONReader  =Ne,t.GeoJSONWriter =Ce, t.  OverlayOp =Lr, t.UnionOp =Ar, t.     BufferOp   =  di,                                                                                                                           Object. defineProperty(    t, "__esModule" ,  {  value:    ! 0  }  )    ;}   )   ;}  ,  "../node_modules/@turf/along/dist/es/index.js"                                          :        (  __unused_webpack___webpack_module__,      __webpack_exports__,   __webpack_require__)  => {                                                                                                                                              
                                "use strict"        ;__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{ "default":() =>along  });var _turf_bearing__WEBPACK_IMPORTED_MODULE_0__ =  __webpack_require__("../node_modules/@turf/bearing/dist/es/index.js");var _turf_destination__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/destination/dist/es/index.js");var _turf_distance__WEBPACK_IMPORTED_MODULE_2__  =__webpack_require__( "../node_modules/@turf/distance/dist/es/index.js" );var _turf_helpers__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var  _turf_invariant__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");function along(line,distance, options) { if (options ===void 0){options ={ } ;}var geom  =(0,      _turf_invariant__WEBPACK_IMPORTED_MODULE_4__.                                                          getGeom) ( line);var coords =geom.coordinates;var travelled =0;for (var i =0;i <    coords.length;i++ )                                                                                                                                                                                                                                                                                                             {if (distance >=travelled &&i ===coords.length -1){break ;}else if (travelled >=     distance)  {  var                                                                                        overshot   =    distance    - travelled;if   (   !  overshot)  { return   ( 0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_3__.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   point)(  coords[i]);}else {var direction =(0,_turf_bearing__WEBPACK_IMPORTED_MODULE_0__[     "default"])(coords[i],coords[i -1]                                                                           ) -  180;var    interpolated = (0, _turf_destination__WEBPACK_IMPORTED_MODULE_1__["default"])(coords[ i],     overshot,                                                                                                                                                                                                                                                                                                                                                          direction, options);return     interpolated;}    }    else {   travelled +=  (0,   _turf_distance__WEBPACK_IMPORTED_MODULE_2__[                                                                                                                                                                 "default"      ]  ) (    coords[   i] ,    coords[    i    + 1]  , options)   ;}  }     return  (  0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_3__.                                                                                                        point)  (   coords[  coords.   length       -     1]      )  ;}  }       ,    "../node_modules/@turf/angle/dist/es/index.js"                                                                                                                                                                                                                                                                                                                                                                                           :    (     __unused_webpack___webpack_module__,       __webpack_exports__,   __webpack_require__) =>                                                                                                                                                                                                                              {"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.                   d(                                                                             __webpack_exports__, { "default" :() => __WEBPACK_DEFAULT_EXPORT__   } );var  _turf_bearing__WEBPACK_IMPORTED_MODULE_0__                                                                =__webpack_require__("../node_modules/@turf/bearing/dist/es/index.js");var  _turf_helpers__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                            =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js") ;var    _turf_rhumb_bearing__WEBPACK_IMPORTED_MODULE_2__                                                                                                =    __webpack_require__("../node_modules/@turf/rhumb-bearing/dist/es/index.js"  )      ;function                                                                        angle(startPoint,midPoint,endPoint,options){if (options ===void 0){options ={    }   ;}   if   (!  (    0,                                                                                                                                               
                               _turf_helpers__WEBPACK_IMPORTED_MODULE_1__. isObject)(options)){throw new Error("options is invalid");}if (!startPoint){throw new Error("startPoint is required");}if (!midPoint){throw new Error("midPoint is required");}if (!endPoint){throw new Error("endPoint is required");}var A =startPoint;var O =midPoint;var B =endPoint;var azimuthAO =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.bearingToAzimuth)(options.mercator !==true ?(0,_turf_bearing__WEBPACK_IMPORTED_MODULE_0__["default"])(A,O):(0,_turf_rhumb_bearing__WEBPACK_IMPORTED_MODULE_2__["default"]) (A,O));var azimuthBO =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.bearingToAzimuth)(options.mercator !==true ?(0,_turf_bearing__WEBPACK_IMPORTED_MODULE_0__["default"])(B,O):(0,_turf_rhumb_bearing__WEBPACK_IMPORTED_MODULE_2__["default"])(B,O));var angleAO =Math.abs(azimuthAO -azimuthBO);if (options. explementary  ===true){return 360 -                                                       angleAO;}  return  angleAO;} const  __WEBPACK_DEFAULT_EXPORT__   =  angle;} ,    "../node_modules/@turf/area/dist/es/index.js"                                                                                                                                                                                                                                                                                      :    (      __unused_webpack___webpack_module__,        __webpack_exports__,    __webpack_require__) =>                                                                                   {"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(    __webpack_exports__,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         {"default":() =>area });var _turf_meta__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__(   "../node_modules/@turf/meta/dist/es/index.js"                                                                  );var RADIUS     =6378137;function  area(geojson)   { return  (0, _turf_meta__WEBPACK_IMPORTED_MODULE_0__.     geomReduce)                                                                                                                                                                                                                                                                                                                                                       (geojson,function (value,geom){return  value +calculateArea(geom);},0);}function   calculateArea(geom)                                                                                                                                                                                             {  var    total = 0;var i;switch ( geom.type){ case "Polygon":return polygonArea( geom.coordinates)      ;case                                                                                                                                          "MultiPolygon" : for   (i   =0; i <geom.coordinates.length;i++ ){ total  +=     polygonArea( geom.                                                                                                                                                                                                                                                                                                                                                                                                                   coordinates[i]);}return total;case "Point":case "MultiPoint":case "LineString"         :      case                                                                                                                                                                                                                                  "MultiLineString":return 0;}return 0;}function polygonArea(coords){var total =   0;if (  coords  &&                                                                           coords.length >0){total +=Math.abs( ringArea(coords[ 0] ));for (var  i = 1;i <  coords.length;i++ )                                                                                   {total -=Math.abs( ringArea(coords[i]  ));}}return  total;}function  ringArea(   coords){ var p1;var p2;var                                                                                                                                                                                                          p3;var lowerIndex;var middleIndex;var upperIndex;var    i;var   total =0;var      coordsLength    =                                                                                                                           coords. length;if ( coordsLength > 2){for  ( i   =0;i <coordsLength;i++ ) {if (i  ===   coordsLength                                                                      -2){lowerIndex =coordsLength -2;middleIndex =coordsLength - 1;upperIndex =0;}    else if (i ===coordsLength                                                                                                                                               
                                  -1)       {        lowerIndex  =coordsLength  - 1;middleIndex =0;upperIndex = 1;}else {lowerIndex =i;middleIndex  = i + 1;upperIndex =i +2;}p1  = coords[lowerIndex] ;p2 =coords[ middleIndex];p3 =coords[upperIndex];total  += (rad(  p3[ 0])-rad(p1[ 0]))*Math.sin(rad(p2[ 1] ));}total =total *RADIUS  *RADIUS /2;}return  total;}function rad( num){return num *Math. PI  /180;} }, "../node_modules/@turf/bbox-clip/dist/es/index.js": (__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)   =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d( __webpack_exports__,{"default":(  ) =>  bboxClip  });var  _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__(       "../node_modules/@turf/invariant/dist/es/index.js"                                                        )  ;var _lib_lineclip_js__WEBPACK_IMPORTED_MODULE_2__    =__webpack_require__(    "../node_modules/@turf/bbox-clip/dist/es/lib/lineclip.js"                                                                                                                                                                                                                                                                       )     ;function    bboxClip(   feature,  bbox)    {  var  geom   =    (      0,    _turf_invariant__WEBPACK_IMPORTED_MODULE_1__.                                                             getGeom)(feature);var type =geom.type;var properties =feature.type ==="Feature"    ?feature.properties                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         :{};var coords =geom.coordinates;switch (type){case "LineString":case "MultiLineString":       {var  lines_1 =[] ;if (type  ===                                                                               "LineString"      )  {  coords   =   [coords]     ;}   coords.forEach(  function   (   line)    {  (   0,     _lib_lineclip_js__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                                                                                                                                                   lineclip) (  line,bbox,lines_1);}  )  ;if (lines_1.length ===   1){  return ( 0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                    lineString)  (lines_1[ 0]   ,  properties) ;}return  ( 0,  _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.  multiLineString)                                                                                                                                  (  lines_1,    properties) ;}  case        "Polygon"  :     return     (0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                                                                                                                                                           polygon)(clipPolygon(coords,bbox), properties);case "MultiPolygon":return (0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                           multiPolygon)(coords.map( function ( poly){return clipPolygon(poly,bbox);}),          properties)                                                                           ;default: throw new  Error( "geometry " +  type + " not supported");}}function  clipPolygon( rings,                                                                                   bbox){var outRings =[];for (var _i =0,rings_1 =rings;_i <rings_1.length;_i++ )  {var ring =rings_1[_i];var                                                                                                                                                                                                           clipped =(0,_lib_lineclip_js__WEBPACK_IMPORTED_MODULE_2__.polygonclip)(ring,    bbox);if (clipped.                                                                                                                            length  >0){if ( clipped[0][0]!==clipped[clipped. length -1] [ 0]|| clipped[0] [ 1]!==      clipped[                                                                     clipped.length   -1][1]){clipped.push(clipped[0]);} if  (clipped.length >= 4){   outRings.push( clipped);}}}                                                                                                                                               
                                 return outRings;}   },"../node_modules/@turf/bbox-clip/dist/es/lib/lineclip.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"lineclip":() =>lineclip,"polygonclip":() =>polygonclip });function lineclip(points,bbox,result){var len =points.length,codeA =bitCode(points[0],bbox),part =[],i,codeB,lastCode;var a;var b;if (!result)result =[];for (i =1;i <len;i++ ){a =points[i -1];b =points[i];codeB =lastCode =bitCode(b,bbox);while (true){if (!(codeA |codeB)){part.push(a);if (codeB !==lastCode){part.push(b);if (i <len -1){result.push(part);part =[];}}else if (i ===len -1){part.push(b);}break ;}else if (codeA &codeB){break ;}else if (codeA){a =intersect(a,b,codeA,bbox);codeA =bitCode(a,bbox);}else {     b =intersect(a,b,codeB,bbox);codeB =                                                                     bitCode( b, bbox);} } codeA = lastCode;}if   ( part. length) result.  push(part)      ;return result;}                                                                                                                                                                                                                                                                                                              function polygonclip( points,bbox)   { var  result,edge,prev, prevInside, i, p,    inside;for ( edge =                                                                                       1;edge <=8;edge *=2){result =[];prev = points[points.length  -1];prevInside =!(    bitCode(prev,bbox)&                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       edge);for (i  =0;i <points.length;i++ ){p =points[i];inside  =!(bitCode(p,bbox)&edge);if (    inside !==prevInside) result.push(                                                                                   intersect(   prev,p,edge,bbox));if (inside)result.push(p);prev =p;prevInside =inside;}points =result;if       (!                                                                                                                                                                                                                                                                                                                                                           points.length) break ;}return result;}  function intersect(a, b,  edge,    bbox){   return edge &8 ?[a[                                                                                                                                                                                             0]+(b[0]   -a[0])*(bbox[3]-a[1])/(b[1]-a[1]),bbox[3]]:edge &4 ?[a[0]+(b[0]-a[0])*(bbox[1]-a[1])/(b[1]    -a[1]),                                                                                                                                       bbox[1]]:edge &2 ?[bbox[2],a[1]+(b[1]-a[1])*(bbox[2]-a[0])/(b[0]-a[0])]:edge    &1 ?[bbox[0],a[1]+                                                                                                                                                                                                                                                                                                                                                                                                                    (b[1]-a[1])* (bbox[0]-a[0])/(b[0]-a[ 0])]:null;}function bitCode(p,bbox) {var   code =0;if (p[ 0]<                                                                                                                                                                                                                                  bbox[0])code |=1;else if (p[0]>bbox[2])code |=2;if (p[1]<bbox[1])code |=4;else   if  (p[1]>bbox[3])                                                                           code |=8;return code;}},"../node_modules/@turf/bbox-polygon/dist/es/index.js":                    (                                                                                         __unused_webpack___webpack_module__,               __webpack_exports__,    __webpack_require__) =>{                                                                                                                                                                                                            "use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.                    d(                                                                                                                             __webpack_exports__, {"default":() =>bboxPolygon });var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(                                                "../node_modules/@turf/helpers/dist/es/index.js");function bboxPolygon( bbox,  options)  { if (options ===                                                                                                                                                
                                  void   0)   {       options ={};} var west =Number(bbox[0]) ;var south =Number(bbox[1]);var east =Number( bbox[2]);var north =Number(bbox[3]);if (bbox.length === 6) {throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");}var lowLeft =[west,south];var topLeft =[west,north];var topRight =[east,north];var lowRight =[east,south];return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.polygon)([[lowLeft,lowRight,topRight,topLeft, lowLeft]],options.properties,{bbox: bbox,id:options.id });}}, "../node_modules/@turf/bbox/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)  =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ }) ;var  _turf_meta__WEBPACK_IMPORTED_MODULE_0__ =                       __webpack_require__(                                                                      "../node_modules/@turf/meta/dist/es/index.js");function bbox(geojson){var result      =    [ Infinity,                                                                                                                                                                                                                                                                                                               Infinity, -Infinity, -Infinity];( 0,  _turf_meta__WEBPACK_IMPORTED_MODULE_0__.    coordEach)(geojson,                                                                                       function   (coord) {if (result[0]>coord[0]){result[0]=coord[ 0];}if (result[1]>    coord[1]){result[1]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      =coord[1];}if (result[2]<coord[0]){result[2]=coord[0];}if (result[3]<coord[1]){result[3]=    coord[1];}});return result;} bbox[                                                                                   "default"]  =               bbox;const       __WEBPACK_DEFAULT_EXPORT__            =      bbox;}         ,     "../node_modules/@turf/bearing/dist/es/index.js"                                                                                                                                                                                                                                                                                                              :(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>      {   "use strict"                                                                                                                                                                                              ;__webpack_require__. r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>bearing } )   ;var                                                                                                                                 _turf_helpers__WEBPACK_IMPORTED_MODULE_0__      =   __webpack_require__(    "../node_modules/@turf/helpers/dist/es/index.js"                                                                                                                                                                                                                                                                                                                                                                                       )  ;var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__  = __webpack_require__(   "../node_modules/@turf/invariant/dist/es/index.js"                                                                                                                                                                                                  );function bearing(start,end,options){if (options ===void 0){options ={};}if (  options. final  ===                                                                             true){return calculateFinalBearing( start, end) ;}   var coordinates1 = ( 0,  _turf_invariant__WEBPACK_IMPORTED_MODULE_1__.                                                                  getCoord)    (         start)   ;var     coordinates2     = (     0,   _turf_invariant__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                         getCoord)( end) ;var lon1  =( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.    degreesToRadians)(                                                                                                                              coordinates1[ 0]);var lon2 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians)           (                                                               coordinates2[0] );var lat1  = (  0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.         degreesToRadians)   (                                                                                                                                                
                                  coordinates1[        1]);var  lat2 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians)(coordinates2[1]) ;var  a =Math. sin(lon2 -lon1)*Math. cos( lat2);var b =Math. cos(lat1)*Math.sin( lat2) - Math.sin( lat1)*Math.cos(lat2)* Math.cos(lon2 - lon1);return ( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__. radiansToDegrees)(Math.atan2(  a,b) );}function  calculateFinalBearing( start, end){var bear  = bearing(end, start);bear =(  bear   +180)%360;return bear;} },"../node_modules/@turf/bezier-spline/dist/es/index.js": (__unused_webpack___webpack_module__,__webpack_exports__, __webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__. d( __webpack_exports__, {"default":() =>__WEBPACK_DEFAULT_EXPORT__   }) ;var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__  =__webpack_require__(       "../node_modules/@turf/helpers/dist/es/index.js"                                                           ) ;var    _turf_invariant__WEBPACK_IMPORTED_MODULE_1__  =  __webpack_require__(    "../node_modules/@turf/invariant/dist/es/index.js"                                                                                                                                                                                                                                                                               );var    _lib_spline_js__WEBPACK_IMPORTED_MODULE_2__    = __webpack_require__(    "../node_modules/@turf/bezier-spline/dist/es/lib/spline.js"                                                ) ;function bezier( line,options){if    (options ===void 0) {options ={ };}var       resolution     =                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     options.resolution ||10000;var sharpness = options.sharpness  || 0.85;var coords  =[];var             points        =    (   0,                                                                                      _turf_invariant__WEBPACK_IMPORTED_MODULE_1__. getGeom)(line).coordinates.map(function  (pt){ return {x:pt[0],y:pt[1]};});var spline =new _lib_spline_js__WEBPACK_IMPORTED_MODULE_2__[                                                                                                                                                                                                                                                                                      "default"]({duration:resolution,points:points,sharpness:sharpness });var pushCoord   = function (time){                                                                                                                                                                                              var pos =   spline.pos(time);if (Math.floor(time /100)%2 ===0){coords.push([pos.x,pos.y]);}};for (var i   = 0;i <                                                                                                                                     spline.duration;i +=10){pushCoord(i);}pushCoord(spline.duration) ;return (0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                                                                                                                                                           lineString)(coords,options.properties);}const    __WEBPACK_DEFAULT_EXPORT__ =        bezier;}    ,                                                                                                                                                                                                                                      "../node_modules/@turf/bezier-spline/dist/es/lib/spline.js"        :     (  __unused_webpack___webpack_module__,                                                          __webpack_exports__,__webpack_require__) =>{ "use strict";__webpack_require__.                   r(                                                                                    __webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default" :(              )         =>                                                                                                                                                                                                              __WEBPACK_DEFAULT_EXPORT__ } )   ;var  Spline  =function (){function Spline(     options) {  this.                                                                                                                              points  =options.points ||[];this.duration =options.duration ||10000;this.sharpness =       options.                                                                 sharpness ||0.85;this.centers =[ ];this.controls =[];this.stepLength =options.   stepLength ||60;this.length                                                                                                                                                 
                                   =this.points.       length;this.delay =0;for (var i =0;i <this.length;i++ ){this.points[i].z =this.points[i].z ||0;}for (var i =0;i <this.length -1;i++ ){var p1 =this.points[i];var p2 =this.points[i +1];this.centers.push({x:(p1.x +p2.x)/2,y:(p1.y +p2.y)/2,z:(p1.z +p2.z)/2 });}this.controls.push([this.points[0],this.points[0]]);for (var i =0;i <this.centers.length -1;i++ ){var dx =this.points[i +1].x -(this.centers[i].x +this.centers[i +1].x)/2;var dy =this.points[i +1].y -(this.centers[i].y +this.centers[i +1].y)/2;var dz =this.points[i +1].z -(this.centers[i].y +this.centers[i +1].z)/2;this.controls.push([{x:(1.0 -this.sharpness)*this.points[i +1].x +this.sharpness *(this.centers[i].x +dx),y:(1.0 -this.sharpness)*this.points[i +1].y +this.sharpness *(this.centers[i].y +dy),z:(1.0 -this.sharpness)*this.points[i +1].z +     this.sharpness *(this.centers[i].z +                                                                       dz)} ,{x:( 1.0 -this.sharpness) * this.points[i   +1].x +this. sharpness *(this.    centers[i +1] .x +                                                                                                                                                                                                                                                                                                              dx),y:(1.0 -this.sharpness)*this.points[i +1].y +this.sharpness *(this.centers[    i +1].y +dy) ,z: (                                                                                        1.0 -this.sharpness)*this.points[i +1].z +this.sharpness *(this.centers[i +1].z    + dz) }]) ;}  this.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   controls.push([this.points[this.length -1],this.points[this.length -1]]);this.steps = this.        cacheSteps( this. stepLength)                                                                                        ;return this;}  Spline.prototype.cacheSteps  =function ( mindist) {var steps =[];var laststep =this.pos(0)     ;steps.                                                                                                                                                                                                                                                                                                                                                    push(0);for (var t =0;t <this.duration;t +=10){var step =this.pos( t);var dist  =   Math.sqrt((step.x -                                                                                                                                                                                               laststep.   x)*(step. x -laststep.x)+(step.y -laststep.y)*(step.y -laststep.y)+(step.z -laststep.z)*(    step.z -                                                                                                                                      laststep. z)   );if  ( dist > mindist){steps. push( t) ;laststep  =step;}}        return  steps;}                                                                                                                                                                                                                                                                                                                                                                                                                   ;Spline.prototype.vector =function ( t){var p1 =this.pos(t +10);var p2 =this.   pos(t -10);return {                                                                                                                                                                                                                                 angle:180 *Math.atan2(p1.y -p2.y,p1.x -p2.x)/3.14,speed:Math.sqrt((p2.x -p1.x)  *(p2.x -p1.x)+(p2.y                                                                           -p1.y) *(p2.y -p1.y)+(p2.z -p1.z)*(p2.  z  - p1. z))};};Spline.prototype.pos =  function (time){var                                                                                   t =time -this.delay;if (t <0){t =0;}if (t >this.duration){t =this.duration  -    1;}var t2  = t / this.                                                                                                                                                                                                              duration;if (t2 >=1){return this.points[this.length -1];}var n =Math.floor((    this.points.length                                                                                                                               -1)    * t2) ;var t1  =(this.length -1)*t2 -n;return bezier(t1,this.points[ n], this.   controls[n]                                                                  [1],this. controls[n  + 1][0],this.points[n +1] );};return  Spline;}() ;const  __WEBPACK_DEFAULT_EXPORT__ =                                                                                                                                                 
                                   Spline;function      bezier(t,p1,c1,c2,p2){var b  =B(t);var pos ={x:p2.x *b[0]+c2.x *b[1]+c1.x *b[2]+p1.x *b[3],y:p2.y *b[0]+c2.y *b[1]+c1.y *b[2]+p1.y *b[3],z:p2.z *b[0]+c2.z *b[1]+c1.z *b[2]+p1.z *b[3]};return pos;}function B(t){var t2 =t *t;var t3 =t2 *t;return [t3,3 *t2 *(1 -t),3 *t *(1 -t)*(1 -t),(1 -t)*(1 -t)*(1 -t)] ;}},"../node_modules/@turf/boolean-clockwise/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>booleanClockwise });var _turf_invariant__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");function booleanClockwise(line){var  ring =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getCoords)(         line);var   sum = 0;var i   = 1;var                                                                       prev;var cur;while (i <ring.length){prev =cur ||ring[0];cur =ring[i];sum +=(cur[    0]-prev[0]) *(cur[                                                                                                                                                                                                                                                                                                                 1]   +   prev[   1]  )      ;i++         ;}     return    sum    >  0;} }  ,    "../node_modules/@turf/boolean-contains/dist/es/index.js"                                                       :     (    __unused_webpack___webpack_module__,      __webpack_exports__,    __webpack_require__) =>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {     "use strict";__webpack_require__.  r( __webpack_exports__);__webpack_require__. d(         __webpack_exports__,        {                                                                                          "compareCoords" :() =>compareCoords,"default": () =>booleanContains,"doBBoxOverlap":()  => doBBoxOverlap,     "getMidpoint"                                                                                                                                                                                                                                                                                                                                              :(  ) => getMidpoint,"isLineInPoly"  :(  ) => isLineInPoly,"isLineOnLine" :( ) =>        isLineOnLine,                                                                                                                                                                                                 "isMultiPointInMultiPoint"  : (  )  =>isMultiPointInMultiPoint,"isMultiPointInPoly"  :  (     ) =>isMultiPointInPoly, "isMultiPointOnLine"                                                                                                           :( ) =>isMultiPointOnLine,  "isPointInMultiPoint":() =>isPointInMultiPoint,      "isPolyInPoly":(                                                                                                                                                                                                                                                                                                                                                                                                                    )      => isPolyInPoly   });var    _turf_bbox__WEBPACK_IMPORTED_MODULE_0__  =   __webpack_require__(                                                                                                                                                                                                                                       "../node_modules/@turf/bbox/dist/es/index.js"         )            ;var  _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_1__                                                            =                                __webpack_require__(  "../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js"                                        )  ;var    _turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_2__     =      __webpack_require__(                                                                                                                                                                                                                  "../node_modules/@turf/boolean-point-on-line/dist/es/index.js"    )  ;var    _turf_invariant__WEBPACK_IMPORTED_MODULE_3__                                                                                                        =       __webpack_require__(   "../node_modules/@turf/invariant/dist/es/index.js" )     ;function                                                                   booleanContains(      feature1,   feature2)   {    var  geom1      = (  0,   _turf_invariant__WEBPACK_IMPORTED_MODULE_3__.                                                                                                                                
                                      getGeom)  (        feature1);var geom2 =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_3__.getGeom)(feature2);var type1 =geom1.type;var type2 =geom2.type;var coords1 =geom1.coordinates;var coords2  =geom2.coordinates;switch (type1){case  "Point":switch (type2){case "Point":return compareCoords(coords1,coords2);default:throw new Error("feature2 "+ type2 +" geometry not supported");}case "MultiPoint":switch  (type2){case "Point" :return isPointInMultiPoint(geom1,geom2);case "MultiPoint":return isMultiPointInMultiPoint(geom1,geom2);default:throw new Error("feature2 "+type2 +" geometry not supported");}case "LineString":switch (type2){case  "Point":return (0,_turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_2__[ "default"])(geom2,geom1,{ignoreEndVertices:true });case "LineString":return isLineOnLine(geom1,geom2);case                       "MultiPoint"       :                                                                        return isMultiPointOnLine(geom1,geom2);default:throw new Error("feature2 "+type2                     +                                                                                                                                                                                                                                                                                                              " geometry not supported");}case "Polygon":switch (type2){case "Point":return (                     0,                                                                                        _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_1__["default"])(geom2,         geom1,       {                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ignoreBoundary:true });case "LineString":return isLineInPoly(geom1, geom2);case "Polygon":   return isPolyInPoly(   geom1,geom2)                                                                                                    ;case   "MultiPoint": return isMultiPointInPoly( geom1,geom2);default:throw new Error("feature2 "+     type2                                                                                                                                                                                                                                                                                                                                                    + " geometry not supported"   );}default:  throw new Error("feature1 " + type1  +   " geometry not supported"                                                                                                                                                                                            )   ;}}    function isPointInMultiPoint(multiPoint, pt)  {  var  i;var output =false;for (  i =0;i <    multiPoint.                                                                                                                                 coordinates.length;i++ ){if (compareCoords(multiPoint.coordinates[i] , pt.     coordinates)  ) {                                                                                                                                                                                                                                                                                                                                                                                                                    output  =true;break ;}  }return output;}function    isMultiPointInMultiPoint(          multiPoint1,                                                                                                                                                                                                                                 multiPoint2){for (var _i =0,_a =multiPoint2.coordinates;_i <_a.length;_i++ ) {  var coord2 =_a[ _i]                                                                           ;var matchFound =false;for (var   _b   =0,_c =multiPoint1.coordinates;_b  <_c.   length;_b++ ){ var                                                                                   coord1 =_c[ _b];if (compareCoords(coord2,coord1)){matchFound =true;break ;}}     if   ( !matchFound) {                                                                                                                                                                                                                 return false;}  }   return  true;} function isMultiPointOnLine(lineString,    multiPoint)  {  var                                                                                                                               haveFoundInteriorPoint =false;for (var _i =   0,_a =multiPoint.coordinates;_i <_a.length;_i++  ){var coord  = _a[                                                 _i];if ((0,_turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_2__["default"     ] ) ( coord,lineString, {                                                                                                                                                   
                                    ignoreEndVertices:    true })){haveFoundInteriorPoint =true;}if  (!(0,_turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_2__["default"])(coord,lineString)){return false;}}if (haveFoundInteriorPoint) {return true;}return false;}function isMultiPointInPoly(polygon,multiPoint){ for (var _i =0,_a =multiPoint.coordinates;_i <_a.length;_i++ ){var coord =_a[_i];if (!(0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_1__["default"])(coord, polygon,{ignoreBoundary:true })){return false;}} return true;}function isLineOnLine(lineString1,lineString2){var haveFoundInteriorPoint =false;for (var _i =0,_a =lineString2.coordinates;_i  < _a.length;_i++ ){ var coords =_a[_i];if ((0,_turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_2__["default"])({type:"Point",coordinates:coords },lineString1,{ignoreEndVertices:true })){      haveFoundInteriorPoint =true;}if ( !(                                                                        0,  _turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_2__["default" ])({type:      "Point"        ,                                                                                                                                                                                                                                                                                                              coordinates:coords },lineString1, { ignoreEndVertices:false })){return false;}}    return haveFoundInteriorPoint;}                                                                           function isLineInPoly( polygon, linestring)  { var output = false;var  i =0;var      polyBbox   = ( 0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 _turf_bbox__WEBPACK_IMPORTED_MODULE_0__["default"]  )   ( polygon) ;var  lineBbox =(   0,   _turf_bbox__WEBPACK_IMPORTED_MODULE_0__[                                                                                         "default"])(     linestring);if (!doBBoxOverlap(polyBbox,lineBbox) ) {  return false;}for (i;i <linestring.    coordinates.                                                                                                                                                                                                                                                                                                                                            length -1;i++  ){var midPoint =getMidpoint( linestring.coordinates[i],linestring.   coordinates[ i +1])                                                                                                                                                                                                  ;if ((0,   _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_1__["default"]) ({ type: "Point" ,   coordinates:                                                                                                                                midPoint }  ,polygon,{ignoreBoundary:true  } )) {output   =true;break  ;}}     return    output;}                                                                                                                                                                                                                                                                                                                                                                                                                   function isPolyInPoly( feature1,feature2){if  ( feature1.type ==="Feature" &&   feature1. geometry                                                                                                                                                                                                                                  ===null) {return false;}if (feature2.type  ==="Feature"&&feature2.geometry ===      null)         {                                                                            return  false;}var poly1Bbox   = (0, _turf_bbox__WEBPACK_IMPORTED_MODULE_0__[     "default"] )   (                                                                                    feature1) ;var poly2Bbox =(    0,  _turf_bbox__WEBPACK_IMPORTED_MODULE_0__[    "default"])(feature2)                                                                                                                                                                                                                ;if ( !doBBoxOverlap( poly1Bbox,poly2Bbox)  ){ return false;}var coords =(0,    _turf_invariant__WEBPACK_IMPORTED_MODULE_3__.                                                                                                      getGeom) ( feature2).coordinates;for (var _i =0,coords_1 =coords; _i <coords_1.length;  _i++ ) {var                                                             ring =coords_1[_i] ;for (var _a =0, ring_1 = ring;_a <ring_1.length;_a++ ){var   coord =ring_1[_a];if (!(0,                                                                                                                                                    
                                     _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_1__[ "default"])(coord,feature1)){return false;}}}return  true;}function doBBoxOverlap(bbox1,bbox2) { if  (bbox1[0]>bbox2[0])  {return false;}if (bbox1[ 2]<bbox2[2]){return false;}if (bbox1[1]>bbox2[1]){return false;}if (bbox1[3]<bbox2[3]){return false;}return true;}function compareCoords(pair1,pair2){return pair1[0]===pair2[0]&&pair1[1]===pair2[1];}function getMidpoint(pair1,pair2){return [(pair1[0]+pair2[0])/2,(pair1[1]+pair2[ 1]) /2];}},"../node_modules/@turf/boolean-crosses/dist/es/index.js":(  __unused_webpack___webpack_module__, __webpack_exports__,__webpack_require__) =>{ "use strict";__webpack_require__.r(__webpack_exports__) ;__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_line_intersect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( "../node_modules/@turf/line-intersect/dist/es/index.js"                     ) ;var _turf_polygon_to_line__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(    "../node_modules/@turf/polygon-to-line/dist/es/index.js"                                                                                                                                                                                                                                                                          )      ;var  _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_2__    =    __webpack_require__(                                                                                        "../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js"   )    ;var    _turf_invariant__WEBPACK_IMPORTED_MODULE_3__                                                                                                                                                                                                                                                                                                                                                                                                                                                                         =   __webpack_require__(   "../node_modules/@turf/invariant/dist/es/index.js"   ) ;var    _turf_helpers__WEBPACK_IMPORTED_MODULE_4__                                                                                                     =     __webpack_require__(  "../node_modules/@turf/helpers/dist/es/index.js"  )      ;function     booleanCrosses(                                                                                                                                                                                                                                                                                                                                        feature1,feature2){var geom1   =(0, _turf_invariant__WEBPACK_IMPORTED_MODULE_3__.   getGeom)( feature1)                                                                                                                                                                                                       ;var     geom2 =(0, _turf_invariant__WEBPACK_IMPORTED_MODULE_3__.getGeom)( feature2);var type1 =      geom1.                                                                                                                                 type;var type2 =geom2.type;switch (type1){case  "MultiPoint":switch (type2){     case "LineString":                                                                                                                                                                                                                                                                                                                                                                                                                       return  doMultiPointAndLineStringCross( geom1,geom2)  ;case    "Polygon":   return doesMultiPointCrossPoly(                                                                                                                                                                                                                          geom1,    geom2);default:  throw     new Error("feature2 " +  type2     +  " geometry not supported"                                                                      )   ;}  case    "LineString"  : switch (   type2)   {  case   "MultiPoint"  :  return doMultiPointAndLineStringCross(                                                                geom2,geom1);case "LineString" : return doLineStringsCross(geom1,geom2);case          "Polygon"    :                                                                                                                                                                                                                  return  doLineStringAndPolygonCross(geom1,geom2);default: throw new  Error(    "feature2 "+type2 +                                                                                                                                " geometry not supported"   ) ;}case   "Polygon"   :   switch   ( type2)  {  case      "MultiPoint"    : return doesMultiPointCrossPoly(                        geom2,geom1);case "LineString":return doLineStringAndPolygonCross(geom2,geom1)   ;default:throw new  Error(                                                                                                                                                    
                                       "feature2 " +       type2 +" geometry not supported");}default:throw new Error("feature1 "+type1 +" geometry not supported" );}}function doMultiPointAndLineStringCross(multiPoint,lineString){var foundIntPoint =false;var foundExtPoint =false;var pointLength =multiPoint.coordinates.length;var i  =0;while (i <pointLength &&!foundIntPoint &&!foundExtPoint){ for  (var i2 =0;i2 <lineString.coordinates.length -1;i2++ ){var incEndVertices =true;if  (i2 ===0 ||i2 ===lineString.coordinates.length -2){incEndVertices =false;}if (isPointOnLineSegment(lineString. coordinates[i2], lineString. coordinates[i2 +1],multiPoint.coordinates[i],incEndVertices)) {foundIntPoint =true;}else {foundExtPoint =true;}}i++ ;}return  foundIntPoint &&foundExtPoint;}function doLineStringsCross(lineString1,lineString2) {var doLinesIntersect =(0,      _turf_line_intersect__WEBPACK_IMPORTED_MODULE_0__[                                                              "default"])(lineString1,lineString2);if ( doLinesIntersect.features.length >0){     for (var i =0;i <                                                                                                                                                                                                                                                                                                              lineString1. coordinates.length -1;i++  ) {for  (  var  i2 =0; i2 <lineString2.    coordinates.length -                                                                                      1;i2++ ){var incEndVertices =true;if (i2 ===0 ||i2 ===lineString2. coordinates.       length  -   2) {                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              incEndVertices   =false;}if (isPointOnLineSegment(lineString1.coordinates[i] ,lineString1.    coordinates[i + 1]  , lineString2.                                                                                                   coordinates[   i2],incEndVertices)) {return true;}}} }return false;}function  doLineStringAndPolygonCross(    lineString,                                                                                                                                                                                                                                                                                                                                           polygon)  {  var  line   =(0, _turf_polygon_to_line__WEBPACK_IMPORTED_MODULE_1__.   polygonToLine)   (                                                                                                                                                                                                     polygon)   ;var doLinesIntersect =(0, _turf_line_intersect__WEBPACK_IMPORTED_MODULE_0__["default"] )(   lineString,                                                                                                                             line);if  (doLinesIntersect.features.length >0){ return true;}return false;}               function                                                                                                                                                                                                                                                                                                                                                                                                                   doesMultiPointCrossPoly( multiPoint,polygon){ var  foundIntPoint  = false;var     foundExtPoint  =                                                                                                                                                                                                                                  false;var pointLength   = multiPoint. coordinates.length;for  (var i = 0;i   <   pointLength &&  (!                                                                               foundIntPoint      ||   !     foundExtPoint) ;  i++    ){   if  ( (     0,  _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_2__[                                          "default"])((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.point)(multiPoint.     coordinates[ i] ) ,                                                                                                                                                                                                                 polygon) ){   foundIntPoint   = true;} else   {foundExtPoint    =  true;}  }    return foundExtPoint                                                                                                                                 &&     foundIntPoint;}function isPointOnLineSegment(lineSegmentStart,lineSegmentEnd,   pt,incEnd){                                                           var dxc =pt[0]-lineSegmentStart[0];var dyc =pt[1]-lineSegmentStart[1];var dxl      =    lineSegmentEnd[ 0]-                                                                                                                                                     
                                       lineSegmentStart[    0];var dyl =lineSegmentEnd[1]- lineSegmentStart[1];var cross =dxc *dyl -dyc *dxl;if (cross !==0){return false;}if (incEnd){if  (Math.abs(dxl)>=Math.abs(dyl)) {return dxl >0 ?lineSegmentStart[0]<=pt[0]&&pt[0]<=lineSegmentEnd[0]:lineSegmentEnd[0]<=pt[0]&&pt[0]<=lineSegmentStart[0];}return dyl >0 ?lineSegmentStart[1] <=pt[1]&&pt[ 1]<=lineSegmentEnd[1]:lineSegmentEnd[1]<=pt[ 1]&&pt[ 1]<=lineSegmentStart[1];}else {if (Math.abs(dxl)>=Math.abs(dyl)){return dxl >0 ? lineSegmentStart[0]<pt[0]&&pt[0]<lineSegmentEnd[0]:lineSegmentEnd[0]<pt[0]&& pt[0]<lineSegmentStart[0];}return dyl >0 ?lineSegmentStart[1]<pt[1]&&pt[ 1]<lineSegmentEnd[1]: lineSegmentEnd[1]<pt[1]&&pt[1]<lineSegmentStart[1];}}const __WEBPACK_DEFAULT_EXPORT__ =booleanCrosses;},"../node_modules/@turf/boolean-disjoint/dist/es/index.js":(         __unused_webpack___webpack_module__,                                                                          __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__. r(    __webpack_exports__)                                                                                                                                                                                                                                                                                                               ;__webpack_require__. d(   __webpack_exports__,   {     "default"    :( ) =>    __WEBPACK_DEFAULT_EXPORT__                                                                                  }   )      ;var _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__ =    __webpack_require__(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 "../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js"        )      ;var    _turf_line_intersect__WEBPACK_IMPORTED_MODULE_1__                                                                                                  =     __webpack_require__(    "../node_modules/@turf/line-intersect/dist/es/index.js"  )  ;var     _turf_meta__WEBPACK_IMPORTED_MODULE_2__                                                                                                                                                                                                                                                                                                                =     __webpack_require__("../node_modules/@turf/meta/dist/es/index.js" )  ;var   _turf_polygon_to_line__WEBPACK_IMPORTED_MODULE_3__                                                                                                                                                                            =      __webpack_require__( "../node_modules/@turf/polygon-to-line/dist/es/index.js");function    booleanDisjoint(                                                                                                                         feature1,     feature2)     {    var     bool   =          true;(       0,    _turf_meta__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                                                                                                                                                                                                                                flattenEach)     (      feature1,   function   (     flatten1)     {   ( 0,   _turf_meta__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                                             flattenEach)(feature2,function (flatten2){ if  (bool ===false){return false;}   bool  =  disjoint(                                                                           flatten1.  geometry, flatten2.geometry);});} );return bool;}function disjoint(  geom1,geom2){switch                                                                                   ( geom1. type)  { case "Point"  :switch (geom2. type){case "Point": return !    compareCoords(geom1.                                                                                                                                                                                                                 coordinates,  geom2. coordinates);case  "LineString": return !isPointOnLine(    geom2,geom1) ;case                                                                                                                                  "Polygon"  : return ! (  0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__[  "default"])                                                          (geom1, geom2);} break ;case "LineString": switch ( geom2.type){case "Point":    return  !   isPointOnLine(                                                                                                                                                     
                                        geom1, geom2)       ;case "LineString":return !isLineOnLine(geom1,geom2);case "Polygon": return !isLineInPoly(geom2,geom1);}break  ;case "Polygon":switch (geom2.type){case "Point":return ! (0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__["default" ])(geom2,geom1);case "LineString":return !isLineInPoly(geom1,geom2);case "Polygon":return !isPolyInPoly(geom2,geom1);}}return false;}function isPointOnLine(lineString,pt){for ( var i =0;i <lineString.coordinates.length -1;i++ ){if ( isPointOnLineSegment(lineString.coordinates[i] ,lineString.coordinates[i +1],pt. coordinates)){return true;}}return false;}function isLineOnLine(lineString1,lineString2){var doLinesIntersect =(0,_turf_line_intersect__WEBPACK_IMPORTED_MODULE_1__["default"])(lineString1,lineString2);if (doLinesIntersect.features.length >0){       return  true;} return false;}function                                                                           isLineInPoly(polygon,lineString){for (var _i =0,_a =lineString.coordinates; _i <    _a.length; _i++ ){                                                                                                                                                                                                                                                                                                                     var      coord     =              _a[    _i]     ;if   (        (     0,    _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__[                                               "default"]  )( coord,polygon)){  return  true;} }var   doLinesIntersect   =(0,    _turf_line_intersect__WEBPACK_IMPORTED_MODULE_1__[                                                                                                                                                                                                                                                                                                                                                                                                                                                             "default"])(lineString,(0,_turf_polygon_to_line__WEBPACK_IMPORTED_MODULE_3__["default"])      (polygon) );if (doLinesIntersect.                                                                                                           features.    length >0){return true;}return false;}function isPolyInPoly(feature1,feature2){for (var _i     =0,                                                                                                                                                                                                                                                                                                                                                 _a =feature1.coordinates[0];_i < _a.length; _i++  ){var  coord1 =_a[_i] ;if ((0,   _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                            "default"   ])( coord1, feature2)){return true;}}for ( var  _b =0,_c =feature2.coordinates[0];_b <_c.     length;                                                                                                                                _b++    )     {  var       coord2      =     _c[    _b]  ;if     (    ( 0,    _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                                                                                                                                                                                                           "default" ] )(coord2,feature1) )  {return true;} }var doLinesIntersect = (0,   _turf_line_intersect__WEBPACK_IMPORTED_MODULE_1__[                                                                                                                                                                                                  "default"])((0,_turf_polygon_to_line__WEBPACK_IMPORTED_MODULE_3__["default"])(  feature1) ,  (   0,                                                                           _turf_polygon_to_line__WEBPACK_IMPORTED_MODULE_3__["default"])(feature2));if (    doLinesIntersect.                                                                                   features.length >0){return true;}return false;}function isPointOnLineSegment(     lineSegmentStart,                                                                                                                                                                                                                   lineSegmentEnd,  pt){var dxc  =pt[ 0]- lineSegmentStart[0];var  dyc =pt[1]-     lineSegmentStart[                                                                                                                                    1]     ;var dxl =lineSegmentEnd[ 0]-lineSegmentStart[0];var dyl = lineSegmentEnd[1]-   lineSegmentStart[                                                    1];var  cross =dxc *dyl -dyc *dxl;if (cross !==0){return false;}if (Math.abs(   dxl)>=Math.abs( dyl)){if (                                                                                                                                                      
                                         dxl  > 0)   {        return lineSegmentStart[  0]<=pt[0]&&pt[0]  <= lineSegmentEnd[0];}else  {return lineSegmentEnd[0]<=pt[0]  &&pt[0]<=lineSegmentStart[0];}} else if (dyl >0){return lineSegmentStart[1]<=pt[ 1]&&pt[ 1]<=  lineSegmentEnd[1];}else {return  lineSegmentEnd[1]<=pt[1] &&pt[1]<=lineSegmentStart[1];}}  function compareCoords(pair1, pair2){ return pair1[0]===pair2[0]&&pair1[1]=== pair2[1] ;}const  __WEBPACK_DEFAULT_EXPORT__ =booleanDisjoint;},"../node_modules/@turf/boolean-equal/dist/es/index.js":(__unused_webpack___webpack_module__, __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r( __webpack_exports__);__webpack_require__.d( __webpack_exports__,  {"default":() =>__WEBPACK_DEFAULT_EXPORT__  });var  geojson_equality__WEBPACK_IMPORTED_MODULE_0__ =   __webpack_require__(       "../node_modules/geojson-equality/index.js"                                                                       ) ;var _turf_clean_coords__WEBPACK_IMPORTED_MODULE_1__   = __webpack_require__(    "../node_modules/@turf/clean-coords/dist/es/index.js"                                                                                                                                                                                                                                                                              ) ;var _turf_invariant__WEBPACK_IMPORTED_MODULE_2__  =  __webpack_require__(    "../node_modules/@turf/invariant/dist/es/index.js"                                                           )  ;function   booleanEqual(    feature1, feature2)  {var    type1    = ( 0,    _turf_invariant__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                                                                                                                                                                                                                                                                                                getGeom) (feature1)  .  type;var  type2  =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.    getGeom)(feature2).type;if ( type1                                                                                                          !==   type2)    return false;var equality =new geojson_equality__WEBPACK_IMPORTED_MODULE_0__({precision:6 }      )                                                                                                                                                                                                                                                                                                                                               ;return  equality. compare(  (0, _turf_clean_coords__WEBPACK_IMPORTED_MODULE_1__[     "default"   ])  (                                                                                                                                                                                                      feature1)     ,(0,_turf_clean_coords__WEBPACK_IMPORTED_MODULE_1__[  "default" ] )(feature2)) ;} const    __WEBPACK_DEFAULT_EXPORT__                                                                                                           =booleanEqual;},"../node_modules/@turf/boolean-intersects/dist/es/index.js":                     (                                                                                                                                                                                                                                                                                                                                                                                                                              __unused_webpack___webpack_module__,           __webpack_exports__,   __webpack_require__) =>                                                                                                                                                                                                                             {"use strict" ;__webpack_require__.r(__webpack_exports__);__webpack_require__.                   d(                                                                              __webpack_exports__,   { "default" :   (  ) => booleanIntersects  })   ;var  _turf_boolean_disjoint__WEBPACK_IMPORTED_MODULE_0__                                                                                =                          __webpack_require__(    "../node_modules/@turf/boolean-disjoint/dist/es/index.js"                                                                                                                                                                               ) ;var  _turf_meta__WEBPACK_IMPORTED_MODULE_1__     =__webpack_require__(    "../node_modules/@turf/meta/dist/es/index.js"                                                                                                           )       ;function booleanIntersects(  feature1, feature2) {  var  bool =false;(  0,   _turf_meta__WEBPACK_IMPORTED_MODULE_1__.                               flattenEach)   (   feature1,    function    (       flatten1)  {  (   0,    _turf_meta__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                         
                                         flattenEach)(        feature2, function ( flatten2) {if (bool ===true){return true;}bool =!  ( 0,_turf_boolean_disjoint__WEBPACK_IMPORTED_MODULE_0__[ "default" ] )( flatten1.geometry, flatten2. geometry);} );});return  bool;} }, "../node_modules/@turf/boolean-overlap/dist/es/index.js":(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) =>{ "use strict";__webpack_require__. r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default": ( ) =>booleanOverlap });var _turf_meta__WEBPACK_IMPORTED_MODULE_0__  =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__  =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js") ;var _turf_line_overlap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(       "../node_modules/@turf/line-overlap/dist/es/index.js"                                                             );var _turf_line_intersect__WEBPACK_IMPORTED_MODULE_3__  = __webpack_require__(    "../node_modules/@turf/line-intersect/dist/es/index.js"                                                                                                                                                                                                                                                                          )  ;var geojson_equality__WEBPACK_IMPORTED_MODULE_4__   = __webpack_require__(    "../node_modules/geojson-equality/index.js"                                                                 )  ;function  booleanOverlap(  feature1,     feature2){var  geom1   =  (   0,    _turf_invariant__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                                                                                                                                                                                                                               getGeom)(feature1) ;var geom2  =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getGeom) (     feature2) ;var  type1    = geom1.                                                                                                                type;var    type2    =  geom2. type;if   (type1 ==="MultiPoint"&& type2  !=="MultiPoint"|| (type1 ===      "LineString"                                                                                                                                                                                                                                                                                                                                     ||type1 === "MultiLineString")&&type2 !=="LineString"&&type2 !=="MultiLineString"   ||   ( type1   ===                                                                                                                                                                                                        "Polygon"   ||type1 ==="MultiPolygon")&&type2 !=="Polygon"&&type2 !=="MultiPolygon"){throw new Error(    "features must be of the same type"                                                                                                 );}if (type1 ==="Point")throw  new Error("Point geometry not supported");var        equality  =new                                                                                                                                                                                                                                                                                                                                                                                                                    geojson_equality__WEBPACK_IMPORTED_MODULE_4__({precision:6 }) ;if ( equality.   compare( feature1,                                                                                                                                                                                                                                   feature2))return false;var overlap = 0;switch (type1){case "MultiPoint":for (  var i  =0;i <geom1.                                                                           coordinates.length;i++ ) {for (var j =0;j <geom2.coordinates.length;j++ ){ var    coord1  =  geom1.                                                                                   coordinates[i];var coord2 =geom2.coordinates[j];if (coord1[0]=== coord2[0]&&    coord1[1]===coord2[                                                                                                                                                                                                                  1]){return true;}}}return false;case "LineString":case "MultiLineString":(0,    _turf_meta__WEBPACK_IMPORTED_MODULE_0__.                                                                                                              segmentEach)  (feature1, function (segment1) { (0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__. segmentEach)                                                        (     feature2,   function    (   segment2)      {    if       (  (   0,   _turf_line_overlap__WEBPACK_IMPORTED_MODULE_2__[                                                                                                                                  
                                          "default"] )(        segment1,segment2) . features.length)overlap++ ;} );});break ;case "Polygon":case "MultiPolygon" :(0, _turf_meta__WEBPACK_IMPORTED_MODULE_0__.segmentEach)(feature1, function (segment1){( 0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.segmentEach)  (feature2,function ( segment2){if ((0,_turf_line_intersect__WEBPACK_IMPORTED_MODULE_3__["default"] )( segment1,segment2). features.length)overlap++  ;});});break ;}return  overlap >0;}},"../node_modules/@turf/boolean-parallel/dist/es/index.js": (__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict" ;__webpack_require__.r(__webpack_exports__) ;__webpack_require__.d(__webpack_exports__, {"default":( ) =>__WEBPACK_DEFAULT_EXPORT__  } );var _turf_clean_coords__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(       "../node_modules/@turf/clean-coords/dist/es/index.js"                                                              )   ;var _turf_line_segment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(    "../node_modules/@turf/line-segment/dist/es/index.js"                                                                                                                                                                                                                                                                           )  ;var  _turf_rhumb_bearing__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__(    "../node_modules/@turf/rhumb-bearing/dist/es/index.js"                                                     )  ;var _turf_helpers__WEBPACK_IMPORTED_MODULE_3__   =    __webpack_require__(    "../node_modules/@turf/helpers/dist/es/index.js"                                                                                                                                                                                                                                                                                                                                                                                                                                                           );function booleanParallel(line1,line2){if (!line1)throw new Error("line1 is required");if      (  ! line2)throw   new    Error(                                                                                                              "line2 is required"   ) ;var type1  =  getType( line1, "line1" );if  ( type1 !=="LineString" )throw new Error( "line1 must be a LineString"                                                                                                                                                                                                                                                                                                                    );var type2 = getType(line2,"line2");if (type2 !== "LineString" )throw new Error(   "line2 must be a LineString"                                                                                                                                                                                                 ) ;var     segments1  =( 0,  _turf_line_segment__WEBPACK_IMPORTED_MODULE_1__[ "default" ] ) (  ( 0,    _turf_clean_coords__WEBPACK_IMPORTED_MODULE_0__[                                                                                     "default"   ]   )  (  line1) )   .  features;var segments2        =   ( 0,    _turf_line_segment__WEBPACK_IMPORTED_MODULE_1__[                                                                                                                                                                                                                                                                                                                                                                                      "default"])((0,_turf_clean_coords__WEBPACK_IMPORTED_MODULE_0__[ "default" ])(        line2)  )   .                                                                                                                                                                                                                                  features;for (var i =0; i <segments1.length;i++ ){var segment1 = segments1[i].            geometry.                                                                            coordinates;if (!segments2[i] )break  ;var segment2 = segments2[i]. geometry.   coordinates;if  (!                                                                                   isParallel(segment1,segment2))return false;}return true;}function isParallel(   segment1,segment2){                                                                                                                                                                                                                  var slope1 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.bearingToAzimuth)(         (          0,                                                                                                                                     _turf_rhumb_bearing__WEBPACK_IMPORTED_MODULE_2__[    "default" ])   ( segment1[  0]  ,  segment1[   1])  ) ;var slope2  = (   0, _turf_helpers__WEBPACK_IMPORTED_MODULE_3__.  bearingToAzimuth)  (   ( 0,_turf_rhumb_bearing__WEBPACK_IMPORTED_MODULE_2__[ "default"])  (segment2[0],                                                                                                                                      
                                         segment2[ 1] ))        ;return slope1 ===slope2;}function getType(geojson,name) {if (geojson.geometry &&geojson.geometry.type)return geojson.geometry.type;if  (geojson.type)return geojson.type;throw new Error("Invalid GeoJSON object for "+name);}const __WEBPACK_DEFAULT_EXPORT__ =booleanParallel;},"../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)  =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":()  => booleanPointInPolygon });var _turf_invariant__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");function booleanPointInPolygon(point,polygon,options){if ( options ===void 0){options  ={} ;}if (!point){       throw new Error("point is required");}                                                                             if  (! polygon)  {   throw  new  Error("polygon is required" );}var  pt    =( 0,    _turf_invariant__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                                                    getCoord)( point);var geom =( 0, _turf_invariant__WEBPACK_IMPORTED_MODULE_0__.     getGeom) (polygon)                                                                                       ;var type =geom. type;var bbox =polygon.bbox;var  polys = geom.coordinates;if (    bbox  && inBBox(pt,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      bbox)=== false) {return false;}if (  type ==="Polygon") {polys =[ polys];} var insidePoly =   false;for (var i =0;i <polys.length                                                                                                                       &&   !    insidePoly;i++ ){if (inRing(pt,polys[i][0],options.ignoreBoundary)){var inHole =false;var k      =                                                                                                                                                                                                                                                                                                                                           1;while  (k <polys[i] .length   && ! inHole){if (inRing(pt,polys[i][k] ,!options.   ignoreBoundary)) {                                                                                                                                                                                                          inHole =   true;}k++ ;}if (!inHole){insidePoly =true;}}}return insidePoly;} function inRing(pt,ring,     ignoreBoundary)                                                                                                                   {var isInside =false;if (ring[0][0]===ring[ring.length -1][0]&&ring[0][1]===    ring[ring.length -                                                                                                                                                                                                                                                                                                                                                                                                                    1][1]){ring =ring.slice(0,ring.length -1);}for (var i =0,j =ring.length -1;i <  ring.length;j =i++                                                                                                                                                                                                                                  ){var xi =ring[i][0] ;var yi =ring[i][1];var xj =ring[j][0];var yj =ring[j][1]  ;var  onBoundary  =                                                                           pt[1]*(xi -xj)+yi *(xj -pt[0])+yj *(pt[0]-xi)===0 &&(xi -pt[0])*(xj -pt[0])<=0  &&(yi -pt[1])*(yj -                                                                                    pt[1])<=0;if (onBoundary) {return !ignoreBoundary;}var intersect =yi >pt[1]    !==yj >pt[1]&&pt[0]                                                                                                                                                                                                                  <(xj -xi) * (pt[1]-yi)/ (yj - yi) +xi;if (intersect){ isInside =!isInside;}}     return  isInside;}                                                                                                                                    function inBBox(pt,bbox){return bbox[0]<=pt[0]&&bbox[1]<=pt[1]&&bbox[2]>=pt[0]&&bbox[3] >=pt[1];} },                                                      "../node_modules/@turf/boolean-point-on-line/dist/es/index.js"  :         (   __unused_webpack___webpack_module__,                                                                                                                                               
                                          __webpack_exports__,  __webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_invariant__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");function booleanPointOnLine(pt,line,options){if (options ===void 0){options ={};}var ptCoords =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getCoord)(pt);var lineCoords =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getCoords)(line);for (var i =0;i <lineCoords.length -1;i++ ){var ignoreBoundary =false;if (options.ignoreEndVertices){if (i ===0){ignoreBoundary ="start";}if (i ===lineCoords.length -2){ignoreBoundary ="end";}if (i ===0 &&i +1 ===lineCoords.length -1){ignoreBoundary ="both";}}if (      isPointOnLineSegment(lineCoords[  i],                                                                              lineCoords[i +1],ptCoords,ignoreBoundary, typeof options.epsilon ==="undefined"?    null   :  options.                                                                                                                                                                                                                                                                                                                epsilon)  ) { return true;}}return   false;} function   isPointOnLineSegment(      lineSegmentStart,                                                                                       lineSegmentEnd,pt,excludeBoundary,epsilon){var x =pt[ 0];var y = pt[1];var x1 =    lineSegmentStart[0]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ;var y1 =lineSegmentStart[1];var x2 =lineSegmentEnd[0] ;var y2 =lineSegmentEnd[1];var dxc =   pt[0]-x1;var dyc =pt[1]-y1;var dxl =                                                                                                                   x2  -x1;var   dyl  =y2 -y1;var cross  = dxc *dyl -dyc *dxl;if (epsilon !==null) {if  (Math. abs( cross)>     epsilon)                                                                                                                                                                                                                                                                                                                                      {return false;}}else if (cross !==0){ return false;}  if (!excludeBoundary) {if (   Math.abs(dxl)    >=                                                                                                                                                                                                             Math.   abs(dyl)){return dxl >0 ?x1 <=x &&x <=x2 :x2 <=x &&x <=x1;}return dyl >0 ?y1 <=y &&y <=y2 :    y2 <=y                                                                                                                          &&y <=y1;}else  if (excludeBoundary ==="start"){if (Math.abs(dxl)>=Math.abs(    dyl)){return dxl >                                                                                                                                                                                                                                                                                                                                                                                                                    0 ?x1 <x &&x <=x2 :x2 <=x &&x <x1;}return dyl >0 ?y1 <y &&y <=y2 :y2 <=y &&y <    y1;}else  if   (                                                                                                                                                                                                                                  excludeBoundary ==="end"){if (Math.abs(dxl)>=Math.abs(dyl)) {return dxl >0 ?x1  <= x &&x <x2 :x2 <x                                                                           &&x <=x1;}return dyl >0  ? y1  <=y &&y    <y2  : y2  < y &&y <= y1;}else  if (  excludeBoundary ===                                                                                   "both"){if (Math.abs(dxl)>=Math.abs(dyl)){return dxl >0 ?x1 <x &&x <x2 :x2 <    x    &&x   <  x1;}                                                                                                                                                                                                                    return  dyl  > 0 ?y1  < y &&y  <y2   :y2 <y && y < y1;}return  false;}const    __WEBPACK_DEFAULT_EXPORT__                                                                                                                                =    booleanPointOnLine;},"../node_modules/@turf/boolean-within/dist/es/index.js":(   __unused_webpack___webpack_module__,                          __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.       r( __webpack_exports__)                                                                                                                                                         
                                          ;__webpack_require__.  d(__webpack_exports__,{"default":() => __WEBPACK_DEFAULT_EXPORT__ });var _turf_bbox__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/bbox/dist/es/index.js");var _turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/boolean-point-on-line/dist/es/index.js");var _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");function booleanWithin(feature1,feature2){var geom1 =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_3__.getGeom)(feature1);var geom2 =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_3__.getGeom)(        feature2);var  type1 =geom1.type;var                                                                               type2 =geom2. type;switch (type1){case "Point":switch (type2){case "MultiPoint":    return isPointInMultiPoint(                                                                                                                                                                                                                                                                                                          geom1,     geom2)       ;case     "LineString"     :   return  (        0,    _turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_1__[                                                 "default"])( geom1, geom2, {ignoreEndVertices:   true }  );case "Polygon" :case      "MultiPolygon"  :                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     return  ( 0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_2__["default"])(geom1,   geom2,  {  ignoreBoundary: true } )                                                                                                                        ;default:    throw new  Error("feature2 "+type2 +" geometry not supported");}case "MultiPoint":switch (     type2)                                                                                                                                                                                                                                                                                                                                      {case "MultiPoint":return isMultiPointInMultiPoint(geom1,geom2);case "LineString"                     :                                                                                                                                                                                                          return isMultiPointOnLine( geom1,geom2);case "Polygon":case "MultiPolygon" : return  isMultiPointInPoly(geom1,geom2) ;default:                                                                                                            throw new Error( "feature2 "  + type2 +   " geometry not supported") ;} case       "LineString"  :                                                                                                                                                                                                                                                                                                                                                                                                                     switch  (  type2){case  "LineString":return isLineOnLine( geom1,geom2) ;case   "Polygon"  :  case                                                                                                                                                                                                                                   "MultiPolygon": return   isLineInPoly(geom1,geom2);default:throw   new Error(  "feature2 "+type2 +                                                                            " geometry not supported");}case "Polygon":switch (type2){case "Polygon":case     "MultiPolygon" :                                                                                   return isPolyInPoly(geom1,geom2);default:throw new Error("feature2 "+type2 +    " geometry not supported"                                                                                                                                                                                                            );}default:throw new Error("feature1 "+type1 +" geometry not supported");} }              function                                                                                                                                       isPointInMultiPoint( point,multiPoint) {var   i;var output  = false;for (  i    =0; i <multiPoint. coordinates.                                      length;i++ ){if (compareCoords(multiPoint.coordinates[i],point.coordinates)){    output = true;break  ;} }                                                                                                                                                          
                                           return output;}        function isMultiPointInMultiPoint( multiPoint1,multiPoint2){for (var i =0;i <multiPoint1.coordinates.length;i++ ){var anyMatch =false;for (var i2 =0;i2  <multiPoint2.coordinates. length;i2++ ){if (compareCoords( multiPoint1. coordinates[i], multiPoint2.coordinates[ i2])) {anyMatch = true;}}if (!anyMatch) {return false;}}return true;}function isMultiPointOnLine(multiPoint,lineString) {var  foundInsidePoint = false;for (var i  =0;i <multiPoint.coordinates.length;i++ ){if ( !(0,_turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_1__["default"])(multiPoint.coordinates[i],lineString)){return false;}if (! foundInsidePoint){foundInsidePoint =( 0, _turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_1__["default"])(multiPoint. coordinates[i], lineString,{ignoreEndVertices: true });}}        return  foundInsidePoint;}  function                                                                                isMultiPointInPoly(multiPoint,polygon){var output =true;var oneInside =false;var       isInside      =                                                                                                                                                                                                                                                                                                               false;for (var i =0;i  <multiPoint.coordinates.  length;i++  ){isInside   =(0,    _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_2__[                                                "default"   ] )(multiPoint.coordinates[1],polygon) ;if (  !isInside){output =    false;break ;}if (!                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   oneInside){isInside  =  (  0, _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_2__[        "default" ]  ) (   multiPoint.                                                                                                                        coordinates[    1],polygon,{ignoreBoundary:true  } );}}return output  && isInside;} function isLineOnLine(    lineString1,                                                                                                                                                                                                                                                                                                                                lineString2){for  ( var i =0;i  <lineString1. coordinates.length; i++ ){if ( !(0,   _turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_1__[                                                                                                                                                                     "default"   ])( lineString1.  coordinates[ i],lineString2) ) {return false;} }  return true;}function    isLineInPoly(                                                                                                                     linestring,      polygon)    { var      polyBbox         =       (      0,    _turf_bbox__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                                                                                                                                                                                                                                "default"    ]     ) (   polygon)    ;var   lineBbox      =         (    0,   _turf_bbox__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                                            "default" ])(linestring);if (!doBBoxOverlap(polyBbox,lineBbox)){return false;}  var foundInsidePoint                                                                          =false;for   (var i   =0;i < linestring.coordinates.length -1;i++ ){  if (!(0,  _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_2__[                                            "default"]) (linestring. coordinates[i] , polygon)) { return false;} if (!    foundInsidePoint){                                                                                                                                                                                                                                      foundInsidePoint       =                (              0,    _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_2__[                                                                                             "default"  ])(linestring. coordinates[i], polygon,{ ignoreBoundary:  true  }) ;}if   ( ! foundInsidePoint)                                         {var midpoint =getMidpoint(linestring.coordinates[i],linestring.coordinates[i +    1]);foundInsidePoint =(0,                                                                                                                                                          
                                            _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_2__[ "default"])(midpoint,polygon,{ignoreBoundary:true });}}return foundInsidePoint;}function isPolyInPoly(geometry1,geometry2){var poly1Bbox =(0,_turf_bbox__WEBPACK_IMPORTED_MODULE_0__["default"])(geometry1);var poly2Bbox =(0,_turf_bbox__WEBPACK_IMPORTED_MODULE_0__["default"])(geometry2);if (!doBBoxOverlap(poly2Bbox,poly1Bbox)){return false;}for (var i =0;i <geometry1.coordinates[0].length;i++ ){if (!(0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_2__["default"])(geometry1.coordinates[0][i],geometry2)){return false;}}return true;}function doBBoxOverlap(bbox1,bbox2){if (bbox1[0]>bbox2[0] )return false;if (bbox1[2]<bbox2[2])return  false;if (bbox1[1]>bbox2[1])return false;if (bbox1[3]<bbox2[3])return false;return true;}function compareCoords(pair1,pair2){return pair1[0] ===pair2[  0] &&pair1[ 1]===pair2[1];}                                                function getMidpoint(pair1,pair2){return [(pair1[0]+pair2[0])/2,(pair1[1]+pair2[      1] ) / 2];}const                                                                                                                                                                                                                                                                                                                      __WEBPACK_DEFAULT_EXPORT__         =         booleanWithin;}          ,    "../node_modules/@turf/buffer/dist/es/index.js"                                                                :          (   __unused_webpack___webpack_module__,   __webpack_exports__,    __webpack_require__) =>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {  "use strict" ;__webpack_require__. r(__webpack_exports__)  ;__webpack_require__.   d(     __webpack_exports__,{"default": (                                                                                                                             )      =>      __WEBPACK_DEFAULT_EXPORT__   }     ) ;var    _turf_center__WEBPACK_IMPORTED_MODULE_0__ =     __webpack_require__(                                                                                                                                                                                                                                                                                                                           "../node_modules/@turf/center/dist/es/index.js"           )             ;var   turf_jsts__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                                =        __webpack_require__(         "../node_modules/turf-jsts/jsts.min.js"         )   ;var    _turf_meta__WEBPACK_IMPORTED_MODULE_2__                                                                                         =__webpack_require__( "../node_modules/@turf/meta/dist/es/index.js" )  ;var    d3_geo__WEBPACK_IMPORTED_MODULE_3__                                                                                                                                                                                                                                                                                                                                                                                                         = __webpack_require__(   "../node_modules/d3-geo/index.js"      )  ;var   _turf_helpers__WEBPACK_IMPORTED_MODULE_4__                                                                                                                                                                                                           = __webpack_require__(   "../node_modules/@turf/helpers/dist/es/index.js"   )    ;function buffer(                                                                           geojson,radius,options)  {options =options ||{ } ;var  units =options.units ||    "kilometers" ;var                                                                                   steps =options.steps ||8;if (!geojson)throw new Error("geojson is required")    ;if (typeof options                                                                                                                                                                                                                  !=="object")throw new Error("options must be an object");if (typeof steps !==   "number")throw new                                                                                                                                        Error(   "steps must be an number");if (  radius    ===undefined)  throw  new  Error(   "radius is required"                                      );if (steps <=0)throw new Error("steps must be greater than 0");var results =[  ]  ;switch  (geojson.type){                                                                                                                                                           
                                                        case        "GeometryCollection":(0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.geomEach)(geojson,function (geometry){var buffered =bufferFeature(geometry,radius,units,steps);if (buffered)results.push(buffered);});return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.featureCollection)(results);case "FeatureCollection":(0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.featureEach)(geojson,function (feature){var multiBuffered =bufferFeature(feature,radius,units,steps);if (multiBuffered){(0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.featureEach)(multiBuffered,function (buffered){if (buffered)results.push(buffered);});}});return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.featureCollection)(results);}return bufferFeature(geojson,radius,units,steps);}function bufferFeature(geojson,radius,units,steps){        var properties =geojson.properties ||                                                                                 { } ;var  geometry =geojson.type  ==="Feature" ?geojson.geometry  : geojson;if (     geometry.type ===                                                                                                                                                                                                                                                                                                                  "GeometryCollection"  )     {      var   results      = [    ]     ;(    0,    _turf_meta__WEBPACK_IMPORTED_MODULE_2__.                                                                  geomEach)( geojson,function   (geometry) {var buffered =bufferFeature(geometry,    radius,units,steps)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ;if      (   buffered)    results.       push(   buffered)    ;}      )  ;return  (  0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_4__.                                                                                                                   featureCollection) (results);}var projection =defineProjection( geometry);var projected ={type:geometry.type,  coordinates:                                                                                                                                                                                                                                                                                                                              projectCoords(   geometry.coordinates,  projection) }   ;var  reader   =     new   turf_jsts__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                         GeoJSONReader(  )      ;var      geom    =  reader.  read(     projected)    ;var   distance   =(     0, _turf_helpers__WEBPACK_IMPORTED_MODULE_4__.                                                                                     radiansToLength)   (  (    0,  _turf_helpers__WEBPACK_IMPORTED_MODULE_4__.    lengthToRadians)  (                                                                                                                                                                                                                                                                                                                                                                                                                   radius,units),"meters");var buffered =turf_jsts__WEBPACK_IMPORTED_MODULE_1__.   BufferOp. bufferOp(                                                                                                                                                                                                                                  geom,distance,steps);var  writer =new turf_jsts__WEBPACK_IMPORTED_MODULE_1__.    GeoJSONWriter(  )                                                                              ;buffered  =writer. write(buffered);if (coordsIsNaN( buffered.coordinates))  return undefined;var                                                                                    result = {   type:buffered. type,  coordinates:  unprojectCoords(buffered.          coordinates,                                                                                                                                                                                                                    projection)};return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.feature)(    result,properties)                                                                                                                                          ;}   function coordsIsNaN(coords){ if (Array.isArray(coords[0]))return coordsIsNaN(    coords[0] )                                              ;return isNaN(coords[0]);}function projectCoords(coords,  proj) {if   (typeof     coords[ 0]  !=="object" )                                                                                                                                                           
                                                return  proj(         coords);return coords.map(function (coord){return projectCoords(coord,proj);});}function unprojectCoords(coords, proj){if (typeof coords[ 0]!=="object")return  proj.invert(coords);return coords.map(function (coord){ return unprojectCoords(coord,proj) ;} );} function defineProjection(geojson){var coords =(0,_turf_center__WEBPACK_IMPORTED_MODULE_0__["default"])(geojson).geometry.coordinates;var rotation = [ - coords[0], -coords[1] ];return (0,d3_geo__WEBPACK_IMPORTED_MODULE_3__.geoAzimuthalEquidistant) (). rotate(rotation).scale( _turf_helpers__WEBPACK_IMPORTED_MODULE_4__.earthRadius);}const __WEBPACK_DEFAULT_EXPORT__ =buffer;},"../node_modules/@turf/center-mean/dist/es/index.js": (__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict"            ;__webpack_require__.         r(                                                                                  __webpack_exports__);__webpack_require__.d(__webpack_exports__, {"default":() =>    __WEBPACK_DEFAULT_EXPORT__                                                                                                                                                                                                                                                                                                         }   ) ;var  _turf_meta__WEBPACK_IMPORTED_MODULE_0__   = __webpack_require__(    "../node_modules/@turf/meta/dist/es/index.js"                                                             )   ;var   _turf_helpers__WEBPACK_IMPORTED_MODULE_1__    = __webpack_require__(    "../node_modules/@turf/helpers/dist/es/index.js"                                                                                                                                                                                                                                                                                                                                                                                                                                                   );function centerMean(  geojson,options){if  (options ===void 0){options ={};}var sumXs =     0;var sumYs = 0;var   sumNs =0;(0,                                                                                                                              _turf_meta__WEBPACK_IMPORTED_MODULE_0__. geomEach)(geojson, function (geom,featureIndex, properties){  var weight =options.weight ? properties                                                                                                                                                                                                                                                                                                          === null   || properties  ===void 0    ? void 0   : properties[ options.weight]:    undefined;weight =                                                                                                                                                                                                                weight      ===  undefined     || weight     ===    null     ?     1 :   weight;if  (    !    (  0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.                                                                                        isNumber)      (       weight)    )      throw       new        Error(    "weight value must be a number for feature index "                                                                                                                                                                                                                                                                                                                                                                                    +  featureIndex);weight     = Number(weight) ;if   (    weight    >  0) { (0,   _turf_meta__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                            coordEach) (geom,function (coord) {sumXs +=coord[0]*weight;sumYs +=coord[1] *      weight;sumNs  +=                                                                           weight;});} });return  ( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.point)([  sumXs /sumNs,sumYs /                                                                                   sumNs] ,  options.properties,options) ;} const __WEBPACK_DEFAULT_EXPORT__ =    centerMean;}     ,                                                                                                                                                                                                                       "../node_modules/@turf/center-median/dist/es/index.js"        :        (    __unused_webpack___webpack_module__,                                                                                                                       __webpack_exports__,    __webpack_require__)    =>     {   "use strict"  ;__webpack_require__.  r( __webpack_exports__)                            ;__webpack_require__.    d(__webpack_exports__,  {    "default"  :   () =>    __WEBPACK_DEFAULT_EXPORT__                                                                                                                                                            
                                                }    )    ;var        _turf_center_mean__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/center-mean/dist/es/index.js");var _turf_distance__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/distance/dist/es/index.js");var _turf_centroid__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/centroid/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_meta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../node_modules/@turf/meta/dist/es/index.js");function centerMedian(features,options){if (options ===void 0){options ={} ;}options =options ||{};if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.isObject) (options))throw new Error(         "options is invalid") ;var  counter =                                                                                  options.   counter || 10;if  ( ! ( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.    isNumber)(counter)                                                                                                                                                                                                                                                                                                              )throw new Error("counter must be a number");var weightTerm =options.weight;var     meanCenter =(   0,                                                                                       _turf_center_mean__WEBPACK_IMPORTED_MODULE_0__["default"]) ( features,{ weight:     options. weight } )                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ;var centroids = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.featureCollection)([]) ;(0,   _turf_meta__WEBPACK_IMPORTED_MODULE_4__.                                                                                                                            featureEach)       ( features,   function    ( feature)   {  var   _a;centroids. features. push(    (  0,     _turf_centroid__WEBPACK_IMPORTED_MODULE_2__[                                                                                                                                                                                                                                                                                           "default"])(feature,{properties:{weight:(_a =feature.properties) ===null ||_a ===   void 0 ?void 0 :_a[                                                                                                                                                                                                               weightTerm]    }} )  );}   );var  properties =  {  tolerance:options.tolerance, medianCandidates:[ ]}   ;return findMedian(                                                                                                           meanCenter.geometry.coordinates,[ 0,0] , centroids, properties,counter)  ;}              function                                                                                                                                                                                                                                                                                                                                                                                                                    findMedian( candidateMedian, previousCandidate,centroids,properties,counter){     var tolerance  =                                                                                                                                                                                                                                   properties.tolerance ||0.001;var candidateXsum =0;var candidateYsum = 0;var         kSum  =  0;var                                                                             centroidCount =0;(0, _turf_meta__WEBPACK_IMPORTED_MODULE_4__.  featureEach)(  centroids,function (                                                                                  theCentroid){var _a;var weightValue =(_a =theCentroid.properties)=== null ||    _a ===void 0 ?void                                                                                                                                                                                                                   0 :_a.weight;var weight =weightValue ===undefined ||weightValue ===null ?1 :    weightValue;weight                                                                                                                                           =     Number(weight);if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__. isNumber) (    weight)  )                                           throw new Error("weight value must be a number");if  (weight >0){centroidCount               +=       1;var                                                                                                                                                             
                                               distanceFromCandidate  =weight *(0, _turf_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(theCentroid,candidateMedian);if  (distanceFromCandidate ===0)distanceFromCandidate =1;var k = weight /distanceFromCandidate;candidateXsum +=theCentroid.geometry.coordinates[0]*k;candidateYsum  +=theCentroid.geometry.coordinates[1]*k;kSum +=k;}});if (centroidCount <1)throw new  Error("no features to measure");var candidateX =candidateXsum /kSum;var candidateY =candidateYsum /kSum;if (centroidCount ===1 ||counter ===0 ||Math.abs(candidateX -previousCandidate[0])<tolerance &&Math. abs( candidateY -previousCandidate[1])<tolerance){return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.point)( [candidateX,candidateY],{medianCandidates:properties.medianCandidates }) ;}else {properties.medianCandidates. push([          candidateX,      candidateY]      )                                                                                   ;return findMedian([candidateX,candidateY],candidateMedian, centroids,properties,   counter   -1);}  }                                                                                                                                                                                                                                                                                                                  const  __WEBPACK_DEFAULT_EXPORT__          =         centerMedian;}       ,    "../node_modules/@turf/center-of-mass/dist/es/index.js"                                                      :      (       __unused_webpack___webpack_module__,     __webpack_exports__,    __webpack_require__) =>                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {   "use strict";__webpack_require__.  r(  __webpack_exports__) ;__webpack_require__.  d(    __webpack_exports__, {"default"  :(                                                                                                                                       )     =>     __WEBPACK_DEFAULT_EXPORT__   }  )     ;var    _turf_convex__WEBPACK_IMPORTED_MODULE_0__ =    __webpack_require__(                                                                                                                                                                                                                                                                                                                            "../node_modules/@turf/convex/dist/es/index.js"        )           ;var   _turf_centroid__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                              =           __webpack_require__(  "../node_modules/@turf/centroid/dist/es/index.js"   )   ;var     _turf_helpers__WEBPACK_IMPORTED_MODULE_2__                                                                                 =__webpack_require__(  "../node_modules/@turf/helpers/dist/es/index.js");var    _turf_invariant__WEBPACK_IMPORTED_MODULE_3__                                                                                                                                                                                                                                                                                                                                                                                           =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");var   _turf_meta__WEBPACK_IMPORTED_MODULE_4__                                                                                                                                                                                                             =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");function          centerOfMass(                                                                            geojson,options){if  (  options ===  void 0)  {  options ={};}switch   ( ( 0,  _turf_invariant__WEBPACK_IMPORTED_MODULE_3__.                                                           getType)  (geojson)       )   {  case     "Point" :    return        (  0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                          point)((0, _turf_invariant__WEBPACK_IMPORTED_MODULE_3__.getCoord) (geojson),              options.                                                                                                                                          properties)  ;case "Polygon": var coords =[ ] ;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_4__. coordEach)                                         ( geojson,function   (  coord)  {  coords. push( coord) ;});var centre   =( 0,  _turf_centroid__WEBPACK_IMPORTED_MODULE_1__[                                                                                                                                            
                                                "default" ] ) (        geojson,{properties:options.properties });var translation =centre.geometry.coordinates;var sx =0;var  sy =0;var sArea =0;var i,pi,pj,xi,xj,yi,yj,a;var neutralizedPoints =coords.map(function  (point){return [point[0]-translation[0],point[1]-translation[1]];});for (i  =0;i <coords.length -1;i++ ){pi =neutralizedPoints[i];xi =pi[0];yi = pi[1];pj =neutralizedPoints[i +1];xj =pj[0];yj =pj[1];a  =xi *yj -xj *yi;sArea +=a;sx +=(xi +xj)*a;sy +=(yi +yj)*a;}if (sArea ===0){return centre;}else {var area =sArea *0.5;var areaFactor =1 /(6 *area);return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.point)([translation[0]+ areaFactor *sx,translation[1]+areaFactor *sy],options.properties);}default:var hull =(0,_turf_convex__WEBPACK_IMPORTED_MODULE_0__["default"])(geojson);if (hull)        return  centerOfMass(hull,{properties:                                                                                    options.properties });else return (0,_turf_centroid__WEBPACK_IMPORTED_MODULE_1__[     "default" ] )  (                                                                                                                                                                                                                                                                                                              geojson,{properties:options.properties } );}}const __WEBPACK_DEFAULT_EXPORT__ =     centerOfMass;}   ,                                                                                                  "../node_modules/@turf/center/dist/es/index.js"        :           (    __unused_webpack___webpack_module__,                                                                                                                                                                                                                                                                                                                                                                                                                                                                __webpack_exports__, __webpack_require__) =>  { "use strict"  ;__webpack_require__.r(                   __webpack_exports__)                                                                                                                                     ;__webpack_require__. d( __webpack_exports__, {  "default" :  ()  => __WEBPACK_DEFAULT_EXPORT__    }     )  ;var _turf_bbox__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                                                                                                                                           = __webpack_require__(   "../node_modules/@turf/bbox/dist/es/index.js" )     ;var   _turf_helpers__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                                 =   __webpack_require__(  "../node_modules/@turf/helpers/dist/es/index.js"  );function center(   geojson,                                                                                                                   options){ if  (options === void    0)  { options  = { }   ;} var ext =    (0,   _turf_bbox__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                                                                                                                                                                                                                              "default"] )(geojson) ;var x =(ext[ 0]+ ext[2] )/2;var y  =( ext[1]+ext[ 3])/    2;return   (   0,                                                                                                                                                                                                                                  _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.point) ([x,y],options.properties,      options)  ;}const                                                                                       __WEBPACK_DEFAULT_EXPORT__           =       center;}            ,  "../node_modules/@turf/centroid/dist/es/index.js"                                                          :    (   __unused_webpack___webpack_module__,       __webpack_exports__,   __webpack_require__) =>                                                                                                                                                                                                                   {    "use strict"    ;__webpack_require__.  r(     __webpack_exports__)    ;__webpack_require__.                                                                                                                                         d(      __webpack_exports__,{"default" :  (  ) => __WEBPACK_DEFAULT_EXPORT__ });var    _turf_meta__WEBPACK_IMPORTED_MODULE_0__               =__webpack_require__(  "../node_modules/@turf/meta/dist/es/index.js"  );var    _turf_helpers__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                              
                                                                =       __webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function centroid(geojson,options){if (options ===void 0){options ={};}var xSum =0;var ySum =0;var len =0;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.coordEach)(geojson,function (coord){xSum +=coord[0];ySum +=coord[1];len++ ;},true);return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.point)([xSum /len,ySum /len],options.properties);}const __WEBPACK_DEFAULT_EXPORT__ =centroid;},"../node_modules/@turf/circle/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_destination__WEBPACK_IMPORTED_MODULE_0__ =                          __webpack_require__(                                                                                               "../node_modules/@turf/destination/dist/es/index.js"     )        ;var   _turf_helpers__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                                                                                                                      =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function     circle(   center,                                                                                        radius,options){if (options ===void 0){options ={};}var steps =options.steps ||    64;var properties =                                                                                                                                                                                                                                                                                                                                                                                                                                                                           options.properties ?options.properties :!Array.isArray(center)&&center.type ==="Feature"&&     center.    properties    ? center.                                                                                                                                       properties :    {};var  coordinates = [] ;for (var  i  =  0;  i   < steps; i++  ) { coordinates. push(( 0,     _turf_destination__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                                                                                                                     "default"]  )(center, radius, i * -360 /steps, options).geometry. coordinates);}   coordinates.  push(                                                                                                                                                                                                                  coordinates[ 0]) ;return   (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__. polygon)( [  coordinates]  ,  properties)                                                                                                                    ;}   const    __WEBPACK_DEFAULT_EXPORT__         =        circle;}      ,  "../node_modules/@turf/clean-coords/dist/es/index.js"                                                                                                                                                                                                                                                                                                                                                                                     :      (     __unused_webpack___webpack_module__,    __webpack_exports__,   __webpack_require__) =>                                                                                                                                                                                                                                   { "use strict"    ;__webpack_require__.   r(      __webpack_exports__)    ;__webpack_require__.                                                                           d(  __webpack_exports__,{"default":()  =>  __WEBPACK_DEFAULT_EXPORT__ });var  _turf_helpers__WEBPACK_IMPORTED_MODULE_0__                                                             = __webpack_require__("../node_modules/@turf/helpers/dist/es/index.js" );var   _turf_invariant__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                          =   __webpack_require__("../node_modules/@turf/invariant/dist/es/index.js")             ;function                                                                                                                                           cleanCoords( geojson,options) {if  ( options ===void 0){options  ={ };} var mutate =typeof options  ===                                       "object" ?options.   mutate :   options;if  ( !  geojson)throw  new  Error(    "geojson is required");var                                                                                                                                                              
                                                   type     = (0,        _turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getType)(geojson);var newCoords =[];switch (type){case  "LineString":newCoords =cleanLine(geojson);break ;case "MultiLineString":case "Polygon":(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)( geojson).forEach(function (line){newCoords.push(cleanLine(line));});break ;case "MultiPolygon":(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(geojson).forEach(function (polygons){var polyPoints = [] ;polygons.forEach(function (ring){polyPoints.push(cleanLine(ring));});newCoords.push( polyPoints);});break ;case "Point":return geojson;case "MultiPoint":var existing ={};(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)( geojson).forEach(function (coord){var key =coord. join("-");if (!Object.prototype.       hasOwnProperty. call( existing, key)) {                                                                                     newCoords.push(coord);existing[key]=true;}});break ;default:throw new Error(type +  " geometry not supported"                                                                                                                                                                                                                                                                                                        );} if (geojson.coordinates)  { if ( mutate  ===true){  geojson.coordinates  =    newCoords;return geojson;}                                                                                return {type:type, coordinates:newCoords };}else {if (mutate ===true) {geojson.              geometry.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              coordinates      = newCoords;return        geojson;}        return        (         0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                  feature) ({   type:type,coordinates:newCoords },geojson.properties,{bbox:geojson.bbox,id:geojson.id });}}     function                                                                                                                                                                                                                                                                                                                          cleanLine(line) {var  points  =(  0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.   getCoords)(line);if                                                                                                                                                                                                                         (     points. length  ===2 &&!equals( points[0] ,points[1]))return points;var newPoints =[];var   secondToLast                                                                                                             =points.length -1;var newPointsLength =newPoints.length;newPoints.push(points[  0]);for (var i =1;                                                                                                                                                                                                                                                                                                                                                                                                                    i <secondToLast;i++ ){var prevAddedPoint =newPoints[newPoints.length -1];if (    points[i][ 0] ===                                                                                                                                                                                                                                  prevAddedPoint[ 0]&& points[i] [1] === prevAddedPoint[1] )  continue ;else {      newPoints.  push(                                                                           points[i]) ;newPointsLength  =newPoints. length;if ( newPointsLength  >2){if (  isPointOnLineSegment(                                                                                  newPoints[ newPointsLength  -3] , newPoints[newPointsLength  - 1],newPoints[   newPointsLength  -                                                                                                                                                                                                                   2]))newPoints.splice(newPoints.length -2,1);}}}newPoints.push(points[points.     length    -1]   )                                                                                                                                            ;newPointsLength = newPoints.length;if ( equals(points[0],points[ points.length    - 1])    && newPointsLength                             <  4)throw new Error( "invalid polygon");if ( isPointOnLineSegment(newPoints[  newPointsLength  -    3]  ,                                                                                                                                                               
                                                         newPoints[      newPointsLength -1],newPoints[newPointsLength -2]))newPoints.splice(newPoints.length -2,1);return newPoints;}function equals(pt1,pt2){return pt1[0] ===pt2[0]&&pt1[1]===pt2[1];}function isPointOnLineSegment(start,end,point){var x =point[0],y =point[ 1];var  startX =start[ 0],startY =start[1];var endX =end[0] ,endY =end[1];var dxc =x -startX;var dyc =y -startY;var dxl =endX -startX;var dyl  =endY -startY;var cross =dxc *dyl -dyc *dxl;if (cross !==0) return false;else if ( Math.abs(dxl)>=Math.abs(dyl)) return dxl >0 ?startX <= x  &&x <=endX  :endX <=x &&x <=startX;else return dyl  >0 ? startY <=y && y <=endY :endY <= y &&y <=startY;}const __WEBPACK_DEFAULT_EXPORT__  =cleanCoords;}, "../node_modules/@turf/clone/dist/es/index.js":(__unused_webpack___webpack_module__,                          __webpack_exports__,                                                                                      __webpack_require__) =>{"use strict"  ;__webpack_require__.r(__webpack_exports__)   ;__webpack_require__.                                                                                                                                                                                                                                                                                                           d(__webpack_exports__, {"default": () =>__WEBPACK_DEFAULT_EXPORT__ }) ;function    clone(geojson){if (                                                                                       !geojson){throw new Error( "geojson is required" );}switch ( geojson.type){case           "Feature"  :                                                                                                                                                                                                                                                                                                                                                                                                                                                                           return  cloneFeature( geojson);case "FeatureCollection":  return cloneFeatureCollection(     geojson)  ;case   "Point" :  case                                                                                                                                            "LineString"      :case "Polygon" :case "MultiPoint"  : case "MultiLineString":case   "MultiPolygon" :case     "GeometryCollection"                                                                                                                                                                                                                                                                                                             :return cloneGeometry(geojson);default:throw new Error("unknown GeoJSON type");}}              function                                                                                                                                                                                                                   cloneFeature( geojson){var cloned ={type:"Feature"};Object.keys(geojson).forEach(function (key){switch (  key) {                                                                                                                 case "type":  case "properties" :case "geometry" :return ;default:cloned[key]=  geojson[key];} }  )                                                                                                                                                                                                                                                                                                                                                                                                                   ;cloned.properties  =cloneProperties( geojson. properties) ;cloned.geometry =       cloneGeometry(                                                                                                                                                                                                                                  geojson.geometry);return cloned;} function cloneProperties(properties){  var   cloned = { } ;if ( !                                                                           properties){return cloned;}Object.keys(properties).forEach(function (key) {var  value = properties[                                                                                   key];if (typeof value ==="object"){if (value === null){cloned[key]=null;}else   if (Array.isArray(                                                                                                                                                                                                                   value)) {cloned[key]=value.map(function (item){return item;});}else {cloned[           key]      =                                                                                                                                            cloneProperties(  value) ;} } else  { cloned[  key]= value;}  } )  ;return  cloned;} function cloneFeatureCollection(                     geojson){var cloned ={type:"FeatureCollection"};Object.keys(geojson).forEach(    function ( key) {switch (                                                                                                                                                                
                                                   key){case "type"        : case "features":return   ;default:cloned[key]=geojson[key];}});cloned.features  =  geojson.features.map(function (feature){return cloneFeature(feature);});return  cloned;}function cloneGeometry(geometry){var geom ={type:geometry.type };if (geometry.bbox) {geom.bbox =geometry.bbox;}if ( geometry.type ==="GeometryCollection" ){geom. geometries =geometry.geometries. map(function  (g){return cloneGeometry(g);});return geom;}  geom.coordinates =deepSlice(geometry.coordinates)  ;return geom;}function deepSlice( coords){  var cloned =coords;if (typeof cloned[  0]!== "object"){return cloned.slice() ;} return cloned.map(function (coord){return deepSlice(coord);});}const __WEBPACK_DEFAULT_EXPORT__ =  clone;}, "../node_modules/@turf/clusters-dbscan/dist/es/index.js":(           __unused_webpack___webpack_module__,                                                                                      __webpack_exports__,__webpack_require__) =>{ "use strict" ;__webpack_require__.r(   __webpack_exports__)                                                                                                                                                                                                                                                                                                            ;__webpack_require__.  d(       __webpack_exports__,{  "default"  :  ( )     =>    __WEBPACK_DEFAULT_EXPORT__                                                                                   }   )  ;var _turf_clone__WEBPACK_IMPORTED_MODULE_0__  = __webpack_require__(    "../node_modules/@turf/clone/dist/es/index.js"                                                                                                                                                                                                                                                                                                                                                                                                                                               )    ;var     _turf_distance__WEBPACK_IMPORTED_MODULE_1__      =    __webpack_require__(    "../node_modules/@turf/distance/dist/es/index.js"                                                                                                                                   )   ;var               _turf_meta__WEBPACK_IMPORTED_MODULE_2__        =            __webpack_require__(     "../node_modules/@turf/meta/dist/es/index.js"                                                                                                                                                                                                                                                                                    )   ;var    _turf_helpers__WEBPACK_IMPORTED_MODULE_3__   = __webpack_require__(   "../node_modules/@turf/helpers/dist/es/index.js"                                                                                                                                                                                          );var            density_clustering__WEBPACK_IMPORTED_MODULE_4__     =        __webpack_require__(    "../node_modules/density-clustering/lib/index.js"                                                                      );function clustersDbscan(points,maxDistance,options){if (options ===void  0){  options ={};} if  (                                                                                                                                                                                                                                                                                                                                                                                                                   options.mutate !==true)points = (0, _turf_clone__WEBPACK_IMPORTED_MODULE_0__[     "default"]  )  (                                                                                                                                                                                                                                  points) ;options. minPoints   = options. minPoints || 3;var  dbscan    = new   density_clustering__WEBPACK_IMPORTED_MODULE_4__.                                                   DBSCAN(  ) ;var  clusteredIds     =      dbscan.        run(       (    0,  _turf_meta__WEBPACK_IMPORTED_MODULE_2__.                                                              coordAll)(points),(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.convertLength)     (  maxDistance,                                                                                                                                                                                                                             options.        units)          ,           options.    minPoints,    _turf_distance__WEBPACK_IMPORTED_MODULE_1__[                                                                                                                   "default" ]);var clusterId = -1;clusteredIds.forEach(function (clusterIds){ clusterId++ ;clusterIds.                                     forEach( function (idx) { var   clusterPoint =points.   features[idx];if  (!      clusterPoint.properties)                                                                                                                                                                
                                                       clusterPoint.       properties ={};clusterPoint.properties.cluster =clusterId;clusterPoint.properties.dbscan ="core";});});dbscan.noise.forEach(function (noiseId){var noisePoint =points.features[noiseId];if (!noisePoint.properties)noisePoint.properties ={};if (noisePoint.properties.cluster)noisePoint.properties.dbscan ="edge";else noisePoint.properties.dbscan ="noise";});return points;}const __WEBPACK_DEFAULT_EXPORT__ =clustersDbscan;},"../node_modules/@turf/clusters-kmeans/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_clone__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__(       "../node_modules/@turf/clone/dist/es/index.js"                                                                                     )    ;var    _turf_meta__WEBPACK_IMPORTED_MODULE_1__   = __webpack_require__(    "../node_modules/@turf/meta/dist/es/index.js"                                                                                                                                                                                                                                                                                     )     ;var   skmeans__WEBPACK_IMPORTED_MODULE_2__    =  __webpack_require__(    "../node_modules/skmeans/dist/node/main.js"                                                               );function clustersKmeans(points, options){if (options ===void 0){options ={};}     var count =points.                                                                                                                                                                                                                                                                                                                                                                                                                                                                       features.length;options.numberOfClusters =options.numberOfClusters ||Math.round(Math.sqrt(    count   / 2))  ;if   (    options.                                                                                                                                                numberOfClusters  > count) options. numberOfClusters  =count;if  (options.mutate   !==   true)points =(  0,    _turf_clone__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                                                                                                                      "default"   ] )(points) ;var  data  = (0,_turf_meta__WEBPACK_IMPORTED_MODULE_1__.    coordAll) (points)                                                                                                                                                                                                                         ;var     initialCentroids =data. slice(   0,options.   numberOfClusters)  ;var  skmeansResult   =    skmeans__WEBPACK_IMPORTED_MODULE_2__(                                                                                 data, options.   numberOfClusters,  initialCentroids)  ;var  centroids  = {  }      ;skmeansResult.                                                                                                                                                                                                                                                                                                                                                                                                                   centroids.forEach(  function (coord,idx) { centroids[idx]  = coord;}   );( 0,   _turf_meta__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                           featureEach)(points,function (point,index){var clusterId =skmeansResult.idxs[         index] ;point.                                                                            properties.cluster =clusterId;point.properties.centroid =centroids[clusterId]  ;});return points;}                                                                                            const      __WEBPACK_DEFAULT_EXPORT__    =    clustersKmeans;}      ,  "../node_modules/@turf/clusters/dist/es/index.js"                                                                                                                                                                                           :       (__unused_webpack___webpack_module__,    __webpack_exports__,    __webpack_require__) =>                                                                                                                                           {    "use strict";__webpack_require__.r( __webpack_exports__);__webpack_require__.             d(                                    __webpack_exports__, {"applyFilter":  () =>applyFilter, "clusterEach" :( ) =>   clusterEach,"clusterReduce"                                                                                                                                                                
                                                          :   ()   =>        clusterReduce,"createBins":() =>createBins,"filterProperties":() =>filterProperties,"getCluster":() =>getCluster,"propertiesContainsFilter":() =>propertiesContainsFilter });var _turf_meta__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function getCluster(geojson,filter){if (!geojson)throw new Error("geojson is required");if (geojson.type !=="FeatureCollection")throw new Error("geojson must be a FeatureCollection");if (filter ===undefined ||filter ===null)throw new Error("filter is required");var features =[];(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.featureEach)(geojson,function (feature){        if  (applyFilter(  feature. properties,                                                                                              filter)   )   features.      push(       feature);}      )   ;return  (  0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                                                    featureCollection)(features);}function clusterEach( geojson,property,callback){     if   ( !  geojson)                                                                                       throw new Error("geojson is required");if (geojson.type !=="FeatureCollection")    throw   new  Error(                                                                                                                                                                                                                                                                                                                                                                                                                                                                      "geojson must be a FeatureCollection");if   (property ===undefined  ||property  ===  null)           throw       new      Error(                                                                                                                                                   "property is required" );var bins =createBins( geojson,property);var values = Object.keys(bins);for (var index =0; index                                                                                                                                                                                                                                                                                                                    <  values.length;index++ ) {var value =values[index] ;var  bin =bins[ value] ;var   features =[ ];for (                                                                                                                                                                                                                       var i =    0;   i   <bin.length;i++  ){features.push( geojson.  features[  bin[i] ]);} callback( (0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.                                                                          featureCollection)(features),value, index);} } function clusterReduce(geojson,   property,callback,                                                                                                                                                                                                                                                                                                                                                                                                                   initialValue){var previousValue  =initialValue;clusterEach(geojson, property,   function  (cluster,                                                                                                                                                                                                                                clusterValue,currentIndex){if (currentIndex ===0 &&initialValue ===undefined)    previousValue     =                                                                            cluster;else  previousValue  =callback(   previousValue,cluster,clusterValue,    currentIndex);} )                                                                                   ;return previousValue;}function createBins(geojson,property){var bins ={ };(0,  _turf_meta__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                             featureEach)(geojson,function (feature,i){var properties =feature.properties    || {};if ( Object.                                                                                                                                              prototype. hasOwnProperty.call(properties,String( property))) { var value = properties[   property]                                   ;if (Object.prototype.hasOwnProperty.call(bins,value))bins[value].push(i);else   bins[  value]  =[ i];}  })                                                                                                                                                                 
                                                        ;return bins;}       function applyFilter(properties,filter){if (properties ===undefined)return false;var filterType =typeof filter;if (filterType ==="number"||filterType ==="string")return Object.prototype.hasOwnProperty.call(properties,filter);else if (Array.isArray(filter)){for (var i =0;i <filter.length;i++ ){if (!applyFilter(properties,filter[i]))return false;}return true;}else {return propertiesContainsFilter(properties,filter);}}function propertiesContainsFilter(properties,filter){var keys =Object.keys(filter);for (var i =0;i <keys.length;i++ ){var key =keys[i];if (properties[key]!==filter[key])return false;}return true;}function filterProperties(properties,keys){if (!keys)return {};if (!keys.length)return {};var newProperties ={};for (var i =0;i <keys.length;i++ ){var      key  =keys[ i] ;if ( Object.  prototype.                                                                                           hasOwnProperty. call( properties,key) )newProperties[   key] =properties[ key] ;}   return newProperties;}                                                                                                                                                                                                                                                                                                              }         ,   "../node_modules/@turf/collect/dist/es/index.js"      :   (    __unused_webpack___webpack_module__,                                                                      __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(    __webpack_exports__)                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ;__webpack_require__.d(__webpack_exports__,{"default" :() =>__WEBPACK_DEFAULT_EXPORT__  })                                   ;var                                                                                                                                                    _turf_bbox__WEBPACK_IMPORTED_MODULE_0__      =    __webpack_require__(  "../node_modules/@turf/bbox/dist/es/index.js"   )      ;var _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                                                                                                        =                                 __webpack_require__(   "../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js"                                                                                                                                                                           ) ;var   rbush__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../node_modules/rbush/index.js")   ;function                                                                                                             collect(    polygons, points, inProperty,  outProperty)  {   var    rtree   =   rbush__WEBPACK_IMPORTED_MODULE_2__(                                                                                                                                                                                                                                                                                                                                                                                                   6);var treeItems  =points. features.map(function (item){var _a;return {minX:    item.    geometry.                                                                                                                                                                                                                                   coordinates[ 0],minY:item.geometry. coordinates[  1], maxX: item.geometry.      coordinates[0] ,                                                                             maxY:item.geometry.coordinates[1],property:( _a =item.properties)===null ||_a   ===void 0 ?void 0 :                                                                                  _a[inProperty]};} );rtree.load(treeItems);polygons.features.forEach(function (   poly){if  (!poly.                                                                                                                                                                                                                       properties) { poly.  properties   = {     };}   var    bbox    =   (  0,    _turf_bbox__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                         "default" ] )(poly);var potentialPoints =rtree.search( {minX:bbox[0],minY:bbox[1],maxX:  bbox[ 2] ,                                 maxY:bbox[3]});var values =[];potentialPoints.forEach( function (pt){if ( (0,    _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_1__[                                                                                                                                
                                                      "default"]) ([pt.        minX,pt.minY],poly)){values.push(pt.property);}});poly.properties[outProperty]=values;});return polygons;}const __WEBPACK_DEFAULT_EXPORT__ =collect;},"../node_modules/@turf/combine/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_meta__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");function combine(fc){var groups ={MultiPoint:{coordinates:[],properties:[]},MultiLineString:{coordinates:[]         ,   properties:[] } ,   MultiPolygon:{ coordinates:                                                                              [ ],properties:[ ]} };(0,_turf_meta__WEBPACK_IMPORTED_MODULE_1__.featureEach)( fc,       function   (                                                                                                                                                                                                                                                                                                              feature){var _a,_b,_c;var _d;switch ((_d =feature.geometry)===null ||_d ===void    0 ?void 0 :_d.type)                                                                                       {case "Point":groups.MultiPoint.coordinates. push(feature.geometry.coordinates)    ;groups.MultiPoint.                                                                                                                                                                                                                                                                                                                                                                                                                                                                    properties.push(feature.  properties);break  ;case "MultiPoint": (_a  =groups. MultiPoint.   coordinates).push.apply(_a,feature.                                                                                                                                                          geometry.   coordinates);groups.MultiPoint.properties.push(feature.properties);break ;case "LineString"        :                                                                                                                                                                                                                                                                                                                        groups. MultiLineString.coordinates.push(feature.geometry. coordinates) ;groups.     MultiLineString.                                                                                                                                                                                                                        properties.  push( feature.properties);break  ;case "MultiLineString":  ( _b =groups. MultiLineString.   coordinates)                                                                                                          .push. apply(_b,feature.  geometry.  coordinates)   ;groups.MultiLineString.    properties. push(                                                                                                                                                                                                                                                                                                                                                                                                                   feature. properties);break ;case "Polygon": groups. MultiPolygon.coordinates.        push( feature.                                                                                                                                                                                                                                geometry.coordinates);groups.MultiPolygon.properties.push(feature.properties)        ;break   ;case                                                                             "MultiPolygon":(_c =groups. MultiPolygon.coordinates).push.apply( _c,feature.            geometry.                                                                                     coordinates) ;groups.  MultiPolygon. properties. push( feature.  properties)    ;break ;default:                                                                                                                                                                                                                    break    ;}  }) ;return    ( 0, _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.    featureCollection)                                                                                                                                                  (     Object.keys( groups). filter( function (key){return groups[key].coordinates.    length;}) .                                sort().map(function  ( key){var geometry ={type:key, coordinates:groups[key].   coordinates };var properties                                                                                                                                                                 
                                                                =      {       collectedProperties:groups[key].properties };return  (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.feature)(geometry,properties);}));}const __WEBPACK_DEFAULT_EXPORT__  =combine;},"../node_modules/@turf/concave/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__, __webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":( )  =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_distance__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/distance/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_meta__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(       "../node_modules/@turf/meta/dist/es/index.js"                                                                                          )    ;var     _turf_tin__WEBPACK_IMPORTED_MODULE_3__  =    __webpack_require__(   "../node_modules/@turf/tin/dist/es/index.js"                                                                                                                                                                                                                                                                                   );var _lib_turf_dissolve_js__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__(    "../node_modules/@turf/concave/dist/es/lib/turf-dissolve.js"                                              );function concave(points, options){if  (options   ===void 0){ options ={};}var     maxEdge = options.                                                                                                                                                                                                                                                                                                                                                                                                                                                                  maxEdge  || Infinity;var   cleaned  = removeDuplicates(points)  ;var    tinPolys  = (   0,    _turf_tin__WEBPACK_IMPORTED_MODULE_3__[                                                                                                                                                     "default"])(     cleaned);tinPolys. features  = tinPolys. features.filter( function ( triangle){ var pt1 =     triangle.                                                                                                                                                                                                                                                                                                                 geometry.coordinates[0][0];var pt2 =triangle.geometry.coordinates[0][1];var pt3 =   triangle. geometry.                                                                                                                                                                                                                        coordinates[ 0] [2] ;var  dist1 =(0, _turf_distance__WEBPACK_IMPORTED_MODULE_0__[ "default"] )(pt1,pt2,  options)                                                                                                            ;var dist2 =( 0, _turf_distance__WEBPACK_IMPORTED_MODULE_0__["default"])(pt2,    pt3,options);var                                                                                                                                                                                                                                                                                                                                                                                                                    dist3  =( 0,_turf_distance__WEBPACK_IMPORTED_MODULE_0__["default"])( pt1,pt3,              options)                                                                                                                                                                                                                                 ;return dist1 <=maxEdge &&dist2 <=maxEdge &&dist3 <=maxEdge;});if (tinPolys.  features.length <1){                                                                                  return   null;}        var         dissolved           =     (        0,   _lib_turf_dissolve_js__WEBPACK_IMPORTED_MODULE_4__[                                                    "default"])(tinPolys) ;if (dissolved.coordinates. length  === 1){ dissolved.      coordinates  =                                                                                                                                                                                                                     dissolved.coordinates[  0];dissolved. type    ="Polygon";}  return   (  0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                       feature) (dissolved);}function removeDuplicates(points){var cleaned =[];var existing =    {  } ;(0,                                _turf_meta__WEBPACK_IMPORTED_MODULE_2__.featureEach)(points,function (pt){if (  !pt.geometry){return ;}var                                                                                                                                                                   
                                                        key =pt.geometry.        coordinates. join("-" ) ;if (!Object. prototype.hasOwnProperty.call(existing, key)){cleaned.push(pt) ;existing[key]   = true;}});return  (0, _turf_helpers__WEBPACK_IMPORTED_MODULE_1__. featureCollection) ( cleaned)  ;}const __WEBPACK_DEFAULT_EXPORT__ =  concave;} ,  "../node_modules/@turf/concave/dist/es/lib/turf-dissolve.js" :(__unused_webpack___webpack_module__,  __webpack_exports__,__webpack_require__) => {   "use strict"  ;__webpack_require__.r(__webpack_exports__);__webpack_require__. d(__webpack_exports__,{"default" :  ( ) =>__WEBPACK_DEFAULT_EXPORT__ } );var  _turf_clone__WEBPACK_IMPORTED_MODULE_0__  = __webpack_require__( "../node_modules/@turf/clone/dist/es/index.js" );var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__   =__webpack_require__(        "../node_modules/@turf/helpers/dist/es/index.js"                                                                                      )  ;var  _turf_invariant__WEBPACK_IMPORTED_MODULE_2__    =  __webpack_require__(    "../node_modules/@turf/invariant/dist/es/index.js"                                                                                                                                                                                                                                                                                )  ;var    _turf_meta__WEBPACK_IMPORTED_MODULE_3__ =  __webpack_require__(    "../node_modules/@turf/meta/dist/es/index.js"                                                             );var _turf_line_dissolve_js__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__(    "../node_modules/@turf/concave/dist/es/lib/turf-line-dissolve.js"                                                                                                                                                                                                                                                                                                                                                                                                                    )    ;var   _turf_polygon_dissolve_js__WEBPACK_IMPORTED_MODULE_5__  =__webpack_require__(    "../node_modules/@turf/concave/dist/es/lib/turf-polygon-dissolve.js"                                                                                                                          )  ;function   dissolve(geojson,options){if (options ===void 0){options ={ };}options =options ||{};if (!(       0,                                                                                                                                                                                                                                                                                                                     _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.isObject)(options)) {throw  new Error(   "options is invalid"                                                                                                                                                                                                                         );} var     mutate   =options.mutate;if ((  0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.getType)(    geojson)                                                                                                            !=="FeatureCollection"){throw new Error("geojson must be a FeatureCollection"   );} if (!geojson.                                                                                                                                                                                                                                                                                                                                                                                                                   features.length){ throw new Error("geojson is empty");}if (mutate ===false ||     mutate       ===                                                                                                                                                                                                                                undefined){geojson =(0, _turf_clone__WEBPACK_IMPORTED_MODULE_0__["default"]) (  geojson);}var type =                                                                                 getHomogenousType(    geojson) ;if  (     ! type)   { throw new    Error(    "geojson must be homogenous"                                                                            )  ;} var  data  =geojson;switch (   type){ case "LineString" : return ( 0,   _turf_line_dissolve_js__WEBPACK_IMPORTED_MODULE_4__[                                                                                                                                                                               "default"   ] ) (      data,    options)  ;case  "Polygon"   :  return  ( 0,    _turf_polygon_dissolve_js__WEBPACK_IMPORTED_MODULE_5__[                                                                                                           "default" ])(data,options);default:throw new Error(type +" is not supported");}}function getHomogenousType(                      geojson) {var types =  {   }  ;(0,   _turf_meta__WEBPACK_IMPORTED_MODULE_3__.      flattenEach)(    geojson,                                                                                                                                                                   
                                                        function (feature)       {types[feature.geometry.type]=true;});var keys =Object.keys(types);if (keys.length ===1){return keys[0];}return null;}const __WEBPACK_DEFAULT_EXPORT__ =dissolve;},"../node_modules/@turf/concave/dist/es/lib/turf-line-dissolve.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__, {"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_clone__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/clone/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__(      "../node_modules/@turf/invariant/dist/es/index.js"                                                                                       )  ;var    _turf_meta__WEBPACK_IMPORTED_MODULE_3__     =    __webpack_require__(    "../node_modules/@turf/meta/dist/es/index.js"                                                                                                                                                                                                                                                                               );function lineDissolve(geojson,options){if (options ===void 0){options   ={};}    options =options ||                                                                                        {} ;if  (! (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.isObject) (options)){      throw  new Error(                                                                                                                                                                                                                                                                                                                                                                                                                                                                   "options is invalid"   )   ;}    var    mutate       = options.  mutate;if   (    (  0,    _turf_invariant__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                   getType)   (    geojson)!=="FeatureCollection"){throw new Error("geojson must be a FeatureCollection");}if      ( !                                                                                                                                                                                                                                                                                                                    geojson.features.length){throw new Error("geojson is empty");}if (mutate ===false      ||  mutate   ===                                                                                                                                                                                                                          undefined)  {geojson =(0,_turf_clone__WEBPACK_IMPORTED_MODULE_0__["default"])(geojson);}var result =[     ]  ;var                                                                                                            lastLine  = (  0,_turf_meta__WEBPACK_IMPORTED_MODULE_3__.lineReduce)(geojson,     function    (                                                                                                                                                                                                                                                                                                                                                                                                                    previousLine,currentLine)  {  var  merged   = mergeLineStrings( previousLine,    currentLine) ;if (                                                                                                                                                                                                                              merged){return merged;}else {result.push(previousLine);return currentLine;}})     ;if    ( lastLine){                                                                             result. push(lastLine);}if (!result.length){return null;}  else if  ( result.     length  === 1) {                                                                                     return result[0];}else {return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.   multiLineString)                                                                                                                                                                                                                   (result.map(function (line){return line.coordinates;}));}} function coordId(          coord)     {                                                                                                                                                 return coord[ 0].toString()+ "," +coord[ 1]. toString();}function mergeLineStrings(a,b) {var coords1 =a.                        geometry. coordinates;var  coords2  =b.geometry.coordinates;var s1  =coordId(       coords1[0]);var    e1 =                                                                                                                                                                    
                                                          coordId( coords1[        coords1.length -1]);var s2 =coordId(coords2[0]);var e2 =coordId(coords2[coords2.length -1]);var coords;if (s1 ===e2){coords =coords2.concat(coords1.slice(1));}else if (s2 ===e1){coords =coords1.concat(coords2.slice(1));}else if (s1 ===s2){coords =coords1.slice(1).reverse().concat(coords2);}else if (e1 ===e2){coords =coords1.concat(coords2.reverse().slice(1));}else {return null;}return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.lineString)(coords);}const __WEBPACK_DEFAULT_EXPORT__ =lineDissolve;},"../node_modules/@turf/concave/dist/es/lib/turf-polygon-dissolve.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{        "default": (  ) =>polygonDissolve });var                                                                                                       _turf_clone__WEBPACK_IMPORTED_MODULE_0__          =    __webpack_require__(   "../node_modules/@turf/clone/dist/es/index.js"                                                                                                                                                                                                                                                                              ) ;var     _turf_helpers__WEBPACK_IMPORTED_MODULE_1__   =  __webpack_require__(    "../node_modules/@turf/helpers/dist/es/index.js"                                                           )  ;var    _turf_invariant__WEBPACK_IMPORTED_MODULE_2__  =__webpack_require__(    "../node_modules/@turf/invariant/dist/es/index.js"                                                                                                                                                                                                                                                                                                                                                                                                                                    )      ;var     _turf_meta__WEBPACK_IMPORTED_MODULE_3__        =  __webpack_require__(    "../node_modules/@turf/meta/dist/es/index.js"                                                                                                                                                       )     ;var             topojson_client__WEBPACK_IMPORTED_MODULE_4__          =      __webpack_require__(     "../node_modules/topojson-client/src/index.js"                                                                                                                                                                                                                                                                            )  ;var   topojson_server__WEBPACK_IMPORTED_MODULE_5__  = __webpack_require__(   "../node_modules/topojson-server/src/index.js"                                                                                                                                                                                                       )    ;function polygonDissolve(geojson,options){if (options ===void 0){ options ={ };}if ((0,     _turf_invariant__WEBPACK_IMPORTED_MODULE_2__.                                                                     getType)(      geojson) !==   "FeatureCollection" ){    throw    new    Error(   "geojson must be a FeatureCollection"                                                                                                                                                                                                                                                                                                                                                                                              );}if ( !geojson.features.length){throw  new Error("geojson is empty" );}if (   options.mutate  ===                                                                                                                                                                                                                               false     ||   options. mutate    ===  undefined) {     geojson    =  (   0,    _turf_clone__WEBPACK_IMPORTED_MODULE_0__[                                                            "default"   ]    )     ( geojson)  ;}     var     geoms     =    [  ];( 0,   _turf_meta__WEBPACK_IMPORTED_MODULE_3__.                                                               flattenEach)(geojson,function (feature){geoms.push(feature.geometry);}) ;var       topo = (  0,                                                                                                                                                                                                                   topojson_server__WEBPACK_IMPORTED_MODULE_5__.  topology)   (   {geoms: (  0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                         geometryCollection)      (     geoms) .     geometry   }   )   ;var    merged        =    (    0, topojson_client__WEBPACK_IMPORTED_MODULE_4__.    merge) ( topo,topo.   objects.geoms.    geometries) ;return  merged;}   }, "../node_modules/@turf/convex/dist/es/index.js"                                                                                                                                 
                                                                   :       (       __unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>convex });var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js" );var _turf_meta__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var concaveman__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/concaveman/index.js");function convex(geojson,options){if (options ===void 0){options ={ };}options.concavity =options.concavity || Infinity;var points =[];(0,_turf_meta__WEBPACK_IMPORTED_MODULE_1__.coordEach)(geojson,function (coord){       points.push([coord[0],coord[1]]);});if (!                                                                                                   points.      length)      {      return     null;}        var   convexHull     =    concaveman__WEBPACK_IMPORTED_MODULE_2__(                                                                                                                                                                                                                                                                                        points,options.  concavity) ;if   (  convexHull.length  >3) {  return ( 0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                   polygon)     (        [    convexHull]    )    ;}return      null;}    }  ,    "../node_modules/@turf/destination/dist/es/index.js"                                                                                                                                                                                                                                                                                                                                                                                                                             :  (  __unused_webpack___webpack_module__,__webpack_exports__,  __webpack_require__)   =>{   "use strict";__webpack_require__.r(                                                                                                                                                                  __webpack_exports__)  ;__webpack_require__.d( __webpack_exports__,{ "default" :  () => destination    }  ) ;var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                                                                                                                           =   __webpack_require__( "../node_modules/@turf/helpers/dist/es/index.js" )  ;var   _turf_invariant__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                                          =      __webpack_require__( "../node_modules/@turf/invariant/dist/es/index.js"  )    ;function   destination(                                                                                                       origin,distance, bearing,options) {if (options ===void 0){options = {}  ;}var    coordinates1 =                                                                                                                                                                                                                                                                                                                                                                                                                     (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoord)(      origin) ;var    longitude1 =  (0,                                                                                                                                                                                                                               _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians)(coordinates1[0])    ;var latitude1  =(0,                                                                              _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians)(coordinates1[1] )  ;var bearingRad =                                                                                     (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__. degreesToRadians)(bearing);var     radians  = (0,                                                                                                                                                                                                                    _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.  lengthToRadians)   ( distance,    options.units);var                                                                                                                                                   latitude2 =Math.asin(Math.sin( latitude1) * Math.cos(radians)+Math.cos(latitude1)*Math.        sin(                         radians)* Math. cos(bearingRad));var longitude2 =longitude1  +Math.atan2(Math.   sin(bearingRad) *Math. sin(                                                                                                                                                                     
                                                          radians)*Math. cos(       latitude1),Math.cos(radians)-Math.sin(latitude1)*Math.sin(latitude2));var lng =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.radiansToDegrees)(longitude2);var lat  =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.radiansToDegrees)(latitude2);return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.point)([lng,lat],options.properties);}},"../node_modules/@turf/difference/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{ "use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var polygon_clipping__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/polygon-clipping/dist/polygon-clipping.umd.js");var        _turf_helpers__WEBPACK_IMPORTED_MODULE_1__                                                                                                 =   __webpack_require__(  "../node_modules/@turf/helpers/dist/es/index.js"   ) ;var  _turf_invariant__WEBPACK_IMPORTED_MODULE_2__                                                                                                                                                                                                                                                                                  = __webpack_require__("../node_modules/@turf/invariant/dist/es/index.js"   )              ;function                                                                                            difference(    polygon1,     polygon2) {      var     geom1     =   (   0,    _turf_invariant__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                                                                                                                                                                                                                                                                   getGeom)(polygon1)  ;var geom2 =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__. getGeom)(      polygon2)   ;var  properties   =                                                                                                                                                                        polygon1.   properties || {};var differenced =polygon_clipping__WEBPACK_IMPORTED_MODULE_0__.difference(     geom1.                                                                                                                                                                                                                                                                                                               coordinates,geom2. coordinates) ;if ( differenced.length  ===0) return null;if (   differenced. length                                                                                                                                                                                                                               === 1)    return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.polygon)(differenced[0],properties)    ;return (                                                                                                        0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.multiPolygon)    ( differenced,     properties);}                                                                                                                                                                                                                                                                                                                                                                                                                        const      __WEBPACK_DEFAULT_EXPORT__       =        difference;}      ,   "../node_modules/@turf/dissolve/dist/es/index.js"                                                                                                                                                                                                   :  (           __unused_webpack___webpack_module__,   __webpack_exports__,   __webpack_require__) =>                                                                            {"use strict";__webpack_require__. r(__webpack_exports__);__webpack_require__.                 d(                                                                                       __webpack_exports__,{"default" :(  ) =>  __WEBPACK_DEFAULT_EXPORT__ }   );var   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                                       =__webpack_require__( "../node_modules/@turf/helpers/dist/es/index.js") ;var    _turf_invariant__WEBPACK_IMPORTED_MODULE_1__                                                                                                                           =    __webpack_require__("../node_modules/@turf/invariant/dist/es/index.js" )  ;var  _turf_meta__WEBPACK_IMPORTED_MODULE_2__  = __webpack_require__(    "../node_modules/@turf/meta/dist/es/index.js");var _turf_flatten__WEBPACK_IMPORTED_MODULE_3__                                                                                                                                                      
                                                                             =       __webpack_require__("../node_modules/@turf/flatten/dist/es/index.js");var polygon_clipping__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__("../node_modules/polygon-clipping/dist/polygon-clipping.umd.js");function dissolve(fc,options){options =options  ||{};if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.isObject)(options))throw new Error("options is invalid");var propertyName =options.propertyName;(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.collectionOf)(fc,"Polygon","dissolve");var outFeatures =[];if  (!options.propertyName){return  (0,_turf_flatten__WEBPACK_IMPORTED_MODULE_3__["default"])((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.multiPolygon)(polygon_clipping__WEBPACK_IMPORTED_MODULE_4__.union. apply(null, fc.features.map(        function     ( f){ return   f. geometry.                                                                                                       coordinates;}  )   ) ) )  ;}    else    {    var   uniquePropertyVals ={} ;(  0,    _turf_meta__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                                                                                                                 featureEach)( fc,function (feature){ if (!Object.prototype.hasOwnProperty.call(    uniquePropertyVals,                                                                                        feature.  properties[ propertyName] )){uniquePropertyVals[feature. properties[    propertyName]]=[];}                                                                                                                                                                                                                                                                                                                                                                                                                                                           uniquePropertyVals[ feature.properties[propertyName]].push(feature);});var vals =  Object.    keys(uniquePropertyVals);for (var i                                                                                                                                                                      = 0;i < vals.   length;i++ ) {var  mp =(   0, _turf_helpers__WEBPACK_IMPORTED_MODULE_0__. multiPolygon)   (     polygon_clipping__WEBPACK_IMPORTED_MODULE_4__.                                                                                                                                                                                                                                                                     union.apply(null,uniquePropertyVals[vals[i] ].map(function (f){return f.geometry.    coordinates;} ) ))                                                                                                                                                                                                                                  ;mp.      properties[  propertyName]  = vals[  i];outFeatures.push(     mp);}   }  return    ( 0,   _turf_flatten__WEBPACK_IMPORTED_MODULE_3__[                                                                      "default"])((0, _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.featureCollection) (    outFeatures))                                                                                                                                                                                                                                                                                                                                                                                                                          ;}         const       __WEBPACK_DEFAULT_EXPORT__      = dissolve;}  ,   "../node_modules/@turf/distance-weight/dist/es/index.js"                                                                                                                                                                                          :        (     __unused_webpack___webpack_module__,     __webpack_exports__,   __webpack_require__) =>                                                                            { "use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.                 d(                                                                                     __webpack_exports__,{  "default": () =>distanceWeight,"pNormDistance" : (  ) =>    pNormDistance }                                                                                                                                                                                                                 )   ;var _turf_centroid__WEBPACK_IMPORTED_MODULE_0__   =__webpack_require__(    "../node_modules/@turf/centroid/dist/es/index.js"                                                                                                                       )      ;var   _turf_invariant__WEBPACK_IMPORTED_MODULE_1__  = __webpack_require__(    "../node_modules/@turf/invariant/dist/es/index.js"  )  ;var     _turf_meta__WEBPACK_IMPORTED_MODULE_2__ =   __webpack_require__( "../node_modules/@turf/meta/dist/es/index.js"                                                                                                                                      
                                                                 )    ;function       pNormDistance(feature1,feature2,p){if (p ===void 0){p =2;}var coordinate1 =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoord)(feature1);var coordinate2 =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoord)(feature2);var xDiff  =coordinate1[0]-coordinate2[0];var yDiff =coordinate1[1]-coordinate2[1];if (p ===1){return Math.abs(xDiff)+Math.abs(yDiff);}return Math.pow(Math.pow(xDiff,p)+Math.pow(yDiff,p),1 /p);}function distanceWeight(fc,options){options =options ||{};var threshold =options.threshold ||10000;var p =options.p ||2;var binary = options.binary ||false;var alpha =options.alpha || -1;var rowTransform =options.standardization ||false;var features =[];(0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__. featureEach)(fc,function (         feature){      features.  push(   (     0,                                                                                                  _turf_centroid__WEBPACK_IMPORTED_MODULE_0__["default"])(feature));});var weights =[]   ;for (var i =                                                                                                                                                                                                                                                                                                            0;i <features.length;i++ ){weights[i]=[];}for (var i =0;i <features.length;i++ )   {for ( var j =i;j <                                                                                       features.length;j++    ){if (i ===j) {weights[i][j]=0;}var  dis =pNormDistance(    features[    i]   ,                                                                                                                                                                                                                                                                                                                                                                                                                                                          features[j],p);weights[i][j]=dis;weights[j][i]=dis;}}for (var i =0;i <features.length;i++ )   { for (var j =0;j <features.length;                                                                                                                                                                        j++ ){var dis    =weights[i][j] ;if ( dis ===0){ continue ;}if (binary){if (dis <=threshold){weights[i][j]=     1.0;}                                                                                                                                                                                                                                                                                                             else {weights[i][j]= 0.0;}}else {if (dis <=threshold){weights[i][j]=Math.pow(dis,     alpha) ;} else  {                                                                                                                                                                                                                               weights[   i][j]=0.0;}}}}if (rowTransform){for (var i =0;i <features.  length;i++   ){ var  rowSum =    weights[                                                                                                         i].reduce(function (sum,currentVal){return sum +currentVal;},0);for (var j =0;    j  <features.                                                                                                                                                                                                                                                                                                                                                                                                                    length;j++ ){weights[i] [j]=  weights[i][j]/ rowSum;}} }return weights;}}  ,   "../node_modules/@turf/distance/dist/es/index.js"                                                                                                                                                                                                      :  (      __unused_webpack___webpack_module__,     __webpack_exports__,   __webpack_require__) =>                                                                            {"use strict";__webpack_require__.r( __webpack_exports__);__webpack_require__.                 d(                                                                                        __webpack_exports__, {  "default":  () => __WEBPACK_DEFAULT_EXPORT__  } );var   _turf_invariant__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                                    =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");var    _turf_helpers__WEBPACK_IMPORTED_MODULE_1__                                                                                                                              =          __webpack_require__(  "../node_modules/@turf/helpers/dist/es/index.js")      ;function                       distance(from,to,options){if (options ===void 0){options ={};}var coordinates1         =        (        0,                                                                                                                                                                       
                                                             _turf_invariant__WEBPACK_IMPORTED_MODULE_0__. getCoord)(from);var coordinates2 =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getCoord)(to);var dLat =( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.degreesToRadians)(  coordinates2[1] -coordinates1[1]);var dLon =(0, _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.degreesToRadians)(coordinates2[ 0]-coordinates1[0]);var  lat1  =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.degreesToRadians)(coordinates1[1]);var lat2  =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.degreesToRadians)(coordinates2[1] );var a  =Math. pow(Math.sin(dLat /2), 2) +Math.pow(Math.sin(dLon   /2),2)*Math.cos(lat1)*Math.cos(lat2) ;return  ( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__. radiansToLength)(2 *Math.atan2(Math.sqrt(a),Math.sqrt(1 -a)),options.units);}const  __WEBPACK_DEFAULT_EXPORT__   =distance;},                                                                                                      "../node_modules/@turf/ellipse/dist/es/index.js"          :          (   __unused_webpack___webpack_module__,                                                                                                                                                                                                                                                                                    __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(    __webpack_exports__)                                                                                        ;__webpack_require__. d(   __webpack_exports__,  {      "default"  :   ( ) =>    __WEBPACK_DEFAULT_EXPORT__                                                                                                                                                                                                                                                                                                                                                                                                                                                    }  )     ;var     _turf_helpers__WEBPACK_IMPORTED_MODULE_0__     =  __webpack_require__(    "../node_modules/@turf/helpers/dist/es/index.js"                                                                                                                                                                   )  ;var      _turf_rhumb_destination__WEBPACK_IMPORTED_MODULE_1__          =      __webpack_require__(    "../node_modules/@turf/rhumb-destination/dist/es/index.js"                                                                                                                                                                                                                                                        );var  _turf_transform_rotate__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__(   "../node_modules/@turf/transform-rotate/dist/es/index.js"                                                                                                                                                                                            );var        _turf_invariant__WEBPACK_IMPORTED_MODULE_3__              =       __webpack_require__(   "../node_modules/@turf/invariant/dist/es/index.js"                                                              );function ellipse(center, xSemiAxis,ySemiAxis,options){options =options  || {}   ;var  steps =                                                                                                                                                                                                                                                                                                                                                                                                                   options.  steps || 64;var units  = options.units ||"kilometers" ;var angle  =   options. angle  ||                                                                                                                                                                                                                           0;var pivot =options.pivot  ||center;var properties =options.properties ||center.   properties ||{};if (!                                                                              center)throw new Error("center is required");if  ( ! xSemiAxis)throw new  Error(  "xSemiAxis is required"                                                                               );if  (! ySemiAxis)throw   new Error( "ySemiAxis is required"   ) ;if ( !  ( 0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                    isObject)( options))throw new Error("options must be an object") ;if (!  (0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                            isNumber)  (steps)  )throw   new    Error(     "steps must be a number")  ;if (    ! (0, _turf_helpers__WEBPACK_IMPORTED_MODULE_0__. isNumber)(angle))throw new Error("angle must be a number");var centerCoords =(                         0,                                                                                                                                                             
                                                              _turf_invariant__WEBPACK_IMPORTED_MODULE_3__. getCoord)(center);if (units ==="degrees"){var angleRad =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians) (angle);}else { xSemiAxis =(0,_turf_rhumb_destination__WEBPACK_IMPORTED_MODULE_1__["default"])(center,xSemiAxis,90,{units:units });ySemiAxis =(0,_turf_rhumb_destination__WEBPACK_IMPORTED_MODULE_1__["default"])(center,ySemiAxis,0,{units:units });xSemiAxis =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_3__.getCoord)(xSemiAxis) [0]-centerCoords[0];ySemiAxis =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_3__.getCoord)(ySemiAxis)[1] -centerCoords[1];}var coordinates =[];for (var i = 0;i <steps;i +=1){var stepAngle =i * -360 /steps;var x =xSemiAxis *ySemiAxis /Math. sqrt(Math.pow(ySemiAxis,2)+Math.pow(xSemiAxis,2)*Math. pow( getTanDeg(stepAngle),2));var y =xSemiAxis *                                                                                       ySemiAxis /Math.sqrt(Math.pow(xSemiAxis, 2)+Math.pow(ySemiAxis,2)/Math. pow(getTanDeg(   stepAngle),                                                                                                                                                                                                                                                                                                              2));if ( stepAngle <  -90 &&stepAngle >= - 270)x = -x;if (stepAngle < -180 &&    stepAngle >= -360)y                                                                                       = -y;if  ( units ==="degrees") { var newx =x *Math.cos(angleRad) + y *Math.sin(    angleRad);var newy =                                                                                                                                                                                                                                                                                                                                                                                                                                                       y *Math.cos(angleRad)- x *Math. sin( angleRad) ;x =newx;y  =newy;} coordinates.push([ x  +    centerCoords[0],y +centerCoords[1]                                                                                                                                                                               ]     )  ;}    coordinates. push(   coordinates[ 0]);if    (     units  ===  "degrees" )   { return  (  0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                                       polygon)   (  [ coordinates]   ,properties)   ;}   else    {    return    (  0,   _turf_transform_rotate__WEBPACK_IMPORTED_MODULE_2__[                                                                                                                                                                                               "default"   ])  ((0, _turf_helpers__WEBPACK_IMPORTED_MODULE_0__. polygon)( [coordinates],properties),    angle,{                                                                                                        pivot:pivot });}}function getTanDeg(deg){var rad =deg *Math.PI /180;return Math.   tan(rad)  ;}                                                                                                                                                                                                                                                                                                                                                                                                                            const     __WEBPACK_DEFAULT_EXPORT__       =        ellipse;}      ,   "../node_modules/@turf/envelope/dist/es/index.js"                                                                                                                                                                                                :     (     __unused_webpack___webpack_module__,       __webpack_exports__,    __webpack_require__) =>                                                                             {"use strict";__webpack_require__.r(__webpack_exports__) ;__webpack_require__.d(   __webpack_exports__,                                                                                   {   "default" :  (      ) =>    __WEBPACK_DEFAULT_EXPORT__       }   )   ;var    _turf_bbox__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                                       =  __webpack_require__(  "../node_modules/@turf/bbox/dist/es/index.js" );var    _turf_bbox_polygon__WEBPACK_IMPORTED_MODULE_1__                                                                                                                           =     __webpack_require__(  "../node_modules/@turf/bbox-polygon/dist/es/index.js")     ;function                      envelope(geojson){return  (0,_turf_bbox_polygon__WEBPACK_IMPORTED_MODULE_1__[     "default" ]  )     ( (0,                                                                                                                                                                        
                                                               _turf_bbox__WEBPACK_IMPORTED_MODULE_0__[ "default"])(geojson));}const __WEBPACK_DEFAULT_EXPORT__ =envelope;},"../node_modules/@turf/explode/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var  _turf_meta__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function explode(geojson){var points =[];if (geojson.type ==="FeatureCollection"){(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.featureEach)(geojson,function (feature){( 0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.                                                                                                    coordEach)  (     feature, function     (  coord)   { points.      push(     (  0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                                          point)    (   coord, feature.   properties) ) ;}  )  ;}   ) ;}  else  {   (  0,    _turf_meta__WEBPACK_IMPORTED_MODULE_0__.                                                                   coordEach) ( geojson,    function  (  coord)    {  points.   push(  (       0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                                                                                                                                                                                              point)(coord,geojson.properties));});}return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.    featureCollection)(points) ;}const                                                                                                                                                                                __WEBPACK_DEFAULT_EXPORT__    =       explode;}         ,  "../node_modules/@turf/flatten/dist/es/index.js"    :     ( __unused_webpack___webpack_module__,                                                                                                                                                                                                                                                                   __webpack_exports__,__webpack_require__)  => {"use strict";__webpack_require__.r(   __webpack_exports__)                                                                                                                                                                                                                                ;__webpack_require__.  d( __webpack_exports__,  { "default"    : (    ) => __WEBPACK_DEFAULT_EXPORT__ }  )  ;var _turf_meta__WEBPACK_IMPORTED_MODULE_0__                                                                =__webpack_require__(    "../node_modules/@turf/meta/dist/es/index.js"  )   ;var   _turf_helpers__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                                                                                                                                                                                                                    =  __webpack_require__(   "../node_modules/@turf/helpers/dist/es/index.js"  )   ;function flatten(                                                                                                                                                                                                                          geojson){if (!geojson)throw new Error("geojson is required");var results =[];(0,   _turf_meta__WEBPACK_IMPORTED_MODULE_0__.                                                              flattenEach)( geojson,function (feature){results. push( feature);});return (  0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.                                                         featureCollection) ( results) ;}const  __WEBPACK_DEFAULT_EXPORT__  =flatten;}   ,   "../node_modules/@turf/flip/dist/es/index.js"                                                                                                                                                                                    :         (   __unused_webpack___webpack_module__,  __webpack_exports__,    __webpack_require__) =>                                                                                                                                                   {     "use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.             d(                     __webpack_exports__,{ "default" : () =>__WEBPACK_DEFAULT_EXPORT__   } ) ;var   _turf_meta__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                            
                                                                                  =       __webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_clone__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/clone/dist/es/index.js");function flip(geojson,options){options =options ||{};if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.isObject)(options))throw new Error("options is invalid");var mutate =options.mutate;if (!geojson)throw new Error("geojson is required");if (mutate ===false ||mutate ===undefined)geojson =(0,_turf_clone__WEBPACK_IMPORTED_MODULE_2__["default"])(geojson);(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.coordEach)(geojson,function (coord){var x        = coord[0];var  y =  coord[ 1];coord[0]=                                                                                                          y;coord[ 1]   = x;});return geojson;} const __WEBPACK_DEFAULT_EXPORT__   = flip;}    ,     "../node_modules/@turf/great-circle/dist/es/index.js"                                                                                                                                                                                                                                                                 :     (     __unused_webpack___webpack_module__,        __webpack_exports__,    __webpack_require__) =>                                                                                   {"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(    __webpack_exports__,                                                                                                                                                                                                                                                                                                                                                                                                                                                      {   "default"        :  (   )      =>   __WEBPACK_DEFAULT_EXPORT__      }      )    ;var     _turf_invariant__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                                    =   __webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");var D2R  =Math.PI /     180;var                                                                                                                                                                                                                                                                                                      R2D =180 /Math.PI;var Coord =function (lon,lat){this.lon =lon;this.lat =lat;this.   x =D2R *lon;this.y =                                                                                                                                                                                                                                   D2R  *   lat;};Coord.prototype. view =function (){return String( this. lon).slice(0, 4)+","+String(      this.                                                                                                      lat).slice(0,4);} ;Coord.prototype.antipode =function (){var anti_lat =  -1 *this.       lat;var                                                                                                                                                                                                                                                                                                                                                                                                                  anti_lon =this.lon < 0 ?180 +this.lon :( 180 -this.lon)* -1;return new Coord(   anti_lon,anti_lat)                                                                                                                                                                                                                         ;};var LineString = function ( ) { this.coords = [] ;this.length =0;};LineString.     prototype. move_to =                                                                                 function (coord) {this.length++ ;this.coords. push(coord);};var Arc = function (    properties){                                                                                      this.properties = properties   ||{};this.geometries = [];} ;Arc.prototype.json  =    function ()                                                                                                                                                                                                                 { if  ( this.geometries.length <= 0){return   {geometry:{type:"LineString" ,    coordinates:null }                                                                                                                                                         ,    type:"Feature",properties:this.properties };}else  if (this.geometries.length     === 1)   {                 return {geometry:{type:"LineString",coordinates:this. geometries[0].coords } ,   type:"Feature",properties:                                                                                                                                                                          
                                                                 this.properties };}        else {var multiline =[ ];for (var i =0;i <this.geometries. length;i++ ){multiline.push(this.geometries[i].coords);}return {geometry:{type:"MultiLineString",coordinates:multiline },type:"Feature",properties:this.properties };}};Arc. prototype.wkt =function (){var wkt_string ="";var wkt ="LINESTRING(";var collect =function (c){wkt +=c[0]+ " "+c[1]+"," ;};for (var i =0;i <this.geometries.length;i++  ){if (this.geometries[ i].coords.length ===0){return "LINESTRING(empty)";}else {var coords =this.geometries[i].coords;coords.forEach(collect);wkt_string +=wkt.substring(0,wkt.length -1)+")";}}return wkt_string;};var GreatCircle =function (start,end,properties){if (!start ||start.x ===undefined ||start.y ===undefined){throw new Error(       "GreatCircle constructor expects two args: start and end objects with x and y properties"                                                            ) ;} if ( ! end   ||end.x  ===   undefined ||end.y   ===  undefined){ throw  new  Error(    "GreatCircle constructor expects two args: start and end objects with x and y properties"                                                                                                                                                                                                                         );} this.start  =new Coord(start.x,start.y);this. end =new Coord(end. x, end.y)    ;this. properties =                                                                                       properties ||{};var w =this.start.x -this. end.x;var h =this.start.y -this.end.    y;var  z =Math.pow(                                                                                                                                                                                                                                                                                                                                                                                                                                                    Math.sin( h /2.0),2)+Math.cos(this.start.y)*Math.cos(this.end.y)*Math.pow(Math.sin(w /2.0),    2);this.g  = 2.0 *Math.asin( Math.                                                                                                                                                                                    sqrt(z));if (   this.g ===Math.  PI){ throw new Error("it appears "+  start.  view() +" and "  +end.view()+     " are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite"                                                                                                                                                                                                             )  ;}    else  if     (    isNaN(     this.  g)  )  {   throw      new   Error(   "could not calculate great circle between "                                                                                                                                                                                                           +start +   " and "+ end);}};GreatCircle.prototype.interpolate =function (f){var A =Math.sin( (1  -f)*   this.g)/                                                                                                      Math.sin(this.g) ;var B =Math.sin(f *this.g)/Math.sin(this.g);var x =A  *Math.cos(        this.                                                                                                                                                                                                                                                                                                                                                                                                                   start.y)*Math.cos(this.start.x)+B *Math.cos(this.end.y)*Math.cos(this.end.x)   ;var  y  =A  *Math.                                                                                                                                                                                                                       cos(this.start.y)*Math.sin(this.start.x)+B * Math.cos(this.end. y)*Math.sin( this.   end.x);var z =A *Math.                                                                                 sin(this.start.y)+B * Math.sin(this.end.y);var lat =R2D *Math.atan2(z,Math.sqrt(    Math.pow( x,                                                                                       2)+Math. pow(y,2)) );var lon =R2D *Math.atan2(y,x);return [lon,lat];};GreatCircle.   prototype.                                                                                                                                                                                                                 Arc =function (npoints,options){var first_pass =[];if (!npoints ||npoints <=      2){  first_pass.                                                                                                                                                       push(  [this.start.lon,this.start.lat]);first_pass.push([ this.end.lon,this.end.lat])   ;}else {var                 delta =1.0 /(npoints -1);for (var i =0;i <npoints; ++i){var step =delta *i;var    pair = this. interpolate(                                                                                                                                                                          
                                                                    step);first_pass.         push(pair);}}var bHasBigDiff =false;var dfMaxSmallDiffLong =0;var dfDateLineOffset =options &&options.offset ?options.offset :10;var dfLeftBorderX =180 -dfDateLineOffset;var dfRightBorderX = -180 +dfDateLineOffset;var dfDiffSpace =360 -dfDateLineOffset;for (var j =1;j <first_pass.length; ++j){var dfPrevX =first_pass[j -1][0];var dfX =first_pass[j][0];var dfDiffLong =Math.abs(dfX -dfPrevX);if (dfDiffLong >dfDiffSpace &&(dfX >dfLeftBorderX &&dfPrevX <dfRightBorderX ||dfPrevX >dfLeftBorderX &&dfX <dfRightBorderX)){bHasBigDiff =true;}else if (dfDiffLong >dfMaxSmallDiffLong){dfMaxSmallDiffLong =dfDiffLong;}}var poMulti =[];if (bHasBigDiff &&dfMaxSmallDiffLong <dfDateLineOffset){var poNewLS =[];poMulti.push(poNewLS);for (var k =       0;k < first_pass. length;  ++k){var dfX0 =                                                                                                            parseFloat(first_pass[k][0]);if (k >0 &&Math.abs(dfX0 -first_pass[k -1][0])>dfDiffSpace){        var                                                                                                                                                                                                                                                                                                          dfX1 =parseFloat(first_pass[k -1][0]);var dfY1 =parseFloat(first_pass[k -1][1])        ;var   dfX2   =                                                                                       parseFloat(first_pass[k][0]);var dfY2 =parseFloat(first_pass[k][1]);if (dfX1 > -   180   &&  dfX1    <                                                                                                                                                                                                                                                                                                                                                                                                                                                    dfRightBorderX &&dfX2 ===180 &&k +1 <first_pass.length &&first_pass[k  -1] [ 0] > -180 &&       first_pass[   k -    1] [ 0]   <                                                                                                                                                                                      dfRightBorderX)  {poNewLS.push([ -180,first_pass[k][1]]);k++ ;poNewLS.push([first_pass[k][0],first_pass[k][     1]]                                                                                                                                                                                                                                                                                                        );continue ;}else if  (dfX1 >dfLeftBorderX &&dfX1 < 180  &&dfX2 === -180 &&k +1 <   first_pass.length &&                                                                                                                                                                                                                                   first_pass[ k  -1][0]>dfLeftBorderX && first_pass[k -1][0]<180){poNewLS.push([180,first_pass[ k][1]])       ;k++                                                                                                        ;poNewLS.push([ first_pass[k] [ 0],first_pass[ k][1] ])  ;continue ;}if ( dfX1 <    dfRightBorderX                                                                                                                                                                                                                                                                                                                                                                                                             &&dfX2 >dfLeftBorderX) {var  tmpX = dfX1;dfX1  = dfX2;dfX2 =tmpX;var  tmpY =         dfY1;dfY1  =                                                                                                                                                                                                                       dfY2;dfY2 =tmpY;}if (dfX1 >dfLeftBorderX &&dfX2 <dfRightBorderX){dfX2 +=360;}if  (      dfX1 <=180 &&dfX2 >=                                                                                 180 &&dfX1 <dfX2){var dfRatio =(180 -dfX1)/(dfX2 -dfX1);var dfY =dfRatio *dfY2 +(   1 -dfRatio)*                                                                                        dfY1;poNewLS.push([first_pass[k -1][0]>dfLeftBorderX ?180 : -180,dfY]);poNewLS =[]    ;poNewLS.                                                                                                                                                                                                                push([first_pass[k -1] [0]>dfLeftBorderX ? -180 :180, dfY]) ;poMulti.  push(    poNewLS);} else  {                                                                                                                                                        poNewLS = [];poMulti. push(poNewLS);}poNewLS.push( [dfX0,first_pass[k][1]] );}else {       poNewLS.                push([first_pass[k][0],first_pass[k][1]]);}}}else {var  poNewLS0 =[];poMulti.   push(poNewLS0);for (var l =                                                                                                                                                                          
                                                                    0;l  < first_pass.        length; ++l){ poNewLS0.push([first_pass[l][0],first_pass[l][1]]);}}var arc =new Arc(this.properties);for (var m =0;m <poMulti.length; ++m){var line =new LineString();arc.geometries.push(line);var points =poMulti[m];for (var j0 =0;j0 <points.length; ++j0){line.move_to(points[j0]);}}return arc;};function greatCircle(start,end,options){options =options ||{};if (typeof options !=="object")throw new Error("options is invalid");var properties =options.properties;var npoints =options.npoints;var offset =options.offset;start =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getCoord)(start);end =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getCoord)(end);properties =properties ||{};npoints =npoints ||100;offset =offset ||10;var        generator =new  GreatCircle({x:start[0],y:                                                                                                            start[1]},{x:end[0],y:end[1]},properties);var line =generator.Arc(npoints,{offset:offset }        )                                                                                                                                                                                                                                                                                                           ;return  line.json()  ;}    const  __WEBPACK_DEFAULT_EXPORT__  =greatCircle;} ,    "../node_modules/@turf/helpers/dist/es/index.js"                                                              :      (     __unused_webpack___webpack_module__,      __webpack_exports__,    __webpack_require__) =>                                                                                                                                                                                                                                                                                                                                                                                                                                              { "use strict"   ;__webpack_require__.   r( __webpack_exports__) ;__webpack_require__.  d(    __webpack_exports__,{"areaFactors":                                                                                                                                                                                          (    )   =>    areaFactors,"bearingToAzimuth":( ) =>bearingToAzimuth, "convertArea": ( )  =>convertArea,      "convertLength"                                                                                                                                                                                                                                                                                            :() =>convertLength,"degreesToRadians":() =>degreesToRadians,"earthRadius":() =>          earthRadius,                                                                                                                                                                                                                                     "factors"   :() =>factors,  "feature":() =>feature, "featureCollection" :( )  =>  featureCollection,    "geometry"                                                                                                   : () => geometry, "geometryCollection": ()  =>geometryCollection, "isNumber":( ) =>     isNumber,                                                                                                                                                                                                                                                                                                                                                                                                               "isObject"  : (   )   =>isObject,"lengthToDegrees" :  () =>  lengthToDegrees,   "lengthToRadians":                                                                                                                                                                                                                      () =>lengthToRadians,"lineString":()  =>lineString,"lineStrings":( ) =>lineStrings,   "multiLineString":() =>                                                                                 multiLineString,"multiPoint":  ()  =>multiPoint,"multiPolygon":( ) =>multiPolygon,    "point": (                                                                                         )  =>point,"points":() =>points,"polygon": () => polygon,"polygons":() =>polygons,    "radiansToDegrees"                                                                                                                                                                                                      : () =>radiansToDegrees,"radiansToLength":() =>radiansToLength,"round":() =>                round,                                                                                                                                                        "unitsFactors" :()   => unitsFactors,"validateBBox" : () => validateBBox,"validateId" :() => validateId }         );var earthRadius =6371008.8;var  factors =  { centimeters: earthRadius *100,    centimetres:earthRadius  *                                                                                                                                                                           
                                                                        100,   degrees:        earthRadius  /111325,feet:earthRadius *3.28084, inches:earthRadius *39.37,kilometers:earthRadius /1000,kilometres:earthRadius /1000,meters:earthRadius,metres:earthRadius,miles:earthRadius /1609.344,millimeters:earthRadius *1000,millimetres:earthRadius  *1000,nauticalmiles:earthRadius /1852,radians:1,yards:earthRadius *1.0936 };var unitsFactors ={centimeters:100,centimetres:100,degrees:1 /111325,feet:3.28084,inches:39.37,kilometers:1  /1000,kilometres:1 /1000,meters:1,metres:1,miles: 1 /1609.344,millimeters:1000,millimetres:1000,nauticalmiles: 1  /1852,radians:1 /earthRadius,yards:1.0936133 };var areaFactors ={acres:0.000247105,centimeters:10000,centimetres: 10000,feet:10.763910417,hectares:0.0001,inches:1550.003100006,        kilometers: 0.000001, kilometres:0.000001,                                                                                                               meters:1,metres:1,miles:3.86e-7,millimeters:1000000,millimetres:1000000,yards:1.195990046 }                                                                                                                                                                                                                                                                                                                  ;function feature(geom,properties,options){if (options ===void 0){options ={};}    var feat   = {type:                                                                                       "Feature"};if (options.id ===0 ||options.id){feat.id =options. id;}if (options.     bbox) {feat.bbox =                                                                                                                                                                                                                                                                                                                                                                                                                                                 options.bbox;}feat.properties =properties  ||{} ;feat.geometry =geom;return feat;}function       geometry(   type,  coordinates,                                                                                                                                                                                            _options){if    (_options ===void  0){_options = {};}switch (type){case "Point":return point(coordinates).     geometry;case                                                                                                                                                                                                                                                                                             "LineString" :return  lineString( coordinates) .    geometry;case   "Polygon"  :      return  polygon(                                                                                                                                                                                                                                     coordinates)    .  geometry;case "MultiPoint": return  multiPoint(   coordinates)   .   geometry;case    "MultiLineString"                                                                                           :  return   multiLineString(  coordinates)       . geometry;case     "MultiPolygon" :     return multiPolygon(                                                                                                                                                                                                                                                                                                                                                                                                  coordinates).geometry;default:throw new Error(type +" is invalid");}}function   point(coordinates,                                                                                                                                                                                                                    properties,options){if (options === void 0){options ={};} if (!coordinates){throw new                    Error(                                                                                 "coordinates is required"   );}if (!Array. isArray(coordinates) ){throw  new Error(    "coordinates must be an Array"                                                                    )  ;}   if  (     coordinates.   length     <   2)   {    throw    new       Error(     "coordinates must be at least 2 numbers long"                                                                                                                                                                         );}if (!isNumber(coordinates[0])||!isNumber(coordinates[1])){throw new Error(   "coordinates must contain numbers"                                                                                                                                         );}    var  geom = {type:"Point",  coordinates:coordinates };return    feature(geom,    properties,             options);}function  points(coordinates,properties,options){if (options ===void      0){  options = {    };}                                                                                                                                                                            
                                                                    return featureCollection(    coordinates.map(function  (coords) {return point(coords,properties) ;}), options);}function polygon(coordinates,properties,options){if (options ===void 0) {options ={};}for ( var _i =0,coordinates_1 =coordinates;_i <coordinates_1.length;_i++ ){var ring  = coordinates_1[_i];if (ring.length < 4){ throw  new Error("Each LinearRing of a Polygon must have 4 or more Positions.");} for (var j =0;j  <ring[ring.length -1] .length;j++ ) { if (ring[ring.length -1][j]!==ring[0][j]){throw new Error("First and last Position are not equivalent.");}}}var geom ={type:"Polygon" ,coordinates: coordinates };return  feature(geom,properties,options);} function polygons(coordinates,properties,options){if (options === void 0){options ={};}        return  featureCollection(coordinates.map(                                                                                                                  function ( coords)  {return polygon(coords, properties);} ) ,options);} function lineString(                                                                                                                                                                                                                                                                                                               coordinates,   properties,options){ if  (options === void 0) {options ={};}if (    coordinates.length <                                                                                      2){throw new  Error( "coordinates must be an array of two or more positions");}     var   geom ={type:                                                                                                                                                                                                                                                                                                                                                                                                                                               "LineString",coordinates:coordinates };return feature( geom,properties, options);} function       lineStrings(       coordinates,                                                                                                                                                                                               properties,    options){if (options ===void  0){ options  ={ };}return  featureCollection(coordinates.map(     function                                                                                                                                                                                                                                                                                               (coords)  {  return  lineString( coords, properties)  ;} )  ,options) ;} function   featureCollection(                                                                                                                                                                                                                                       features,   options){ if (options ===void 0) { options  ={} ;}var fc ={type:"FeatureCollection"};if (    options.                                                                                                   id) {fc. id  =options. id;}if  (options.bbox){fc.  bbox =options. bbox;}fc. features =      features;return fc;}                                                                                                                                                                                                                                                                                                                                                                                                function multiLineString(coordinates,properties,options) {if (options ===void   0){options ={};}var                                                                                                                                                                                                                  geom ={ type:"MultiLineString"  ,  coordinates: coordinates  } ;return feature( geom,     properties,options);}                                                                                    function multiPoint(coordinates,properties,options){ if  (  options ===void 0)  {     options =                                                                                         {};} var geom   ={type:"MultiPoint",coordinates: coordinates } ;return feature(geom,      properties,                                                                                                                                                                                                        options);} function multiPolygon(coordinates,properties,options){if (options    ===void 0){options =                                                                                                                                                       {};}     var  geom  ={type:"MultiPolygon", coordinates:coordinates };return feature(          geom,              properties,options) ;}function  geometryCollection( geometries, properties,    options){ if  (options  ===                                                                                                                                                                            
                                                                     void 0){options ={};}       var geom ={type:"GeometryCollection",geometries:geometries };return feature(geom,properties, options);}function round(num, precision) {if (precision ===void 0){precision =0;}if (precision &&!(precision >=0)){throw new Error("precision must be a positive number");} var multiplier =Math.pow( 10,precision ||0);return Math.round(num  *multiplier)/multiplier;}function radiansToLength(radians,units){if (units ===void  0){units = "kilometers";}var factor =factors[units];if (!factor){throw new Error(units + " units is invalid");}return radians  *factor;}function lengthToRadians( distance,units){if (units ===void 0){ units ="kilometers";}var  factor =factors[units];if (!factor){throw new  Error(units +" units is invalid");}           return   distance  /  factor;}  function                                                                                                                  lengthToDegrees(distance,units) {  return radiansToDegrees(lengthToRadians( distance,units) );}                                                                                                                                                                                                                                                                                                            function bearingToAzimuth(bearing){var angle =bearing % 360;if (angle <0){angle          +=      360;}                                                                                        return angle;}function radiansToDegrees(radians){var degrees = radians   %(2 *       Math.        PI)                                                                                                                                                                                                                                                                                                                                                                                                                                              ;return degrees * 180 / Math.PI;}function degreesToRadians(degrees){var radians  =degrees %   360;return radians  *Math.PI /180;}                                                                                                                                                                                                    function    convertLength(length,originalUnit,finalUnit){if  (originalUnit ===void 0) {originalUnit  =     "kilometers"                                                                                                                                                                                                                                                                                           ;}if (finalUnit ===void 0){finalUnit ="kilometers";}if (!(length >=0)) {throw new                Error(                                                                                                                                                                                                                                       "length must be a positive number"  )  ;} return radiansToLength(lengthToRadians(length,originalUnit),finalUnit) ;} function convertArea(                                                                            area,originalUnit,finalUnit){if (originalUnit ===void 0){originalUnit ="meters";}if  (       finalUnit                                                                                                                                                                                                                                                                                                                                                                                                        ===void  0){finalUnit   ="kilometers" ;}if  (! (area  >=0)){throw new  Error(   "area must be a positive number"                                                                                                                                                                                                   ) ;}var  startFactor =areaFactors[originalUnit] ;if  (  !startFactor){throw new Error(    "invalid original units"                                                                                   );}var  finalFactor  =areaFactors[finalUnit];if ( !finalFactor){  throw  new Error(     "invalid final units"                                                                          );}return area /startFactor  *finalFactor;}function isNumber( num){return !isNaN(num)&&                                                                                                                                                                                                                       num !==null &&!Array.isArray(num);}function isObject(input){return !!input &&     input.constructor                                                                                                                                                         ===     Object;} function validateBBox(     bbox)  {if ( !  bbox)   {throw new Error(   "bbox is required"    );}if (!Array.isArray(bbox) ){throw  new Error("bbox must be an Array");}if (     bbox.length  !==4 &&bbox.                                                                                                                                                                             
                                                                         length   !==6)   {         throw new Error("bbox must be an Array of 4 or 6 numbers"  );}  bbox. forEach(function (num) {if   (!isNumber(num) ){throw new Error("bbox must only contain numbers" ) ;} } ) ;}function validateId( id) {  if (! id) {  throw  new  Error( "id is required");} if ( [ "string","number" ].indexOf(typeof id)=== - 1){  throw new Error("id must be a number or a string") ;} }},"../node_modules/@turf/hex-grid/dist/es/index.js":  (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__. d(__webpack_exports__,{ "default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_distance__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__(       "../node_modules/@turf/distance/dist/es/index.js"                                                                                                                   )    ;var        _turf_intersect__WEBPACK_IMPORTED_MODULE_1__      =     __webpack_require__(                                                                                                                                                                                                                                                                                                                  "../node_modules/@turf/intersect/dist/es/index.js"  )             ;var    _turf_helpers__WEBPACK_IMPORTED_MODULE_2__                                                                =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function      hexGrid(    bbox,                                                                                                                                                                                                                                                                                                                                                                                                                                             cellSide,options){if (options ===void 0){options ={};}var clonedProperties =JSON.stringify(    options.properties ||{});var west =                                                                                                                                                                                                  bbox[  0] ,     south =bbox[1],east  =bbox[2],north =bbox[3] ;var centerY =(south +north)/2;var centerX =(     west                                                                                                                                                                                                                                                                                                  +    east)   /    2;var xFraction        =  cellSide      *         2   /   ( 0,   _turf_distance__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                                               "default"   ]) ([west,centerY],[east,centerY],options);var cellWidth  =xFraction * (east  -west);var     yFraction                                                                                                  =cellSide *2 /(0,_turf_distance__WEBPACK_IMPORTED_MODULE_0__["default"])([centerX,south]                                                                                                                                                                                                                                                                                                                                                                                                                      ,[centerX,north],options);var cellHeight =yFraction *(north -south);var radius  =cellWidth / 2;var                                                                                                                                                                                                               hex_width =radius *2;var hex_height  =Math.sqrt(3)/2 *cellHeight;var  box_width = east -     west;var  box_height =                                                                                    north -south;var x_interval =3 /4 *hex_width;var y_interval =hex_height;var x_span =(    box_width                                                                                      - hex_width)/(hex_width -radius  /2) ;var x_count = Math.floor( x_span);var x_adjust  =(                                                                                                                                                                                                                     x_count *x_interval -radius /2 -box_width) /2 -radius /2 + x_interval /2;var        y_count =Math.                                                                                                                                                           floor( (box_height - hex_height) /hex_height);var y_adjust  =(box_height - y_count *   hex_height)             /2;var  hasOffsetY =y_count *hex_height   -box_height >hex_height  / 2;if (     hasOffsetY){ y_adjust -=                                                                                                                                                                              
                                                                         hex_height / 4;}var       cosines =[];var sines =[];for (var i =0;i <6;i++ ){var angle =2 *Math.PI /6 *i;cosines.push(Math.cos(angle));sines.push(Math.sin(angle));}var results =[];for (var x =0;x <=x_count;x++ ){for (var y =0;y <=y_count;y++ ){var isOdd =x %2 ===1;if (y ===0 &&isOdd)continue ;if (y ===0 &&hasOffsetY)continue ;var center_x =x *x_interval +west -x_adjust;var center_y =y *y_interval +south +y_adjust;if (isOdd){center_y -=hex_height /2;}if (options.triangles ===true){hexTriangles([center_x,center_y],cellWidth /2,cellHeight /2,JSON.parse(clonedProperties),cosines,sines).forEach(function (triangle){if (options.mask){if ((0,_turf_intersect__WEBPACK_IMPORTED_MODULE_1__["default"])(options.mask,triangle))results.push(triangle);}        else {results.push(triangle);}});}else {var                                                                                                                    hex  =hexagon([ center_x,center_y],cellWidth /2, cellHeight  /2,JSON.parse(clonedProperties),cosines,                                                                                                                                                                                                                                                                                                      sines);if (options.mask){if  (( 0,_turf_intersect__WEBPACK_IMPORTED_MODULE_1__[     "default"    ] )(                                                                                        options.mask, hex) ) results.push(hex) ;}else {results.push(hex);}}}}return (0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                                                                                                                                                                                                                                                    featureCollection)(results);}function hexagon(center,rx, ry,properties,  cosines,sines){var   vertices =[];for (var i =0;i <6;i++                                                                                                                                                                                                    ){  var   x =   center[0]+rx *cosines[i];var y =center[1]+ry *sines[i];vertices.push([x,y]);}vertices.push(     vertices[                                                                                                                                                                                                                                                                                           0] . slice());return   (  0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)([       vertices]    ,                                                                                                                                                                                                                                          properties) ;}function hexTriangles(center,rx,ry,properties,cosines,sines){var triangles =[];for (var i =0;i <6;                                                                                                   i++ ){  var vertices =[];vertices.push(center);vertices.push([center[0]+rx  * cosines[i] ,                                                                                                                                                                                                                                                                                                                                                                                                                    center[1]+ry  *sines[i] ]);vertices. push([center[ 0]+rx * cosines[(i +1)%6],     center[ 1]+ ry *                                                                                                                                                                                                              sines[    (   i   + 1)  %  6] ]    );vertices. push(   center)  ;triangles.  push(  (  0,  _turf_helpers__WEBPACK_IMPORTED_MODULE_2__.                                                                  polygon)([vertices],properties));}return triangles;}const __WEBPACK_DEFAULT_EXPORT__ =     hexGrid;}                                                                                         ,              "../node_modules/@turf/interpolate/dist/es/index.js"      :          (                                                                                                                                                                                                                               __unused_webpack___webpack_module__,        __webpack_exports__,    __webpack_require__) =>                                                                                                                                                         {   "use strict" ;__webpack_require__.r(__webpack_exports__);__webpack_require__.             d(          __webpack_exports__,  { "default":()  => __WEBPACK_DEFAULT_EXPORT__ }  ) ;var  _turf_bbox__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                  
                                                                       = __webpack_require__(        "../node_modules/@turf/bbox/dist/es/index.js");var _turf_hex_grid__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/hex-grid/dist/es/index.js");var _turf_point_grid__WEBPACK_IMPORTED_MODULE_2__  =__webpack_require__("../node_modules/@turf/point-grid/dist/es/index.js");var _turf_distance__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__( "../node_modules/@turf/distance/dist/es/index.js") ;var _turf_centroid__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__(  "../node_modules/@turf/centroid/dist/es/index.js");var _turf_square_grid__WEBPACK_IMPORTED_MODULE_5__ =__webpack_require__("../node_modules/@turf/square-grid/dist/es/index.js" );var _turf_triangle_grid__WEBPACK_IMPORTED_MODULE_6__ =                               __webpack_require__(                                                                                                                      "../node_modules/@turf/triangle-grid/dist/es/index.js" );var  _turf_clone__WEBPACK_IMPORTED_MODULE_7__  =                                                                                                                                                                                                                                                                                                   __webpack_require__( "../node_modules/@turf/clone/dist/es/index.js"   )  ;var    _turf_helpers__WEBPACK_IMPORTED_MODULE_8__                                                                =__webpack_require__(   "../node_modules/@turf/helpers/dist/es/index.js" ) ;var    _turf_meta__WEBPACK_IMPORTED_MODULE_9__                                                                                                                                                                                                                                                                                                                                                                                                                             =    __webpack_require__(    "../node_modules/@turf/meta/dist/es/index.js"    )  ;var   _turf_invariant__WEBPACK_IMPORTED_MODULE_10__                                                                                                                                                                                                       =       __webpack_require__(     "../node_modules/@turf/invariant/dist/es/index.js" )  ;function     interpolate(                                                                                                                                                                                                                                                                                       points,cellSize, options){options =options ||{ };if (typeof options  !=="object")   throw  new  Error(                                                                                                                                                                                                                                           "options is invalid"  );var   gridType =options.gridType;var  property =options.property;var weight =options. weight;if                                                                                                (   !   points)    throw     new     Error(   "points is required" )       ;(         0,                                                                                                                                                                                                                                                                                                                                                                                                                 _turf_invariant__WEBPACK_IMPORTED_MODULE_10__.collectionOf)(points,"Point"  ,   "input must contain Points"                                                                                                                                                                                                 );if  (!cellSize)throw new Error("cellSize is required");if (weight !== undefined  && typeof    weight    !==  "number")                                                                                     throw new Error("weight must be a number");property =property ||"elevation";gridType  =      gridType                                                                            ||     "square";weight =weight ||1;var box =(0,_turf_bbox__WEBPACK_IMPORTED_MODULE_0__["default"])(                                                                                                                                                                                                                points);var  grid;switch (gridType){case "point":case "points" :  grid = (0,    _turf_point_grid__WEBPACK_IMPORTED_MODULE_2__[                                                                                                                                "default" ] ) ( box,cellSize,options) ;break ;case "square": case  "squares": grid =( 0, _turf_square_grid__WEBPACK_IMPORTED_MODULE_5__[ "default" ])(box,cellSize,options);break ;case "hex": case "hexes":grid =(0, _turf_hex_grid__WEBPACK_IMPORTED_MODULE_1__[                                                                                                                                  
                                                                          "default"] )  ( box,        cellSize,options);break ;case "triangle":case "triangles":grid =(0,_turf_triangle_grid__WEBPACK_IMPORTED_MODULE_6__["default"])(box,cellSize,options);break ;default:throw new Error("invalid gridType");}var results =[];(0,_turf_meta__WEBPACK_IMPORTED_MODULE_9__.featureEach)(grid,function (gridFeature){var zw =0;var sw =0;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_9__.featureEach)(points,function (point){var gridPoint =gridType ==="point"?gridFeature :(0,_turf_centroid__WEBPACK_IMPORTED_MODULE_4__["default"])(gridFeature);var d =(0,_turf_distance__WEBPACK_IMPORTED_MODULE_3__["default"])(gridPoint,point,options);var zValue;if (property !==undefined)zValue =point.properties[property];if (zValue ===undefined)zValue       = point.geometry. coordinates[2];if (zValue                                                                                                                        ===undefined)throw new  Error("zValue is missing");if  (d ===0)zw  =zValue;var w =1.0 /Math.pow(d,weight);sw +=                                                                                                                                                                                                                                                                                                  w;zw   +=    w   * zValue;}      )      ;var      newFeature    =  (  0,    _turf_clone__WEBPACK_IMPORTED_MODULE_7__[                                                                  "default"])(gridFeature) ;newFeature.properties[property]=zw /sw;results.push(     newFeature)   ;} )                                                                                                                                                                                                                                                                                                                                                                                                                                          ;return  ( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_8__.featureCollection)(results);}const       __WEBPACK_DEFAULT_EXPORT__     =                                                                                                                                                                                                        interpolate;}   ,"../node_modules/@turf/intersect/dist/es/index.js" :(  __unused_webpack___webpack_module__,    __webpack_exports__,                                                                                                                                                                                                                                                                               __webpack_require__) =>{"use strict" ;__webpack_require__.r(__webpack_exports__)   ;__webpack_require__.                                                                                                                                                                                                                                               d(         __webpack_exports__, {    "default":    (    ) =>       intersect      }  )     ;var   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__                                                                     =   __webpack_require__(      "../node_modules/@turf/helpers/dist/es/index.js"   )    ;var                                                                                                                                                                                                                                                                                                                                                                                                                   _turf_invariant__WEBPACK_IMPORTED_MODULE_1__   =    __webpack_require__(   "../node_modules/@turf/invariant/dist/es/index.js"                                                                                                                                                                          )      ;var     polygon_clipping__WEBPACK_IMPORTED_MODULE_2__   =      __webpack_require__(    "../node_modules/polygon-clipping/dist/polygon-clipping.umd.js"                                                );function intersect(poly1,poly2,options){if (options ===void 0){options ={};}var geom1 =                                                                                               (  0, _turf_invariant__WEBPACK_IMPORTED_MODULE_1__. getGeom) (poly1)  ;var   geom2     =(  0,                                                                                                                                                                                                              _turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getGeom)(poly2);var intersection                    =                                                                                                                                                            polygon_clipping__WEBPACK_IMPORTED_MODULE_2__. intersection(geom1.coordinates,geom2.coordinates);if (intersection.length ===          0)    return     null;if    (   intersection.    length  ===  1)    return (  0, _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                  
                                                                                 polygon)     (         intersection[ 0],options.properties) ;return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__. multiPolygon)(intersection, options.properties)  ;}}, "../node_modules/@turf/invariant/dist/es/index.js": (__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict"  ;__webpack_require__.r( __webpack_exports__);__webpack_require__.  d( __webpack_exports__,{"collectionOf" : () =>collectionOf,"containsNumber": ( )  =>containsNumber,"featureOf": (  ) => featureOf,  "geojsonType":( ) =>geojsonType, "getCoord":( ) =>getCoord,"getCoords"  :()  =>getCoords,  "getGeom": ( )  =>  getGeom,"getType":  ()  => getType  } );var  _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__(       "../node_modules/@turf/helpers/dist/es/index.js"                                                                                                               )     ;function getCoord(coord){if (! coord){ throw new Error("coord is required");}if (!Array. isArray(coord)){if ( coord.type ===                                                                                                                                                                                                                                                                             "Feature"&& coord. geometry  !==null && coord.geometry.type   ==="Point"   ) {      return     coord.                                                                                       geometry.coordinates;}if (coord.type ==="Point"){return coord.coordinates;}}if (      Array.  isArray(                                                                                                                                                                                                                                                                                                                                                                                                                                          coord)&& coord.length >=2  &&!Array.isArray(coord[ 0] ) &&!   Array. isArray(coord[1] )) {    return  coord;}  throw new  Error(                                                                                                                                                                                                           "coord must be GeoJSON Point or an Array of numbers" );}function getCoords(coords){if (Array.isArray(coords)) {return coords;}if (coords.type === "Feature"                                                                                                                                                                                                                                                     ) {if (coords.geometry !== null){ return coords.geometry.coordinates;}}else {if (   coords.coordinates)                                                                                                                                                                                                                                                  {         return      coords.        coordinates;}         }     throw    new           Error(    "coords must be GeoJSON Feature, Geometry Object or an Array"                                              )  ;}   function   containsNumber( coordinates){  if  ( coordinates.    length  > 1  &&     (  0,                                                                                                                                                                                                                                                                                                                                                                                                          _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.isNumber)(coordinates[  0])&&(  0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                          isNumber)(coordinates[1])){return true;}if (Array.isArray(coordinates[0])&&coordinates[0].length){    return  containsNumber(                                                                                        coordinates[ 0]);} throw   new  Error(  "coordinates must only contain numbers");}function                                                                                         geojsonType( value,type,name){if (!type ||!name){throw new Error("type and name required");}if (!value ||value.                                                                                                                                                                                                 type !==type){throw new Error("Invalid input to "+name +": must be a "+type +   ", given "+ value.                                                                                                                                                             type)  ;} } function featureOf(feature,type,name) { if (  !feature){throw new Error(    "No feature passed" );}if (!name){throw new Error(".featureOf() requires a name");}if (!feature || feature.type  !=="Feature"                                                                                                                                                                              
                                                                            ||!feature.geometry){        throw new Error("Invalid input to "+name +", Feature with geometry required");}if (!feature.geometry ||feature.geometry.type !==type){throw new Error("Invalid input to "+name +": must be a " +type +", given "+feature.geometry.type);}}function collectionOf(featureCollection,type,name){if (!featureCollection){throw new  Error("No featureCollection passed");}if (!name){throw new Error(".collectionOf() requires a name");}if (!featureCollection ||featureCollection.type !=="FeatureCollection") {throw new Error("Invalid input to "+name +", FeatureCollection required");}for (var  _i =0, _a =featureCollection.features;_i <_a.length;_i++ ){var feature =_a[_i];if (!feature ||feature.type !=="Feature"||!feature.            geometry)     {     throw  new    Error(                                                                                                                    "Invalid input to " +name +", Feature with geometry required");}if (!feature.geometry ||feature.geometry.type !==type){throw new Error("Invalid input to "+name +": must be a "+type +", given "+feature.geometry.type);}}}function getGeom(geojson){if (geojson.type ==="Feature"){return geojson.geometry;}return geojson;}function getType(geojson,_name){if (geojson.type ==="FeatureCollection"){return "FeatureCollection";}if (geojson.type ==="GeometryCollection"){return "GeometryCollection";}if (  geojson. type  ===                                                                            "Feature"  &&geojson. geometry  !==null)  { return   geojson.  geometry.type;}      return   geojson.                                                                                                                                                                                                                                                                                                                                                                                                                                           type;}       }     ,          "../node_modules/@turf/isobands/dist/es/index.js" :     (    __unused_webpack___webpack_module__,                                                                                                                                                                                                            __webpack_exports__,  __webpack_require__)    =>{    "use strict"   ;__webpack_require__. r(__webpack_exports__) ;__webpack_require__.                                                                                                                                                                                                                                                                           d(  __webpack_exports__,{"default" : (  ) => __WEBPACK_DEFAULT_EXPORT__ } );var   _turf_bbox__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                                                                               =        __webpack_require__(    "../node_modules/@turf/bbox/dist/es/index.js"     )      ;var    _turf_area__WEBPACK_IMPORTED_MODULE_1__                                                             =             __webpack_require__(       "../node_modules/@turf/area/dist/es/index.js"    )            ;var                                                                                                                                                                                                                                                                                                                                                                                                                _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_2__       =   __webpack_require__(                                                                                                                                                                                                     "../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js"             )          ;var   _turf_explode__WEBPACK_IMPORTED_MODULE_3__                                                                          =     __webpack_require__(    "../node_modules/@turf/explode/dist/es/index.js"  )    ;var                                                                                      _turf_invariant__WEBPACK_IMPORTED_MODULE_4__     =      __webpack_require__(       "../node_modules/@turf/invariant/dist/es/index.js"    )    ;var                                                                                                                                                                    _turf_helpers__WEBPACK_IMPORTED_MODULE_5__    =    __webpack_require__(    "../node_modules/@turf/helpers/dist/es/index.js"                                                                                                                                  )       ;var   object_assign__WEBPACK_IMPORTED_MODULE_6__   = __webpack_require__(   "../node_modules/object-assign/index.js"    );var    _turf_meta__WEBPACK_IMPORTED_MODULE_7__ =  __webpack_require__( "../node_modules/@turf/meta/dist/es/index.js"                                                                                                                                         
                                                                                   )     ;function        gridToMatrix(grid,options){options =options ||{};if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.isObject)(options))throw new Error("options is invalid");var zProperty =options.zProperty ||"elevation";var flip =options.flip;var flags =options.flags;(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_4__.collectionOf)(grid,"Point","input must contain Points");var pointsMatrix =sortPointsByLatLng(grid,flip);var matrix =[];for (var r =0;r <pointsMatrix.length;r++ ){var pointRow =pointsMatrix[r];var row =[];for (var c =0;c <pointRow.length;c++ ){var point =pointRow[c];if (point.properties[zProperty])row.push(point.properties[zProperty]);else row.push(0);if (flags ===true)point.properties.matrixPosition =[r,       c];}matrix.push(row);}return matrix;}function                                                                                                                      sortPointsByLatLng( points,flip){   var pointsByLatitude ={ };(0,_turf_meta__WEBPACK_IMPORTED_MODULE_7__. featureEach)(points,function ( point){var lat =( 0, _turf_invariant__WEBPACK_IMPORTED_MODULE_4__.getCoords)(point)[1] ;if ( !pointsByLatitude[lat] )pointsByLatitude[lat]=[];pointsByLatitude[  lat] .push( point);}) ;var orderedRowsByLatitude = Object.keys(pointsByLatitude).map(function (lat){var row =pointsByLatitude[lat];var rowOrderedByLongitude =row.sort(function  (a,b){return (0, _turf_invariant__WEBPACK_IMPORTED_MODULE_4__.                                                  getCoords)(a)[0]-(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_4__.getCoords)(b)[        0]      ;}    )                                                                                                                                                                                                                                                                                                                                                                                                                                      ;return rowOrderedByLongitude;});var pointMatrix =orderedRowsByLatitude.sort(function (a,b)      {   if  (flip)   return    (  0,                                                                                                                                                                                                                _turf_invariant__WEBPACK_IMPORTED_MODULE_4__. getCoords)(a[0])[1]-(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_4__.getCoords)(b[0])[1];else return (                                                                                                                                                                                                                                                            0,    _turf_invariant__WEBPACK_IMPORTED_MODULE_4__.getCoords) (b[ 0]) [1]-  ( 0,   _turf_invariant__WEBPACK_IMPORTED_MODULE_4__.                                                                                                                                                                                                                   getCoords)       (           a[      0]       )   [   1]         ;}    )   ;return      pointMatrix;}    /*!
 * @license GNU Affero General Public License.
 * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>
 * v. 1.2.0
 * https://github.com/RaumZeit/MarchingSquares.js
 *
 * MarchingSquaresJS is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MarchingSquaresJS is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * As additional permission under GNU Affero General Public License version 3
 * section 7, third-party projects (personal or commercial) may distribute,
 * include, or link against UNMODIFIED VERSIONS of MarchingSquaresJS without the
 * requirement that said third-party project for that reason alone becomes
 * subject to any requirement of the GNU Affero General Public License version 3.
 * Any modifications to MarchingSquaresJS, however, must be shared with the public
 * and made available.
 *
 * In summary this:
 * - allows you to use MarchingSquaresJS at no cost
 * - allows you to use MarchingSquaresJS for both personal and commercial purposes
 * - allows you to distribute UNMODIFIED VERSIONS of MarchingSquaresJS under any
 *   license as long as this license notice is included
 * - enables you to keep the source code of your program that uses MarchingSquaresJS
 *   undisclosed
 * - forces you to share any modifications you have made to MarchingSquaresJS,
 *   e.g. bug-fixes
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with MarchingSquaresJS.  If not, see <http://www.gnu.org/licenses/>.
 */var defaultSettings ={ successCallback:null,verbose:  false, polygons:false  } ;var  settings  ={} ;function isoBands(data,minV, bandwidth,options){options =options ?options :{};var optionKeys =Object.keys( defaultSettings);for (var i =0;i <optionKeys.length;i++ ){var key =optionKeys[i];var val =options[key];val = typeof val  !=="undefined" &&val !== null ?val :defaultSettings[key];settings[key]=val;} if (settings. verbose)console. 
log(  "MarchingSquaresJS-isoBands: computing isobands for ["+minV  +":"+ (minV +   bandwidth) +"]"  );var  grid = computeBandGrid(data, minV,bandwidth);var ret;if ( settings. polygons){ if (  settings.verbose) console. log("MarchingSquaresJS-isoBands: returning single polygons for each grid cell" );ret  = BandGrid2Areas( grid);}else   {if (settings. verbose)  console. log( "MarchingSquaresJS-isoBands: returning polygon paths for entire data grid"        )     ;ret   = BandGrid2AreaPaths(grid);}if (typeof settings.successCallback ==="function")settings.successCallback(ret);return ret;} var Node0 =64,Node1  =16,Node2 =4,Node3 =1;var isoBandNextXTL =[];var isoBandNextYTL =[ ];var isoBandNextOTL  =[];var isoBandNextXTR =[];var isoBandNextYTR =[ ];var isoBandNextOTR =[];var isoBandNextXRT = [];var isoBandNextYRT =[];var isoBandNextORT =[];var isoBandNextXRB =[];var isoBandNextYRB =[];var isoBandNextORB =[];var isoBandNextXBL =[ ];var isoBandNextYBL =[];var isoBandNextOBL =[];var isoBandNextXBR =[ ];var isoBandNextYBR =[];var  isoBandNextOBR =[];var  isoBandNextXLT =[];var isoBandNextYLT = [];var isoBandNextOLT =[];var isoBandNextXLB =[];var  isoBandNextYLB =[] ;var   isoBandNextOLB =  [];isoBandNextXRT[ 85] = isoBandNextXRB[ 85]= -1;isoBandNextYRT[85]=isoBandNextYRB[85]=0;isoBandNextORT[85]=isoBandNextORB[ 85]=1;isoBandNextXLT[85]=isoBandNextXLB[85]=1;isoBandNextYLT[85]=isoBandNextYLB[85]=0;isoBandNextOLT[85]=isoBandNextOLB[85]=1;isoBandNextXTL[85]=isoBandNextXTR[85]=0;isoBandNextYTL[ 85]=isoBandNextYTR[85]= -1;isoBandNextOTL[85]=isoBandNextOBL[85]=0;isoBandNextXBR[85]=isoBandNextXBL[85]=0;isoBandNextYBR[85]=isoBandNextYBL[85]=1;isoBandNextOTR[85]=isoBandNextOBR[85]=1;isoBandNextXLB[1]= isoBandNextXLB[169] =0;isoBandNextYLB[1]=isoBandNextYLB[169]= - 1;isoBandNextOLB[1]=isoBandNextOLB[       169]        =                                                                                                                                                                                                                                                                       0;isoBandNextXBL[1]  =isoBandNextXBL[ 169]= -1;isoBandNextYBL[ 1]   =isoBandNextYBL[ 169] =    0;isoBandNextOBL[1]=isoBandNextOBL[                                                                                                                                                                                                                  169]      =    0;isoBandNextXRB[4] = isoBandNextXRB[ 166] = 0;isoBandNextYRB[4] = isoBandNextYRB[ 166]=  -     1;isoBandNextORB[                                                                                                                                                                                                                                                                            4]=isoBandNextORB[166]=1;isoBandNextXBR[4]=isoBandNextXBR[166] =1;isoBandNextYBR[   4]=isoBandNextYBR[                                                                                                                                                                                                                                                166]  =   0;isoBandNextOBR[4]=isoBandNextOBR[166] = 0;isoBandNextXRT[  16]=   isoBandNextXRT[154] =    0;isoBandNextYRT[                                                                                  16]      =  isoBandNextYRT[154]= 1;isoBandNextORT[ 16] =  isoBandNextORT[154]=1;isoBandNextXTR[16] =  isoBandNextXTR[   154]=                                                                                                                                                                                                                                                                                                                                                                                    1;isoBandNextYTR[16]=isoBandNextYTR[154]=0;isoBandNextOTR[16]=isoBandNextOTR[                                                                                                                                                                                                   154]=  1;isoBandNextXLT[64] = isoBandNextXLT[ 106] = 0;isoBandNextYLT[64]= isoBandNextYLT[106] =1;isoBandNextOLT[64]=     isoBandNextOLT[  106] =                                                                                           0;isoBandNextXTL[ 64]  =  isoBandNextXTL[106] =  - 1;isoBandNextYTL[64] =isoBandNextYTL[106]   =                                                                                 0;isoBandNextOTL[ 64]  = isoBandNextOTL[106]  =1;isoBandNextXLT[2]=isoBandNextXLT[168] = 0;isoBandNextYLT[2]= isoBandNextYLT[  168]=  -                                                                                                                                                                          1;isoBandNextOLT[2]=isoBandNextOLT[168]=1;isoBandNextXLB[2]=isoBandNextXLB[        168]         =                                                                                                                                                               0;isoBandNextYLB[  2]     =isoBandNextYLB[168]=   -1;isoBandNextOLB[  2] =isoBandNextOLB[ 168]=      0;isoBandNextXBL[2]=isoBandNextXBL[168]= -1;isoBandNextYBL[2]=isoBandNextYBL[   168]=0;isoBandNextOBL[2] =                                                                                                                                                                                  
                                                                               isoBandNextOBL[ 168]=        0;isoBandNextXBR[2]=isoBandNextXBR[168]= -1;isoBandNextYBR[2]=isoBandNextYBR[168] =0;isoBandNextOBR[2]= isoBandNextOBR[168]=1;isoBandNextXRT[8]=isoBandNextXRT[162]=0;isoBandNextYRT[ 8]= isoBandNextYRT[162]=  - 1;isoBandNextORT[8]=isoBandNextORT[162]=0;isoBandNextXRB[8]=isoBandNextXRB[162]=0;isoBandNextYRB[8]=isoBandNextYRB[162]= -1;isoBandNextORB[8]= isoBandNextORB[ 162]=1;isoBandNextXBL[8]=isoBandNextXBL[ 162]=1;isoBandNextYBL[8]=isoBandNextYBL[162]= 0;isoBandNextOBL[8]=isoBandNextOBL[162]=1;isoBandNextXBR[8]=isoBandNextXBR[162]=1;isoBandNextYBR[8]=isoBandNextYBR[162]=0;isoBandNextOBR[8]= isoBandNextOBR[162] =0;isoBandNextXRT[32]=isoBandNextXRT[138]=0;isoBandNextYRT[ 32] =isoBandNextYRT[138]=        1;isoBandNextORT[ 32]= isoBandNextORT[138] =                                                                                                                         1;isoBandNextXRB[ 32]=isoBandNextXRB[138]= 0;isoBandNextYRB[32]=isoBandNextYRB[ 138]= 1;isoBandNextORB[32]=isoBandNextORB[138]=0;isoBandNextXTL[32]=isoBandNextXTL[ 138]  =1;isoBandNextYTL[32]=isoBandNextYTL[ 138]=0;isoBandNextOTL[ 32]=isoBandNextOTL[138]=0;isoBandNextXTR[ 32]=isoBandNextXTR[ 138]=1;isoBandNextYTR[32] =isoBandNextYTR[138]=0;isoBandNextOTR[32]=isoBandNextOTR[138]=1;isoBandNextXLB[128] =isoBandNextXLB[42]=0;isoBandNextYLB[128]=isoBandNextYLB[ 42]=1;isoBandNextOLB[128] = isoBandNextOLB[42]=                                                                               1;isoBandNextXLT[ 128]=isoBandNextXLT[42]=0;isoBandNextYLT[128]=isoBandNextYLT[            42]       =                                                                                                                                                                                                                                                                                                                                                                                                                                      1;isoBandNextOLT[ 128]= isoBandNextOLT[ 42] =0;isoBandNextXTL[128]=isoBandNextXTL[42] = -       1;isoBandNextYTL[      128]    =                                                                                                                                                                                                                    isoBandNextYTL[ 42]=0;isoBandNextOTL[128]=isoBandNextOTL[42]=1;isoBandNextXTR[ 128]=isoBandNextXTR[ 42]= -     1;isoBandNextYTR[                                                                                                                                                                                                                                                                                128]     = isoBandNextYTR[42] = 0;isoBandNextOTR[ 128] =isoBandNextOTR[ 42]=    0;isoBandNextXRB[                                                                                                                                                                                                                                                  5]   =    isoBandNextXRB[165] =   - 1;isoBandNextYRB[5]= isoBandNextYRB[165]= 0;isoBandNextORB[ 5]=    isoBandNextORB[                                                                                   165]   =0;isoBandNextXLB[5]=isoBandNextXLB[165]=1;isoBandNextYLB[5]=isoBandNextYLB[165]=0;isoBandNextOLB[5]=isoBandNextOLB[165]=0;isoBandNextXBR[20]=isoBandNextXBR[150]=0;isoBandNextYBR[20]=isoBandNextYBR[150]=1;isoBandNextOBR[20]=isoBandNextOBR[150]=1;isoBandNextXTR[20]=isoBandNextXTR[150]=0;isoBandNextYTR[20]=isoBandNextYTR[150]= -1;isoBandNextOTR[20]=isoBandNextOTR[150]                                                                                                                         =1;isoBandNextXRT[80]=isoBandNextXRT[90]= -1;isoBandNextYRT[80]=isoBandNextYRT[90]=0;isoBandNextORT[80]=isoBandNextORT[90]=1;isoBandNextXLT[80]=isoBandNextXLT[90]=1;isoBandNextYLT[80]=isoBandNextYLT[90]=0;isoBandNextOLT[80]=isoBandNextOLT[90]=1;isoBandNextXBL[65]=isoBandNextXBL[105]=0;isoBandNextYBL[65]=isoBandNextYBL[105]=1;isoBandNextOBL[65]=isoBandNextOBL[105]=0;isoBandNextXTL[65]=      isoBandNextXTL[ 105]   =                                                                                           0;isoBandNextYTL[ 65] =  isoBandNextYTL[  105]=    -  1;isoBandNextOTL[65]=  isoBandNextOTL[ 105]=                                                                                0;isoBandNextXRT[ 160]=isoBandNextXRT[10] = -1;isoBandNextYRT[160]=isoBandNextYRT[ 10] =0;isoBandNextORT[160]= isoBandNextORT[ 10]=1;isoBandNextXRB[160]=isoBandNextXRB[10]= -1;isoBandNextYRB[160]= isoBandNextYRB[10]  =0;isoBandNextORB[160] =isoBandNextORB[ 10]=0;isoBandNextXLB[160]=isoBandNextXLB[ 10] =1;isoBandNextYLB[ 160] =isoBandNextYLB[10]=0;isoBandNextOLB[160] = isoBandNextOLB[10]=  0;isoBandNextXLT[                                                                                                                                                       160]    = isoBandNextXLT[ 10]=1;isoBandNextYLT[160]=isoBandNextYLT[10]=0;isoBandNextOLT[160]=isoBandNextOLT[10] =1;isoBandNextXBR[130]=isoBandNextXBR[40]=0;isoBandNextYBR[130] =     isoBandNextYBR[  40]    =                                                                                                                                                                                  
                                                                                1;isoBandNextOBR[130]           =isoBandNextOBR[ 40]=1;isoBandNextXBL[130]=isoBandNextXBL[40]=0;isoBandNextYBL[130]=isoBandNextYBL[40]=1;isoBandNextOBL[130]=isoBandNextOBL[40]=0;isoBandNextXTL[130]= isoBandNextXTL[40] =0;isoBandNextYTL[130]= isoBandNextYTL[40]= - 1;isoBandNextOTL[ 130]=isoBandNextOTL[40]=0;isoBandNextXTR[130]=isoBandNextXTR[40]=0;isoBandNextYTR[130]=isoBandNextYTR[40]= - 1;isoBandNextOTR[130]=isoBandNextOTR[40]=1;isoBandNextXRB[ 37]=isoBandNextXRB[133]=0;isoBandNextYRB[37] = isoBandNextYRB[133]=1;isoBandNextORB[37]=isoBandNextORB[133]=1;isoBandNextXLB[37]=isoBandNextXLB[ 133]=0;isoBandNextYLB[ 37]=isoBandNextYLB[ 133]=1;isoBandNextOLB[37]=isoBandNextOLB[133]=0;isoBandNextXTL[37]=isoBandNextXTL[133] = -         1;isoBandNextYTL[37]  = isoBandNextYTL[133] =                                                                                                                          0;isoBandNextOTL[ 37]= isoBandNextOTL[133]=0;isoBandNextXTR[37]=isoBandNextXTR[133]=1;isoBandNextYTR[37]=isoBandNextYTR[133]= 0;isoBandNextOTR[37]=isoBandNextOTR[ 133]=0;isoBandNextXBR[148]=isoBandNextXBR[22]= -1;isoBandNextYBR[148]=isoBandNextYBR[22]=0;isoBandNextOBR[148]=isoBandNextOBR[22]=0;isoBandNextXLB[148]=isoBandNextXLB[22]= 0;isoBandNextYLB[148]=isoBandNextYLB[22]= -1;isoBandNextOLB[148]  =isoBandNextOLB[ 22]= 1;isoBandNextXLT[148]=isoBandNextXLT[22]=0;isoBandNextYLT[148]= isoBandNextYLT[22]                                                                                 =1;isoBandNextOLT[148]=isoBandNextOLT[22]=1;isoBandNextXTR[148]=isoBandNextXTR[       22]     =      -                                                                                                                                                                                                                                                                                                                                                                                                                                   1;isoBandNextYTR[148] =   isoBandNextYTR[ 22]=  0;isoBandNextOTR[ 148]=isoBandNextOTR[22]=        1;isoBandNextXRT[      82]    =                                                                                                                                                                                                                      isoBandNextXRT[ 88]=0;isoBandNextYRT[82]= isoBandNextYRT[88]=  -1;isoBandNextORT[ 82]= isoBandNextORT[88] =     1;isoBandNextXBR[                                                                                                                                                                                                                                                                          82]=isoBandNextXBR[ 88]=1;isoBandNextYBR[82]=isoBandNextYBR[88]=0;isoBandNextOBR[         82]        =                                                                                                                                                                                                                                                 isoBandNextOBR[ 88]=1;isoBandNextXBL[82]=isoBandNextXBL[88]= -1;isoBandNextYBL[82]=  isoBandNextYBL[ 88]= 0;isoBandNextOBL[                                                                               82]    =isoBandNextOBL[88]=1;isoBandNextXLT[82]=isoBandNextXLT[88]=0;isoBandNextYLT[82]=isoBandNextYLT[88]= -1;isoBandNextOLT[82] = isoBandNextOLT[ 88]=0;isoBandNextXRT[73]=isoBandNextXRT[97]=0;isoBandNextYRT[73]=isoBandNextYRT[97]=1;isoBandNextORT[73]=isoBandNextORT[ 97]=0;isoBandNextXRB[73]=isoBandNextXRB[97]=0;isoBandNextYRB[73]=isoBandNextYRB[97]= -1;isoBandNextORB[73]=                                                                                                                        isoBandNextORB[97]=0;isoBandNextXBL[73]=isoBandNextXBL[97]= 1;isoBandNextYBL[73]= isoBandNextYBL[97]=0;isoBandNextOBL[73]=isoBandNextOBL[97] =0;isoBandNextXTL[73]=isoBandNextXTL[97]=1;isoBandNextYTL[73]=isoBandNextYTL[97]=0;isoBandNextOTL[73]=isoBandNextOTL[97]=1;isoBandNextXRT[145]=isoBandNextXRT[25]=0;isoBandNextYRT[145]=isoBandNextYRT[25]= -1;isoBandNextORT[145]=isoBandNextORT[25]=    0;isoBandNextXBL[  145]  =                                                                                      isoBandNextXBL[ 25]     =1;isoBandNextYBL[145]=isoBandNextYBL[ 25] =0;isoBandNextOBL[145]  = isoBandNextOBL[ 25]  =                                                                    1;isoBandNextXLB[ 145]=isoBandNextXLB[25]=0;isoBandNextYLB[145]=isoBandNextYLB[25]=1;isoBandNextOLB[145]=isoBandNextOLB[25]=1;isoBandNextXTR[145]=isoBandNextXTR[25]= -1;isoBandNextYTR[145]=isoBandNextYTR[25]=0;isoBandNextOTR[145]=isoBandNextOTR[25]=0;isoBandNextXRB[70]=isoBandNextXRB[100]=0;isoBandNextYRB[70]=isoBandNextYRB[100]=1;isoBandNextORB[70]=isoBandNextORB[100]=0;isoBandNextXBR[         70]      =                                                                                                                                                         isoBandNextXBR[ 100]= -1;isoBandNextYBR[70]=isoBandNextYBR[100]=0;isoBandNextOBR[70]=isoBandNextOBR[100]=1;isoBandNextXLT[70]= isoBandNextXLT[100] =0;isoBandNextYLT[ 70]=isoBandNextYLT[ 100]= -1;isoBandNextOLT[70]                                                                                                                                                                           
                                                                                =  isoBandNextOLT[100]=        1;isoBandNextXTL[70]=isoBandNextXTL[100]=1;isoBandNextYTL[70]=isoBandNextYTL[100]=0;isoBandNextOTL[70]=isoBandNextOTL[100]=0;isoBandNextXRB[101]=isoBandNextXRB[69]=0;isoBandNextYRB[101]=isoBandNextYRB[69]=1;isoBandNextORB[101]=isoBandNextORB[69]=0;isoBandNextXTL[101]=isoBandNextXTL[69]=1;isoBandNextYTL[101]=isoBandNextYTL[69]=0;isoBandNextOTL[101]=isoBandNextOTL[69]=0;isoBandNextXLB[149]=isoBandNextXLB[ 21]=0;isoBandNextYLB[149]=isoBandNextYLB[21]=1;isoBandNextOLB[149] =isoBandNextOLB[21]=1;isoBandNextXTR[149]=isoBandNextXTR[21]= -1;isoBandNextYTR[149]=isoBandNextYTR[21]=0;isoBandNextOTR[149]=isoBandNextOTR[21]=0;isoBandNextXBR[86]=isoBandNextXBR[84]= -1;isoBandNextYBR[86]=isoBandNextYBR[        84]=0;isoBandNextOBR[86]= isoBandNextOBR[84]=                                                                                                                           1;isoBandNextXLT[ 86]=isoBandNextXLT[84]=0;isoBandNextYLT[86]=isoBandNextYLT[84]= -1;isoBandNextOLT[86]=isoBandNextOLT[84]=1;isoBandNextXRT[89]=isoBandNextXRT[81] =0;isoBandNextYRT[89]=isoBandNextYRT[81]= -1;isoBandNextORT[89]=isoBandNextORT[81]=0;isoBandNextXBL[89]=isoBandNextXBL[81]=1;isoBandNextYBL[89]=isoBandNextYBL[81]=0;isoBandNextOBL[89]=isoBandNextOBL[81]=1;isoBandNextXRT[96]=isoBandNextXRT[74]=0;isoBandNextYRT[96]=isoBandNextYRT[74]=1;isoBandNextORT[96]=isoBandNextORT[74]=   0;isoBandNextXRB[                                                                                  96]=  isoBandNextXRB[  74]=  - 1;isoBandNextYRB[ 96] = isoBandNextYRB[ 74]  =      0;isoBandNextORB[                                                                                                                                                                                                                                                                                                                                                                                                                                   96]=isoBandNextORB[74]= 1;isoBandNextXLT[96]  =  isoBandNextXLT[ 74]=1;isoBandNextYLT[96]=      isoBandNextYLT[         74]    =                                                                                                                                                                                                                        0;isoBandNextOLT[  96] =isoBandNextOLT[74]=0;isoBandNextXTL[96]=isoBandNextXTL[74] =   1;isoBandNextYTL[ 96]=   isoBandNextYTL[                                                                                                                                                                                                                                                                           74]=0;isoBandNextOTL[96]=isoBandNextOTL[74]=1;isoBandNextXRT[24]= isoBandNextXRT[            146]     =                                                                                                                                                                                                                                                0;isoBandNextYRT[ 24]=isoBandNextYRT[146]= -1;isoBandNextORT[24]=isoBandNextORT[146]=1;isoBandNextXBR[24]= isoBandNextXBR[                                                                                 146]    =1;isoBandNextYBR[24]=isoBandNextYBR[146]=0;isoBandNextOBR[24]=isoBandNextOBR[146]=1;isoBandNextXBL[24]=isoBandNextXBL[146]=0;isoBandNextYBL[24]=isoBandNextYBL[146]=1;isoBandNextOBL[24]=isoBandNextOBL[146]=1;isoBandNextXTR[24]=isoBandNextXTR[146]=0;isoBandNextYTR[24]=isoBandNextYTR[146]= -1;isoBandNextOTR[24]=isoBandNextOTR[ 146]=0;isoBandNextXRB[6]=isoBandNextXRB[                                                                                                                        164]= -1;isoBandNextYRB[6] =isoBandNextYRB[164]=0;isoBandNextORB[6]=isoBandNextORB[164]= 1;isoBandNextXBR[6]=isoBandNextXBR[164] = -1;isoBandNextYBR[ 6]=isoBandNextYBR[164]= 0;isoBandNextOBR[6]=isoBandNextOBR[164]= 0;isoBandNextXLB[6] =isoBandNextXLB[164]= 0;isoBandNextYLB[6]=isoBandNextYLB[164] = - 1;isoBandNextOLB[ 6] =isoBandNextOLB[ 164]= 1;isoBandNextXLT[ 6]=isoBandNextXLT[164]=     1;isoBandNextYLT[   6]  =                                                                                       isoBandNextYLT[ 164]=0;isoBandNextOLT[6]=isoBandNextOLT[164]=0;isoBandNextXBL[129]=isoBandNextXBL[41]=0;isoBandNextYBL[                                                                129]     =isoBandNextYBL[41]=1;isoBandNextOBL[129]=isoBandNextOBL[41]=1;isoBandNextXLB[129]=isoBandNextXLB[41]=0;isoBandNextYLB[129]=isoBandNextYLB[ 41]=1;isoBandNextOLB[129]= isoBandNextOLB[41]=0;isoBandNextXTL[129]=isoBandNextXTL[41]= -1;isoBandNextYTL[129]=isoBandNextYTL[41]=0;isoBandNextOTL[129]=isoBandNextOTL[41]=0;isoBandNextXTR[129]=isoBandNextXTR[41]= 0;isoBandNextYTR[           129]      =                                                                                                                                                                isoBandNextYTR[ 41]= -1;isoBandNextOTR[129]=isoBandNextOTR[41]=0;isoBandNextXBR[66]=isoBandNextXBR[104] =0;isoBandNextYBR[66] =isoBandNextYBR[104]=1;isoBandNextOBR[66]=isoBandNextOBR[ 104]=0;isoBandNextXBL[ 66]=                                                                                                                                                                             
                                                                                  isoBandNextXBL[104]= -        1;isoBandNextYBL[66]=isoBandNextYBL[104]=0;isoBandNextOBL[ 66]=isoBandNextOBL[ 104]=1;isoBandNextXLT[66] =isoBandNextXLT[104] =0;isoBandNextYLT[66]=isoBandNextYLT[104]= -1;isoBandNextOLT[66]=isoBandNextOLT[104]=0;isoBandNextXTL[66] =isoBandNextXTL[104]=0;isoBandNextYTL[66]=isoBandNextYTL[104] = -1;isoBandNextOTL[66]=isoBandNextOTL[104]= 1;isoBandNextXRT[144]=isoBandNextXRT[26]= -1;isoBandNextYRT[144]=isoBandNextYRT[26]=0;isoBandNextORT[144]=isoBandNextORT[26]=0;isoBandNextXLB[144]=isoBandNextXLB[26]=1;isoBandNextYLB[144]=isoBandNextYLB[26]=0;isoBandNextOLB[144]=isoBandNextOLB[26]=1;isoBandNextXLT[ 144]=isoBandNextXLT[26]= 0;isoBandNextYLT[144]=isoBandNextYLT[26] =1;isoBandNextOLT[144] =       isoBandNextOLT[ 26] =1;isoBandNextXTR[  144] =                                                                                                                            isoBandNextXTR[ 26]= -1;isoBandNextYTR[144]=isoBandNextYTR[26]=0;isoBandNextOTR[144]=isoBandNextOTR[26]=1;isoBandNextXRB[36]=isoBandNextXRB[134]=0;isoBandNextYRB[36]= isoBandNextYRB[ 134] =1;isoBandNextORB[36]=isoBandNextORB[134] =1;isoBandNextXBR[36]=isoBandNextXBR[134]=0;isoBandNextYBR[36]= isoBandNextYBR[134]= 1;isoBandNextOBR[36]=isoBandNextOBR[134]= 0;isoBandNextXTL[36]=isoBandNextXTL[134]=0;isoBandNextYTL[36]=isoBandNextYTL[134] = -1;isoBandNextOTL[36]=isoBandNextOTL[134]=   1;isoBandNextXTR[                                                                                     36] = isoBandNextXTR[ 134]  = 1;isoBandNextYTR[  36] =  isoBandNextYTR[ 134]=      0;isoBandNextOTR[                                                                                                                                                                                                                                                                                                                                                                                                                                  36]=isoBandNextOTR[ 134]=0;isoBandNextXRT[9] = isoBandNextXRT[161]= -1;isoBandNextYRT[9]=        isoBandNextYRT[      161]     =                                                                                                                                                                                                                          0;isoBandNextORT[ 9]=isoBandNextORT[161]=0;isoBandNextXRB[9] = isoBandNextXRB[ 161]    = 0;isoBandNextYRB[ 9]=   isoBandNextYRB[                                                                                                                                                                                                                                                                          161] =     -  1;isoBandNextORB[9]    = isoBandNextORB[161]=0;isoBandNextXBL[ 9]=   isoBandNextXBL[161]                                                                                                                                                                                                                                                        =    1;isoBandNextYBL[ 9]= isoBandNextYBL[161] =0;isoBandNextOBL[  9]  = isoBandNextOBL[161] =    0;isoBandNextXLB[                                                                                9] =    isoBandNextXLB[161]=1;isoBandNextYLB[9]=isoBandNextYLB[161]=0;isoBandNextOLB[9]=isoBandNextOLB[161]=1;isoBandNextXRT[136]=0;isoBandNextYRT[136]=1;isoBandNextORT[136]=1;isoBandNextXRB[136]=0;isoBandNextYRB[136]=1;isoBandNextORB[136]=0;isoBandNextXBR[136]= -1;isoBandNextYBR[136]=0;isoBandNextOBR[136]=1;isoBandNextXBL[136]= -1;isoBandNextYBL[136]=0;isoBandNextOBL[136]                                                                                                                         =0;isoBandNextXLB[136]=0;isoBandNextYLB[136]= -1;isoBandNextOLB[136]=0;isoBandNextXLT[136]=0;isoBandNextYLT[136]= -1;isoBandNextOLT[136]=1;isoBandNextXTL[136]= 1;isoBandNextYTL[136]=0;isoBandNextOTL[136]= 0;isoBandNextXTR[136]=1;isoBandNextYTR[136]=0;isoBandNextOTR[136]= 1;isoBandNextXRT[34]= 0;isoBandNextYRT[34]= -1;isoBandNextORT[ 34] =0;isoBandNextXRB[34]=0;isoBandNextYRB[34]= -     1;isoBandNextORB[  34]   =                                                                                       1;isoBandNextXBR[ 34]=1;isoBandNextYBR[34]=0;isoBandNextOBR[34]=0;isoBandNextXBL[34]=1;isoBandNextYBL[34]=0;isoBandNextOBL[34]=                                                         1;isoBandNextXLB[ 34]=0;isoBandNextYLB[34]=1;isoBandNextOLB[34]=1;isoBandNextXLT[34]=0;isoBandNextYLT[34]=1;isoBandNextOLT[ 34]=0;isoBandNextXTL[34]= -1;isoBandNextYTL[34] =0;isoBandNextOTL[34]=1;isoBandNextXTR[34]= -1;isoBandNextYTR[34]=0;isoBandNextOTR[34] =0;isoBandNextXRT[35]=0;isoBandNextYRT[35]=1;isoBandNextORT[35]=1;isoBandNextXRB[35]=0;isoBandNextYRB[35]= -1;isoBandNextORB[35]=  1;isoBandNextXBR[                                                                                                                                                          35]     =1;isoBandNextYBR[35]=  0;isoBandNextOBR[35] =0;isoBandNextXBL[ 35]  = -1;isoBandNextYBL[35]= 0;isoBandNextOBL[35] =0;isoBandNextXLB[ 35] =0;isoBandNextYLB[ 35] =  -       1;isoBandNextOLB[ 35] =                                                                                                                                                                                    
                                                                                   0;isoBandNextXLT[35] =         0;isoBandNextYLT[35]=1;isoBandNextOLT[35]=0;isoBandNextXTL[35]= -1;isoBandNextYTL[35]=0;isoBandNextOTL[35]=1;isoBandNextXTR[35]=1;isoBandNextYTR[35]=0;isoBandNextOTR[35]=1;isoBandNextXRT[153] =0;isoBandNextYRT[153]=1;isoBandNextORT[153]=1;isoBandNextXBL[153]= -1;isoBandNextYBL[153]=0;isoBandNextOBL[153]=0;isoBandNextXLB[153]=0;isoBandNextYLB[ 153]= -1;isoBandNextOLB[153]=0;isoBandNextXTR[153] =1;isoBandNextYTR[153]=0;isoBandNextOTR[153]= 1;isoBandNextXRB[102]=0;isoBandNextYRB[102] = -1;isoBandNextORB[102]=1;isoBandNextXBR[102] =1;isoBandNextYBR[102]=0;isoBandNextOBR[102]=0;isoBandNextXLT[102] =0;isoBandNextYLT[102]=1;isoBandNextOLT[102]=0;isoBandNextXTL[102]= -1;isoBandNextYTL[102]=        0;isoBandNextOTL[102]= 1;isoBandNextXRT[155]=                                                                                                                               0;isoBandNextYRT[ 155]= - 1;isoBandNextORT[ 155]= 0;isoBandNextXBL[155]=1;isoBandNextYBL[ 155]=0;isoBandNextOBL[155]=1;isoBandNextXLB[155]=0;isoBandNextYLB[155]=1;isoBandNextOLB[155]=1;isoBandNextXTR[ 155]=  -1;isoBandNextYTR[ 155]= 0;isoBandNextOTR[155] = 0;isoBandNextXRB[ 103]=  0;isoBandNextYRB[103]=1;isoBandNextORB[103]=0;isoBandNextXBR[103]= -1;isoBandNextYBR[103]=0;isoBandNextOBR[103]=1;isoBandNextXLT[103]=0;isoBandNextYLT[103]= -1;isoBandNextOLT[103]=1;isoBandNextXTL[103]=   1;isoBandNextYTL[                                                                                  103] =0;isoBandNextOTL[ 103] =0;isoBandNextXRT[152]=0;isoBandNextYRT[    152]=      1;isoBandNextORT[                                                                                                                                                                                                                                                                                                                                                                                                                               152]=1;isoBandNextXBR[152]= -1;isoBandNextYBR[ 152]=0;isoBandNextOBR[ 152]=1;isoBandNextXBL[    152]=     -1;isoBandNextYBL[152] =                                                                                                                                                                                                                             0;isoBandNextOBL[ 152]=0;isoBandNextXLB[152]=0;isoBandNextYLB[ 152]=  -1;isoBandNextOLB[152]=0;isoBandNextXLT[ 152]                                                                                                                                                                                                                                                                                    =0;isoBandNextYLT[152]     =  -  1;isoBandNextOLT[152] =1;isoBandNextXTR[  152] =     1;isoBandNextYTR[                                                                                                                                                                                                                                                   152]  =    0;isoBandNextOTR[152]=1;isoBandNextXRT[156]=0;isoBandNextYRT[156]= -1;isoBandNextORT[156]          =                                                                                         1;isoBandNextXBR[ 156]=1;isoBandNextYBR[156]=0;isoBandNextOBR[156]=1;isoBandNextXBL[156]  = -1;isoBandNextYBL[156]=0;isoBandNextOBL[156]=0;isoBandNextXLB[156]=0;isoBandNextYLB[156]= -1;isoBandNextOLB[156]=0;isoBandNextXLT[156]=0;isoBandNextYLT[156]=1;isoBandNextOLT[156]=1;isoBandNextXTR[156] = -1;isoBandNextYTR[156]=0;isoBandNextOTR[156]=1;isoBandNextXRT[137]=0;isoBandNextYRT[137]=                                                                                                               1;isoBandNextORT[137]= 1;isoBandNextXRB[137]=0;isoBandNextYRB[137]=1;isoBandNextORB[137]=0;isoBandNextXBL[137]= -1;isoBandNextYBL[137] =0;isoBandNextOBL[137]=0;isoBandNextXLB[137]=0;isoBandNextYLB[ 137]= -1;isoBandNextOLB[137] = 0;isoBandNextXTL[137]=1;isoBandNextYTL[137]=0;isoBandNextOTL[137]=0;isoBandNextXTR[137]=1;isoBandNextYTR[137]= 0;isoBandNextOTR[ 137]=1;isoBandNextXRT[139]=    0;isoBandNextYRT[  139]  =                                                                                         1;isoBandNextORT[ 139]=1;isoBandNextXRB[139]=0;isoBandNextYRB[139]= -1;isoBandNextORB[139]=0;isoBandNextXBL[139]=1;isoBandNextYBL[139]=                                                 0;isoBandNextOBL[  139]=0;isoBandNextXLB[ 139]=0;isoBandNextYLB[139]=1;isoBandNextOLB[139] =0;isoBandNextXTL[139]= -1;isoBandNextYTL[139]=0;isoBandNextOTL[139]=  0;isoBandNextXTR[139]=1;isoBandNextYTR[ 139]=0;isoBandNextOTR[139]=1;isoBandNextXRT[98]=0;isoBandNextYRT[98]= - 1;isoBandNextORT[ 98]=0;isoBandNextXRB[ 98]=0;isoBandNextYRB[98] =  -1;isoBandNextORB[ 98]=1;isoBandNextXBR[98]=  1;isoBandNextYBR[                                                                                                                                                           98]=    0;isoBandNextOBR[98]=0;isoBandNextXBL[ 98]=1;isoBandNextYBL[98]=0;isoBandNextOBL[98]=1;isoBandNextXLT[98]=0;isoBandNextYLT[98]=1;isoBandNextOLT[98]=0;isoBandNextXTL[   98]= -1;isoBandNextYTL[98]=                                                                                                                                                                                    
                                                                                    0;isoBandNextOTL[ 98]=        1;isoBandNextXRT[99]=0;isoBandNextYRT[ 99]=1;isoBandNextORT[99]=0;isoBandNextXRB[99]=0;isoBandNextYRB[99]= - 1;isoBandNextORB[99] =1;isoBandNextXBR[99]=1;isoBandNextYBR[99]=0;isoBandNextOBR[99]=0;isoBandNextXBL[99]= -1;isoBandNextYBL[99]=0;isoBandNextOBL[99]=1;isoBandNextXLT[99]=0;isoBandNextYLT[99]= -1;isoBandNextOLT[ 99]= 0;isoBandNextXTL[99]=1;isoBandNextYTL[99]=0;isoBandNextOTL[99] =1;isoBandNextXRB[38]=0;isoBandNextYRB[38]= -1;isoBandNextORB[38]=1;isoBandNextXBR[ 38]=1;isoBandNextYBR[38]=0;isoBandNextOBR[ 38]=0;isoBandNextXLB[38]=0;isoBandNextYLB[38]=1;isoBandNextOLB[38]=1;isoBandNextXLT[38]=0;isoBandNextYLT[38]=1;isoBandNextOLT[38]=0;isoBandNextXTL[38]= -1;isoBandNextYTL[38]=        0;isoBandNextOTL[38]=1;isoBandNextXTR[38]=  -                                                                                                                                1;isoBandNextYTR[ 38]=0;isoBandNextOTR[38]=0;isoBandNextXRB[39]=0;isoBandNextYRB[39]=1;isoBandNextORB[39]=1;isoBandNextXBR[39]= -1;isoBandNextYBR[39]=0;isoBandNextOBR[39]=0;isoBandNextXLB[39]=0;isoBandNextYLB[39]= -1;isoBandNextOLB[ 39]=1;isoBandNextXLT[39]=0;isoBandNextYLT[39]=1;isoBandNextOLT[39]=0;isoBandNextXTL[39]= -1;isoBandNextYTL[39]=0;isoBandNextOTL[39]=1;isoBandNextXTR[39]=1;isoBandNextYTR[39]=0;isoBandNextOTR[39]=0;var p00 =function (cell){return [[cell.bottomleft,0],[  0,0]  ,  [ 0,cell.                                                                                 leftbottom]];};var  p01 =function (cell){return [[1,cell.rightbottom],[ 1, 0],[    cell.bottomright,0]                                                                                                                                                                                                                                                                                                                                                                                                                               ];};var p02 =function (cell){return [[cell.topright,1],[1,1],[1,cell.righttop]];};var p03 =   function  (cell) {return [[0,cell.                                                                                                                                                                                                                                lefttop],[0,     1],[ cell.topleft,1] ];};var p04  = function (cell) {return [[cell.bottomright,  0],[cell.     bottomleft,                                                                                                                                                                                                                                                                           0],[0,cell.leftbottom] ,[0,cell.lefttop]];} ;var p05 = function (cell) {return [[   cell. bottomright,                                                                                                                                                                                                                                                     0] ,  [    cell.bottomleft,0],[1,cell. righttop],[1,cell.rightbottom]];};var p06 = function (cell){     return [                                                                                         [ 1,    cell.righttop],[1,cell.rightbottom],[cell.topleft,1],[cell.topright,1]];};var p07 =function (cell){return [[0,cell.leftbottom],[0,cell.lefttop],[cell.topleft,1],[cell.topright,1]];};var p08 =function (cell){return [[0,0],[0,cell.leftbottom],[1,cell.rightbottom],[1,0]];};var p09 =function (cell){return [[1,0],[cell.bottomright,0],[cell.topright,1],[1,1]];};var p10                                                                                                                        =function (cell){return [[1,1],[1,cell.righttop],[0,cell.lefttop],[0,1]];};var p11 =function (cell){return [[cell.bottomleft,0],[0,0],[0,1],[cell.topleft,1]];};var p12 =function (cell){return [[1,cell.righttop],[1,cell.rightbottom],[0,cell.leftbottom],[0,cell.lefttop]];};var p13 =function (cell){return [[cell.topleft,1],[cell.topright,1],[cell.bottomright,0],[cell.bottomleft,0]];}    ;var p14 = function    ()  {                                                                                         return [ [0,0],[0,1],[1,1],[1,0]];};var p15 =function (cell){return [[1,cell.rightbottom],[1,0],[0,0],[0,1],[cell.topleft,1]];};var p16 =                                               function (cell){return [[cell.topright,1],[1,1],[1,0],[0,0] ,[0,cell.leftbottom]];};var p17 =function (cell){return [[1,0],[cell.bottomright,0],[0,cell.lefttop],[0,1],[1,1]];};var p18 =function (cell){return [[1,1],[1,cell.righttop],[cell.bottomleft,0],[0,0],[0,1]];};var p19 =function (cell){return [[1,cell.righttop],[1,cell.rightbottom],[0,cell.lefttop],[0,1],[cell.topleft,     1]]  ;};var p20 =                                                                                                                                                                  function (cell){return [[1,1],[1, cell.righttop],[cell.bottomright,0],[cell.bottomleft,0],[cell.topright,1]];};var p21  =function (cell){return [[1,cell.rightbottom],[1, 0],[  cell.bottomright,0]  ,[ 0,                                                                                                                                                                                    
                                                                                     cell.leftbottom] , [ 0,        cell.lefttop]];};var p22 =function (cell){return [[cell.topright, 1],[cell.bottomleft,0],[0,0] ,[0,cell.leftbottom] ,[cell.topleft,1]];};var p23 =function (cell){return [[cell.bottomright,0],[cell.bottomleft,0],[0,cell.lefttop],[0,1],[cell.topleft,1]];};var p24 =function (cell){return [[ 1,1],[1,cell.righttop],[0,cell.leftbottom],[0,cell.lefttop],[cell. topright,1]];};var p25 =function (cell){return [[1,cell.rightbottom],[1,0],[cell.bottomright,0],[cell.topleft,1],[cell.topright,1]];};var p26 =function (cell){return [[1,cell.righttop],[1,cell.rightbottom],[cell.bottomleft,0],[0,0],[0,cell.leftbottom]];};var p27 =function (cell){return [[1,cell.rightbottom], [1,0],[ 0,0],[0,cell.        leftbottom],[cell. topleft,1],[cell.topright,                                                                                                                                  1]] ;}    ;var p28 =function (cell){return [[1,1],[1,0],[cell.bottomright,0],[0,cell.leftbottom],[0,cell.lefttop],[cell.topright,1]];};var p29 =function (cell){return [[1,1],[1,cell.righttop],[cell.bottomright,0],[cell.bottomleft,0],[0,cell.lefttop],[0,1]];};var p30 =function (cell){return [[1,cell.righttop],[1,cell.rightbottom],[cell.bottomleft,0],[0,0],[0,1],[cell.topleft,1]];};var p31 =function (cell){return [[1,1],[1,cell.righttop],[cell.bottomleft,0],[0,0],[0,cell.    leftbottom],[ cell.                                                                                       topright,1]];};var p32 =function (cell){return [[1,cell.rightbottom], [1, 0] ,[    cell.bottomright,0]                                                                                                                                                                                                                                                                                                                                                                                                                             ,[0,cell.lefttop],[ 0,1]  ,[cell.topleft,1]];};var p33 =function  (cell){return [  [1,cell.    righttop],[1, cell.rightbottom] ,[                                                                                                                                                                                                                                         cell.    bottomright, 0],[cell.bottomleft,0],[0,cell.leftbottom],[0,cell.lefttop],[cell.topleft,1],[     cell.                                                                                                                                                                                                                                                                                topright,1]];};var p34 =function (cell) {return [[1,1],[ 1,cell.righttop], [cell.   bottomleft,0], [0,                                                                                                                                                                                                                                                      0] ,[0,     cell. leftbottom] ,[ cell.topright,1] ];};var  p35 =function ( cell){return   [ [1,cell.    rightbottom]                                                                                   ,[1,0]    ,[ cell.bottomright,0],[0,cell.lefttop],[0,1],[cell.topleft,1]];};var p36 =function (cell){return [[1,1],[1,cell.righttop],[cell.bottomright,0],[cell.bottomleft,0],[0,cell.leftbottom],[0,cell.lefttop],[ cell.topright,1]];};var p37 =function (cell){return [[1,cell.righttop],[1,cell.rightbottom],[cell.bottomleft,0],[0,0],[0,cell.leftbottom],[cell.topleft,1],[cell.                                                                                                                        topright,1]];}  ;var  p38 =function (cell){return [[1,cell.righttop] ,[1,cell.rightbottom],[cell. bottomright,0],[cell.bottomleft,0],[0,cell.lefttop], [0,1],[cell.topleft,1]];};var  p39 =function (cell){return [[1, cell.rightbottom],[1,0],[cell.bottomright,0],[0,cell.leftbottom],[0,cell.lefttop],[cell.topleft,1],[cell.topright,1]];} ;var isoBandEdgeRT =[];var isoBandEdgeRB =[];var   isoBandEdgeBR   =  [  ] ;var                                                                                           isoBandEdgeBL =[];var isoBandEdgeLB =[];var isoBandEdgeLT =[];var isoBandEdgeTL =[];var isoBandEdgeTR =[];isoBandEdgeBL[1]=isoBandEdgeLB[1] =                                           18;isoBandEdgeBL[ 169]= isoBandEdgeLB[169]=18;isoBandEdgeBR[4]=isoBandEdgeRB[4]=12;isoBandEdgeBR[166]=isoBandEdgeRB[166]= 12;isoBandEdgeRT[16]=isoBandEdgeTR[16]=4;isoBandEdgeRT[154]=  isoBandEdgeTR[  154]= 4;isoBandEdgeLT[64]= isoBandEdgeTL[64]=22;isoBandEdgeLT[ 106]=isoBandEdgeTL[106]=22;isoBandEdgeBR[2]=isoBandEdgeLT[2]=  17;isoBandEdgeBL[2]=isoBandEdgeLB[2]=18;isoBandEdgeBR[168]= isoBandEdgeLT[168]                                                                                                                                                               =     17;isoBandEdgeBL[168] =isoBandEdgeLB[  168] =18;isoBandEdgeRT[8] =isoBandEdgeBL[8]=9;isoBandEdgeRB[ 8]=isoBandEdgeBR[ 8]=12;isoBandEdgeRT[162]=isoBandEdgeBL[162]=       9;isoBandEdgeRB[162] =                                                                                                                                                                                      
                                                                                       isoBandEdgeBR[  162] =         12;isoBandEdgeRT[32]=isoBandEdgeTR[32]=4;isoBandEdgeRB[32]=isoBandEdgeTL[32]= 1;isoBandEdgeRT[138]=isoBandEdgeTR[138] =4;isoBandEdgeRB[138] =isoBandEdgeTL[138]=1;isoBandEdgeLB[128]=isoBandEdgeTR[128]=21;isoBandEdgeLT[128]=isoBandEdgeTL[128] =22;isoBandEdgeLB[42] =isoBandEdgeTR[42]=21;isoBandEdgeLT[42]=isoBandEdgeTL[ 42]=22;isoBandEdgeRB[5] =isoBandEdgeLB[5]=14;isoBandEdgeRB[165]=isoBandEdgeLB[165] =14;isoBandEdgeBR[20]=isoBandEdgeTR[20]=6;isoBandEdgeBR[150]=  isoBandEdgeTR[150] =6;isoBandEdgeRT[80]=isoBandEdgeLT[80]= 11;isoBandEdgeRT[90]= isoBandEdgeLT[90]=11;isoBandEdgeBL[65]=isoBandEdgeTL[65]=3;isoBandEdgeBL[105]=isoBandEdgeTL[105]=3;isoBandEdgeRT[160]=isoBandEdgeLT[160] =         11;isoBandEdgeRB[ 160]= isoBandEdgeLB[ 160] =                                                                                                                                    14;isoBandEdgeRT[ 10]=isoBandEdgeLT[10] =11;isoBandEdgeRB[10]=isoBandEdgeLB[10]=14;isoBandEdgeBR[130]=isoBandEdgeTR[ 130]=6;isoBandEdgeBL[130]=isoBandEdgeTL[130]=3;isoBandEdgeBR[40]= isoBandEdgeTR[40]=6;isoBandEdgeBL[40] =isoBandEdgeTL[40] = 3;isoBandEdgeRB[101]=isoBandEdgeTL[101]=1;isoBandEdgeRB[69]=isoBandEdgeTL[69]=1;isoBandEdgeLB[  149]=isoBandEdgeTR[149]=21;isoBandEdgeLB[21] =isoBandEdgeTR[21]=21;isoBandEdgeBR[86]=isoBandEdgeLT[ 86]=17;isoBandEdgeBR[84]=isoBandEdgeLT[84]=   17;isoBandEdgeRT[                                                                                  89]=isoBandEdgeBL[89]=9;isoBandEdgeRT[81]=isoBandEdgeBL[81]=9;isoBandEdgeRT[96]    =isoBandEdgeTL[96]=                                                                                                                                                                                                                                                                                                                                                                                                                             0;isoBandEdgeRB[ 96] =isoBandEdgeLT[ 96] =  15;isoBandEdgeRT[  74]  =  isoBandEdgeTL[ 74]=   0;isoBandEdgeRB[ 74]=isoBandEdgeLT[                                                                                                                                                                                                                                      74]      =     15;isoBandEdgeRT[24]=isoBandEdgeBR[ 24]  = 8;isoBandEdgeBL[  24]  =isoBandEdgeTR[   24]  =     7;isoBandEdgeRT[                                                                                                                                                                                                                                                                    146]= isoBandEdgeBR[146]=8;isoBandEdgeBL[146]=isoBandEdgeTR[146]=7;isoBandEdgeRB[   6]= isoBandEdgeLT[                                                                                                                                                                                                                                                       6]    =    15;isoBandEdgeBR[    6]  =  isoBandEdgeLB[  6]=16;isoBandEdgeRB[164]=isoBandEdgeLT[164]=     15;isoBandEdgeBR[                                                                               164]=    isoBandEdgeLB[164]=16;isoBandEdgeBL[ 129]=isoBandEdgeTR[129] = 7;isoBandEdgeLB[129]= isoBandEdgeTL[129]=20;isoBandEdgeBL[41]=isoBandEdgeTR[41]= 7;isoBandEdgeLB[41]=isoBandEdgeTL[41]=20;isoBandEdgeBR[66]=isoBandEdgeTL[66]=2;isoBandEdgeBL[66]= isoBandEdgeLT[66]=19;isoBandEdgeBR[104]=isoBandEdgeTL[104]=2;isoBandEdgeBL[104]=isoBandEdgeLT[104]=19;isoBandEdgeRT[144]=     isoBandEdgeLB[                                                                                                     144]=10;isoBandEdgeLT[144]=isoBandEdgeTR[144]= 23;isoBandEdgeRT[26]=isoBandEdgeLB[26]= 10;isoBandEdgeLT[26]=isoBandEdgeTR[26] =23;isoBandEdgeRB[36]=isoBandEdgeTR[ 36]=5;isoBandEdgeBR[36]=isoBandEdgeTL[ 36]=2;isoBandEdgeRB[134]=isoBandEdgeTR[134]=5;isoBandEdgeBR[134]=isoBandEdgeTL[134]=2;isoBandEdgeRT[ 9]=isoBandEdgeLB[9]=10;isoBandEdgeRB[9]=isoBandEdgeBL[9]=13;isoBandEdgeRT[161]=       isoBandEdgeLB[ 161]     =                                                                                           10;isoBandEdgeRB[  161]=isoBandEdgeBL[ 161]=13;isoBandEdgeRB[37]=isoBandEdgeTR[37]=5;isoBandEdgeLB[37]= isoBandEdgeTL[37]=20;isoBandEdgeRB[133] =                                       isoBandEdgeTR[ 133]=5;isoBandEdgeLB[ 133]=isoBandEdgeTL[133]=20;isoBandEdgeBR[148]= isoBandEdgeLB[148]=16;isoBandEdgeLT[148]=isoBandEdgeTR[148]= 23;isoBandEdgeBR[22]=isoBandEdgeLB[22]=16;isoBandEdgeLT[ 22]=isoBandEdgeTR[22]=23;isoBandEdgeRT[82]=isoBandEdgeBR[82] =8;isoBandEdgeBL[82]=isoBandEdgeLT[82]=19;isoBandEdgeRT[88]=isoBandEdgeBR[88]=8;isoBandEdgeBL[ 88]= isoBandEdgeLT[88]=  19;isoBandEdgeRT[                                                                                                                                                                 73]      =isoBandEdgeTL[73]= 0;isoBandEdgeRB[73]=isoBandEdgeBL[73] =13;isoBandEdgeRT[97]=isoBandEdgeTL[ 97]=0;isoBandEdgeRB[97]=isoBandEdgeBL[97]= 13;isoBandEdgeRT[145]=     isoBandEdgeBL[    145]  =                                                                                                                                                                                      
                                                                                       9;isoBandEdgeLB[ 145] =         isoBandEdgeTR[145] =21;isoBandEdgeRT[25]=isoBandEdgeBL[25]=9;isoBandEdgeLB[25]=isoBandEdgeTR[ 25]=21;isoBandEdgeRB[70]=isoBandEdgeTL[70]=1;isoBandEdgeBR[70]=isoBandEdgeLT[70]=17;isoBandEdgeRB[ 100]=isoBandEdgeTL[100]= 1;isoBandEdgeBR[100]=isoBandEdgeLT[100]=17;isoBandEdgeRT[34]=isoBandEdgeBL[34]= 9;isoBandEdgeRB[34]=isoBandEdgeBR[34]= 12;isoBandEdgeLB[34]= isoBandEdgeTR[34]=21;isoBandEdgeLT[ 34]=isoBandEdgeTL[34]=22;isoBandEdgeRT[136]= isoBandEdgeTR[136]=4;isoBandEdgeRB[ 136] =isoBandEdgeTL[ 136]=1;isoBandEdgeBR[136]=isoBandEdgeLT[136]=17;isoBandEdgeBL[136]=isoBandEdgeLB[136]=18;isoBandEdgeRT[35]=isoBandEdgeTR[35]=4;isoBandEdgeRB[35]=isoBandEdgeBR[35]=12;isoBandEdgeBL[35]=          isoBandEdgeLB[ 35]=  18;isoBandEdgeLT[ 35] =                                                                                                                                     isoBandEdgeTL[ 35]=22;isoBandEdgeRT[ 153] =isoBandEdgeTR[153]=4;isoBandEdgeBL[153]=isoBandEdgeLB[153]=18;isoBandEdgeRB[102]=isoBandEdgeBR[102] = 12;isoBandEdgeLT[102]=  isoBandEdgeTL[102]= 22;isoBandEdgeRT[155]=isoBandEdgeBL[155]=9;isoBandEdgeLB[155]=isoBandEdgeTR[155]=23;isoBandEdgeRB[103]=isoBandEdgeTL[103]=1;isoBandEdgeBR[103] =isoBandEdgeLT[103]=17;isoBandEdgeRT[152]=isoBandEdgeTR[ 152]=4;isoBandEdgeBR[ 152]=isoBandEdgeLT[152]=17;isoBandEdgeBL[152]=isoBandEdgeLB[ 152]=   18;isoBandEdgeRT[                                                                                      156]  =    isoBandEdgeBR[   156]= 8;isoBandEdgeBL[ 156]= isoBandEdgeLB[  156] =      18;isoBandEdgeLT[                                                                                                                                                                                                                                                                                                                                                                                                                           156]=isoBandEdgeTR[ 156] = 23;isoBandEdgeRT[137]=isoBandEdgeTR[137]=4;isoBandEdgeRB[ 137]=          isoBandEdgeTL[    137]      =                                                                                                                                                                                                                                      1;isoBandEdgeBL[ 137]=isoBandEdgeLB[137]=18;isoBandEdgeRT[139]=isoBandEdgeTR[139]   =4;isoBandEdgeRB[  139]=    isoBandEdgeBL[                                                                                                                                                                                                                                                                     139]=13;isoBandEdgeLB[139]=isoBandEdgeTL[139]=20;isoBandEdgeRT[98]=isoBandEdgeBL[     98]             =                                                                                                                                                                                                                                                      9;isoBandEdgeRB[  98] = isoBandEdgeBR[98] = 12;isoBandEdgeLT[ 98] =isoBandEdgeTL[98]=22;isoBandEdgeRT[ 99]= isoBandEdgeTL[                                                                               99] =    0;isoBandEdgeRB[99]=isoBandEdgeBR[99]=12;isoBandEdgeBL[99]=isoBandEdgeLT[99]= 19;isoBandEdgeRB[38] =isoBandEdgeBR[38]=12;isoBandEdgeLB[38]=isoBandEdgeTR[ 38] =21;isoBandEdgeLT[38]=isoBandEdgeTL[38]=22;isoBandEdgeRB[ 39]=isoBandEdgeTR[39]=5;isoBandEdgeBR[39]=isoBandEdgeLB[39]=16;isoBandEdgeLT[ 39]=isoBandEdgeTL[39]= 22;var polygon_table =[];polygon_table[  1] =    polygon_table[                                                                                                      169]=p00;polygon_table[ 4]=polygon_table[166] =p01;polygon_table[16]=polygon_table[ 154]=p02;polygon_table[64]= polygon_table[106]=p03;polygon_table[168]=polygon_table[2] = p04;polygon_table[162]=polygon_table[8]= p05;polygon_table[138]=polygon_table[ 32]=p06;polygon_table[42]= polygon_table[128]=p07;polygon_table[5] =polygon_table[165]=p08;polygon_table[20]=polygon_table[ 150]=      p09;polygon_table[ 80]   =                                                                                             polygon_table[ 90]=p10;polygon_table[65]=polygon_table[105]=p11;polygon_table[160]=polygon_table[10]=p12;polygon_table[130]=polygon_table[40]                                                =    p13;polygon_table[85]=p14;polygon_table[101]=polygon_table[69]=p15;polygon_table[149]= polygon_table[21]=p16;polygon_table[86]=polygon_table[84]=p17;polygon_table[89]=polygon_table[81]=p18;polygon_table[96]=polygon_table[74]=p19;polygon_table[24]=polygon_table[146]=p20;polygon_table[6]=polygon_table[164]=p21;polygon_table[129]=polygon_table[41]=p22;polygon_table[    66]=polygon_table[                                                                                                                                                                    104]   =p23;polygon_table[ 144]=polygon_table[26]=p24;polygon_table[36]=polygon_table[134]= p25;polygon_table[9]=polygon_table[161]=p26;polygon_table[37]=polygon_table[  133]=p27;polygon_table[148]                                                                                                                                                                                       
                                                                                         = polygon_table[   22]=        p28;polygon_table[82]=polygon_table[88]=p29;polygon_table[73]=polygon_table[97]=p30;polygon_table[145]=polygon_table[25]=p31;polygon_table[70]=polygon_table[100]=p32;polygon_table[34]=function (c){return [p07(c),p05(c)];};polygon_table[35]=p33;polygon_table[136]=function (c){return [p06(c),p04(c)];};polygon_table[153]=function  (c){return [p02(c),p00( c)];};polygon_table[102]=function (c){return [p01(c),p03(c)];};polygon_table[155]=p34;polygon_table[103]=p35;polygon_table[152]=function (c){return [p02(c) ,p04(c)];};polygon_table[156]=p36;polygon_table[137]=function (c){return [p06(c),p00(c)];};polygon_table[139]=p37;polygon_table[98]=function (c){return [p05(c),p03(c)];}          ;polygon_table[99]  =p38;polygon_table[ 38]=                                                                                                                                       function   (c){return [p01(c),p07(c)];};polygon_table[39]=p39;function interpolateX(y,y0,y1){return (y -y0)/(y1 -y0);}function isArray(myArray){return myArray.constructor.toString().indexOf("Array")> -1;}function computeBandGrid(data,minV,bandwidth){var rows =data.length -1;var cols =data[0].length -1;var BandGrid ={rows:rows,cols:cols,cells:[]};var maxV =minV +Math.abs(bandwidth);for (var  j =0;j <rows; ++j){BandGrid.cells[j]=[];for (var i =0;i <cols; ++i){var cval =    0;var tl = data[j +                                                                                       1][i];var  tr =data[j +1][i  +1];var br =data[j][i +1] ;var bl =data[j][i];if (     isNaN( tl)||isNaN(                                                                                                                                                                                                                                                                                                                                                                                                                         tr)||isNaN(br)||isNaN(bl)){continue ;}cval |=tl <minV ?0 :tl >maxV ?128 :64;cval |=tr <minV ?  0 :tr >maxV ?32 :16;cval |=br <minV                                                                                                                                                                                                                                         ?0 :br >maxV   ?8 :4;cval |=bl <minV ?0 :bl >maxV ?2 :1;var cval_real = +cval;var flipped =0;if (cval ===17      ||                                                                                                                                                                                                                                                                              cval ===18 ||cval ===33 ||cval ===34 ||cval ===38  ||  cval ===68 ||cval ===72 ||   cval ===98  || cval                                                                                                                                                                                                                                                      ===102 ||    cval ===132 ||cval ===136 ||cval ===137  ||cval ===152 ||cval ===153){var average =(tl +    tr +br +                                                                                        bl)  /    4;flipped =average >maxV ?2 :average <minV ?0 :1;if (cval ===34){if (flipped ===1){cval =35;}else if (flipped ===0){cval =136;}}else if (cval ===136){if (flipped ===1){cval =35;flipped = 4;}else if (flipped ===0){cval =34;}}else if (cval ===17){if (flipped ===1){cval =155;flipped =4;}else if (flipped ===0) {cval =153;}}else if (cval ===68){ if (flipped ===1){       cval     =                                                                                                       103;flipped =4;} else if (flipped ===0) {cval =102;}}else if (cval ===153){if (flipped ===1)cval =155;}else if (cval ===102){if (flipped ===1)cval =103;}else if (cval ===152){if (flipped <2){cval =156;flipped =1;}}else if (cval === 137){if (flipped <2){cval =139;flipped =1;}}else if (cval  ===98){if (flipped <2){cval =99;flipped =1;}}else  if (cval ===38){if (flipped <2){cval =   39;flipped =1;}}else if (cval                                                                                                ===    18){if (flipped >0){cval =156;flipped =4;}else {cval =152;}}else if (cval ===33){if (flipped >0){cval =139;flipped =4;}else {                                                   cval =    137;}}else if (cval ===72){if (flipped >0){cval =99;flipped =4;}else {cval =98;}}else if (cval ===132){if (flipped >0){cval =39;flipped =4;}else {cval =38;}}}if (cval !=0 &&cval !=170){var topleft,topright,bottomleft,bottomright,righttop,rightbottom,lefttop,leftbottom;topleft =topright =bottomleft =bottomright =righttop =rightbottom =lefttop =leftbottom =0.5;var    edges =[];if (cval                                                                                                                                                                     ===    1){  bottomleft = 1 -interpolateX(  minV,br,bl);leftbottom =1 -interpolateX(minV,tl,bl);edges. push(isoBandEdgeBL[cval]);}  else  if (cval ===169){bottomleft =    interpolateX( maxV,bl, br)                                                                                                                                                                                       
                                                                                             ;leftbottom        =         interpolateX(maxV,bl,tl);edges.push(isoBandEdgeBL[cval]) ;}else if (cval ===4){rightbottom =1 -interpolateX(minV,tr,br);bottomright =interpolateX(minV,bl,br);edges.push( isoBandEdgeRB[cval]);}else if (cval ===166){rightbottom =interpolateX(maxV,br,tr);bottomright =1 -interpolateX(maxV,br,bl);edges.push(isoBandEdgeRB[cval]);}else if ( cval ===16){righttop =interpolateX(minV,br,tr);topright =interpolateX(minV,tl,tr);edges.push(isoBandEdgeRT[cval]);}else if (cval === 154){righttop =1 -interpolateX(maxV,tr,br);topright =1 -interpolateX(maxV,tr, tl);edges.push(isoBandEdgeRT[cval]);}else if (cval ===64){lefttop =interpolateX(minV,bl,tl);topleft =1 -interpolateX(minV,tr,tl)        ;edges.push(isoBandEdgeLT[cval]);}else if (cval                                                                                                                                        ===106){    lefttop = 1 -interpolateX(maxV, tl,bl);topleft =interpolateX(maxV,tl,tr);edges. push(isoBandEdgeLT[cval]);}else if (cval ===168){bottomright =interpolateX(maxV,bl, br);bottomleft =interpolateX(minV,bl,br);leftbottom =interpolateX(minV, bl,tl);lefttop =interpolateX(maxV,bl,tl);edges.push(isoBandEdgeBR[cval]) ;edges. push(isoBandEdgeBL[cval]);}else if (cval ===2){bottomright =1 -interpolateX(minV,br,bl);bottomleft =1 -interpolateX(maxV,br,bl);leftbottom =1 -    interpolateX( maxV,                                                                                       tl,bl);lefttop =1 -interpolateX( minV,tl, bl);edges. push(isoBandEdgeBR[ cval])          ;edges. push(                                                                                                                                                                                                                                                                                                                                                                                                                        isoBandEdgeBL[cval]);}else if (cval ===162){righttop =interpolateX(maxV,br,tr);rightbottom =      interpolateX(  minV,    br,  tr)                                                                                                                                                                                                                                           ;bottomright    =1   -interpolateX( minV,br,bl) ;bottomleft   = 1  - interpolateX(maxV,br,bl);edges. push(     isoBandEdgeBR[                                                                                                                                                                                                                                                                    cval]);edges.push(isoBandEdgeBL[  cval]);}else if (cval === 8)  {  righttop =1 -   interpolateX(minV,                                                                                                                                                                                                                                                        tr,  br)    ;rightbottom =1 -interpolateX(maxV,tr,br);bottomright =interpolateX(maxV,bl,br);bottomleft         =                                                                                        interpolateX( minV,bl,br)  ;edges.push(isoBandEdgeRT[ cval]);edges.push( isoBandEdgeRB[cval]);}else if (cval ===138){ righttop =1 -interpolateX(minV,tr, br);rightbottom =1 -interpolateX(maxV,tr,br) ;topleft =1  -interpolateX(maxV,tr,tl);topright =1 -interpolateX(minV,tr,tl);edges. push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeRB[cval]);}else if (cval ===32){ righttop =    interpolateX(                                                                                                     maxV,br,tr);rightbottom =interpolateX(minV,br,tr);topleft =interpolateX( minV,tl,tr);topright =interpolateX( maxV,tl,tr);edges.push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeRB[cval]);}else if (cval ===42){leftbottom =1 -interpolateX(maxV,tl,bl);lefttop =1 -interpolateX(minV,tl,bl);topleft =interpolateX(minV,tl,tr);topright =interpolateX(maxV,tl,tr);edges.push(isoBandEdgeLB[        cval]    ) ;edges.   push(                                                                                               isoBandEdgeLT[ cval]);}else if  (cval ===  128){leftbottom = interpolateX( minV, bl,tl)  ;lefttop  =interpolateX( maxV,bl, tl);topleft = 1 -                                            interpolateX( maxV, tr, tl);topright = 1  -interpolateX(minV,tr,tl);edges.push(isoBandEdgeLB[cval] );edges.push(isoBandEdgeLT[cval]);} if (cval ===5){rightbottom =1 -interpolateX(minV,tr,br);leftbottom =1 -interpolateX(minV,tl,bl)  ;edges.push(isoBandEdgeRB[cval]) ;}else  if (cval === 165){rightbottom =interpolateX(maxV,br,tr);leftbottom =interpolateX(maxV,bl,tl);edges.push( isoBandEdgeRB[cval]                                                                                                                                                                    );}     else if  (cval  ===20){bottomright  =interpolateX(minV,bl, br);topright =interpolateX( minV,tl,tr);edges.push(isoBandEdgeBR[cval]);} else if (cval ===  150){     bottomright     =  1    -                                                                                                                                                                                        
                                                                                          interpolateX(maxV,br,bl)         ;topright =1 -interpolateX(maxV,tr,tl);edges.push(isoBandEdgeBR[cval]);}else if (cval ===80){righttop =interpolateX(minV,br,tr);lefttop =interpolateX(minV,bl,tl);edges.push(isoBandEdgeRT[cval]);}else if (cval ===90){righttop =1 -interpolateX(maxV,tr,br);lefttop =1 -interpolateX(maxV,tl,bl);edges.push(isoBandEdgeRT[cval]);}else if (cval ===65){bottomleft =1 -interpolateX(minV,br,bl);topleft =1 -interpolateX(minV,tr,tl);edges.push(isoBandEdgeBL[cval]);}else if (cval ===105){bottomleft =interpolateX(maxV,bl,br);topleft =interpolateX(maxV,tl,tr);edges.push(isoBandEdgeBL[cval]);}else if (cval ===160){righttop =interpolateX(maxV,br,tr);rightbottom =interpolateX(minV,br,         tr)   ;leftbottom  =interpolateX(   minV,bl,tl)                                                                                                                                          ;lefttop    =interpolateX(maxV,bl,tl);edges. push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeRB[cval]);}else if (cval  ===10){righttop  = 1 -interpolateX(minV,tr,br);rightbottom =1 -interpolateX(maxV,tr,br);leftbottom =1 -interpolateX(maxV,tl,bl);lefttop =1 -interpolateX(minV, tl,bl);edges.push(isoBandEdgeRT[cval] );edges.push(isoBandEdgeRB[cval]);}else if  (cval ===130){bottomright = 1 -interpolateX(minV, br, bl);bottomleft =1 -interpolateX(maxV,br,bl);topleft =1  -    interpolateX( maxV,                                                                                       tr,tl);topright =1 -interpolateX(minV,tr,  tl);edges.push(isoBandEdgeBR[ cval])        ;edges.   push(                                                                                                                                                                                                                                                                                                                                                                                                                       isoBandEdgeBL[cval]);}else if (cval ===40){bottomright =interpolateX(maxV,bl,br);bottomleft    =interpolateX(minV,bl,br);topleft =                                                                                                                                                                                                                                            interpolateX(    minV,tl,tr);topright =interpolateX(maxV,tl,tr) ;edges.push(isoBandEdgeBR[cval]);edges.push(     isoBandEdgeBL[                                                                                                                                                                                                                                                                 cval] ) ;}else if ( cval ===101){rightbottom =interpolateX(maxV,br, tr);topleft =    interpolateX(maxV,                                                                                                                                                                                                                                                          tl,tr)    ;edges.push(isoBandEdgeRB[cval]);}else if (cval ===69){rightbottom =1 -interpolateX(minV,    tr, br)                                                                                        ;topleft    =1 -interpolateX(minV,tr,tl);edges.push(isoBandEdgeRB[cval]);}else if (cval ===149){leftbottom =interpolateX(maxV,bl,tl);topright =1 -interpolateX(maxV,tr,tl);edges.push(isoBandEdgeLB[cval]);}else if (cval ===21){leftbottom =1 -interpolateX(minV,tl,bl);topright =interpolateX(minV,tl,tr);edges.push(isoBandEdgeLB[cval]);}else if (cval ===86){bottomright =1 -       interpolateX(                                                                                                    maxV,br,bl) ;lefttop =1 -interpolateX(maxV,tl,bl);edges.push(isoBandEdgeBR[cval]) ;}else if (cval   ===84){bottomright =interpolateX(minV,bl,br);lefttop = interpolateX(minV,bl,tl);edges.push(isoBandEdgeBR[cval]);}else if (cval ===89){righttop = 1 -interpolateX(maxV,tr,br);bottomleft =interpolateX(maxV, bl,br);edges.push(isoBandEdgeBL[cval]);}else if (cval ===81) { righttop =       interpolateX( minV, br, tr)                                                                                                ;bottomleft =1 - interpolateX( minV,br,bl)  ;edges.push(isoBandEdgeBL[cval] ) ;} else if (cval ===96){righttop =interpolateX(maxV,br,tr)                                                 ;rightbottom =interpolateX(minV,br,tr);lefttop =interpolateX(minV,bl,tl);topleft =interpolateX(maxV,tl,tr);edges.push( isoBandEdgeRT[cval] );edges.push(isoBandEdgeRB[ cval]);}else if (cval ===74){righttop =1 -interpolateX(minV,tr,br);rightbottom =1 -interpolateX(maxV,tr,br);lefttop =1 -interpolateX(maxV,tl,bl);topleft =1 -interpolateX(minV,tr,tl);edges.push(isoBandEdgeRT[   cval]);edges. push(                                                                                                                                                                     isoBandEdgeRB[ cval]);}else if (cval ===24){righttop   =1 -interpolateX(maxV,tr,br);bottomright = interpolateX(maxV,bl,br);bottomleft =interpolateX(minV,bl,br)  ;topright =  interpolateX(minV,tl, tr)                                                                                                                                                                                   
                                                                                                   ;edges.     push(         isoBandEdgeRT[cval]);edges.push(isoBandEdgeBL[cval]);}else if (cval ===146){righttop =interpolateX(minV,br,tr);bottomright =1 -interpolateX(minV,br,bl);bottomleft =1 -interpolateX(maxV,br,bl);topright =1 -interpolateX(maxV,tr,tl);edges.push(isoBandEdgeRT[cval]);edges.push( isoBandEdgeBL[cval]);}else if (cval ===6){rightbottom =1 -interpolateX(minV,tr,br);bottomright =1 -interpolateX(maxV,br,bl);leftbottom =1 -interpolateX(maxV,tl,bl);lefttop =1 -interpolateX(minV,tl,bl);edges.push(isoBandEdgeRB[cval]);edges.push(isoBandEdgeBR[cval]);} else if (cval ===164){rightbottom =interpolateX(maxV,br,tr);bottomright =interpolateX(minV,bl,br);leftbottom =interpolateX(minV,         bl,tl) ;lefttop =interpolateX(maxV,bl,tl);edges.                                                                                                                                               push(    isoBandEdgeRB[cval]);edges.push(isoBandEdgeBR[cval]);}else if (cval ===129){bottomleft =1 -interpolateX(minV,br,bl);leftbottom =interpolateX(maxV, bl,tl);topleft =1 -interpolateX(maxV,tr,tl);topright =1 -interpolateX(minV,tr,tl);edges.push(isoBandEdgeBL[cval]);edges.push(isoBandEdgeLB[cval]);}else if (cval ===41){bottomleft =interpolateX(maxV,bl,br);leftbottom =1 -interpolateX(minV,tl,bl);topleft =interpolateX(minV,tl,tr);topright =interpolateX(maxV,tl,      tr);edges.  push(                                                                                       isoBandEdgeBL[cval]);edges. push(isoBandEdgeLB[cval] );}else if  (cval ===66) {     bottomright = 1  -                                                                                                                                                                                                                                                                                                                                                                                                                      interpolateX(minV,br,bl);bottomleft =1 -interpolateX(maxV,br,bl);lefttop =1  -interpolateX(     maxV, tl, bl) ;topleft =    1   -                                                                                                                                                                                                                                                interpolateX(   minV,tr,tl);edges.push(isoBandEdgeBR[cval]);edges.push(isoBandEdgeBL[cval]);}else if (cval       ===                                                                                                                                                                                                                                                                          104){bottomright = interpolateX(maxV,bl,br) ;bottomleft =interpolateX(minV,bl,br)       ;lefttop     =                                                                                                                                                                                                                                                          interpolateX( minV,bl,tl);topleft =interpolateX(maxV,tl, tr);edges. push(isoBandEdgeBL[  cval]);edges.     push(                                                                                       isoBandEdgeTL[  cval]);}else if (cval ===144){righttop =interpolateX(minV,br,tr);leftbottom =interpolateX(minV,bl,tl);lefttop  =interpolateX(maxV,bl,tl);topright =1 -interpolateX(maxV,tr,tl);edges.push(isoBandEdgeRT[ cval]);edges. push(isoBandEdgeLT[cval]);}else if (cval ===26){righttop  =1 - interpolateX(maxV,tr,br);leftbottom =1 -interpolateX(maxV, tl,bl);lefttop =1 -     interpolateX(                                                                                                    minV,tl,bl);topright =interpolateX(minV,tl,tr);edges.push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeLT[cval]);}else if (cval ===36){rightbottom =interpolateX(maxV,br,tr);bottomright =interpolateX(minV,bl,br);topleft =interpolateX(minV,tl,tr);topright =interpolateX(maxV,tl,tr);edges.push(isoBandEdgeRB[cval]);edges.push(isoBandEdgeBR[cval]);}else if (cval ===134){rightbottom    = 1 - interpolateX(minV, tr,br)                                                                                                 ;bottomright =1 -interpolateX(maxV,br,bl);topleft  =1  -interpolateX(maxV,tr,tl) ;topright   =1 - interpolateX(minV,tr, tl);edges.push( isoBandEdgeRB[                                    cval])     ;edges.push(isoBandEdgeBR[cval]);}else if (cval ===9){righttop =1 -interpolateX(minV,tr,br);rightbottom =1 -interpolateX(maxV,tr,br);bottomleft =interpolateX(maxV,bl,br);leftbottom =1 -interpolateX(minV,tl,bl);edges. push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeRB[cval]);}else if (cval === 161){righttop =interpolateX(maxV,br,tr);rightbottom =interpolateX(     minV,    br,  tr)                                                                                                                                                                       ;bottomleft =1 -interpolateX( minV,br,bl);leftbottom =interpolateX(maxV,bl,tl);edges.push(isoBandEdgeRT[cval] );edges.push( isoBandEdgeRB[cval]);}else if (cval ===37){ rightbottom = interpolateX(                                                                                                                                                                                      
                                                                                            maxV,br,tr);leftbottom =1         -interpolateX(minV,tl,bl);topleft =interpolateX(minV,tl,tr);topright =interpolateX(maxV,tl,tr);edges.push(isoBandEdgeRB[cval]);edges.push(isoBandEdgeLB[cval]);}else if (cval ===133){rightbottom =1 -interpolateX(minV,tr,br);leftbottom =interpolateX(maxV,bl,tl);topleft =1 -interpolateX(maxV,tr,tl);topright =1 -interpolateX(minV,tr,tl);edges.push(isoBandEdgeRB[cval]);edges.push(isoBandEdgeLB[cval]);}else if (cval ===148){bottomright =interpolateX(minV,bl,br);leftbottom =interpolateX(minV,bl,tl);lefttop =interpolateX(maxV,bl,tl);topright =1 -interpolateX(maxV,tr,tl);edges.push(isoBandEdgeBR[cval]);edges.push(isoBandEdgeLT[cval]);}else if (cval ===22){bottomright         =1 -  interpolateX( maxV,br,bl);leftbottom =1  -                                                                                                                                              interpolateX( maxV,tl,bl);lefttop = 1 -interpolateX(minV,tl,bl);topright =interpolateX(minV,tl,tr);edges.push(isoBandEdgeBR[cval] );edges.push(isoBandEdgeLT[cval]);}else if ( cval ===82){ righttop  =interpolateX(minV,br,tr);bottomright =1 -interpolateX(minV,br,bl);bottomleft =1 - interpolateX(maxV,br,bl);lefttop =1 -interpolateX(maxV,tl,bl);edges.push(isoBandEdgeRT[ cval]);edges. push(isoBandEdgeBL[cval]);}else if (cval ===88) {righttop =1 -interpolateX(maxV,tr,br)    ;bottomright      =                                                                                          interpolateX(maxV,bl,br);bottomleft  = interpolateX(minV,bl, br);lefttop   =    interpolateX( minV,                                                                                                                                                                                                                                                                                                                                                                                                                     bl,tl);edges.push( isoBandEdgeRT[cval]);edges. push(isoBandEdgeBL[cval]);}else if (cval ===    73){righttop =1 -interpolateX(minV,                                                                                                                                                                                                                                                     tr,  br)    ;rightbottom =1 -interpolateX(maxV,tr,br);bottomleft =interpolateX(maxV,bl,br);topleft =1 -     interpolateX(                                                                                                                                                                                                                                                                minV,tr,tl);edges.push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeRB[cval]);}else   if (  cval ===97) {                                                                                                                                                                                                                                                          righttop     =interpolateX(maxV,br,tr) ;rightbottom = interpolateX(minV, br,  tr)  ;bottomleft  = 1 -    interpolateX(                                                                                 minV, br,    bl);topleft =interpolateX(maxV,tl,tr);edges.push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeRB[cval]);}else if (cval ===145){righttop =interpolateX(minV,br,tr);bottomleft =1 -interpolateX(minV,br,bl);leftbottom =interpolateX(maxV,bl,tl);topright =1 -interpolateX(maxV,tr,tl);edges.push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeLB[cval]);}else if (cval ===   25){righttop =1 -                                                                                                   interpolateX(maxV,tr,br);bottomleft =interpolateX(maxV,bl,br);leftbottom =1 -interpolateX( minV,tl,bl);topright =interpolateX(minV,tl,tr);edges.push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeLB[ cval]);}else if (cval ===70){rightbottom =1 -interpolateX(minV,tr,br);bottomright =1 -interpolateX(maxV,br,bl);lefttop =1 -interpolateX(maxV,tl,bl);topleft =1 -interpolateX(minV,     tr,tl)       ;edges.     push(                                                                                                    isoBandEdgeRB[ cval] ) ;edges.push(isoBandEdgeBR[cval]) ;}else  if (cval  === 100){rightbottom =interpolateX(  maxV,br,tr);bottomright  = interpolateX(                                 minV, bl,    br);lefttop =interpolateX(minV,bl,tl) ;topleft =interpolateX(maxV,tl,tr);edges.push(isoBandEdgeRB[cval]);edges.push(isoBandEdgeBR[cval]);}else if (cval ===34){ if (flipped ===0){righttop =1 - interpolateX(minV,tr,br);rightbottom =1 -interpolateX(maxV,tr,br);bottomright  =interpolateX(maxV,bl,br);bottomleft =interpolateX(minV,bl,br);leftbottom =interpolateX(     minV,    bl,  tl)                                                                                                                                                                       ;lefttop =interpolateX(maxV, bl,tl) ;topleft =1 -interpolateX( maxV, tr,tl) ;topright =1 -interpolateX( minV,tr,tl)  ;} else {righttop  =interpolateX(maxV,br, tr)       ;rightbottom         =                                                                                                                                                                                          
                                                                                             interpolateX(minV, br, tr)        ;bottomright =1 -interpolateX(minV,br,bl);bottomleft =1 -interpolateX( maxV,br,bl);leftbottom =1 -interpolateX(maxV,tl,bl);lefttop =1 -interpolateX(minV,tl,bl);topleft = interpolateX(minV,tl,tr);topright =interpolateX(maxV,tl,tr);}edges.push( isoBandEdgeRT[cval]);edges.push(isoBandEdgeRB[cval]);edges.push(isoBandEdgeLB[cval]);edges.push(isoBandEdgeLT[cval]);}else if (cval ===35){ if (flipped ===4){righttop =1  -interpolateX(minV,tr,br);rightbottom = 1 -interpolateX(maxV,tr,br);bottomright = interpolateX(maxV,bl,br);bottomleft =interpolateX(minV,bl,br);leftbottom =interpolateX(minV,bl,tl);lefttop =interpolateX(maxV,bl,tl);topleft =1 -interpolateX(maxV,tr,tl)        ;topright = 1 -interpolateX(minV,tr,tl);}else {                                                                                                                                                righttop =    interpolateX(maxV,br,tr);rightbottom = interpolateX(minV,br,tr);bottomright =1 -interpolateX(minV,br,bl) ;bottomleft =1 -interpolateX(maxV,br,bl);leftbottom =1 -interpolateX(maxV,tl,bl);lefttop =1 -interpolateX(minV,tl,bl);topleft =interpolateX(minV,tl,tr);topright =interpolateX(maxV,tl,tr);}edges.push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeRB[cval]);edges.push(isoBandEdgeBL[cval]);edges.push(isoBandEdgeLT[cval]);}else if (cval ===136){if (flipped     ===0) {righttop  =                                                                                       interpolateX(maxV,br,tr);rightbottom =interpolateX(minV,br,tr);bottomright =1 -     interpolateX(minV,                                                                                                                                                                                                                                                                                                                                                                                                                    br, bl);bottomleft =1 -interpolateX(maxV,br, bl) ;leftbottom =1 -interpolateX( maxV,tl,bl)    ;lefttop =1 -interpolateX( minV,tl,                                                                                                                                                                                                                                                    bl);topleft =   interpolateX( minV,   tl, tr);topright  = interpolateX(maxV,tl,tr);} else { righttop =  1 -     interpolateX(                                                                                                                                                                                                                                                               minV, tr,br);rightbottom  =1 -interpolateX(maxV,tr,br);bottomright =interpolateX(    maxV,    bl,   br)                                                                                                                                                                                                                                                           ;bottomleft =interpolateX(minV, bl,br);leftbottom =interpolateX(minV, bl, tl) ;lefttop =interpolateX(   maxV,bl,                                                                                             tl)     ;topleft =1 -interpolateX(maxV,tr,tl);topright =1 -interpolateX(minV,tr,tl);}edges.push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeRB[cval]);edges.push(isoBandEdgeLB[cval]);edges.push(isoBandEdgeLT[cval]);}else if (cval ===153){if (flipped ===0){righttop =interpolateX(minV,br,tr);bottomleft =1 -interpolateX(minV,br,bl);leftbottom =1 -interpolateX(minV,    tl,bl);topright =                                                                                                   interpolateX(minV,tl,tr) ;}else { righttop =1 -interpolateX(maxV,tr,br);bottomleft =interpolateX(maxV,bl,br);leftbottom =interpolateX(maxV, bl,tl);topright =1 -interpolateX(maxV,tr,tl);}edges.push( isoBandEdgeRT[ cval]);edges.push(isoBandEdgeBL[cval]);}else if (cval ===102){if (flipped ===0){rightbottom =1 - interpolateX(minV,tr, br);bottomright =interpolateX(minV,bl,br)    ;lefttop  =interpolateX(minV,bl,                                                                                                        tl)     ;topleft =1 -interpolateX(minV,tr,tl);}else {rightbottom =interpolateX(maxV,br,tr);bottomright =1 -interpolateX(maxV,br,   bl);lefttop =                                          1  -     interpolateX(maxV,tl,bl);topleft =interpolateX(maxV,tl,tr);}edges.push(isoBandEdgeRB[cval]);edges.push(isoBandEdgeLT[cval]);}else if (cval ===155){if (flipped ===4){righttop =interpolateX(minV,br,tr);bottomleft =1 -interpolateX(minV,br,bl);leftbottom =1 -interpolateX(minV,tl,bl);topright  =interpolateX(minV,tl,tr);}else {righttop =1 -interpolateX(maxV,tr,      br);bottomleft =                                                                                                                                                                        interpolateX( maxV,bl,br);leftbottom =interpolateX(maxV,bl,tl);topright =1 -interpolateX(maxV,tr,tl);}edges.push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeLB[cval]);} else if (cval ===103){if (                                                                                                                                                                                      
                                                                                               flipped ===4){rightbottom         =1 -interpolateX(minV, tr,br);bottomright =interpolateX(minV,bl,  br);lefttop =interpolateX(minV,bl,tl);topleft =1 -interpolateX(minV, tr,tl);}else {rightbottom =interpolateX(maxV,br,tr);bottomright =1 -interpolateX(maxV,br,bl);lefttop =1  -interpolateX(maxV,tl,bl);topleft =interpolateX(maxV, tl,tr);}edges.push(isoBandEdgeRB[ cval]);edges.push(isoBandEdgeBR[cval] );}else if  (cval ===152){if (flipped === 0){righttop =interpolateX(minV,br,tr);bottomright =1 -interpolateX(minV,br,bl);bottomleft =1 -interpolateX(maxV,br,bl);leftbottom =1 -interpolateX(maxV,tl, bl);lefttop =1  -interpolateX(minV,tl,bl);topright =interpolateX(minV,tl,tr);}else {righttop =1 -           interpolateX(  maxV,    tr,br) ;bottomright  =                                                                                                                                                 interpolateX(  maxV,bl,br);bottomleft =interpolateX(minV,bl,br);leftbottom =interpolateX(minV,bl,tl);lefttop =interpolateX(maxV,bl,tl);topright =1 -interpolateX(maxV,tr,tl);}edges.push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeBR[cval]);edges.push(isoBandEdgeBL[cval]);}else if (cval ===156){if (flipped === 4){righttop = interpolateX(minV,br,tr);bottomright =1 -interpolateX(minV,br,bl);bottomleft =1 -interpolateX(maxV,br,bl);leftbottom =1 -interpolateX(maxV,tl,bl)     ;lefttop  =  1   -                                                                                       interpolateX(minV,tl,bl);topright =interpolateX(minV,tl,tr);}else {righttop =1 -   interpolateX( maxV,                                                                                                                                                                                                                                                                                                                                                                                                                  tr,br);bottomright =interpolateX(maxV,bl,br);bottomleft =interpolateX(minV,bl,br);leftbottom    =interpolateX(minV,bl,tl);lefttop =                                                                                                                                                                                                                                                     interpolateX(   maxV,bl,tl);topright =1 -  interpolateX(maxV,tr,tl);}edges.push(isoBandEdgeRT[cval]);edges.     push(                                                                                                                                                                                                                                                                      isoBandEdgeBL[cval]);edges. push(isoBandEdgeLT[cval]);}else if (cval ===137){if (      flipped  === 0){                                                                                                                                                                                                                                                            righttop    =  interpolateX(  maxV,  br,tr) ;rightbottom =interpolateX(minV,br,tr) ;bottomleft  =1  -   interpolateX(                                                                                   minV, br,    bl);leftbottom =1 -interpolateX(minV,tl,bl);topleft =interpolateX(minV,tl,tr);topright =interpolateX(maxV,tl,tr);}else {righttop =1 -interpolateX(minV,tr,br);rightbottom =1 -interpolateX(maxV,tr,br);bottomleft =interpolateX(maxV,bl,br);leftbottom =interpolateX(maxV, bl,tl);topleft =1 -interpolateX(maxV,tr, tl) ;topright =1  -interpolateX(minV,tr,tl);}        edges.   push(                                                                                                  isoBandEdgeRT[cval]);edges.push(isoBandEdgeRB[cval]);edges.push(isoBandEdgeBL[cval]);}else if (cval ===139){if (flipped ===4){righttop =interpolateX(maxV,br,tr);rightbottom =interpolateX( minV,br,tr);bottomleft =1 -interpolateX(minV,br,bl);leftbottom =1 -interpolateX(minV,tl, bl);topleft =interpolateX(minV,tl,tr);topright =interpolateX(maxV,tl,tr) ;}else { righttop =1 -       interpolateX(  minV,   tr,br)                                                                                                      ;rightbottom =1 -interpolateX(maxV,tr,br);bottomleft = interpolateX(maxV,bl, br) ;leftbottom =interpolateX(maxV,bl,tl);topleft  = 1 -    interpolateX(                                     maxV,tr,    tl);topright =1 -interpolateX(minV,tr,tl);}edges.push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeRB[cval]);edges.push(isoBandEdgeLB[cval]);}else if (cval ===98){if (flipped ===0){righttop =1 -interpolateX(minV,tr,br);rightbottom =1 -interpolateX(maxV,tr,br);bottomright =interpolateX(maxV,bl,br);bottomleft =interpolateX(minV,bl,br);lefttop  =interpolateX(     minV,  bl,    tl)                                                                                                                                                                        ;topleft =1 -interpolateX(minV,tr,tl);} else {righttop =interpolateX(maxV,br,tr);rightbottom =interpolateX(minV,br,tr);bottomright  = 1 -interpolateX(minV,br,bl)       ;bottomleft     = 1 -                                                                                                                                                                                           
                                                                                                interpolateX( maxV,br,bl)         ;lefttop =1 -interpolateX(maxV,tl,bl);topleft =interpolateX(maxV,tl,tr);}edges.push(isoBandEdgeRT[cval]);edges.push(isoBandEdgeRB[cval]);edges.push(isoBandEdgeLT[cval]);}else if (cval ===99){if (flipped ===4){righttop =1 -interpolateX( minV,tr,br);rightbottom =1 -interpolateX(maxV,tr, br);bottomright =interpolateX(maxV,bl,br);bottomleft =interpolateX(minV,bl,br);lefttop =interpolateX(minV,bl,tl);topleft =1 -interpolateX(minV,tr,tl);}else {righttop =interpolateX(maxV,br,tr);rightbottom =interpolateX(minV,br,tr);bottomright  =1 -interpolateX(minV,br,bl);bottomleft  =1 -interpolateX(maxV,br,bl);lefttop =1 -interpolateX(maxV,tl,bl);topleft =interpolateX(         maxV,tl,tr) ;}edges.push( isoBandEdgeRT[cval]  )                                                                                                                                                   ;edges.push(     isoBandEdgeRB[cval]);edges.push(isoBandEdgeBL[cval]);}else if (cval ===38){if (flipped ===0){rightbottom =1 -interpolateX(minV,tr,br);bottomright =interpolateX(minV,bl,br);leftbottom =interpolateX(minV,bl,tl);lefttop =interpolateX(maxV,bl,tl);topleft =1 -interpolateX(maxV,tr,tl);topright =1 -interpolateX(minV,tr,tl);}else {rightbottom =interpolateX(maxV,br,tr);bottomright =1 -interpolateX(maxV,br,bl);leftbottom =1 -interpolateX(maxV,tl,bl);lefttop    =1 -  interpolateX(                                                                                       minV,tl, bl);topleft =interpolateX(minV, tl,tr);topright =interpolateX(maxV,tl,     tr)  ;}edges.push(                                                                                                                                                                                                                                                                                                                                                                                                                  isoBandEdgeRB[cval]);edges.push(isoBandEdgeLB[cval]);edges.push(isoBandEdgeLT[cval]);}else    if (cval ===39) {if (flipped ===4){                                                                                                                                                                                                                                                        rightbottom =   1 -interpolateX(minV,tr,br);bottomright =interpolateX( minV,bl,br);leftbottom =interpolateX(     minV,                                                                                                                                                                                                                                                                    bl, tl);lefttop =interpolateX(maxV,bl,tl);topleft =1 -interpolateX(  maxV,tr, tl)      ;topright = 1  -                                                                                                                                                                                                                                                             interpolateX( minV, tr,tl);}else { rightbottom =interpolateX(maxV,br,tr) ;bottomright =1 -interpolateX(   maxV,                                                                                         br,   bl)    ;leftbottom =1 -interpolateX(maxV,tl,bl);lefttop =1   -interpolateX(minV,tl,bl);topleft =interpolateX(minV,tl,tr);topright  =interpolateX(maxV,tl,tr);} edges.push(isoBandEdgeRB[cval] );edges.push(isoBandEdgeBR[cval]);edges.push(isoBandEdgeLT[cval]);}else if (cval ===85){righttop =1;rightbottom  =0;bottomright = 1;bottomleft =0;leftbottom =0;lefttop =      1;topleft      =                                                                                                  0;topright  =1;}if  (topleft <0 ||topleft >1 ||topright <0 ||topright > 1 ||righttop <0 ||righttop >1 || bottomright <0 ||bottomright >1 ||leftbottom <0 ||leftbottom >1 ||lefttop <0 ||lefttop >1){console.log("MarchingSquaresJS-isoBands: "+cval +" "+cval_real +" "+tl +","+tr + ","+br +"," +bl +" "+flipped + " "+topleft +" " +topright +" "+righttop +" "+rightbottom +" "+   bottomright + " "+bottomleft +" "+                                                                                                       leftbottom  +" "+lefttop);}BandGrid.cells[j][i]={cval: cval,cval_real:cval_real,flipped:flipped,topleft:topleft,topright:topright,         righttop:                                      righttop,    rightbottom:rightbottom,bottomright:bottomright,bottomleft:bottomleft,leftbottom:leftbottom,lefttop:lefttop,edges:edges  };}}}return BandGrid;}function BandGrid2AreaPaths(grid){var areas =[];var rows =grid.rows;var cols =grid.cols;var currentPolygon =[ ];for (var j =0;j <rows;j++ ){for (var i =0;i <cols;i++ ){if (typeof  grid.cells[j][i]!=="undefined"&&    grid.cells[j][ i].                                                                                                                                                                         edges. length >0){var cell =grid.cells[j][i];var prev =getStartXY(cell),next =null,p =i,q =j;if (prev !==null){currentPolygon.push([prev.p[0]+p,prev.p[1]+q])    ;}do {next =getExitXY(grid.                                                                                                                                                                                           
                                                                                                 cells[q][p],prev.x,prev.y,        prev.o);if (next !==null){currentPolygon.push([next.p[0]+p,next.p[1]+q]);p  +=next.x;q +=next.y;prev =next;}else {break ;}if (q <0 ||q >=rows ||p <0 ||p >=cols ||typeof grid.cells[q][p]==="undefined"){p -=next.x;q -=next.y;var missing =traceOutOfGridPath(grid,p,q,next.x,next.y,next.o);if (missing !==null){missing.path.forEach(function (pp){currentPolygon.push(pp);});p =missing.i;q =missing.j;prev =missing;}else {break ;}}}while (typeof grid.cells[q][p]!=="undefined"&&grid.cells[q][p].edges.length >0);areas.push(currentPolygon);currentPolygon =[];if (grid.cells[j][i].edges.length >0)i-- ;}}}return areas;}function traceOutOfGridPath(grid,i,j,d_x,d_y,         d_o){var cell =grid.cells[j][i];var cval =cell.                                                                                                                                                      cval_real;var   p =i +d_x,q =j +d_y;var path =[];var closed =false;while (!closed){if (typeof grid.cells[q]==="undefined"||typeof grid.cells[q][p]==="undefined"){q -=d_y;p -=d_x;cell =grid.cells[q][p];cval =cell.cval_real;if (d_y === -1){if (d_o ===0){if (cval &Node3){path.push([p,q]);d_x = -1;d_y =0;d_o =0;}else if (cval &Node2){path.push([p +1,q]);d_x =1;d_y =0;d_o =0;}else {path.push([p +cell.bottomright,q]);d_x =0;d_y =1;d_o =1;closed =true;break ;}}else if (    cval &Node3){ path.                                                                                       push([p,q]);d_x = - 1;d_y =0;d_o =0;}else if (cval &Node2){path. push([p +cell.    bottomright,q]);d_x                                                                                                                                                                                                                                                                                                                                                                                                                =0;d_y =1;d_o =1;closed =true;break ;}else { path.push([p +cell.bottomleft,q]);d_x  =0;d_y =   1;d_o =0;closed =true;break ;}}else                                                                                                                                                                                                                                                            if (d_y ===   1){if (d_o ===0){if (cval &Node1){path.push([ p +1,q +1]);d_x =1;d_y =0;d_o =1;}else  if (!(     cval                                                                                                                                                                                                                                                                     & Node0)){path.push([p +cell.topright,q +1]);d_x = 0;d_y   = -1;d_o = 1;closed =   true;break ;}else {                                                                                                                                                                                                                                                                path.    push([p +cell.topleft,q +1]);d_x =0;d_y = -1;d_o =0;closed =true;break ;}}else if (cval &    Node1){                                                                                       path.push([p    +1,q +1]);d_x =1;d_y =0;d_o =1;}else {path.push( [p +1,q +1]);d_x =1;d_y =0;d_o =1;}} else if (d_x === -1) {if (d_o ===0){if (cval &Node0){path.push([p,q +1]);d_x =0;d_y =1;d_o =0;}else if (!(cval &Node3)){path. push([p,q +cell.lefttop]);d_x =1;d_y =0;d_o =1;closed = true;break ;}else {path.push([p,q +cell.leftbottom]);d_x =1;d_y =0;d_o =0;closed =    true;break ;}}else                                                                                                  {if (cval &Node0){path.push([p,q +1]);d_x =0;d_y =1;d_o =0;}else {console.log("MarchingSquaresJS-isoBands: wtf");break ;}}}else if (d_x ===1){if (d_o ===0){if (cval &Node2){path.push([p +1,q]);d_x =0;d_y = -1;d_o =1;}else {path.push([p +1,q +cell.rightbottom]);d_x = -1;d_y =0;d_o =0;closed =true;break ;}}else {if (cval &Node2){path.push([p +1,q]);d_x =0;d_y = -1;d_o =   1;}else  if (!(cval &Node1)){path.                                                                                                        push([p +    1,q +cell.rightbottom]);d_x =  -1;d_y =0;d_o =0;closed =true;break ;}else {path.push([p +1,q +cell.righttop]);d_x = -  1;d_y =0;d_o    =                                    1;break ;}}}    else {console.log("MarchingSquaresJS-isoBands: we came from nowhere!");break ;}}else {cell =grid.cells[q][p];cval =cell.cval_real;if (d_x === -1){if (d_o ===0){if (typeof grid.cells[q -1]!=="undefined"&&typeof grid.cells[q -1][p]!=="undefined"){d_x =0;d_y = -1;d_o =1;}else if (cval &Node3){path.push([p,q]);}else {path.push([p +cell.bottomright,q]);d_x    =  0;d_y = 1;d_o =                                                                                                                                                                          1;closed  =  true;break   ;}} else  if     (cval   &  Node0)    { console.log("MarchingSquaresJS-isoBands: proceeding in x-direction!"  );}else { console.log( "MarchingSquaresJS-isoBands: found entry from top at "                                                                                                                                                                 
                                                                                                   +p +","+q);break ;}}else if       (d_x ===1){if (d_o ===0){console.log("MarchingSquaresJS-isoBands: wtf");break ;}else {if (typeof grid.cells[q +1]!=="undefined"&&typeof grid.cells[q +1][p]!=="undefined"){d_x =0;d_y =1;d_o =0;}else if (cval &Node1){path.push([p +1,q +1]);d_x =1;d_y =0;d_o =1;}else {path.push([p +cell.topleft,q +1]);d_x =0;d_y = -1;d_o =0;closed =true;break ;}}}else if (d_y === -1){if (d_o ===1){if (typeof grid.cells[q][p +1]!=="undefined"){d_x =1;d_y =0;d_o =1;}else if (cval &Node2){path.push([p +1,q]);d_x =0;d_y = -1;d_o =1;}else {path.push([p +1,q +cell.righttop]);d_x = -1;d_y =0;d_o =1;closed =true;break ;}}else {console.log("MarchingSquaresJS-isoBands: wtf")        ;break ;}}else if ( d_y ===1){if (d_o ===0){if (                                                                                                                                                        typeof  grid.    cells[q][p -1]!=="undefined"){d_x = -1;d_y =0;d_o =0;}else if (cval &Node0){path.push([p,q +1]);d_x =0;d_y =1;d_o =0;}else {path.push([p,q +cell.leftbottom]);d_x =1;d_y =0;d_o =0;closed =true;break ;}}else {console.log("MarchingSquaresJS-isoBands: wtf");break ;}}else {console.log("MarchingSquaresJS-isoBands: where did we came from???");break ;}}p +=d_x;q +=d_y;if (p ===i &&q ===j){break ;}}return {path:path,i:p,j:q,x:d_x,y: d_y,o:d_o };}function    deleteEdge(   cell,                                                                                        edgeIdx){delete cell.edges[edgeIdx];for (var k =edgeIdx  +1; k < cell.  edges.    length;k++  ){cell.                                                                                                                                                                                                                                                                                                                                                                                                               edges[ k -1]=cell.edges[k] ;} cell.edges.pop();} function getStartXY(cell){ if (cell.edges.    length  >0){var e =cell.edges[cell.                                                                                                                                                                                                                                                             edges.length   -1];var cval =cell.cval_real;switch (e){case 0:if (cval &Node1){return {p:[1,cell.righttop],     x: -                                                                                                                                                                                                                                                                   1,y:0,o:1 };}else {return {p:[cell.topleft, 1],x:0,y: -1,o:0 };}case 1:if (cval &   Node2){ return {p:[                                                                                                                                                                                                                                                                 cell.    topleft,1],x:0,y: -1,o:0 };}else {return {p:[1,cell.rightbottom],x: -1,y:0,o:0 };}case 2:    if (cval                                                                                       &Node2)   {    return {p:[cell. bottomright,0],x:0,y:1,o:1 };}else {return {p:[cell.topleft, 1],x:0,y: -1,o:0 };}case 3:if (cval &Node3){return {p:[cell.topleft,1],x:0,y: -1,o:0 };}else {return {p:[cell.bottomleft,0],x:0,y:1,o:0 };}case 4:if (cval &Node1){return {p:[1,cell.righttop],x: -1,y:0,o:1 };}else {return {p:[cell.topright, 1],x:0,y: -1,o:1 };}case 5:if (    cval   &  Node2) {                                                                                                  return {p:[cell.topright,1],x:0,y: -1,o:1 };}else {return {p:[1,cell.rightbottom],x: -1,y:0,o:0 };}case 6:if (cval & Node2){return { p:[cell.bottomright,0],x:0,y:1,o:1  };}else {return {p:[cell.topright,1] ,x:0,y: -1,o:1 };}case 7:if (cval &Node3){return {p:[cell.topright,1],x:0,y: -1,o:1 };}else {return {p:[cell.bottomleft,0],x:0,y:1,o:0 };}case 8:if (cval &Node2){   return {p:[cell.bottomright,0],x:0,                                                                                                         y:1,o:1  }    ;}else {return  {p:[1,cell.righttop],x: -1,y:0,o:1 };}case 9:if (cval &Node3){return {p:[1,cell.righttop],x: -1,y:0,   o: 1 } ;}  else {                                    return  {p:[     cell.bottomleft,0],x:0,y:1,o:0 };}case 10:if (cval &Node3){return {p:[0,cell.leftbottom],x:1,y:0,o:0 };}else {return {p:[1,cell.righttop],x: -1,y:0,o:1 };}case 11:if (cval &Node0){return {p:[1,cell.righttop],x: -1,y:0,o:1 };}else {return {p:[0,cell.lefttop],x:1,y:0,o:1 };}case 12:if (cval &Node2){return {p:[cell.bottomright,0],x:0,y:1, o:1 };}else {    return {p:[1,cell.                                                                                                                                                                          rightbottom] ,x: -1,y:0,o:0 };}case 13:if (cval &Node3){return {p:[1,cell.rightbottom],x: -1,y:0,o:0 };}else {return {p:[cell.bottomleft,0],x:0,y:1,o:0 };}case 14: if (cval &Node3){return {p:                                                                                                                                                                                       
                                                                                                    [0,cell.leftbottom],x:1,y:         0,o:0 };}else {return {p:[1,cell.rightbottom],x: -1,y:0,o:0 };}case 15:if (cval &Node0){return {p:[1,cell.rightbottom],x: -1,y:0,o:0 };}else {return {p:[0,cell.lefttop],x:1,y:0,o:1 };}case 16:if (cval &Node2){return {p:[cell.bottomright,0],x:0,y:1,o:1 };}else {return {p:[0,cell.leftbottom],x:1,y:0,o:0 };}case 17:if (cval &Node0){return {p:[cell.bottomright,0],x:0,y:1,o:1 };}else {return {p:[0,cell.lefttop],x:1,y:0,o:1 };}case 18:if (cval &Node3){return {p:[0,cell.leftbottom],x:1,y:0,o:0 };}else {return {p:[cell.bottomleft,0],x:0,y:1,o:0 };}case 19:if (cval &Node0){return {p:[cell.bottomleft,0],x:0,y:1,o:0 };}else {return {p:[0,cell.lefttop],        x:1,y:0,o:1 };}case 20:if (cval &Node0){return  {                                                                                                                                                           p:  [   cell.    topleft,1],x:0,y: -1,o:0 };}else {return {p:[0,cell.leftbottom],x:1,y:0,o:0 };}case 21:if (cval &Node1){return {p:[0,cell.leftbottom] ,x:1,y:0, o:0 };}else {return {p:[cell.topright,1],x:0,y: -1,o:1 };}case 22:if (cval &Node0){return {p:[cell.topleft,1],x:0,y: -1,o:0 };}else {return {p:[0,cell.lefttop],x:1,y:0,o:1 };}case 23:if (cval &Node1){return {p:[ 0,cell.lefttop],x:1,y:0,o:1 };} else {return {p:[cell.topright,1],x:0,y: -1,o:1 };}default:           console.log(                                                                                        "MarchingSquaresJS-isoBands: edge index out of range!" );console.   log( cell)       ;break    ;}   }                                                                                                                                                                                                                                                                                                                                                                                                               return  null;} function  getExitXY( cell,x,y,o) { var e, id_x,d_x, d_y,cval =cell.cval;var    d_o;switch (x){case -1:switch (o){                                                                                                                                                                                                                                                                case  0: e =   isoBandEdgeRB[cval];d_x =isoBandNextXRB[cval];d_y =isoBandNextYRB[cval];d_o =isoBandNextORB[     cval]                                                                                                                                                                                                                                                                   ;break    ;default:e  =   isoBandEdgeRT[cval];d_x  =isoBandNextXRT[ cval];d_y =      isoBandNextYRT[                                                                                                                                                                                                                                                                   cval]    ;d_o =isoBandNextORT[cval];break ;}break ;case 1:switch (o){case 0:e =isoBandEdgeLB[cval]     ;d_x =                                                                                      isoBandNextXLB[  cval];d_y =isoBandNextYLB[cval];d_o  =isoBandNextOLB[cval];break ;default: e = isoBandEdgeLT[cval];d_x =isoBandNextXLT[cval];d_y = isoBandNextYLT[cval];d_o =isoBandNextOLT[ cval];break ;}break  ;default:switch (y){case -1:switch ( o){case 0:e  = isoBandEdgeTL[  cval] ;d_x =isoBandNextXTL[cval];d_y = isoBandNextYTL[cval] ;d_o =isoBandNextOTL[cval]    ;break ;default:e =                                                                                                 isoBandEdgeTR[cval];d_x =isoBandNextXTR[cval];d_y =isoBandNextYTR[cval];d_o =isoBandNextOTR[cval];break ;}break ;case 1:switch (o){case 0:e =isoBandEdgeBL[cval];d_x =isoBandNextXBL[ cval];d_y =isoBandNextYBL[cval];d_o =isoBandNextOBL[cval];break ;default: e =isoBandEdgeBR[cval] ;d_x =isoBandNextXBR[cval];d_y =isoBandNextYBR[cval];d_o =isoBandNextOBR[cval];break ;}     break ;}break ;}id_x = cell.edges.                                                                                                            indexOf(e)   ;if (typeof cell.edges[id_x]!=="undefined"){deleteEdge(cell,id_x);}else {return null;}cval =cell.cval_real;switch (  e){case 0:if (cval                                      &Node1) {x =    cell.topleft;y =1;}else {x =1;y =cell.righttop;}break ;case 1:if  (cval &Node2){x =1;y =cell.rightbottom;}else {x = cell.topleft;y =1;}break ;case 2:if (cval &Node2){ x =cell.topleft;y =1;} else {x =cell. bottomright;y =0;}break ;case 3:if ( cval &Node3){x = cell.bottomleft;y =0;}else {x  =cell. topleft;y =1;}break ;case 4:if (cval &Node1){x =cell.    topright;y =1;}else                                                                                                                                                                          {x     =1;y =cell.righttop;}break ;case 5:if (cval &Node2){x =1;y =cell.rightbottom;}else {x =cell.topright;y =1;}break ;case 6:if (cval &Node2){x =cell.    topright;y  =1;}  else {x =                                                                                                                                                                                             
                                                                                                       cell.bottomright;y   =0;}        break ;case 7:if (cval &Node3){x =cell.bottomleft;y =0;}else {x =cell.topright;y =1;}break ;case 8:if (cval &Node2){x =1;y =cell.righttop;}else {x =cell.bottomright;y =0;}break ;case 9:if (cval &Node3){x =cell.bottomleft;y =0;}else {x  =1;y =cell.righttop;}break ;case 10:if (cval &Node3){x =1;y =cell.righttop;}else {x =0;y =cell.leftbottom;}break ;case 11:if (cval &Node0){x =0;y =cell.lefttop;}else {x =1;y =cell.righttop;}break ;case 12:if ( cval &Node2){x =1;y =cell.rightbottom;}else {x =cell.bottomright;y =0;}break ;case 13:if (cval &Node3){x =cell.bottomleft;y =0;}else {x =1;y =cell.rightbottom;}break ;case 14:if (cval &Node3){x =1;y =         cell.rightbottom;}else {x =0;y =cell.leftbottom;}                                                                                                                                                            break ;case 15:    if (cval &Node0){x = 0;y =cell.lefttop;}else {x =1;y =cell.rightbottom;}break ;case 16:if (cval &Node2){x =0;y =cell.leftbottom;}else {x =cell.bottomright;y =0;}break ;case 17:if (cval &Node0){x =0;y =cell.lefttop;}else {x =cell.bottomright;y =0;}break ;case 18:if (cval &Node3){x =cell.bottomleft;y =0;}else {x =0;y =cell.leftbottom;}break ;case 19:if (cval &Node0){x =0;y =cell.lefttop;}else {x =cell.bottomleft;y =0;}break ;case 20:if (cval &      Node0){ x = 0;y =                                                                                       cell.leftbottom;}else {x =cell.topleft;y =1;}break ;case 21:if (cval &Node1){x =     cell.topright;y =                                                                                                                                                                                                                                                                                                                                                                                                            1;}else {x =0;y =cell.leftbottom;}break ;case 22:if (cval &Node0){x =0;y =cell.lefttop;}else    { x =cell.topleft;y =1;}break ;case                                                                                                                                                                                                                                                                 23:if (cval &   Node1){x =cell. topright;y = 1;}else { x  =0;y =cell. lefttop;} break  ;default:console.log(    "MarchingSquaresJS-isoBands: edge index out of range!"                                                                                                                                                                                                               );console.log(cell);return null;}if  ( typeof x ==="undefined" ||typeof  y    ===     "undefined"   ||                                                                                                                                                                                                                                                                   typeof    d_x ==="undefined"||typeof d_y  ==="undefined"||typeof d_o ==="undefined"  ){console.log(    "MarchingSquaresJS-isoBands: undefined value!"                                                );console.log(   cell);console.log(x +" "+y +" "+d_x +" "+d_y +" "+d_o);}return {p:[x,y],x:d_x,y:d_y,o:d_o };}function BandGrid2Areas(grid) { var areas =[];var area_idx  =0;grid.cells.forEach(function (g,j){g.forEach(function (gg,i){if (typeof gg !=="undefined"){var a =polygon_table[gg.cval](gg);if (typeof a ==="object"&&isArray(a)){if (typeof a[0]==="object"&&    isArray(a[0])){if (                                                                                                  typeof a[0]  [ 0]  ==="object"&&isArray(a[ 0][ 0] )){a.  forEach(function  (aa){aa.forEach(function ( aaa){aaa[0] +=i;aaa[ 1]+=j;} );areas[  area_idx++ ]=aa;}  );}else {a.forEach( function (aa) {  aa[0] += i;aa[1] +=j;});areas[ area_idx++  ]=a;}} else {console. log("MarchingSquaresJS-isoBands: bandcell polygon with malformed coordinates");} } else {console.log(    "MarchingSquaresJS-isoBands: bandcell polygon with null coordinates"                                                                             );}} });} )        ;return   areas;}function isobands(pointGrid,  breaks, options)  {   options =options  || {}   ;if   (  !( 0,  _turf_helpers__WEBPACK_IMPORTED_MODULE_5__.             isObject)    (    options))throw  new Error("options is invalid");var zProperty =options.zProperty ||"elevation" ;var  commonProperties =options.commonProperties  ||{};var breaksProperties =  options. breaksProperties ||[ ] ;( 0,_turf_invariant__WEBPACK_IMPORTED_MODULE_4__.collectionOf)(pointGrid,"Point" ,"Input must contain Points");if (!breaks) throw  new Error(    "breaks is required"                                                                                                                                                                           )    ;if  ( !Array. isArray( breaks))  throw new Error(  "breaks is not an Array");if ( !  (  0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.isObject)  (   commonProperties))throw new                                                                                                                                                                                              
                                                                                                                           Error(         "commonProperties is not an Object");if ( !Array.isArray( breaksProperties))throw new Error("breaksProperties is not an Array");var matrix =gridToMatrix( pointGrid,{zProperty:zProperty,flip:true });var contours =createContourLines(matrix,breaks,zProperty);contours = rescaleContours(contours,matrix,pointGrid) ;var multipolygons  =contours.map( function ( contour,index){if ( breaksProperties[index]&& !(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__. isObject)(breaksProperties[index])){throw  new Error( "Each mappedProperty is required to be an Object");}var contourProperties =object_assign__WEBPACK_IMPORTED_MODULE_6__({} ,commonProperties,         breaksProperties[index]    )  ;contourProperties[                                                                                                                                                                zProperty]  =      contour[zProperty];var multiP =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.multiPolygon)( contour.groupedRings,contourProperties);return multiP;} );return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.featureCollection) (multipolygons);}function createContourLines( matrix,breaks,property){var contours =[];for (var i =1; i <breaks.length;i++ ){var  lowerBand = +breaks[i -1] ;var upperBand = +breaks[i];var isobandsCoords =isoBands(matrix,    lowerBand,upperBand                                                                                       -  lowerBand);var nestedRings  =orderByArea(isobandsCoords) ;var groupedRings =      groupNestedRings(                                                                                                                                                                                                                                                                                                                                                                                                            nestedRings);var obj ={ };obj[  "groupedRings"]=groupedRings;obj[ property]=lowerBand +"-"+    upperBand;contours. push(obj)   ;}                                                                                                                                                                                                                                                                    return contours;}      function    rescaleContours(  contours,    matrix,  points)   {  var  gridBbox  =   (0,  _turf_bbox__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                                                            "default"])(points);var originalWidth =gridBbox[2]-gridBbox[0];var originalHeigth    =  gridBbox[ 3] -                                                                                                                                                                                                                                                                  gridBbox[  1];var  x0 =gridBbox[0] ;var y0 = gridBbox[1] ;var matrixWidth  =matrix[ 0]. length -1;var   matrixHeight                                                                                   =matrix.length     -1;var scaleX =originalWidth /matrixWidth;var scaleY =originalHeigth /matrixHeight;var resize =function (point) {point[0]=point[0] *scaleX +x0;point[ 1]=point[1]* scaleY +y0;};contours.forEach(function  (contour) {contour.groupedRings. forEach(function (  lineRingSet){ lineRingSet.forEach(function (lineRing){lineRing.forEach(resize);});});})    ;return contours;}                                                                                                  function orderByArea(ringsCoords){var ringsWithArea =[];var areas = [] ;ringsCoords.forEach(function (coords){var ringArea =(0,_turf_area__WEBPACK_IMPORTED_MODULE_1__["default"])((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.polygon)([coords]));areas.push(ringArea);ringsWithArea.push({ring:coords,area:ringArea });});areas.sort(function (a,b){return b -a;});var      orderedByArea =  [ ] ;areas.forEach(                                                                                                               function  (    area){for (var lr =0;lr <ringsWithArea. length; lr++ ){if ( ringsWithArea[lr].area ===area){orderedByArea.push(   ringsWithArea[lr].                                               ring)     ;ringsWithArea. splice(lr,1);break ;}}});return orderedByArea;}function groupNestedRings(orderedLinearRings){var lrList =orderedLinearRings.map(function ( lr){return {lrCoordinates:lr,grouped:false };});var groupedLinearRingsCoords =[];while (!allGrouped(lrList)){for (var i =0;i <lrList.length;i++ ){if (!lrList[i].grouped){var  group =[];group.    push(lrList[  i] .                                                                                                                                                                            lrCoordinates) ;lrList[i].grouped =true;var outerMostPoly =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.polygon)([lrList[i].lrCoordinates]);for (var j =i +1;j < lrList.length;j++ ){ if  (!                                                                                                                                                                                       
                                                                                                        lrList[ j] .  grouped){var          lrPoly =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.polygon)([lrList[j].lrCoordinates]);if (isInside(lrPoly,outerMostPoly)){group.push(lrList[j].lrCoordinates);lrList[j].grouped =true;}}}groupedLinearRingsCoords.push(group);}}}return groupedLinearRingsCoords;}function isInside(testPolygon,targetPolygon){var points =(0,_turf_explode__WEBPACK_IMPORTED_MODULE_3__["default"])(testPolygon);for (var i =0;i <points.features.length;i++ ){if (!(0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_2__["default"])(points.features[i],targetPolygon)){return false;}}return true;}function allGrouped(list){for (var i =0;i <list.length;i++ )         { if (list[ i].grouped ===false){return false;} }                                                                                                                                                                    return true;}    const __WEBPACK_DEFAULT_EXPORT__ =isobands;},"../node_modules/@turf/isolines/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__, __webpack_require__) => {"use strict";__webpack_require__. r( __webpack_exports__);__webpack_require__.d( __webpack_exports__,{ "default": () =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_bbox__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/bbox/dist/es/index.js");var    _turf_meta__WEBPACK_IMPORTED_MODULE_1__                                                                    = __webpack_require__(    "../node_modules/@turf/meta/dist/es/index.js" ) ;var    _turf_invariant__WEBPACK_IMPORTED_MODULE_2__                                                                                                                                                                                                                                                                                                                                                                                      =   __webpack_require__( "../node_modules/@turf/invariant/dist/es/index.js" )      ;var   _turf_helpers__WEBPACK_IMPORTED_MODULE_3__                                                                                                                                                                                                                                                                          =        __webpack_require__(    "../node_modules/@turf/helpers/dist/es/index.js"     )      ;var    object_assign__WEBPACK_IMPORTED_MODULE_4__                                                                                                                                                                                                                            =      __webpack_require__(       "../node_modules/object-assign/index.js"  );   /**
 * @license GNU Affero General Public License.
 * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>
 * v. 1.2.0
 * https://github.com/RaumZeit/MarchingSquares.js
 *
 * MarchingSquaresJS is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MarchingSquaresJS is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * As additional permission under GNU Affero General Public License version 3
 * section 7, third-party projects (personal or commercial) may distribute,
 * include, or link against UNMODIFIED VERSIONS of MarchingSquaresJS without the
 * requirement that said third-party project for that reason alone becomes
 * subject to any requirement of the GNU Affero General Public License version 3.
 * Any modifications to MarchingSquaresJS, however, must be shared with the public
 * and made available.
 *
 * In summary this:
 * - allows you to use MarchingSquaresJS at no cost
 * - allows you to use MarchingSquaresJS for both personal and commercial purposes
 * - allows you to distribute UNMODIFIED VERSIONS of MarchingSquaresJS under any
 *   license as long as this license notice is included
 * - enables you to keep the source code of your program that uses MarchingSquaresJS
 *   undisclosed
 * - forces you to share any modifications you have made to MarchingSquaresJS,
 *   e.g. bug-fixes
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with MarchingSquaresJS.  If not, see <http://www.gnu.org/licenses/>.
 */var defaultSettings =  {successCallback:null,verbose:false  };var settings =  {};function  isoContours(data, threshold, options){options =options ?options :{};var optionKeys =Object.keys(defaultSettings);for (var i =0;i <optionKeys.length; i++ ){var key =optionKeys[i];var val  =options[  key];val =typeof val !=="undefined"&& val !==null ?val :defaultSettings[key];settings[key]=val;}if (settings.verbose)console.log("MarchingSquaresJS-isoContours: computing isocontour for " + threshold);var ret =contourGrid2Paths(computeContourGrid(data,threshold));if (typeof settings.successCallback ==="function")settings.successCallback(ret);return ret;}function interpolateX(y,y0,y1){return (y -y0)/(y1 -y0);}function computeContourGrid(data,threshold){var rows =data.length -1;var cols =data[0].length -1;var ContourGrid ={rows:rows,cols:cols,cells:[]};for (var j = 
0;j <rows; ++j){ContourGrid.cells[j]=[ ];for (var i =0;i  <cols; ++i){var cval  =0;var tl =data[ j +1][i];var tr =data[ j +1][i +1];var br =data[j][i +1];var bl =   data[j][i];if   (  isNaN(   tl)|| isNaN(tr)||isNaN(br)||isNaN(bl)){continue ;}cval |=tl >=threshold ?8 :0;cval |=tr >=threshold ?4 :0;cval |=br >=threshold ?2 :0;cval |=bl >=threshold ?1 :0;var flipped =false;if (cval ===5 ||cval ===10){var average =(tl +tr +br +bl)/4;if (cval ===5 &&average <threshold) {cval =10;flipped =true;}else if (cval ===10 &&average <threshold){cval = 5;flipped =true;}} if ( cval !==0 &&cval !==15){var top,bottom,left,right;top =bottom =left =right =0.5;if (cval ===1){left =1 -interpolateX(threshold,tl,bl);bottom =1  - interpolateX(threshold, br,bl);}else if (cval ===2) {bottom =interpolateX(threshold,bl,br);right =1 -interpolateX(threshold,tr,br);}else if (cval ===3){left =1 -interpolateX(threshold,tl,bl);right =1 -interpolateX(threshold,tr,br);}else if (cval ===4){top =interpolateX(threshold,tl,tr);right =interpolateX(threshold,br,tr);}else if (cval ===5){top =interpolateX(threshold,tl,tr);right =interpolateX(threshold,br,tr);bottom =1 -interpolateX(threshold,br,bl);left =1 -interpolateX(threshold,tl,bl);}else if (cval ===6){bottom =interpolateX(threshold,bl,br);top =interpolateX(threshold,tl,tr);}else if (cval ===7){left =1 -interpolateX(threshold,tl,bl);top =interpolateX(threshold,tl,tr);} else if ( cval ===8){left =interpolateX(threshold,  bl,tl);top =1  - interpolateX(threshold,tr,tl);}else if (cval ===9){bottom = 1 -interpolateX(threshold,br,bl);top =1 -interpolateX(threshold,tr,tl);}else if (cval ===10){top =1 -interpolateX(threshold,tr,tl);right =1 -interpolateX(threshold,tr,br);bottom  = interpolateX(threshold,bl,br) ;left =interpolateX(threshold,bl,tl);}else if (cval ===11) {top =1 -interpolateX(threshold,tr,tl);right =1 -interpolateX(threshold,tr,br) ;}else if (cval ===12){left =       interpolateX( threshold,bl,tl);right =interpolateX( threshold, br,tr);}else if (cval  ===13){   bottom  =     1 -                                   interpolateX(threshold, br,bl);right =interpolateX(threshold, br,tr);}else if ( cval ===14){    left  = interpolateX(threshold,bl,                                                                                                                                                                                                                                                                        tl);bottom =          interpolateX(   threshold,            bl,         br)    ;}else   {    console.  log(     "MarchingSquaresJS-isoContours: Illegal cval detected: "                                                                                                                                                                                                          +cval);}ContourGrid. cells[j][i]={cval:cval,flipped: flipped,top:top,right:right,     bottom:  bottom,                                                                                                                                                                                                                                                                       left:   left };}}}return ContourGrid;}function isSaddle(cell){return cell.cval ===5 ||cell.cval ===      10;}                                                                                               function     isTrivial(cell){return cell.cval ===0 ||cell.cval ===15;}function clearCell(cell){if (!isTrivial(cell)&&cell.cval !==5 &&cell.cval !==10){cell.cval =15;}}function getXY(cell,edge){if (edge ==="top"){return [cell.top,1.0];}else if (edge ==="bottom"){return [cell.bottom,0.0];}else if (edge ==="right"){return [1.0,cell.right];}else if (edge      ===   "left" ) {                                                                                                  return [0.0,cell.left];}}function contourGrid2Paths(grid){var paths =[];var path_idx =0;var epsilon =1e-7;grid.cells.forEach(function (g,j){g.forEach(function (gg,i){if (typeof gg !=="undefined"&&!isSaddle(gg)&&!isTrivial(gg)){var p =tracePath(grid.cells,j,i);var merged =false;if (p.info ==="mergeable"){var x =p.path[p.path.length -1][0],y =p.path[p.path.      length -1][1];for (var k =path_idx -1;k                                                                                                                  >=0;k-- ){if (   Math.abs(paths[k][0][0]-x)<=epsilon &&Math.abs(paths[k][0][1]-y)<=epsilon){for (var l =p.path.length -2;l >=  0; --l) {paths[k].                                        unshift(p.path[l]     );}merged =true;break ;}}}if (!merged)paths[path_idx++ ]=p.path;}});});return paths;}function tracePath(grid,j,i){var maxj =grid.length;var p =[];var dxContour =[0,0,1,1,0,0,0,0, -1,0,1,1, -1,0, -1,0];var dyContour =[0, -1,0,0,1,1,1,1,0, -1,0,0,0, -1,0,0];var dx,dy;var startEdge =["none","left","bottom","left","right","none","bottom","left"    ,   "top" ,"top" ,                                                                                                                                                                             "none" ,"top","right","right","bottom","none"];var nextEdge =["none","bottom","right","right","top","top","top","top","left","bottom","right","right",  "left", "bottom" ,"left"  ,                                                                                                                                                                                                
                                                                                                            "none" ]    ;var  edge;var          currentCell =grid[j][i];var cval =currentCell.cval;var edge =startEdge[cval];var pt =getXY(currentCell,edge);p.push([i +pt[0],j +pt[1]]);edge =nextEdge[cval];pt =getXY(currentCell,edge);p.push([i +pt[ 0],j +pt[ 1]] );clearCell(currentCell);var k =i +dxContour[cval];var l =j +dyContour[cval];var prev_cval =cval;while (k >= 0 &&l >=0  &&l <maxj &&(k !=i ||l !=j)){currentCell =grid[l][k];if ( typeof currentCell ==="undefined"){break ;}cval =currentCell. cval;if (cval ===0 ||cval ===15){return {path:p,info:"mergeable"};}edge =nextEdge[cval];dx =dxContour[cval];dy =dyContour[cval];if (cval ===5 ||cval ===10){if (cval === 5){if (          currentCell.flipped){if (dyContour[prev_cval]=== -                                                                                                                                                                     1){edge ="left";dx      = -1;dy =0;}else {edge ="right";dx =1;dy =0;}}else  {if (dxContour[prev_cval]=== -1){edge ="bottom";dx =0;dy = -1;}}}else if (cval ===10){if (currentCell.flipped){if (dxContour[prev_cval]=== -1){edge ="top";dx =0;dy =1;}else {edge ="bottom";dx =0;dy = - 1;}}else {if (dyContour[prev_cval]===1){edge ="left";dx = -1;dy =0;}}}}pt =getXY(currentCell,edge);p.push([k +pt[0] ,l +pt[1]]);clearCell(currentCell);k +=dx;l +=dy;prev_cval =cval;}     return {path:   p,                                                                                       info:"closed"};}function gridToMatrix(grid,options){options =options ||{};if (!            (        0,                                                                                                                                                                                                                                                                                                                                                                                                           _turf_helpers__WEBPACK_IMPORTED_MODULE_3__.isObject)( options))     throw  new    Error(    "options is invalid");var zProperty                                                                                                                                                                                                                                                                            =  options.     zProperty  ||"elevation";var  flip     = options.    flip;var flags =  options. flags;( 0,     _turf_invariant__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                                                   collectionOf)( grid,"Point"  , "input must contain Points"  );var  pointsMatrix =   sortPointsByLatLng(                                                                                                                                                                                                                                                                      grid,     flip);var   matrix = [];for  ( var  r = 0;r  <pointsMatrix.length;r++ ){var   pointRow =    pointsMatrix[                                                                                  r];var row =[  ]       ;for (var c   =0;c < pointRow. length;c++ ){ var  point = pointRow[ c];if  (point.properties[  zProperty]) row.push(point.properties[zProperty]);else row.push(0);if (flags ===true)point. properties. matrixPosition  =[r, c] ;} matrix.push(row);} return matrix;}function sortPointsByLatLng(points,flip){var pointsByLatitude   = {};( 0,      _turf_meta__WEBPACK_IMPORTED_MODULE_1__.                                                                             featureEach)(points,function (point){var lat =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.getCoords)(point)[1];if (!pointsByLatitude[lat])pointsByLatitude[lat]=[];pointsByLatitude[lat].push(point);});var orderedRowsByLatitude =Object.keys(pointsByLatitude).map(function (lat){var row =pointsByLatitude[lat];var rowOrderedByLongitude =row.sort(function (       a,     b)   {    return       (   0,                                                                                                                    _turf_invariant__WEBPACK_IMPORTED_MODULE_2__.  getCoords) (   a) [0] -  ( 0,    _turf_invariant__WEBPACK_IMPORTED_MODULE_2__.  getCoords)  ( b) [0] ;} ) ;return rowOrderedByLongitude;}  );var pointMatrix =    orderedRowsByLatitude.sort(function (a,b){if (flip)return (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.getCoords)(a[0])[1]-(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.getCoords)(b[0])[1];else return (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.getCoords)(b[0])[1]-(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.getCoords) (a[0])[        1]     ;}    )                                                                                                                                                                             ;return pointMatrix;}   function isolines(pointGrid,breaks,options){options =options ||{};if ( !(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__. isObject)( options))    throw      new    Error(                                                                                                                                                                                    
                                                                                                            "options is invalid" ) ;var         zProperty =options.zProperty ||"elevation";var commonProperties =options.commonProperties ||{};var breaksProperties =options.breaksProperties ||[];(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.collectionOf) (pointGrid,"Point", "Input must contain Points");if ( ! breaks)throw new Error("breaks is required");if (!Array.isArray(breaks))throw new Error("breaks must be an Array");if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.isObject)(commonProperties))throw new Error("commonProperties must be an Object") ;if (!Array.isArray(breaksProperties)) throw new Error("breaksProperties must be an Array");var matrix =gridToMatrix(          pointGrid, { zProperty:zProperty,flip:true });var                                                                                                                                                                          createdIsoLines =      createIsoLines( matrix, breaks, zProperty,commonProperties,breaksProperties) ;var scaledIsolines  =rescaleIsolines(createdIsoLines,matrix, pointGrid);return   (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__. featureCollection)(scaledIsolines);}function createIsoLines(matrix, breaks,zProperty,commonProperties,breaksProperties) {var   results =[];for (var  i  =1; i <breaks. length; i++  ){var  threshold = +breaks[ i] ;var properties =    object_assign__WEBPACK_IMPORTED_MODULE_4__(                                                               {}, commonProperties,breaksProperties[i]);properties[ zProperty]= threshold;var     isoline    =  ( 0,                                                                                                                                                                                                                                                                                                                                                                                                       _turf_helpers__WEBPACK_IMPORTED_MODULE_3__. multiLineString)(isoContours(matrix, threshold),    properties);results. push(isoline)                                                                                                                                                                                                                                                                                      ;}    return results;} function  rescaleIsolines( createdIsoLines,matrix,points){var gridBbox =(0,     _turf_bbox__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                                                       "default"])(points);var originalWidth =gridBbox[2]-gridBbox[0];var originalHeigth    =    gridBbox[ 3]-                                                                                                                                                                                                                                                                     gridBbox[   1];var x0  = gridBbox[0];var y0 =gridBbox[1] ;var  matrixWidth  =matrix[0].length -1;var    matrixHeight                                                                                  =matrix. length   -     1;var  scaleX  = originalWidth /matrixWidth;var scaleY =originalHeigth   /matrixHeight;var resize  =function  (point){point[0]=point[0] *scaleX  + x0;point[1]=point[1] *scaleY +y0;} ;createdIsoLines.forEach(function  (isoline){(0,_turf_meta__WEBPACK_IMPORTED_MODULE_1__.coordEach)(isoline,resize);});return  createdIsoLines;}const     __WEBPACK_DEFAULT_EXPORT__                                                                                              = isolines;},"../node_modules/@turf/kinks/dist/es/index.js": (__unused_webpack___webpack_module__,__webpack_exports__,   __webpack_require__)  => {"use strict" ;__webpack_require__.r( __webpack_exports__) ;__webpack_require__. d(  __webpack_exports__, {"default": ( )  =>kinks })  ;var  _turf_helpers__WEBPACK_IMPORTED_MODULE_0__  = __webpack_require__(      "../node_modules/@turf/helpers/dist/es/index.js"                                                                                                               )    ;function     kinks(featureIn) {var coordinates;var feature;var results = {type:"FeatureCollection",features:[] };if (  featureIn. type ===                                         "Feature"){feature =     featureIn.geometry;}else {feature =featureIn;}if (feature.type ==="LineString"){coordinates =[feature.coordinates];}else if (feature.type ==="MultiLineString"){coordinates =feature.coordinates;}else if (feature.type ==="MultiPolygon"){coordinates =[].concat.apply([],feature.coordinates);}else if (feature.type ==="Polygon"){coordinates =             feature.                                                                                                                                                                              coordinates;} else {throw new Error("Input must be a LineString, MultiLineString, "+"Polygon, or MultiPolygon Feature or Geometry");}coordinates.forEach(  function   (    line1)  {                                                                                                                                                                                              
                                                                                                             coordinates.forEach(function         (line2){for (var i =0;i <line1.length -1;i++ ){for (var k =i;k <line2.length -1;k++ ){if (line1 ===line2){if (Math.abs(i -k)===1){continue ;}if (i ===0 &&k ===line1.length -2 &&line1[i][ 0]===line1[line1.length  -1][0]&&line1[i][1]===line1[line1.length -1][1]){continue ;}}var intersection =lineIntersects(line1[i][0],line1[i][1],line1[i +1][0],line1[i +1][1],line2[k][0],line2[k][1],line2[k +1][0],line2[k +1][1]);if (intersection){results.features.push((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.point)([intersection[0],intersection[1]]));}}}});});return results;}function lineIntersects(line1StartX,line1StartY,line1EndX,           line1EndY,   line2StartX, line2StartY,line2EndX,                                                                                                                                                                             line2EndY) {   var     denominator;var a;var b;var numerator1;var numerator2;var result ={x:null,y:null,onLine1:false,onLine2:false };denominator =(line2EndY -line2StartY)*(line1EndX  -line1StartX)-(line2EndX -line2StartX)*(line1EndY -line1StartY);if (denominator ===0){if (result.x !==null &&result.y !==null){return result;}else {return false;}}a =line1StartY -line2StartY;b =line1StartX -line2StartX;numerator1 =(line2EndX -line2StartX)*a -(line2EndY -      line2StartY)    *                                                                                       b;numerator2  =(line1EndX -line1StartX)*a -  (  line1EndY -  line1StartY)*b;a =      numerator1      /                                                                                                                                                                                                                                                                                                                                                                                                       denominator;b = numerator2 /denominator;result.x =line1StartX +a *(line1EndX -line1StartX)     ;result.y = line1StartY    + a * (                                                                                                                                                                                                                                                                               line1EndY  -    line1StartY);if (a >=0 &&a <= 1){ result.onLine1 =true;}if (b >=0 &&b <=1){result.onLine2 =     true;}                                                                                                                                                                                                                                                        if (result.  onLine1   && result.onLine2) {return [  result. x, result.y];}else {    return  false;}}},                                                                                                                                                                                                                                                                     "../node_modules/@turf/length/dist/es/index.js" : ( __unused_webpack___webpack_module__,__webpack_exports__,    __webpack_require__)  =>{ "use strict"                                                  ;__webpack_require__.    r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>length });var _turf_distance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( "../node_modules/@turf/distance/dist/es/index.js");var _turf_meta__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js")           ;function   length(                                                                                                  geojson,options){if ( options ===void  0){options   = { };}return  (  0, _turf_meta__WEBPACK_IMPORTED_MODULE_1__.segmentReduce)(geojson, function   ( previousValue, segment) {var coords   = segment.geometry.coordinates;return  previousValue  +( 0, _turf_distance__WEBPACK_IMPORTED_MODULE_0__["default" ]) (coords[0] , coords[ 1]  ,options) ;}, 0);} },     "../node_modules/@turf/line-arc/dist/es/index.js"                                                                                                                          :    (        __unused_webpack___webpack_module__, __webpack_exports__,  __webpack_require__)   =>{   "use strict"  ;__webpack_require__.                                                          r(      __webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>lineArc });var _turf_circle__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/circle/dist/es/index.js");var _turf_destination__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/destination/dist/es/index.js");var    _turf_helpers__WEBPACK_IMPORTED_MODULE_2__                                                                                                                                                        =     __webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function lineArc(center,radius,bearing1,bearing2,options){if (options   ===void 0){options  ={ };}                                                                                                                                                                                                  
                                                                                                               var steps =options.steps ||         64;var angle1 =convertAngleTo360(bearing1);var angle2 =convertAngleTo360(bearing2);var properties =!Array.isArray(center)&&center.type ==="Feature"?center.properties :{};if (angle1 ===angle2){return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.lineString)((0,_turf_circle__WEBPACK_IMPORTED_MODULE_0__["default"])(center,radius,options).geometry.coordinates[0],properties);}var arcStartDegree =angle1;var arcEndDegree =angle1 <angle2 ?angle2 :angle2 +360;var alfa = arcStartDegree;var coordinates  =[];var i =0;while (alfa <arcEndDegree){coordinates.push((0,_turf_destination__WEBPACK_IMPORTED_MODULE_1__["default"])(center,         radius,alfa,options).geometry.coordinates);i++ ;alfa                                                                                                                                                                            =arcStartDegree +i  *       360 / steps;}if ( alfa > arcEndDegree){  coordinates. push((0,_turf_destination__WEBPACK_IMPORTED_MODULE_1__["default" ])(center,radius,arcEndDegree,options).geometry.coordinates) ;}return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.lineString)(coordinates,  properties) ;}function convertAngleTo360( alfa){var beta = alfa % 360;if  (beta  <0){beta += 360;}return beta;}},"../node_modules/@turf/line-chunk/dist/es/index.js" :(    __unused_webpack___webpack_module__,                                                                      __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(    __webpack_exports__)                                                                                                                                                                                                                                                                                                                                                                                                     ;__webpack_require__.d( __webpack_exports__,{"default": () =>__WEBPACK_DEFAULT_EXPORT__ })                                  ;var                                                                                                                                                                                                                                                                                  _turf_length__WEBPACK_IMPORTED_MODULE_0__       =   __webpack_require__(   "../node_modules/@turf/length/dist/es/index.js"      )  ;var _turf_line_slice_along__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                  = __webpack_require__("../node_modules/@turf/line-slice-along/dist/es/index.js" )                  ;var                                                                                                                                                                                                                                                                      _turf_meta__WEBPACK_IMPORTED_MODULE_2__   =       __webpack_require__(    "../node_modules/@turf/meta/dist/es/index.js")     ;var _turf_helpers__WEBPACK_IMPORTED_MODULE_3__                                               =     __webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function lineChunk(geojson,segmentLength,options){options  = options ||{};if (!(0, _turf_helpers__WEBPACK_IMPORTED_MODULE_3__.isObject)(options)) throw new Error("options is invalid");var units = options.units;var reverse =options.reverse;if (!geojson)          throw   new    Error(                                                                                                  "geojson is required");if (segmentLength <=0)throw new Error("segmentLength must be greater than 0");var  results =[];( 0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.flattenEach)( geojson,function (feature){if (reverse)feature.geometry.coordinates =feature.geometry.coordinates.reverse();sliceLineSegments(feature,segmentLength,units,function (segment){     results.push( segment);}) ;}) ;return   (0,                                                                                                                          _turf_helpers__WEBPACK_IMPORTED_MODULE_3__. featureCollection)(  results);}function  sliceLineSegments(line,  segmentLength,units, callback){ var lineLength   =(  0,                      _turf_length__WEBPACK_IMPORTED_MODULE_0__[ "default"])(line,{units:units });if (lineLength <=segmentLength)return callback(line);var numberOfSegments =lineLength /segmentLength;if (!Number.isInteger(numberOfSegments)){numberOfSegments =Math.floor(numberOfSegments)+1;}for (var i =0;i <numberOfSegments;i++ ){var outline =(0,_turf_line_slice_along__WEBPACK_IMPORTED_MODULE_1__[ "default"]) (line,                                                                                                                                                                 segmentLength  *i, segmentLength  * ( i    +1), { units:units   } )  ;callback( outline,i) ;}   }   const  __WEBPACK_DEFAULT_EXPORT__   =  lineChunk;}  , "../node_modules/@turf/line-intersect/dist/es/index.js"                                                                                                                                                                
                                                                                                                             :             (          __unused_webpack___webpack_module__,   __webpack_exports__, __webpack_require__)  =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{ "default": () => __WEBPACK_DEFAULT_EXPORT__   });var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__  = __webpack_require__("../node_modules/@turf/helpers/dist/es/index.js") ;var  _turf_invariant__WEBPACK_IMPORTED_MODULE_1__   = __webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");var  _turf_line_segment__WEBPACK_IMPORTED_MODULE_2__    =__webpack_require__( "../node_modules/@turf/line-segment/dist/es/index.js" ) ;var              _turf_meta__WEBPACK_IMPORTED_MODULE_3__      =                                                                                                                                                                                   __webpack_require__(     "../node_modules/@turf/meta/dist/es/index.js");var geojson_rbush__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__("../node_modules/geojson-rbush/index.js");function lineIntersect(line1,line2){var unique ={};var results =[ ];if (line1.type ==="LineString"){line1 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.feature)(line1);}if (line2.type ==="LineString"){line2 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.feature)(line2)    ;} if ( line1.type                                                                                        ==="Feature"&& line2.type ==="Feature"&&line1.geometry !==null &&line2.geometry      !==null && line1.                                                                                                                                                                                                                                                                                                                                                                                                     geometry.type  ==="LineString"&&line2. geometry.  type === "LineString"  &&line1.geometry.    coordinates.length === 2 && line2.                                                                                                                                                                                                                                                                                       geometry.    coordinates.length ===  2){var intersect =intersects(line1, line2);if (intersect){ results.     push(                                                                                                                                                                                                                                                          intersect)   ;} return   (    0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.   featureCollection)(                                                                                                                                                                                                                                                                       results)      ;} var    tree  =  geojson_rbush__WEBPACK_IMPORTED_MODULE_4__(   );tree.  load(  ( 0,     _turf_line_segment__WEBPACK_IMPORTED_MODULE_2__[                                                "default" ])(line2));(      0,_turf_meta__WEBPACK_IMPORTED_MODULE_3__.featureEach)((0,_turf_line_segment__WEBPACK_IMPORTED_MODULE_2__["default"]) ( line1),function  (segment){(0,_turf_meta__WEBPACK_IMPORTED_MODULE_3__.featureEach)( tree.search(segment),function ( match){var intersect  =intersects(segment, match) ;if  (intersect){var key =( 0,    _turf_invariant__WEBPACK_IMPORTED_MODULE_1__.                                                                                   getCoords)( intersect). join(",") ;if ( !unique[key]){ unique[key]=  true;results. push(  intersect) ;} }}  );} ) ;return  (  0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__. featureCollection)(results) ;} function   intersects(line1,   line2) {var coords1  =  (0, _turf_invariant__WEBPACK_IMPORTED_MODULE_1__. getCoords)(line1) ;var  coords2 =( 0,      _turf_invariant__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                           getCoords)(line2)     ;if (coords1.length !==2){throw new Error("<intersects> line1 must only contain 2 coordinates");}if  (coords2.length !==                                              2) {throw   new Error(    "<intersects> line2 must only contain 2 coordinates");}var x1 =coords1[0][0];var y1 =coords1[0][1];var x2 =coords1[1][0] ;var y2 =coords1[1][1];var x3 =coords2[0][0];var y3 =coords2[0][1];var x4 =coords2[1][ 0];var y4 =coords2[1][1];var denom =( y4 -y3)*(x2 -x1)-(x4 -x3)*(y2 -y1);var numeA =(x4 -x3)*(y1 -y3)-(y4 -y3)*(x1 -x3);var    numeB = (x2 -x1)*(                                                                                                                                                                                y1 -     y3)-(y2 -y1)* (x1 -x3);if  (denom ===0){if (numeA ===0   &&numeB ===0) {return null;}return null;} var uA =numeA /denom;var uB =numeB /   denom;if ( uA >=0 &&uA <=1                                                                                                                                                                                                   
                                                                                                                 &&uB >=0 &&uB <=1){var x =x1 +        uA *(x2 - x1);var  y  =y1 +uA *(y2 -y1);return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__. point) ([x,y]);}return null;}const __WEBPACK_DEFAULT_EXPORT__ =lineIntersect;},"../node_modules/@turf/line-offset/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__. d(__webpack_exports__,{"default":() => __WEBPACK_DEFAULT_EXPORT__ }) ;var  _turf_meta__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__ =                                        __webpack_require__(                                                                                                                                                                                  "../node_modules/@turf/invariant/dist/es/index.js" );var _turf_helpers__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function ab(segment){var start  =segment[0];var end =segment[1] ;return [end[0]-start[ 0],end[1]-start[1]];}function crossProduct(v1,v2){return v1[ 0]*v2[1]-v2[0]*v1[1];}function add(v1,v2){return [v1[0]+v2[0],v1[1]+v2[1]];}function sub(v1, v2){return [v1[0]-v2[0],v1[1]-v2[1]];}function scalarMult(s,v){ return [s *v[0],s *                                                                     v[1]];}function intersectSegments(a,b){var p =a[0];var r =ab(a);var q =b[0];var    s =ab(b);var cross =                                                                                                                                                                                                                                                                                                                                                                                                    crossProduct(r,s);var qmp =sub(q,p);var numerator =crossProduct(qmp,s);var t =numerator /    cross;var   intersection  = add( p,                                                                                                                                                                                                                                                                                      scalarMult(     t, r)) ;return intersection;}function  isParallel(a, b) { var r = ab(  a)  ;var s  =ab(b)    ;return crossProduct(                                                                                                                                                                                                                                        r,s)  ===  0;}function      intersection(a, b) {  if      (isParallel( a, b)    )   return false;return intersectSegments(                                                                                                                                                                                                                                                      a,b) ;}   function lineOffset( geojson, distance, options) {options  = options || {};if ( !(   0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_2__.                                                       isObject)  (   options))     throw new Error("options is invalid");var units =options.units;if (!geojson)throw new Error("geojson is required");if (distance === undefined ||distance ===null ||isNaN(distance))throw new Error("distance is required");var type =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getType) (geojson);var properties =     geojson. properties;switch   (                                                                                                  type){case "LineString":return lineOffsetFeature(geojson,distance,units);case "MultiLineString":var coords =[];(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.flattenEach)(geojson,function (feature){coords.push(lineOffsetFeature(feature,distance,units) .geometry.coordinates);});return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.multiLineString)(     coords, properties) ;default:throw new  Error(                                                                                                                               "geometry "+type +    " is not supported") ;}}function lineOffsetFeature(  line,distance,units){ var  segments = [];var  offsetDegrees  =(0,                                              _turf_helpers__WEBPACK_IMPORTED_MODULE_2__. lengthToDegrees)(distance,units);var coords =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(line);var finalCoords =[];coords.forEach(function (currentCoords,index){if    (index !==coords.length -1){var segment  =processSegment(currentCoords,coords[index +  1],offsetDegrees);segments.push(segment);if  (index >0){var seg2Coords       =                                                                                                                                                                    segments[ index -1];var intersects = intersection(segment,seg2Coords);if  (intersects !==false){ seg2Coords[1]=intersects;segment[0]=intersects;}    finalCoords.       push(                                                                                                                                                                                                   
                                                                                                                  seg2Coords[0]) ;if (index ===          coords.length -2){finalCoords.push(segment[0]);finalCoords.push(segment[1]);}}if (coords.length ===2){finalCoords.push(segment[0]);finalCoords.push( segment[1]);}}});return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.lineString)(finalCoords,line.properties);}function processSegment(point1,point2,offset){var L =Math.sqrt((point1[0]-point2[0])*(point1[0]-point2[0])+(point1[1]-point2[1])*(point1[1]-point2[1]));var out1x =point1[0]+offset *(point2[1]-point1[1])/L;var out2x =point2[0]+offset *(point2[1]-point1[1])/L;var out1y =point1[1]+offset *(point1[0]-point2[0])/L;var out2y =point2[1]+offset *(point1[ 0]-         point2[0])/L;return [[out1x,out1y],[out2x,out2y]];}                                                                                                                                                                                                           const     __WEBPACK_DEFAULT_EXPORT__ =  lineOffset;}  ,  "../node_modules/@turf/line-overlap/dist/es/index.js":      (__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)  =>{"use strict" ;__webpack_require__. r( __webpack_exports__);__webpack_require__.  d(   __webpack_exports__,  {"default":  () => __WEBPACK_DEFAULT_EXPORT__   })  ;var geojson_rbush__WEBPACK_IMPORTED_MODULE_0__ =   __webpack_require__(    "../node_modules/geojson-rbush/index.js"                                                                  );var  _turf_line_segment__WEBPACK_IMPORTED_MODULE_1__   = __webpack_require__(    "../node_modules/@turf/line-segment/dist/es/index.js"                                                                                                                                                                                                                                                                                                                                                                   )  ;var  _turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(   "../node_modules/@turf/nearest-point-on-line/dist/es/index.js"                                                                                                                                                                                                                                                                 )   ;var        _turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_3__    =   __webpack_require__(    "../node_modules/@turf/boolean-point-on-line/dist/es/index.js"                                                                                                                                                                                                  )   ;var  _turf_invariant__WEBPACK_IMPORTED_MODULE_4__  =  __webpack_require__(   "../node_modules/@turf/invariant/dist/es/index.js"                                                                                                                                                                                                                                         )    ;var            _turf_meta__WEBPACK_IMPORTED_MODULE_5__         =        __webpack_require__(   "../node_modules/@turf/meta/dist/es/index.js"                                                                  )          ;var     _turf_helpers__WEBPACK_IMPORTED_MODULE_6__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var deep_equal__WEBPACK_IMPORTED_MODULE_7__ =__webpack_require__("../node_modules/deep-equal/index.js");function lineOverlap(line1,line2,options){if ( options ===void 0){options ={} ;}options =    options  ||  {  }   ;if  (  !( 0,                                                                                                   _turf_helpers__WEBPACK_IMPORTED_MODULE_6__.isObject)(options) )throw new Error( "options is invalid");var tolerance  = options.tolerance  || 0;var features =[  ];var tree =geojson_rbush__WEBPACK_IMPORTED_MODULE_0__( );var line =(0, _turf_line_segment__WEBPACK_IMPORTED_MODULE_1__[ "default" ])(line1);tree.load(line);var overlapSegment;(0,             _turf_meta__WEBPACK_IMPORTED_MODULE_5__.                                                                                                                                  segmentEach)(line2,      function   (   segment) {var   doesOverlaps = false;if  (   !  segment)  {   return  ;}  ( 0,  _turf_meta__WEBPACK_IMPORTED_MODULE_5__.                           featureEach)(tree.search(     segment),function (match){if (doesOverlaps ===false)  {var coordsSegment =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_4__.getCoords)(segment).sort();var coordsMatch =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_4__.getCoords)(match).sort();if (deep_equal__WEBPACK_IMPORTED_MODULE_7__(coordsSegment,coordsMatch)){doesOverlaps =         true;if     (                                                                                                                                                                                 overlapSegment)  overlapSegment  = concatSegment( overlapSegment, segment) ;else overlapSegment   = segment;}   else if   (   tolerance   ===0 ?  (  0, _turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_3__[                                                                                                                                                              
                                                                                                                   "default"] )(coordsSegment[0],          match) &&(0,_turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_3__["default"])(coordsSegment[1],match):(0,_turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_2__["default"])(match,coordsSegment[0]).properties.dist <=tolerance && (0,_turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_2__["default"])(match,coordsSegment[1]).properties.dist <= tolerance){doesOverlaps =true;if (overlapSegment)overlapSegment =concatSegment(overlapSegment,segment);else overlapSegment =segment;} else if  (tolerance  ===0 ?(0,_turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_3__["default"])(coordsMatch[0],segment)&& (0,         _turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_3__[                                                                                                                                                                                   "default" ])(coordsMatch[1],     segment):(0,_turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_2__["default"]) (segment,coordsMatch[0]).properties.dist <=tolerance &&(0,_turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_2__["default"])(segment,coordsMatch[1]).properties.dist <=tolerance){if ( overlapSegment)overlapSegment =concatSegment(overlapSegment,match);else overlapSegment =match;}}});if (doesOverlaps ===false &&overlapSegment){features.                  push(                                                                                       overlapSegment);overlapSegment =undefined;}});if (overlapSegment)features.push(        overlapSegment)                                                                                                                                                                                                                                                                                                                                                                                                      ;return  (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_6__.featureCollection)(features);}       function concatSegment(    line,                                                                                                                                                                                                                                                                                            segment) {    var   coords = (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_4__.getCoords)(segment);var    lineCoords                                                                                                                                                                                                                                                     = (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_4__. getCoords) (line);var  start =     lineCoords[0];var                                                                                                                                                                                                                                                                            end =     lineCoords[lineCoords.  length -1]   ;var geom  = line. geometry. coordinates;if (    deep_equal__WEBPACK_IMPORTED_MODULE_7__(                                                                 coords[ 0] ,start)) geom.      unshift(coords[1]);else if (deep_equal__WEBPACK_IMPORTED_MODULE_7__(coords[0],end))geom.push(coords[1]);else if (deep_equal__WEBPACK_IMPORTED_MODULE_7__(coords[1] ,start))geom.unshift(coords[0]);else if (deep_equal__WEBPACK_IMPORTED_MODULE_7__(coords[1],end) )geom.push(coords[0]);return  line;}const         __WEBPACK_DEFAULT_EXPORT__    =                                                                                                    lineOverlap;} ,  "../node_modules/@turf/line-segment/dist/es/index.js" :( __unused_webpack___webpack_module__,  __webpack_exports__, __webpack_require__)   =>  {    "use strict"  ;__webpack_require__.  r( __webpack_exports__);__webpack_require__. d( __webpack_exports__,  {  "default"  :    () =>   __WEBPACK_DEFAULT_EXPORT__  } ) ;var      _turf_helpers__WEBPACK_IMPORTED_MODULE_0__      =                                                                                                                                    __webpack_require__(                  "../node_modules/@turf/helpers/dist/es/index.js"                 )         ;var  _turf_invariant__WEBPACK_IMPORTED_MODULE_1__                          =     __webpack_require__(     "../node_modules/@turf/invariant/dist/es/index.js");var _turf_meta__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");function lineSegment(geojson){if (!geojson){throw new Error("geojson is required") ;}var results =[];(0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.flattenEach)(    geojson,function (                                                                                                                                                                                 feature) {lineSegmentFeature(feature,results);});return (0, _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.featureCollection) (results);}function   lineSegmentFeature(geojson,                                                                                                                                                                                                    
                                                                                                                       results){var coords =[] ;var         geometry = geojson.geometry;if (geometry !==null){switch (geometry.type){case "Polygon":coords = (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords) (geometry);break ;case "LineString" :coords  =[(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.  getCoords)(geometry)]  ;}coords.forEach( function ( coord) {var segments =createSegments(coord, geojson.properties);segments.   forEach( function (segment) {segment.id  = results.length;results.push( segment);}) ;});}  }function createSegments(coords,properties){var segments  =[];coords. reduce(function ( previousCoords, currentCoords){var segment =(0,                  _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                           lineString)([ previousCoords,      currentCoords],properties);segment.bbox =bbox(previousCoords,currentCoords);segments.push(segment);return currentCoords;});return segments;}function bbox(coords1,coords2){var x1 =coords1[0];var y1 =coords1[1];var x2 =coords2[0];var y2 =coords2[1];var west =x1 <x2 ?x1 :x2;var south =y1 <y2 ?y1 :y2;var east =x1 >x2 ?x1 :x2;var north =y1 >y2 ?y1 :y2;return [west,south,east,north];}const __WEBPACK_DEFAULT_EXPORT__ =      lineSegment;}  ,                                                                                              "../node_modules/@turf/line-slice-along/dist/es/index.js"    :         (    __unused_webpack___webpack_module__,                                                                                                                                                                                                                                                                                                                                                                                        __webpack_exports__, __webpack_require__)  => {"use strict";__webpack_require__.r(                  __webpack_exports__)                                                                                                                                                                                                                                                                                             ;__webpack_require__. d(  __webpack_exports__,{"default"  :(  )  => __WEBPACK_DEFAULT_EXPORT__    } )  ;var _turf_bearing__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                                                                     =__webpack_require__( "../node_modules/@turf/bearing/dist/es/index.js"  );var   _turf_distance__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                                                                                         =        __webpack_require__(  "../node_modules/@turf/distance/dist/es/index.js")  ;var   _turf_destination__WEBPACK_IMPORTED_MODULE_2__                                                                 =  __webpack_require__(       "../node_modules/@turf/destination/dist/es/index.js"  )  ;var  _turf_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( "../node_modules/@turf/helpers/dist/es/index.js"  ) ;function    lineSliceAlong( line, startDist, stopDist, options)  {  options  = options   ||{ }   ;if   (  ! ( 0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_3__.                                                                                             isObject)(options))throw new Error("options is invalid");var coords;var  slice =[];if (line.type ==="Feature")coords =line.geometry.coordinates;else  if ( line.type ==="LineString")coords =line.coordinates;else throw new Error("input must be a LineString Feature or Geometry");var origCoordsLength =coords.length;var travelled =0;var      overshot, direction,interpolated;for  (var i =0;i <                                                                                                                                       coords.length;i++ ){if      (startDist >=travelled &&i ===coords.length   -1)break ;else if (travelled >startDist &&  slice.length ===0){                                                   overshot   =  startDist     -       travelled;if (!overshot){slice. push(coords[i]);return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.lineString)(slice);}direction =(0,_turf_bearing__WEBPACK_IMPORTED_MODULE_0__["default"])( coords[i],coords[i -1] )-180;interpolated =(0,_turf_destination__WEBPACK_IMPORTED_MODULE_2__["default"])( coords[i],overshot,    direction,options)                                                                                                                                                                                  ;slice. push( interpolated.geometry.coordinates);}if (travelled >=stopDist){overshot =stopDist -travelled;if (!overshot){slice.push(coords[     i]     )  ;return    ( 0,                                                                                                                                                                                                     
                                                                                                                      _turf_helpers__WEBPACK_IMPORTED_MODULE_3__. lineString)(slice);}direction =(0,_turf_bearing__WEBPACK_IMPORTED_MODULE_0__["default"])(coords[i],coords[i -1])-180;interpolated =(0,_turf_destination__WEBPACK_IMPORTED_MODULE_2__["default"])(coords[i],overshot,direction,options);slice.push(interpolated.geometry.coordinates);return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.lineString)(slice);}if (travelled >=startDist){slice.push(coords[i]);}if (i ===coords.length -1){return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.lineString)(slice);}travelled +=(0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(coords[i],coords[i +1],options)      ;} if ( travelled  < startDist &&coords.length   ===                                                                                                                                                                                              origCoordsLength)throw new Error(      "Start position is beyond line");var last =coords[coords.length -1];return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.lineString)([last,last]);}const __WEBPACK_DEFAULT_EXPORT__ =lineSliceAlong;},"../node_modules/@turf/line-slice/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(    __webpack_exports__,                                                                                         { "default"   :     (    )   =>    __WEBPACK_DEFAULT_EXPORT__      })   ;var    _turf_invariant__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                                                                                                                                                                                                                               =  __webpack_require__(  "../node_modules/@turf/invariant/dist/es/index.js" ) ;var   _turf_helpers__WEBPACK_IMPORTED_MODULE_1__                                                                                                                                                                                                                                                                                                   =      __webpack_require__( "../node_modules/@turf/helpers/dist/es/index.js"   )   ;var   _turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_2__                                                                                                                                                                                                                                  =                                   __webpack_require__(   "../node_modules/@turf/nearest-point-on-line/dist/es/index.js"                                                                                                                                                                                                                                       )       ;function  lineSlice(  startPt, stopPt,line)       {  var   coords   = (  0,    _turf_invariant__WEBPACK_IMPORTED_MODULE_0__.                                                                getCoords) (   line) ;if ( (0,          _turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getType) (   line)  !==  "LineString")throw    new    Error("line must be a LineString") ;var startVertex  = (     0,   _turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_2__["default"     ]   )(  line,  startPt) ;var   stopVertex  =( 0,     _turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_2__[                                                                                 "default"])( line,stopPt);var ends;if (startVertex.properties.index <=stopVertex.properties.index){ends =[ startVertex,stopVertex];}else  {ends =[stopVertex,startVertex];}var clipCoords =[ends[0].geometry.coordinates];for ( var i = ends[0].properties.index +1;i <ends[1].properties.index +1;i++ ) {clipCoords.push( coords[ i]);}       clipCoords.push(ends[1].geometry.coordinates);return (                                                                                                                                                               0,     _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.lineString)(  clipCoords,line.properties);}                const                                                      __WEBPACK_DEFAULT_EXPORT__  =         lineSlice;},   "../node_modules/@turf/line-split/dist/es/index.js"  :( __unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)  =>{"use strict";__webpack_require__. r(__webpack_exports__);__webpack_require__. d( __webpack_exports__, { "default": (   ) => __WEBPACK_DEFAULT_EXPORT__ } ) ;var    geojson_rbush__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                             =    __webpack_require__("../node_modules/geojson-rbush/index.js")  ;var _turf_square__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__(   "../node_modules/@turf/square/dist/es/index.js"                                                                                                                                                                                 
                                                                                                                               )                  ;var          _turf_bbox__WEBPACK_IMPORTED_MODULE_2__  =   __webpack_require__( "../node_modules/@turf/bbox/dist/es/index.js" )  ;var   _turf_truncate__WEBPACK_IMPORTED_MODULE_3__  =    __webpack_require__(  "../node_modules/@turf/truncate/dist/es/index.js" ) ;var  _turf_line_segment__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__("../node_modules/@turf/line-segment/dist/es/index.js" );var   _turf_line_intersect__WEBPACK_IMPORTED_MODULE_5__  =__webpack_require__( "../node_modules/@turf/line-intersect/dist/es/index.js"  );var _turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_6__  =__webpack_require__(          "../node_modules/@turf/nearest-point-on-line/dist/es/index.js"                                                                                                                                                                                                          )           ;var         _turf_invariant__WEBPACK_IMPORTED_MODULE_7__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");var _turf_meta__WEBPACK_IMPORTED_MODULE_8__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var  _turf_helpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function lineSplit(line,splitter){if (!line)throw new                Error(                                                                                        "line is required");if (! splitter)throw new Error( "splitter is required");var     lineType =  (   0,                                                                                                                                                                                                                                                                                                                                                                                                        _turf_invariant__WEBPACK_IMPORTED_MODULE_7__.getType)( line);var splitterType =(                                    0,                                                                                                                                                                                                                                                                                                  _turf_invariant__WEBPACK_IMPORTED_MODULE_7__. getType) (    splitter) ;if  (lineType   !==  "LineString"    )throw new   Error( "line must be LineString"                                                                                                                                                                                                               )   ;if    ( splitterType   ===  "FeatureCollection" )    throw  new    Error(   "splitter cannot be a FeatureCollection"                                                                                                                                                                                                                                                       ) ;if  (      splitterType    ===  "GeometryCollection"      )    throw     new     Error(   "splitter cannot be a GeometryCollection"                                                                      )   ;var truncatedSplitter = ( 0,        _turf_truncate__WEBPACK_IMPORTED_MODULE_3__["default"])(splitter,{precision:7 });switch (splitterType){case "Point":return splitLineWithPoint(line,truncatedSplitter);case "MultiPoint":return splitLineWithPoints(line,truncatedSplitter);case "LineString":case "MultiLineString":case       "Polygon" :   case  "MultiPolygon"     :                                                                                                  return splitLineWithPoints( line,(0,_turf_line_intersect__WEBPACK_IMPORTED_MODULE_5__["default" ])(line,truncatedSplitter));}}function splitLineWithPoints(line,splitter){var results =[];var tree =geojson_rbush__WEBPACK_IMPORTED_MODULE_0__();(0,_turf_meta__WEBPACK_IMPORTED_MODULE_8__.flattenEach)(splitter,function (point){          results.forEach(function (feature,index){ feature. id =                                                                                                                                            index;} );if ( !results.      length){results =splitLineWithPoint(line,point).features;results.forEach(function (    feature) {  if (!                                                      feature.bbox)feature.bbox  =(  0,          _turf_square__WEBPACK_IMPORTED_MODULE_1__[  "default" ] )(( 0, _turf_bbox__WEBPACK_IMPORTED_MODULE_2__["default"] ) (feature));});tree.load((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_9__. featureCollection)( results) );} else  {var search =tree. search(point)  ;if (search.features.length){var closestLine =    findClosestFeature(                                                                                                                                                                                  point,  search);results =results. filter( function (feature){ return feature.id !== closestLine.id;} )    ;tree.remove( closestLine) ;(0,   _turf_meta__WEBPACK_IMPORTED_MODULE_8__.                                                                                                                                                                                         
                                                                                                                                   featureEach)        (          splitLineWithPoint( closestLine, point),function  (line){results.push( line) ;tree.insert(line);});} } } ) ;return (0,  _turf_helpers__WEBPACK_IMPORTED_MODULE_9__.featureCollection) (results);}function splitLineWithPoint( line,  splitter)  {var  results  =[ ];var  startPoint =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_7__. getCoords)(line)[0];var endPoint = (  0,_turf_invariant__WEBPACK_IMPORTED_MODULE_7__.getCoords)(line)[line.geometry.coordinates.length  -1];if  ( pointsEquals(startPoint, (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_7__. getCoord) (splitter)) ||pointsEquals(endPoint,(0,                 _turf_invariant__WEBPACK_IMPORTED_MODULE_7__.                                                                                                                                                                                                    getCoord) ( splitter)) ) return  ( 0,           _turf_helpers__WEBPACK_IMPORTED_MODULE_9__.featureCollection)([line]);var tree =geojson_rbush__WEBPACK_IMPORTED_MODULE_0__() ;var segments  =(0,_turf_line_segment__WEBPACK_IMPORTED_MODULE_4__[ "default"])(line);tree.load(segments) ;var search =tree.search(splitter);if (!search.  features.length) return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_9__.featureCollection)([line]);var closestSegment =    findClosestFeature(                                                                                         splitter, search)  ;var initialValue = [startPoint] ;var lastCoords   = (  0,    _turf_meta__WEBPACK_IMPORTED_MODULE_8__.                                                                                                                                                                                                                                                                                                                                                                                    featureReduce)(segments, function (previous,current,index){var currentCoords =(                                   0,                                                                                                                                                                                                                                                                                                    _turf_invariant__WEBPACK_IMPORTED_MODULE_7__.      getCoords)    ( current)   [ 1]  ;var         splitterCoords   =  (    0, _turf_invariant__WEBPACK_IMPORTED_MODULE_7__.                                                                                                                                                                                          getCoord)(splitter);if (index ===closestSegment.id){previous.push(splitterCoords)    ;results. push(( 0,                                                                                                                                                                                                                                                                            _turf_helpers__WEBPACK_IMPORTED_MODULE_9__. lineString)  (previous))  ;if (pointsEquals( splitterCoords,currentCoords))         return      [                                                                   splitterCoords]      ;return   [           splitterCoords, currentCoords] ;}else  {previous.push(currentCoords);return previous;} } , initialValue);if (lastCoords.length  >1){results.push((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_9__. lineString)(lastCoords));}return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_9__.        featureCollection) ( results) ;}function                                                                                                    findClosestFeature(point,lines){ if ( !lines.features.length)throw  new  Error("lines must contain features") ;if (lines. features.  length ===1)return lines.features[0];var closestFeature;var closestDistance =Infinity;(   0,_turf_meta__WEBPACK_IMPORTED_MODULE_8__. featureEach)(lines,function ( segment){ var pt =(0,           _turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_6__[                                                                                                                                               "default"])(segment,point)         ;var dist =pt.properties. dist;if (  dist < closestDistance){closestFeature =  segment;closestDistance                                                   = dist;}} ) ;return closestFeature;}            function  pointsEquals(pt1,pt2) {return pt1[ 0]===pt2[ 0]&&pt1[ 1]=== pt2[1];}const  __WEBPACK_DEFAULT_EXPORT__ =lineSplit;},"../node_modules/@turf/line-to-polygon/dist/es/index.js":( __unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) => {"use strict";__webpack_require__.r(    __webpack_exports__)                                                                                                                                                                                  ;__webpack_require__.  d(__webpack_exports__,  { "default"   : ()  =>__WEBPACK_DEFAULT_EXPORT__ }) ;var     _turf_bbox__WEBPACK_IMPORTED_MODULE_0__ =        __webpack_require__(                                                                                                                                                                                           
                                                                                                                          "../node_modules/@turf/bbox/dist/es/index.js" ) ;var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_2__  =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js") ;var _turf_clone__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/@turf/clone/dist/es/index.js" );function lineToPolygon(lines,options){if (options ===void 0){options ={};}var _a,_b,_c;var properties =options.properties;var autoComplete =(_a = options.autoComplete)!==null  &&_a !==void 0 ?_a :true;var orderCoords =(_b =options.      orderCoords)!==null  &&_b !==void  0 ?  _b : true;var                                                                                                                                                                                                       mutate  =(_c =options.mutate)!==null &&             _c !==void 0 ?_c :false;if (!mutate){lines =(0,_turf_clone__WEBPACK_IMPORTED_MODULE_3__["default"])(lines);} switch (lines.type){case "FeatureCollection":var coords =[];lines.features.forEach(function (line){coords.push((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(lineStringToPolygon(line,{},autoComplete,orderCoords)));});return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.       multiPolygon)  (                                                                                         coords,  properties) ;default: return  lineStringToPolygon( lines,properties,          autoComplete,                                                                                                                                                                                                                                                                                                                                                                                                          orderCoords);} } function lineStringToPolygon(line,properties, autoComplete,        orderCoords)    { properties =                                                                                                                                                                                                                                                                                                      properties ?    properties :line.type  ==="Feature" ?   line.properties :{ };var  geom  =(0,    _turf_invariant__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                      getGeom)(line);var coords =geom.coordinates;var type = geom. type;if   (! coords.    length)throw  new                                                                                                                                                                                                                                                                                 Error(    "line must contain coordinates"  );switch  (type){ case "LineString" :if (    autoComplete)coords  =                                                                                              autoCompleteCoords(coords);return (0,             _turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)([coords],properties);case "MultiLineString":var multiCoords =[];var largestArea =0;coords.forEach(function (coord){if (autoComplete)coord =autoCompleteCoords(coord);if  (orderCoords){var area =calculateArea((0,           _turf_bbox__WEBPACK_IMPORTED_MODULE_0__[                                                                                                   "default"])((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.lineString)(coord)));if ( area >largestArea){multiCoords.unshift( coord) ;largestArea =area;}else multiCoords.push(coord);}else {multiCoords.push(coord) ;}});return (0, _turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)(multiCoords,properties);default:             throw new Error("geometry type "+type +" is not supported");}                                                                                                                                                 }function autoCompleteCoords(       coords){var first =coords[0];var  x1 =first[0];var y1 =first[1] ;var last =    coords[   coords.                                                         length -1] ;var x2 =last[ 0];var y2  =              last[1];if  (  x1  !==x2 ||y1  !==y2){ coords.push(first);} return coords;}function  calculateArea(bbox)  {var west =bbox[  0];var south =bbox[ 1];var east  =bbox[2];var north  =bbox[ 3];return Math.abs(west  - east)* Math.abs(south -north);}const __WEBPACK_DEFAULT_EXPORT__  = lineToPolygon;},    "../node_modules/@turf/mask/dist/es/index.js"                                                                                                                                                          : (     __unused_webpack___webpack_module__, __webpack_exports__,   __webpack_require__) => {   "use strict" ;__webpack_require__.  r(          __webpack_exports__)                                                                                                                                                                                                       
                                                                                                                                  ;__webpack_require__.  d(           __webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var polygon_clipping__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/polygon-clipping/dist/polygon-clipping.umd.js" );function mask(polygon,mask){var maskPolygon =createMask(mask);var polygonOuters =null;if (polygon.type ==="FeatureCollection")polygonOuters =unionFc(polygon);else polygonOuters =createGeomFromPolygonClippingOutput(polygon_clipping__WEBPACK_IMPORTED_MODULE_1__.union(          polygon.geometry.coordinates));polygonOuters.geometry.                                                                                                                                                                                                         coordinates.forEach(function   ( contour) {                maskPolygon.geometry.coordinates.push(contour[0]);}) ;return maskPolygon;}function unionFc(fc){var unioned =fc. features. length ===2 ?polygon_clipping__WEBPACK_IMPORTED_MODULE_1__.union( fc.features[0].geometry.coordinates, fc.features[1].geometry.coordinates):polygon_clipping__WEBPACK_IMPORTED_MODULE_1__.union. apply(polygon_clipping__WEBPACK_IMPORTED_MODULE_1__,fc.features.map(      function   (  f){                                                                                       return  f.geometry.coordinates;})) ;return createGeomFromPolygonClippingOutput(    unioned);} function                                                                                                                                                                                                                                                                                                                                                                                                            createGeomFromPolygonClippingOutput(     unioned)    {   return     (  0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                                                                multiPolygon)   ( unioned);}function createMask(mask){var world  =[[[180,90],[ -180,90],[ -   180, -90],[180, -90],                                                                                                                                                                                                                                               [180,90]] ];var coordinates =mask &&mask.geometry.coordinates  ||world;return (0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                       polygon)    (   coordinates)   ;}const   __WEBPACK_DEFAULT_EXPORT__  =      mask;} ,   "../node_modules/@turf/meta/dist/es/index.js"                                                                            : (__unused_webpack___webpack_module__,                 __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"coordAll" :() =>coordAll,"coordEach": ()  =>coordEach,"coordReduce":( ) =>coordReduce,"featureEach": ( ) =>        featureEach,  "featureReduce"    :   ()   =>                                                                                                    featureReduce,"findPoint":() =>findPoint,"findSegment":( ) =>findSegment,"flattenEach":() => flattenEach, "flattenReduce":() =>flattenReduce,"geomEach":() =>geomEach,"geomReduce":() =>geomReduce,"lineEach":() =>lineEach,"lineReduce":() =>lineReduce,"propEach":() =>propEach,"propReduce":() =>propReduce,                 "segmentEach" : (   ) => segmentEach,   "segmentReduce" :( ) =>                                                                                                                                                      segmentReduce   })      ;var            _turf_helpers__WEBPACK_IMPORTED_MODULE_0__     =__webpack_require__(  "../node_modules/@turf/helpers/dist/es/index.js"                               );function coordEach(  geojson,callback,                 excludeWrapCoord){if (geojson ===null)return ;var j,k,l,geometry,stopG,coords,geometryMaybeCollection,wrapShrink = 0,coordIndex =0, isGeometryCollection,type =geojson.type,isFeatureCollection =type  ==="FeatureCollection",isFeature =type ==="Feature",stop =isFeatureCollection ?geojson.     features.length :                                                                                                                                                                                     1;for   ( var  featureIndex = 0;featureIndex < stop;featureIndex++ ){geometryMaybeCollection = isFeatureCollection ? geojson.features[    featureIndex]. geometry :                                                                                                                                                                                                        
                                                                                                                               isFeature  ?geojson.geometry  :          geojson;isGeometryCollection =geometryMaybeCollection ?geometryMaybeCollection.type ==="GeometryCollection":false;stopG =isGeometryCollection ?geometryMaybeCollection.geometries.length :1;for (var geomIndex =0;geomIndex <stopG;geomIndex++ ){var multiFeatureIndex =0;var geometryIndex =0;geometry =isGeometryCollection ?geometryMaybeCollection.geometries[geomIndex]:geometryMaybeCollection;if (geometry ===null)continue ;coords =geometry.coordinates;var geomType =geometry.type;wrapShrink =excludeWrapCoord &&(geomType ==="Polygon"||geomType ==="MultiPolygon")?1 :0;switch (geomType){          case null: break   ;case "Point" :if ( callback(coords,                                                                                                                                                                                                            coordIndex,   featureIndex,   multiFeatureIndex,                geometryIndex)===false)return false;coordIndex++ ;multiFeatureIndex++ ;break ;case "LineString":case "MultiPoint":for (j =0;j <coords. length;j++ ){if (callback(coords[j],coordIndex, featureIndex,multiFeatureIndex,geometryIndex)===false)return false;coordIndex++ ;if (geomType ==="MultiPoint")multiFeatureIndex++ ;}if (geomType ==="LineString")multiFeatureIndex++ ;break ;case       "Polygon" : case                                                                                       "MultiLineString":for (j =0;j <coords.length;j++ ) {  for (k =0; k <coords[ j].    length -wrapShrink;                                                                                                                                                                                                                                                                                                                                                                                                              k++  ){if ( callback( coords[    j]  [ k] , coordIndex,  featureIndex,     multiFeatureIndex, geometryIndex)                                                                                                                                                                                                                                                                                                            === false)      return   false;coordIndex++  ;} if   (  geomType ==="MultiLineString")    multiFeatureIndex++ ;if                                                                                                                                                                                                                                              (   geomType ==="Polygon"    ) geometryIndex++    ;} if (geomType  ==="Polygon" )   multiFeatureIndex++                                                                                                                                                                                                                                                                               ;break ;case "MultiPolygon":for (j =0;j <coords.length;j++ ){geometryIndex =0;for (k  = 0;k <coords[j]. length;                                                                                                k++ ){ for ( l =0; l < coords[j][ k]. length -                  wrapShrink;l++ ){if  (callback(coords[ j][k][l],coordIndex,featureIndex, multiFeatureIndex,geometryIndex)===false) return  false;coordIndex++  ;} geometryIndex++ ;}multiFeatureIndex++ ;}break ;case "GeometryCollection":for (j = 0;j <geometry.      geometries.length;j++  )if  (coordEach(geometry.                                                                                                    geometries[j],callback, excludeWrapCoord)===false)return   false;break ;default:throw new  Error("Unknown Geometry Type");}} }} function coordReduce(geojson, callback,initialValue,excludeWrapCoord){var previousValue =initialValue;coordEach(geojson,function (currentCoord,coordIndex,featureIndex,                  multiFeatureIndex, geometryIndex){if (coordIndex ===0 &&initialValue                                                                                                                                                         === undefined) previousValue  =           currentCoord;else   previousValue   = callback(    previousValue,        currentCoord,                                                              coordIndex,featureIndex,   multiFeatureIndex,                geometryIndex);},excludeWrapCoord);return previousValue;}function propEach(geojson,callback){var i;switch (geojson. type){case "FeatureCollection":for (i = 0;i < geojson.features.length; i++ ){if (callback(geojson.features[ i].properties,i) ===false)break ;}break ;case "Feature":     callback(geojson.                                                                                                                                                                                      properties,  0);break ;}}function propReduce(geojson, callback,initialValue){var previousValue =initialValue;propEach(geojson,function (          currentProperties,                                                                                                                                                                                                      
                                                                                                                               featureIndex){if (featureIndex ===         0 && initialValue ===undefined)previousValue = currentProperties;else previousValue =callback(previousValue,currentProperties, featureIndex);} );return previousValue;}function featureEach(geojson,callback){if (geojson.type ==="Feature"){callback(geojson,0);}else if (geojson. type ==="FeatureCollection") {for (var  i  =0;i <geojson.features.length;i++ ){if (callback(geojson.features[i],i)===false)break ;}}}function featureReduce(geojson,callback,initialValue){var previousValue =initialValue;featureEach(geojson,function (  currentFeature,featureIndex){if (featureIndex ===0 &&             initialValue     ===   undefined) previousValue  =                                                                                                                                                                                                                   currentFeature;else previousValue      =  callback(                   previousValue,currentFeature,featureIndex);});return previousValue;}function coordAll(geojson){var coords =[];coordEach(geojson,function (coord){coords.push(coord);});return coords;} function geomEach(geojson,callback){var i,j,g,geometry,stopG,geometryMaybeCollection,isGeometryCollection,featureProperties,featureBBox,featureId,featureIndex =0,isFeatureCollection =     geojson. type  ===                                                                                        "FeatureCollection"  ,isFeature  =geojson.  type  ===  "Feature" , stop      =    isFeatureCollection                                                                                                                                                                                                                                                                                                                                                                                                      ?       geojson.features.length   :   1;for  (  i =   0; i  < stop;i++  )  {        geometryMaybeCollection       =                                                                                                                                                                                                                                                                                                             isFeatureCollection   ?  geojson. features[i] . geometry  :isFeature  ? geojson.geometry  : geojson;featureProperties                                                                                                                                                                                                                                           =isFeatureCollection ?geojson.  features[i] .  properties  :isFeature ?geojson.     properties   :{  }                                                                                                                                                                                                                                                                                ;featureBBox =isFeatureCollection ?geojson.features[i]. bbox :isFeature ?geojson.    bbox :undefined;featureId =                                                                                                isFeatureCollection     ?geojson.  features[ i].id  :                isFeature ?geojson.id :undefined;isGeometryCollection =geometryMaybeCollection ?geometryMaybeCollection.type === "GeometryCollection":false;stopG =isGeometryCollection ?geometryMaybeCollection.geometries.length :1;for (g =0;g <stopG;       g++ )  {   geometry  =  isGeometryCollection   ?                                                                                                     geometryMaybeCollection.geometries[g]:geometryMaybeCollection;if (geometry === null){if (callback( null,featureIndex,featureProperties, featureBBox,featureId)=== false)return false;continue ;}switch ( geometry. type){case "Point":case "LineString":case "MultiPoint":case   "Polygon":case                 "MultiLineString":case "MultiPolygon": {if (callback(geometry,featureIndex,                                                                                                                                                              featureProperties,  featureBBox,        featureId)===false)return false;break ;}case "GeometryCollection" :{for (j  = 0; j  <                                                              geometry. geometries.length;  j++ ){ if   ( callback(                  geometry.geometries[j],featureIndex,featureProperties, featureBBox,featureId)===false)return false;}break ;}default:throw new Error("Unknown Geometry Type");}}featureIndex++ ;}}function geomReduce(geojson,callback,initialValue){ var previousValue =initialValue;geomEach(    geojson,function (                                                                                                                                                                                      currentGeometry, featureIndex, featureProperties,featureBBox,featureId){if (featureIndex === 0 &&initialValue ===undefined)previousValue   =        currentGeometry;else                                                                                                                                                                                                  
                                                                                                                                    previousValue    =  callback(          previousValue,currentGeometry,featureIndex,featureProperties,featureBBox,featureId);} );return previousValue;}function flattenEach(geojson,callback){ geomEach(geojson,function (geometry, featureIndex,properties,bbox,id){var type =geometry ===null ?null :geometry.type;switch (type){case null:case "Point":case "LineString" : case "Polygon" :if (callback((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.feature)(geometry,properties,{ bbox: bbox,id:id }) ,featureIndex,0) ===false)return  false;return ;}var geomType;switch (type) {case "MultiPoint":geomType = "Point" ;break ;case         "MultiLineString" : geomType ="LineString";break  ;case                                                                                                                                                                                                                    "MultiPolygon" : geomType  = "Polygon"   ;break ;}for  (   var                                                                                                                                                                                                                                                                                                                                                                                          multiFeatureIndex =                                                                                                                                                                          0;multiFeatureIndex                                                                                                                                                                                                                                                                                                                                                                                                       <                                                                                geometry.  coordinates.  length;                                                                                                                                                                                                                                                                                                              multiFeatureIndex++                                                                     )   {   var  coordinate  =                                                                                                                                                                                                                                                                                                                                           geometry.                                                                                                                                                                                                                                                                                 coordinates[                                                                      multiFeatureIndex];var geom =                                                                                                     { type:geomType,coordinates: coordinate };if ( callback((0,                                                                                                                                                                                                                                                 _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.feature)                                                                                                      (geom,properties),featureIndex,multiFeatureIndex)===false)return false;}} );}                                                                                                                                                                                                                          function  flattenReduce(  geojson, callback,initialValue)   {  var previousValue =                                                                                                                                                                  initialValue;flattenEach(  geojson,         function (currentFeature, featureIndex,multiFeatureIndex){  if (featureIndex ===                                                                 0  &&multiFeatureIndex  ===0  &&initialValue ===  undefined)                                                                                                                                                                                                                                                                                          previousValue   =                                                                                                                                                                                       currentFeature;else                                  previousValue   =   callback(  previousValue,   currentFeature, featureIndex,      multiFeatureIndex) ;} )                                                                                                                                                                                                          
                                                                                                                                   ;return previousValue;} function          segmentEach(geojson,callback){flattenEach(geojson,function (feature,featureIndex,multiFeatureIndex){var segmentIndex =0;if  (!feature.geometry) return ;var type =feature.geometry.type;if (type  ==="Point"||type ==="MultiPoint")return ;var previousCoords;var previousFeatureIndex  =0;var previousMultiIndex =0;var prevGeomIndex =0;if (coordEach(feature,function (currentCoord,coordIndex,featureIndexCoord, multiPartIndexCoord,geometryIndex){if (previousCoords ===undefined   ||featureIndex > previousFeatureIndex ||multiPartIndexCoord  > previousMultiIndex ||geometryIndex >                  prevGeomIndex)    {        previousCoords     =                                                                                                                                                                                                                        currentCoord;previousFeatureIndex         = featureIndex;previousMultiIndex  =                                                                                                                                                                                                                                                                                                                                                                       multiPartIndexCoord;prevGeomIndexgeometryIndex;segmentIndex                                                    =0;return ;}var currentSegment =(0,                                                                                                                                                                                                                                                                                                                _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                 lineString)     (   [                                                                                                                                                                                                                                                                                                                                     previousCoords,                                                                                                                                                                                                                                                                                  currentCoord]                                                                    ,   feature.properties);if (                                                                                                         callback(  currentSegment,featureIndex,multiFeatureIndex,    geometryIndex,                                                                                                                                                                                                                           segmentIndex)  ===false)return  false;segmentIndex++                                                                                                         ;previousCoords  = currentCoord;}) === false)return    false;})  ;} function                                                                                                                                                                                                       segmentReduce(geojson, callback,  initialValue) {  var previousValue = initialValue;var  started  =                                                                                                                                                                    false;segmentEach( geojson,   function  (         currentSegment,   featureIndex,   multiFeatureIndex,       geometryIndex,                                                                  segmentIndex){if (started ===false &&initialValue === undefined)previousValue =                                                                                                                                                                                                                                                                      currentSegment;else                                                                                                                                                                                       previousValue                                     =  callback(  previousValue, currentSegment,   featureIndex,multiFeatureIndex,   geometryIndex,segmentIndex)                                                                                                                                                                                                          
                                                                                                                                      ;started     =   true;}       )         ;return previousValue;}function lineEach(geojson,callback){if (!geojson)throw new Error("geojson is required");flattenEach(geojson,function (feature,featureIndex,multiFeatureIndex){if (feature.geometry ===null)return ;var type =feature.geometry.type;var coords =feature. geometry.coordinates;switch ( type){case "LineString":if (callback(feature,featureIndex,multiFeatureIndex, 0,0)===false)return false;break ;case "Polygon":for (var geometryIndex =0;geometryIndex <coords.length;geometryIndex++ ){if (callback((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.lineString)(         coords[geometryIndex],feature.properties),featureIndex,                                                                                                                                                                                                                             multiFeatureIndex,geometryIndex)===false)return false;}break ;}});} function lineReduce(geojson, callback,initialValue){var  previousValue  =initialValue;lineEach(geojson,function (currentLine,featureIndex,multiFeatureIndex,geometryIndex){if (featureIndex ===0 && initialValue ===undefined)previousValue =currentLine;else previousValue = callback(previousValue, currentLine, featureIndex,multiFeatureIndex,geometryIndex);});return previousValue;}function                                                                                              findSegment( geojson,   options)     {    options  =     options   || {    }  ;if   (   !(   0,                                                                                                                                                                                                                                                                                                                                                                                                      _turf_helpers__WEBPACK_IMPORTED_MODULE_0__. isObject)( options) ) throw    new   Error("options is invalid");var                                                                                                                                                                                                                                                                                                                   featureIndex =options.featureIndex ||0;var multiFeatureIndex =options.multiFeatureIndex ||0;var geometryIndex =                                                                                                                                                                                                                                                options. geometryIndex ||0;var segmentIndex  =  options.segmentIndex ||0;var properties   = options.                                                                                                                                                                                                                                                                                   properties;var  geometry;switch (geojson.type) {case "FeatureCollection":if (featureIndex <0)featureIndex  =                                                                                                        geojson.features.  length +featureIndex;properties =properties ||geojson. features[featureIndex] .properties;geometry =geojson.features[featureIndex].geometry;break ;case "Feature":properties   =properties || geojson.properties;geometry =geojson.geometry;break ;case "Point":case "MultiPoint":return null;case "LineString" : case  "Polygon":case                                                                                                          "MultiLineString" :case  "MultiPolygon" :   geometry =geojson;break ;default:    throw    new  Error("geojson is invalid");}  if (geometry ===  null)return  null;var   coords  = geometry.  coordinates;switch ( geometry.type) {case  "Point": case   "MultiPoint":return null;case "LineString":if  ( segmentIndex <0)segmentIndex = coords. length  +segmentIndex - 1;return  (0,                                                                                                                                                                          _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.           lineString)( [coords[segmentIndex],  coords[  segmentIndex + 1]],                                                                     properties,options);case "Polygon"  :if ( geometryIndex <0) geometryIndex =coords.length +geometryIndex;if (segmentIndex <0)segmentIndex  =coords[geometryIndex].length + segmentIndex - 1;return ( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.lineString) ([ coords[geometryIndex][segmentIndex],coords[geometryIndex][segmentIndex +1]],properties,options);case                                                                                                                                                                                         "MultiLineString" :if (multiFeatureIndex < 0)    multiFeatureIndex  =coords.  length +multiFeatureIndex;if  (segmentIndex  <0)      segmentIndex  =  coords[                                                                                                                                                                                                           
                                                                                                                                       multiFeatureIndex].    length  +          segmentIndex -1;return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.lineString)([coords[multiFeatureIndex][segmentIndex],coords[multiFeatureIndex][segmentIndex +1]],properties,options);case "MultiPolygon":if (multiFeatureIndex <0)multiFeatureIndex =coords.length +  multiFeatureIndex;if  (geometryIndex <0)geometryIndex =coords[ multiFeatureIndex] .length +geometryIndex;if (segmentIndex <0)segmentIndex =coords[multiFeatureIndex][geometryIndex].length -segmentIndex -1;return  (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__. lineString)([coords[multiFeatureIndex][         geometryIndex][segmentIndex] ,coords[ multiFeatureIndex][                                                                                                                                                                                                                               geometryIndex][segmentIndex +1]],properties,options);}throw new Error("geojson is invalid");}function findPoint(geojson,options){options =options ||{};if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.isObject)(options))throw new Error("options is invalid");var featureIndex =options.featureIndex ||0;var multiFeatureIndex =options.multiFeatureIndex ||0;var geometryIndex =options.geometryIndex ||0;var coordIndex =options.coordIndex ||0;var properties                                                                                      =options.properties;var geometry;switch (geojson.type){case "FeatureCollection":if (  featureIndex <0)                                                                                                                                                                                                                                                                                                                                                                                                       featureIndex =geojson.features.length +featureIndex;properties =properties ||geojson. features[featureIndex].                                                                                                                                                                                                                                                                                                                      properties;geometry =geojson.features[featureIndex].geometry;break ;case  "Feature":properties  =properties ||                                                                                                                                                                                                                                              geojson.properties;geometry  =geojson.geometry;break ;case "Point": case "MultiPoint":return null;case                                                                                                                                                                                                                                                                                    "LineString":case "Polygon":case  "MultiLineString" : case "MultiPolygon":geometry =geojson;break ;default:                                                                                                          throw new Error("geojson is invalid");}if (geometry ===null)return null;var coords  = geometry.coordinates;switch (geometry.type){case "Point":return (0, _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.point)( coords,properties,options);case "MultiPoint": if  ( multiFeatureIndex <0)multiFeatureIndex = coords.length +multiFeatureIndex;return (0,                                                                                                            _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.point) (coords[multiFeatureIndex],    properties,options);case "LineString":if (coordIndex <0)coordIndex =coords.length +coordIndex;return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.point)(coords[coordIndex],properties,options);case "Polygon":if (geometryIndex <0)geometryIndex =coords.length +geometryIndex;if (coordIndex <                                                                                                                                                                             0)coordIndex   = coords[  geometryIndex]  .length +                   coordIndex;return    (   0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                               point)(coords[geometryIndex][coordIndex],properties,options) ;case "MultiLineString":if (multiFeatureIndex <0)multiFeatureIndex =coords.length +multiFeatureIndex;if (coordIndex <0)coordIndex =coords[multiFeatureIndex].length +coordIndex;return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.point)(coords[multiFeatureIndex][coordIndex],properties,options)                                                                                                                                                                                         ;case "MultiPolygon":if (multiFeatureIndex  <   0)  multiFeatureIndex =coords. length +multiFeatureIndex;if (geometryIndex <0)     geometryIndex  =  coords[                                                                                                                                                                                                           
                                                                                                                                         multiFeatureIndex] .length     +          geometryIndex;if ( coordIndex <0)coordIndex =coords[multiFeatureIndex][geometryIndex].length -coordIndex;return (0, _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.point)(coords[multiFeatureIndex][geometryIndex][coordIndex],properties,options);}throw new Error("geojson is invalid" );}},"../node_modules/@turf/midpoint/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) => {"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var                _turf_bearing__WEBPACK_IMPORTED_MODULE_0__       =                                                                                                                                                                                                                                    __webpack_require__("../node_modules/@turf/bearing/dist/es/index.js");var _turf_destination__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/destination/dist/es/index.js");var _turf_distance__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/distance/dist/es/index.js");function midpoint(point1,point2){var dist =(0,_turf_distance__WEBPACK_IMPORTED_MODULE_2__["default"])(point1,point2);var heading =(0,                                                                                       _turf_bearing__WEBPACK_IMPORTED_MODULE_0__[  "default" ] )   ( point1,  point2) ;var   midpoint   =(0,                                                                                                                                                                                                                                                                                                                                                                                                       _turf_destination__WEBPACK_IMPORTED_MODULE_1__["default"])(point1, dist /2,  heading);return midpoint;}const                                                                                                                                                                                                                                                                                                                           __WEBPACK_DEFAULT_EXPORT__   =   midpoint;}  ,  "../node_modules/@turf/moran-index/dist/es/index.js":    (                                                                                                                                                                                                                                              __unused_webpack___webpack_module__,   __webpack_exports__,  __webpack_require__) =>  {   "use strict"                                                                                                                                                                                                                                                                                      ;__webpack_require__.r( __webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":()  =>                                                                                                             __WEBPACK_DEFAULT_EXPORT__ });var _turf_distance_weight__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/distance-weight/dist/es/index.js");var _turf_meta__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");function __WEBPACK_DEFAULT_EXPORT__(fc,options){var inputField                                                                                                             =options.inputField;var threshold =options.threshold ||100000;var p =options.   p ||2;var binary =options.binary ||false;var alpha =options.alpha || -1;var standardization =options.standardization ||true;var weight =(0,_turf_distance_weight__WEBPACK_IMPORTED_MODULE_0__["default"])(fc,{alpha:alpha,binary:binary,p:p,standardization:standardization,threshold:threshold }                                                                                                                                                                                 ) ;var y =[];(0, _turf_meta__WEBPACK_IMPORTED_MODULE_1__.                                         featureEach) ( fc,                                                                          function (feature){var feaProperties =feature.properties ||{};y.push(feaProperties[ inputField]);});var yMean =mean(y);var yVar =variance(y);var weightSum =0;var s0 =0;var s1 =0;var s2 =0;var n =weight.length;for (var i =0;i <n;i++ ){var subS2 =0;for (var j =0;j <n;j++ ){weightSum +=weight[i][j]*(y[i]-yMean)*(y[j]-yMean);s0 +=weight[i][j];s1 +=Math.                                                                                                                                                                                         pow(weight[i][j]+ weight[j] [ i], 2);subS2 +=  weight[i][j]+weight[j][i];}s2 +=Math.pow(subS2,2);}s1 =0.5 *s1;var moranIndex =   weightSum  /s0 /  yVar;var                                                                                                                                                                                                            
                                                                                                                                        expectedMoranIndex = -1 /(n -1);var          vNum  =n *n *s1 -n *s2 +3 *(s0 *s0);var vDen =(n -1)*(n +1)*(s0 *s0);var vNorm =vNum /vDen -expectedMoranIndex *expectedMoranIndex;var stdNorm =Math.sqrt(vNorm);var zNorm =(moranIndex -expectedMoranIndex)/stdNorm;return { expectedMoranIndex:expectedMoranIndex,moranIndex:moranIndex,stdNorm:stdNorm,zNorm:zNorm };}function mean(y){var sum =0;for (var _i =0,y_1 =y;_i <y_1.length;_i++ ){var item = y_1[_i];sum +=item;}return sum /y.length;}function variance(y){var yMean =mean(y);var sum =0;for (var _i =0,y_2 =y;_i <y_2.length;_i++ ){var item =y_2[_i];sum +=           Math.pow(item   - yMean,2);}return  sum /y.  length;}},                                                                                                                                                                                                                                        "../node_modules/@turf/nearest-point-on-line/dist/es/index.js"  :    ( __unused_webpack___webpack_module__,__webpack_exports__,  __webpack_require__) => {  "use strict";__webpack_require__. r( __webpack_exports__);__webpack_require__.d(    __webpack_exports__, { "default" :  ( )    =>   __WEBPACK_DEFAULT_EXPORT__ } )    ;var _turf_bearing__WEBPACK_IMPORTED_MODULE_0__  = __webpack_require__( "../node_modules/@turf/bearing/dist/es/index.js");var                                                                                                   _turf_distance__WEBPACK_IMPORTED_MODULE_1__               =           __webpack_require__(                                                                                                                                                                                                                                                                                                                                                                                                        "../node_modules/@turf/distance/dist/es/index.js") ;var  _turf_destination__WEBPACK_IMPORTED_MODULE_2__  =                                                                                                                                                                                                                                                                                                                               __webpack_require__(         "../node_modules/@turf/destination/dist/es/index.js"         )       ;var                                                                                                                                                                                                                                                           _turf_line_intersect__WEBPACK_IMPORTED_MODULE_3__                =    __webpack_require__(                                                                                                                                                                                                                                                                                     "../node_modules/@turf/line-intersect/dist/es/index.js" );var  _turf_meta__WEBPACK_IMPORTED_MODULE_4__  =                                                                                                                __webpack_require__( "../node_modules/@turf/meta/dist/es/index.js")   ;var _turf_helpers__WEBPACK_IMPORTED_MODULE_5__  =  __webpack_require__( "../node_modules/@turf/helpers/dist/es/index.js" )   ;var  _turf_invariant__WEBPACK_IMPORTED_MODULE_6__ =__webpack_require__(  "../node_modules/@turf/invariant/dist/es/index.js" ) ;function                                                                                                                nearestPointOnLine(lines,pt,options){if (options  ===void 0){options ={};}var   closestPt =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.point)([Infinity,Infinity],{dist:Infinity });var length =0.0;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_4__.flattenEach)(lines,function (line){var coords =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_6__.getCoords)(line);for (var i =                                                                                                                                                                                     0; i     <  coords. length     - 1;   i++  ) {    var  start  =  (     0,                        _turf_helpers__WEBPACK_IMPORTED_MODULE_5__.                                                    point)( coords[  i]);start.properties.dist = ( 0, _turf_distance__WEBPACK_IMPORTED_MODULE_1__["default"] )(pt,start, options) ;var stop_1 =(0,  _turf_helpers__WEBPACK_IMPORTED_MODULE_5__. point) (coords[  i  +1]) ;stop_1.properties.dist =( 0,  _turf_distance__WEBPACK_IMPORTED_MODULE_1__[ "default" ])(pt, stop_1,options);var   sectionLength = (  0,                                                                                                                                                                                          _turf_distance__WEBPACK_IMPORTED_MODULE_1__[  "default" ]) (start,stop_1, options)   ;var  heightDistance =Math. max( start.     properties. dist,stop_1.                                                                                                                                                                                                             
                                                                                                                                          properties.dist);var direction =(0,          _turf_bearing__WEBPACK_IMPORTED_MODULE_0__["default"])(start,stop_1);var perpendicularPt1 = (0,_turf_destination__WEBPACK_IMPORTED_MODULE_2__["default" ])(pt,heightDistance,direction +90, options);var  perpendicularPt2   =(0, _turf_destination__WEBPACK_IMPORTED_MODULE_2__["default"])(pt,heightDistance, direction  -90,options);var intersect =(0, _turf_line_intersect__WEBPACK_IMPORTED_MODULE_3__["default" ])((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.lineString)([ perpendicularPt1.geometry.coordinates,perpendicularPt2.geometry. coordinates]) ,(0,          _turf_helpers__WEBPACK_IMPORTED_MODULE_5__.lineString)([                                                                                                                                                                                                                                             start.geometry.coordinates,stop_1.geometry.coordinates]));var intersectPt =null;if (intersect.features.length >0){intersectPt =intersect.features[0];intersectPt.properties.dist =(0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(pt,intersectPt,options);intersectPt.properties.location =length +(0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(start,intersectPt,options);}if (start.properties. dist <closestPt.properties.dist){                                                                                       closestPt  =start;closestPt.  properties. index = i;closestPt.properties.location =length;}if (stop_1.                                                                                                                                                                                                                                                                                                                                                                                                        properties.dist <closestPt.properties.dist){closestPt =stop_1;closestPt.properties.index =i +1;closestPt.                                                                                                                                                                                                                                                                                                                            properties.location = length  + sectionLength;}if (intersectPt && intersectPt.properties.dist < closestPt.                                                                                                                                                                                                                                                 properties.dist){closestPt  =intersectPt;closestPt.properties.index =i;}length  +=sectionLength;}})                                                                                                                                                                                                                                                                                             ;return        closestPt;}   const        __WEBPACK_DEFAULT_EXPORT__  = nearestPointOnLine;}    ,                                                                                                                       "../node_modules/@turf/nearest-point-to-line/dist/es/index.js": (     __unused_webpack___webpack_module__,   __webpack_exports__, __webpack_require__)  => { "use strict"  ;__webpack_require__. r( __webpack_exports__)  ;__webpack_require__.d( __webpack_exports__,{ "default":   ( )   => __WEBPACK_DEFAULT_EXPORT__  }   ) ;var                                                                                                                         _turf_invariant__WEBPACK_IMPORTED_MODULE_0__   =  __webpack_require__(       "../node_modules/@turf/invariant/dist/es/index.js"  )   ;var   _turf_meta__WEBPACK_IMPORTED_MODULE_1__      =   __webpack_require__(  "../node_modules/@turf/meta/dist/es/index.js" )     ;var     _turf_point_to_line_distance__WEBPACK_IMPORTED_MODULE_2__ =    __webpack_require__(                                                                                                                                                                                         "../node_modules/@turf/point-to-line-distance/dist/es/index.js") ;var  object_assign__WEBPACK_IMPORTED_MODULE_3__ =                                                                              __webpack_require__( "../node_modules/object-assign/index.js");function nearestPointToLine(points,line,options) {if (options ===void 0){options ={};}var units  =options.units;var properties  =options.properties ||{ };var pts =normalize(points);if (!pts.features.length){throw new Error("points must contain features");}if  (!line){throw new Error(                                                                                                                                                                                              "line is required"   ) ;} if  (    (0,   _turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getType) (line) !=="LineString"){     throw      new     Error(                                                                                                                                                                                                             
                                                                                                                                           "line must be a LineString" ) ;} var          dist =Infinity;var pt =null;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_1__.featureEach)(pts,  function   ( point)    { var d = (0,_turf_point_to_line_distance__WEBPACK_IMPORTED_MODULE_2__["default"])(point,  line,{units: units } );if  ( d < dist) { dist  = d;pt  = point;}} );if (pt) {pt.properties =object_assign__WEBPACK_IMPORTED_MODULE_3__({ dist:dist },pt. properties, properties);}return  pt;}function normalize(points){var  features = [ ];var type =points.geometry  ? points.geometry. type :points.type;switch (type){case "GeometryCollection":(0,          _turf_meta__WEBPACK_IMPORTED_MODULE_1__.geomEach)( points,                                                                                                                                                                                                                                                 function  (geom){if  (geom.type ==="Point"){features.push({type:"Feature" ,properties:{ },geometry:geom } );} })  ;return  {type:"FeatureCollection" , features:features }  ;case  "FeatureCollection":points.features =points.features.filter(function ( feature){return  feature.geometry.type  ==="Point";});return points;default:throw new Error("points must be a Point Collection" );}}  const __WEBPACK_DEFAULT_EXPORT__ =nearestPointToLine;} ,                                                                                           "../node_modules/@turf/nearest-point/dist/es/index.js":   (    __unused_webpack___webpack_module__,                                                                                                                                                                                                                                                                                                                                                                                                         __webpack_exports__,__webpack_require__) => {"use strict"  ;__webpack_require__. r(__webpack_exports__)                                                                                                                                                                                                                                                                                                                                ;__webpack_require__.d(__webpack_exports__,{ "default"   :(  ) => __WEBPACK_DEFAULT_EXPORT__   }) ;var                                                                                                                                                                                                                                                               _turf_clone__WEBPACK_IMPORTED_MODULE_0__          =                __webpack_require__(                                                                                                                                                                                                                                                                                        "../node_modules/@turf/clone/dist/es/index.js"  );var _turf_distance__WEBPACK_IMPORTED_MODULE_1__  =                                                                                                                        __webpack_require__( "../node_modules/@turf/distance/dist/es/index.js");var _turf_meta__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js") ;function  nearestPoint(targetPoint,points){if  (!targetPoint)throw new Error( "targetPoint is required");if  (!points) throw  new Error(                                                                                                                     "points is required");var nearest;var minDist =Infinity;var bestFeatureIndex =  0;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.featureEach)(points,function (pt,featureIndex){var distanceToPoint =(0, _turf_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(targetPoint,pt) ;if (distanceToPoint <minDist){bestFeatureIndex =featureIndex;minDist = distanceToPoint;}} )                                                                                                                                                                                              ;nearest =( 0, _turf_clone__WEBPACK_IMPORTED_MODULE_0__["default"])(points.features[bestFeatureIndex]);nearest.                                                                                  properties.featureIndex =bestFeatureIndex;nearest.properties.distanceToPoint =minDist;return nearest;}const __WEBPACK_DEFAULT_EXPORT__ =nearestPoint;},"../node_modules/@turf/planepoint/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__, __webpack_require__) => { "use strict" ;__webpack_require__.r(__webpack_exports__)                                                                                                                                                                                                        ;__webpack_require__.     d(  __webpack_exports__,   {"default":  (  )  =>__WEBPACK_DEFAULT_EXPORT__ } );var    _turf_invariant__WEBPACK_IMPORTED_MODULE_0__                                                                                                                                                                                            
                                                                                                                                                      =      __webpack_require__(           "../node_modules/@turf/invariant/dist/es/index.js");function planepoint(point,triangle){var coord =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getCoord)(point);var geom =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getGeom)(triangle);var coords =geom.coordinates;var outer =coords[0];if (outer.length <4)throw new Error("OuterRing of a Polygon must have 4 or more Positions.");var properties =triangle.properties ||{};var a =properties.a;var b =properties.b;var c =properties.c;var x =coord[0];var y =coord[1];var x1 =outer[0][0];var y1           =outer[0][1];var z1 =a !==undefined ?a :outer[0][2];var x2                                                                                                                                                                                                                                                      =outer[1][0];var y2 =outer[1][1];var z2 =b !==undefined ?b :outer[1][2];var x3 =outer[2][0];var y3 =outer[2][1];var z3 =c !==undefined ?c :outer[2][2];var z =(z3 *(x -x1)*( y -y2)+z1 *(x -x2)*(y -y3)+z2 *(x -x3)*(y -y1)-z2 *(x -x1)*(y -y3)-z3 *(x -x2)*(y -y1)-z1 *(x -x3)*(y -y2))/((x -x1)* (y -y2)+(x -x2)*(y -y3)+(x -x3)*(y -y1)-(x -x1)*(y -y3)-(x -x2)*(y -y1)-(x -x3)*(y -y2));return z;}const __WEBPACK_DEFAULT_EXPORT__ =planepoint;},                                                                                             "../node_modules/@turf/point-grid/dist/es/index.js"   :  (  __unused_webpack___webpack_module__,                                                                                                                                                                                                                                                                                                                                                                                                         __webpack_exports__,__webpack_require__)   =>{ "use strict";__webpack_require__.r(__webpack_exports__)                                                                                                                                                                                                                                                                                                                                 ;__webpack_require__.   d( __webpack_exports__,{  "default":( ) => __WEBPACK_DEFAULT_EXPORT__ } );var                                                                                                                                                                                                                                                              _turf_boolean_within__WEBPACK_IMPORTED_MODULE_0__          =         __webpack_require__(                                                                                                                                                                                                                                                                                                      "../node_modules/@turf/boolean-within/dist/es/index.js"            )             ;var                                                                                                                           _turf_distance__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/distance/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function pointGrid(bbox,cellSide,options){if (options  ===void 0){options ={};}if (                                                                                                                       options.mask &&!options.units)options.units ="kilometers";var results =[];var   west   =bbox[ 0];var south  = bbox[1]  ;var east = bbox[2];var north  =bbox[ 3];var xFraction =   cellSide /( 0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__["default"])([west,south],[ east,south],options);var cellWidth = xFraction  *(east -west)  ;var yFraction  =cellSide /( 0,                                                                                                                                                                                                     _turf_distance__WEBPACK_IMPORTED_MODULE_1__["default"])([west,south],[west,north], options);var cellHeight =                                                                                     yFraction *(north -south);var bboxWidth = east -west;var bboxHeight =north -south;var columns = Math.floor(bboxWidth /cellWidth);var rows =Math.floor(bboxHeight /cellHeight);var deltaX =(bboxWidth -columns *cellWidth)/2;var deltaY =(bboxHeight -rows *cellHeight)/2;var currentX =west  +deltaX;while (currentX <=east){var  currentY =south  +                                                                                                                                                                                             deltaY;while  (currentY <= north){ var      cellPt =(0, _turf_helpers__WEBPACK_IMPORTED_MODULE_2__.  point)([ currentX,      currentY]    ,  options.                                                                                                                                                                                                              
                                                                                                                                              properties);if (options.mask){if ((0,           _turf_boolean_within__WEBPACK_IMPORTED_MODULE_0__["default"]) (cellPt,options.mask))results.push(cellPt);}else { results.push(cellPt);}currentY +=cellHeight;}currentX +=cellWidth;}  return  (  0, _turf_helpers__WEBPACK_IMPORTED_MODULE_2__.featureCollection) (results) ;} const  __WEBPACK_DEFAULT_EXPORT__ =pointGrid;},"../node_modules/@turf/point-on-feature/dist/es/index.js" :(__unused_webpack___webpack_module__, __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.  d(              __webpack_exports__,   {   "default"    :    (  )   =>                                                                                                                                                                                                                                                           __WEBPACK_DEFAULT_EXPORT__    } )   ;var  _turf_explode__WEBPACK_IMPORTED_MODULE_0__   =   __webpack_require__("../node_modules/@turf/explode/dist/es/index.js"    )    ;var   _turf_center__WEBPACK_IMPORTED_MODULE_1__   = __webpack_require__("../node_modules/@turf/center/dist/es/index.js" )    ;var  _turf_nearest_point__WEBPACK_IMPORTED_MODULE_2__  = __webpack_require__(  "../node_modules/@turf/nearest-point/dist/es/index.js")  ;var                                                                                         _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_3__           =         __webpack_require__(                                                                                                                                                                                                                                                                                                                                                                                                                  "../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js"             )        ;var                                                                                                                                                                                                                                                                                                                                                    _turf_helpers__WEBPACK_IMPORTED_MODULE_4__          =          __webpack_require__(                                                                                                                                                                                                                                                  "../node_modules/@turf/helpers/dist/es/index.js") ;function pointOnFeature(geojson){var fc =normalize(                                                                                                                                                                                                                                                                                         geojson) ;var cent =(0,_turf_center__WEBPACK_IMPORTED_MODULE_1__["default"] )(fc);var onSurface =                                                                                                                                false;var i =0;while (!onSurface  &&i <fc. features.length){var geom =fc.features[i].geometry;var x,y,x1,y1,x2,y2,k;var onLine =false;if (geom.type ==="Point" ){if (cent.geometry.coordinates[0]=== geom.coordinates[0]&&cent.geometry.coordinates[1]===geom.coordinates[1]){onSurface =true;}}else if  (geom.type ===                                                                                                                         "MultiPoint" ){var  onMultiPoint =false;k =0;while (!onMultiPoint  &&k <geom.   coordinates.length){if (cent.geometry.coordinates[0]===geom.coordinates[k][0]&&cent.geometry.coordinates[1]===geom.coordinates[k][1]){onSurface =true;onMultiPoint =true;}k++ ;}}else if (geom.type ==="LineString"){k =0;while (!onLine &&k <geom.coordinates.length -1){x =cent.                                                                                                                                                                                                          geometry.coordinates[0];y =cent.geometry.coordinates[1];x1 =geom.coordinates[k][0];y1 =geom.coordinates[k]                                                                                        [1];x2 =geom.coordinates[k +1][0];y2 =geom.coordinates[k +1][1];if (pointOnSegment(x,y,x1,y1,x2,y2)){onLine =true;onSurface =true;}k++ ;}}else if (geom.type ==="MultiLineString"){var j =0;while (j <geom.coordinates.length){onLine =false;k =0;var line =geom.coordinates[j];while (!onLine &&k <line.length -1){x =cent.geometry.coordinates[                                                                                                                                                                                            0];y =cent.geometry.coordinates[1];x1 =    line[ k][0];y1  =line[k][  1] ;x2 =line[k + 1] [0];y2 = line[k  + 1][1];if  (    pointOnSegment(x,y,x1,y1,                                                                                                                                                                                                               
                                                                                                                                                 x2,y2)) {onLine  = true;onSurface  =           true;}k++ ;}j++ ;}}else if (geom.type ==="Polygon"||geom.type ==="MultiPolygon"){ if ((0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_3__["default"])(cent,geom)){onSurface =true;}}i++ ;}if  (onSurface){return cent;}else {var vertices =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.featureCollection)([]);for (i =0;i <fc.features.length;i++ ){vertices.features =vertices.features.concat((0,_turf_explode__WEBPACK_IMPORTED_MODULE_0__["default"])(fc.features[i]).features);}return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.                      point)                    (          (       0,                                                                                                                                                                                                                                                                _turf_nearest_point__WEBPACK_IMPORTED_MODULE_2__["default"])(cent,vertices).geometry. coordinates);}}function normalize(geojson){if (geojson.type !=="FeatureCollection"){if  ( geojson.type  !=="Feature"){return ( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.featureCollection)( [(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.feature)(geojson)]);}return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.featureCollection)([ geojson]);}                                                                                       return geojson;}function pointOnSegment(x,y,x1,y1,x2,y2){var ab =Math.sqrt((x2 -x1)*(x2 -x1)+(y2 -y1)                                                                                                                                                                                                                                                                                                                                                                                                           *(y2 -y1));var ap =Math.sqrt((x -x1)*(x -x1)+(y -y1)*(y -y1));var pb  =Math.sqrt((x2 -x)*(x2 -x)+(                                                                                                                                                                                                                                                                                                                                      y2  -y)   *(y2 -  y));return ab ===ap +pb;} const __WEBPACK_DEFAULT_EXPORT__ = pointOnFeature;}  ,                                                                                                                                                                                                                                                  "../node_modules/@turf/point-to-line-distance/dist/es/index.js":(__unused_webpack___webpack_module__,                                                                                                                                                                                                                                                                                             __webpack_exports__, __webpack_require__)  =>   {   "use strict"    ;__webpack_require__.   r(                                                                                                                                  __webpack_exports__) ;__webpack_require__.d(  __webpack_exports__,{"default" :() =>__WEBPACK_DEFAULT_EXPORT__ }  );var  _turf_distance__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/distance/dist/es/index.js")  ;var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(                                                                                                                                  "../node_modules/@turf/helpers/dist/es/index.js"            )     ;var        _turf_invariant__WEBPACK_IMPORTED_MODULE_2__      = __webpack_require__(   "../node_modules/@turf/invariant/dist/es/index.js"  )  ;var   _turf_meta__WEBPACK_IMPORTED_MODULE_3__     =  __webpack_require__(   "../node_modules/@turf/meta/dist/es/index.js"     )   ;var                                                                                                                                                                                                                       _turf_rhumb_distance__WEBPACK_IMPORTED_MODULE_4__               =            __webpack_require__(                                                                                            "../node_modules/@turf/rhumb-distance/dist/es/index.js") ;function pointToLineDistance(pt,line, options) {if  (options  ===void 0) { options = {};}if  (!options.method){options.method  =  "geodesic";}if (!options.units){options.units ="kilometers";}if     (!pt){throw new Error(  "pt is required");}if (Array. isArray(pt) ){pt   =(0,                                                                                                                                                                                             _turf_helpers__WEBPACK_IMPORTED_MODULE_1__. point)   (    pt)  ;} else  if (  pt.   type === "Point"  )   {   pt =  (   0, _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                             
                                                                                                                                                     feature) (pt) ;} else    {  (   0,           _turf_invariant__WEBPACK_IMPORTED_MODULE_2__.featureOf)(pt,"Point","point");}if  (!line){throw new Error("line is required");}if (Array.isArray(line) ){line =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.lineString)(line);}else if (line.type === "LineString"){line =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__. feature)(line);}else {(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.featureOf)(line,"LineString","line");}var distance =Infinity;var p =pt.geometry.coordinates;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_3__.segmentEach)(           line,function (segment) {var    a =  segment.    geometry.                                                                                                                                                                                                                                                                     coordinates[0];var b =segment.geometry.coordinates[1];var d =distanceToSegment(p,a,b,options);if (d <distance){distance =d;}});return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.convertLength)(distance,"degrees",options.units);}function distanceToSegment(p,a,b,options){var v =[b[0]-a[0],b[1]-a[1]];var w =[p[0]- a[0],p[1]-a[ 1]];var c1 =dot(w,v);if (c1 <=0){return calcDistance(p,a,{method:options.method,units:"degrees"});}                                                                                        var c2 =dot(v,v);if (c2 <=c1){return calcDistance(p,b,{method:options.method,units:"degrees"});}var b2                                                                                                                                                                                                                                                                                                                                                                                                           =c1 / c2;var  Pb =[a[0]+b2 *v[0],a[1]+b2 * v[1]];return calcDistance(p,Pb,{method:options.method,                                                                                                                                                                                                                                                                                                                                       units:"degrees"});}function  dot(u,v){ return u[0]* v[0]+u[1]* v[1];}function calcDistance(a, b,                                                                                                                                                                                                                                                    options){ return options. method  === "planar"?(0,_turf_rhumb_distance__WEBPACK_IMPORTED_MODULE_4__[                                                                                                                                                                                                                                                                                            "default"])( a,b,options):  (0,_turf_distance__WEBPACK_IMPORTED_MODULE_0__["default"]) ( a,b,                                                                                                                                          options);} const __WEBPACK_DEFAULT_EXPORT__ = pointToLineDistance;}, "../node_modules/@turf/points-within-polygon/dist/es/index.js" :( __unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) => {  "use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.   d(                                                                                                                              __webpack_exports__, { "default":(  ) =>  __WEBPACK_DEFAULT_EXPORT__ }) ;var   _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__( "../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/@turf/helpers/dist/es/index.js")                                                                                                                                                                                                                             ;var            _turf_meta__WEBPACK_IMPORTED_MODULE_2__          =        __webpack_require__(                                                                                               "../node_modules/@turf/meta/dist/es/index.js");function pointsWithinPolygon(points,polygons){var results =[];(0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.featureEach)(points,function (point){var contained =false;if (point.geometry.type ==="Point"){(0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.geomEach)(polygons,function (polygon){if (                                                                                                                                                                                                             (                0,   _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__["default"])(point,   polygon))contained =true;})                                                                                                                                                                                                                
                                                                                                                                                     ;if (contained){results.push(point);}          }else if  ( point.geometry.type ==="MultiPoint"){var pointsWithin =[] ;( 0, _turf_meta__WEBPACK_IMPORTED_MODULE_2__.geomEach)( polygons, function (polygon){ (0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.coordEach)( point,function (pointCoord){if ( (0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__["default" ])(pointCoord,polygon)){contained   =true;pointsWithin.push( pointCoord);}});} );if (contained){results.push((0, _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.multiPoint)(pointsWithin) );}}else { throw new Error(           "Input geometry must be a Point or MultiPoint"  );}   }  )                                                                                                                                                                                                                                                                            ;return  (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.featureCollection) (results);}const __WEBPACK_DEFAULT_EXPORT__ =pointsWithinPolygon;}, "../node_modules/@turf/polygon-smooth/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ })                                                                                                ;var        _turf_meta__WEBPACK_IMPORTED_MODULE_0__        =             __webpack_require__(                                                                                                                                                                                                                                                                                                                                                                                                             "../node_modules/@turf/meta/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ =                                                                                                                                                                                                                                                                                                                                          __webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function polygonSmooth(                                                                                                                                                                                                                                                    inputPolys,options){var outPolys =[];var iterations =options.iterations ||1;if (!inputPolys)throw new                                                                                                                                                                                                                                                                                             Error("inputPolys is required")   ;( 0, _turf_meta__WEBPACK_IMPORTED_MODULE_0__. geomEach)(                                                                                                                                              inputPolys,function  (geom,geomIndex,properties){  var  outCoords;var poly;var tempOutput;switch  (geom.type){case "Polygon":outCoords =  [ []];for  (var i = 0;  i <iterations; i++ ){tempOutput =[[]];poly =geom;if ( i >0)poly =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.polygon)(outCoords).                                                                                                                                geometry;processPolygon(  poly,tempOutput);outCoords =tempOutput. slice(0) ;}   outPolys.push((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.polygon)(outCoords,properties));break ;case "MultiPolygon":outCoords =[[[]]];for (var y =0;y <iterations;y++ ){tempOutput =[[[]]];poly =geom;if (y >0)poly =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                               multiPolygon) (outCoords). geometry;processMultiPolygon( poly, tempOutput);outCoords =tempOutput.                                                                                                   slice(0);}outPolys.push((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.multiPolygon)(outCoords,properties));break ;default:throw new Error("geometry is invalid, must be Polygon or MultiPolygon") ;}});return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.featureCollection)(outPolys);}function processPolygon(poly,tempOutput){var                                                                                                                                                                                                 prevGeomIndex        =    0;var     subtractCoordIndex =0;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.coordEach) (      poly,     function    (                                                                                                                                                                                                                 
                                                                                                                                                      currentCoord, coordIndex,featureIndex,          multiFeatureIndex,geometryIndex){if (geometryIndex  > prevGeomIndex){prevGeomIndex =geometryIndex;subtractCoordIndex =coordIndex;tempOutput.push([]);}var realCoordIndex =coordIndex -subtractCoordIndex;var p1 =poly.coordinates[geometryIndex][realCoordIndex +1];var p0x = currentCoord[0];var p0y =currentCoord[1];var  p1x =p1[0];var p1y =p1[1];tempOutput[ geometryIndex].push([0.75 *p0x +0.25 *p1x,0.75 *p0y +0.25 *p1y]);tempOutput[geometryIndex].push([0.25 *p0x +0.75 *p1x,0.25 *p0y  +0.75 *p1y]);},true);tempOutput.forEach(          function  ( ring){  ring.push(ring[  0] ) ;}  ) ;} function                                                                                                                                                                                                                                                                                  processMultiPolygon(poly,tempOutput) {var prevGeomIndex =0;var subtractCoordIndex =0;var  prevMultiIndex =0;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.coordEach)( poly, function (currentCoord, coordIndex,featureIndex,multiFeatureIndex,geometryIndex){if (multiFeatureIndex >prevMultiIndex){prevMultiIndex  = multiFeatureIndex;subtractCoordIndex   =coordIndex;tempOutput.push( [[]]);} if ( geometryIndex >prevGeomIndex){                                                                                         prevGeomIndex =geometryIndex;subtractCoordIndex =coordIndex;tempOutput[multiFeatureIndex].push([]);}                                                                                                                                                                                                                                                                                                                                                                                                                var   realCoordIndex   =  coordIndex -  subtractCoordIndex;var p1   = poly.   coordinates[                                                                                                                                                                                                                                                                                                                                             multiFeatureIndex][geometryIndex] [realCoordIndex +1] ;var p0x =currentCoord[0] ;var p0y  =                                                                                                                                                                                                                                                      currentCoord[1];var p1x =p1[0];var p1y = p1[1];tempOutput[multiFeatureIndex][geometryIndex]. push([                                                                                                                                                                                                                                                                                               0.75 *p0x +0.25 *p1x,0.75 *p0y +0.25 *p1y]);tempOutput[multiFeatureIndex][geometryIndex].                                                                                                                                                    push(  [ 0.25 *p0x +0.75 * p1x,0.25 * p0y +0.75 *p1y]) ;},true)  ;tempOutput.forEach(function ( poly){poly.  forEach( function ( ring) { ring.  push(ring[0]  );})  ;} )  ;}const __WEBPACK_DEFAULT_EXPORT__   =polygonSmooth;}  ,"../node_modules/@turf/polygon-tangents/dist/es/index.js" :(                                                                                                                                                 __unused_webpack___webpack_module__,      __webpack_exports__,    __webpack_require__) => { "use strict"  ;__webpack_require__.  r(__webpack_exports__);__webpack_require__.d(  __webpack_exports__,{ "default" : ( ) => __WEBPACK_DEFAULT_EXPORT__ } ) ;var  _turf_invariant__WEBPACK_IMPORTED_MODULE_0__   = __webpack_require__(                                                                                                                                                                                                                                                    "../node_modules/@turf/invariant/dist/es/index.js"             )            ;var                                                                                                           _turf_helpers__WEBPACK_IMPORTED_MODULE_1__   =  __webpack_require__(  "../node_modules/@turf/helpers/dist/es/index.js" );var _turf_bbox__WEBPACK_IMPORTED_MODULE_2__         =__webpack_require__(  "../node_modules/@turf/bbox/dist/es/index.js");var   _turf_explode__WEBPACK_IMPORTED_MODULE_3__  =   __webpack_require__(                                                                                                                                                                                                "../node_modules/@turf/explode/dist/es/index.js" );var _turf_nearest_point__WEBPACK_IMPORTED_MODULE_4__   =__webpack_require__( "../node_modules/@turf/nearest-point/dist/es/index.js"                                                                                                                                                                           
                                                                                                                                                        );function polygonTangents(pt,polygon)          {var pointCoords =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getCoords)( pt);var polyCoords  = (0, _turf_invariant__WEBPACK_IMPORTED_MODULE_0__. getCoords)( polygon);var  rtan;var ltan;var enext;var  eprev;var  bbox =(0,_turf_bbox__WEBPACK_IMPORTED_MODULE_2__[ "default"])( polygon);var nearestPtIndex =0;var nearest =null;if (pointCoords[0]  >bbox[0]&&pointCoords[ 0]<bbox[ 2]&&pointCoords[1]> bbox[1]&&pointCoords[1] <bbox[3]) {nearest   = (0,_turf_nearest_point__WEBPACK_IMPORTED_MODULE_4__[ "default"])(pt,(0,           _turf_explode__WEBPACK_IMPORTED_MODULE_3__["default"]     )(                                                                                                                                                                                                                                                                                         polygon));nearestPtIndex =nearest.properties.featureIndex;}var type =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getType)(polygon);switch (type){case "Polygon" :rtan =polyCoords[0][nearestPtIndex];ltan  =polyCoords[0] [0];if ( nearest !==null){if (nearest.geometry.coordinates[1]< pointCoords[1])ltan =polyCoords[0] [ nearestPtIndex];}eprev =isLeft(polyCoords[0][0],polyCoords[0][polyCoords[0]  .length -1],                                                                                          pointCoords);var out  =processPolygon(polyCoords[0],pointCoords,eprev,enext,rtan,ltan);rtan =out[0]                                                                                                                                                                                                                                                                                                                                                                                                                ;ltan =out[1];break ;case "MultiPolygon":var  closestFeature =0;var closestVertex  = 0;var                                                                                                                                                                                                                                                                                                                                              verticesCounted =0;for ( var i = 0; i  < polyCoords[0].length; i++ ){closestFeature =i;var                                                                                                                                                                                                                                                        verticeFound =false;for (var i2  =0;i2 <polyCoords[0][  i]. length;i2++ ){ closestVertex = i2;if (                                                                                                                                                                                                                                                                                                verticesCounted ===nearestPtIndex){verticeFound =true;break ;} verticesCounted++ ;}if  (                                                                                                                                                         verticeFound)break ;}rtan =polyCoords[0][closestFeature][closestVertex];ltan =polyCoords[0][closestFeature][closestVertex];eprev =isLeft(polyCoords[0][0][0],polyCoords[0][0][polyCoords[0][0].length -1],pointCoords);polyCoords.forEach(function (ring){var out =processPolygon(ring[                                                                                                                                    0],pointCoords, eprev,enext,rtan,ltan);rtan =out[0];ltan =out[1];}) ;break ;}   return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.featureCollection)([ (0, _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.point) (rtan),(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.point)(ltan)]);} function processPolygon( polygonCoords,ptCoords,eprev,                                                                                                                                                                                                                                               enext,rtan,ltan){for ( var i    =0; i <polygonCoords.length;  i++  ) { var  currentCoords =                                                                                                             polygonCoords[i];var nextCoordPair  =polygonCoords[i  +1];if (i ===polygonCoords.length -1){ nextCoordPair =polygonCoords[0];}enext =isLeft(currentCoords,nextCoordPair,ptCoords);if (eprev <=0 &&enext >0){if (!isBelow(ptCoords,currentCoords,rtan)){rtan =currentCoords;}}else if (eprev > 0 &&enext <=0) {if (!isAbove(                                                                                                                                                                                                 ptCoords,currentCoords, ltan)){   ltan = currentCoords;}} eprev =enext;}return [ rtan,ltan] ;}function  isAbove(     point1,  point2, point3){                                                                                                                                                                                                                  
                                                                                                                                                          return isLeft(point1,point2,point3)>0;}          function isBelow(point1,point2,point3){return   isLeft(point1,point2,point3)<0;}function  isLeft(point1,point2,point3){return ( point2[0]-point1[ 0])*(point3[1]-point1[1])-( point3[0]-point1[ 0])*( point2[ 1]-point1[1]);}const __WEBPACK_DEFAULT_EXPORT__ =polygonTangents;},"../node_modules/@turf/polygon-to-line/dist/es/index.js": (__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)  =>{"use strict";__webpack_require__.r( __webpack_exports__);__webpack_require__.d(__webpack_exports__,{          "coordsToLine"  : ()   =>coordsToLine,  "default" :   ( )  =>                                                                                                                                                                                                                                                                                                 __WEBPACK_DEFAULT_EXPORT__,"multiPolygonToLine":() =>multiPolygonToLine,"polygonToLine":() =>polygonToLine });var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");function __WEBPACK_DEFAULT_EXPORT__(poly,options){if (                                                                                            options   ===void  0){options  ={};}var   geom =( 0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                                                                                                                                                                                                                                                                                                                  getGeom)(poly);if (!options.properties &&poly.type ==="Feature") {options. properties =                                                                                                                                                                                                                                                                                                                                                   poly.properties;}switch (geom.type){case "Polygon":return polygonToLine(geom, options)                                                                                                                                                                                                                                                          ;case "MultiPolygon"  :return   multiPolygonToLine(geom,  options)  ;default:  throw  new Error(                                                                                                                                                                                                                                                                                                  "invalid poly");}}function polygonToLine(poly,options){if (options ===void 0){options                                                                                                                                                                  = {};}var geom  =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getGeom)( poly);var coords  =geom. coordinates;var properties =options.properties  ?options.properties :poly. type ==="Feature"?poly. properties  :{ };return  coordsToLine(  coords, properties) ;}function                                                                                                                                       multiPolygonToLine(multiPoly,options){if (options ===void 0){options ={};}var   geom = (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getGeom)(multiPoly) ;var coords =geom.coordinates;var properties =options.  properties ?options.properties  :multiPoly.type ==="Feature"?multiPoly.properties :{} ;var lines =[];coords.forEach(                                                                                                                                                                                                                                                       function (coord) {lines. push(coordsToLine(   coord,   properties)   );})  ;return ( 0,                                                                                                                    _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.featureCollection)(lines) ;}function  coordsToLine(coords,  properties){  if (coords.length >1) {return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.multiLineString)(coords,properties);} return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__. lineString) (coords[0],                                                                                                                                                                                                         properties)    ;}  }  ,            "../node_modules/@turf/polygonize/dist/es/index.js"      :           (   __unused_webpack___webpack_module__,                                                                                                                                                                                                         
                                                                                                                                                                               __webpack_exports__,           __webpack_require__)   => {   "use strict";__webpack_require__.    r(   __webpack_exports__);__webpack_require__. d(   __webpack_exports__,{ "default"   :  (  )  =>polygonize  } )  ;var   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__  =__webpack_require__( "../node_modules/@turf/helpers/dist/es/index.js")  ;var _lib_Graph_js__WEBPACK_IMPORTED_MODULE_1__ =  __webpack_require__( "../node_modules/@turf/polygonize/dist/es/lib/Graph.js" );var   _lib_EdgeRing_js__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__(           "../node_modules/@turf/polygonize/dist/es/lib/EdgeRing.js" )                                                                                                                                                                                                                                                                                                          ;function polygonize(geoJson){var graph =_lib_Graph_js__WEBPACK_IMPORTED_MODULE_1__["default"].fromGeoJson(geoJson);graph.deleteDangles();graph.deleteCutEdges();var holes =[],shells =[];graph.getEdgeRings().filter(function (edgeRing){return edgeRing.isValid();}).forEach(function (edgeRing){if (edgeRing.isHole())holes.push(edgeRing);else shells.push(edgeRing);});holes.forEach(function (hole){if                                                                                               (_lib_EdgeRing_js__WEBPACK_IMPORTED_MODULE_2__["default"].findEdgeRingContaining(hole,shells))                                                                                                                                                                                                                                                                                                                                                                                                                      shells. push( hole);}) ;return   (0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                                                                                                                      featureCollection)( shells.map(function  (shell){return shell.toPolygon();})  ) ;}},                                                                                                                                                                                                                                                            "../node_modules/@turf/polygonize/dist/es/lib/Edge.js":( __unused_webpack___webpack_module__,                                                                                                                                                                                                                                                                                                      __webpack_exports__, __webpack_require__) => {"use strict";__webpack_require__.r(                                                                                                                                                                          __webpack_exports__)   ;__webpack_require__. d( __webpack_exports__,{"default"  : ( )   =>     __WEBPACK_DEFAULT_EXPORT__  })  ;var  _turf_helpers__WEBPACK_IMPORTED_MODULE_0__    = __webpack_require__( "../node_modules/@turf/helpers/dist/es/index.js"  )   ;var                                                                                                                                                   _util_js__WEBPACK_IMPORTED_MODULE_1__    =      __webpack_require__(   "../node_modules/@turf/polygonize/dist/es/lib/util.js");var Edge  =  function (){function   Edge(from,to) {this. from = from;this.to =to;this. next = undefined;this.label =undefined;this.symetric  =undefined;this.ring =undefined;this.from.                                                                                                                                                                                                                                                                   addOuterEdge(this);this.to.addInnerEdge(this);}Edge.prototype.getSymetric =function                                                                                                                           (){if (!this.symetric){this.symetric =new Edge(this.to,this.from);this.symetric.symetric =this;}return this.symetric;};Edge.prototype.deleteEdge =function (){this.from.removeOuterEdge(this);this.to.removeInnerEdge(this);};Edge.prototype.isEqual =function (edge){return this.from.id ===edge.from.id &&                                                                                                                                                                                                      this.to.id ===edge.to.id;}     ;Edge.prototype.toString =function (){ return "Edge { "+this.from.id +" -> " +   this. to.id  +" }";};Edge.                                                                                                                                                                                                                   
                                                                                                                                                             prototype.toLineString =function  (  ) {          return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.lineString)([ this. from.coordinates,this.to. coordinates]);} ;Edge.prototype.compareTo =function (edge) {return (0,_util_js__WEBPACK_IMPORTED_MODULE_1__. orientationIndex)(edge.from.coordinates,edge.to.coordinates,this.to.coordinates);};return Edge;}() ;const __WEBPACK_DEFAULT_EXPORT__  =Edge;},"../node_modules/@turf/polygonize/dist/es/lib/EdgeRing.js":(__unused_webpack___webpack_module__,__webpack_exports__, __webpack_require__)  =>{"use strict"                  ;__webpack_require__.      r(      __webpack_exports__)                                                                                                                                                                                                                                                                                                                      ;__webpack_require__.d(__webpack_exports__,{ "default": () =>__WEBPACK_DEFAULT_EXPORT__  }) ;var _util_js__WEBPACK_IMPORTED_MODULE_0__  =__webpack_require__("../node_modules/@turf/polygonize/dist/es/lib/util.js");var  _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_envelope__WEBPACK_IMPORTED_MODULE_2__  =                                                                                                      __webpack_require__(     "../node_modules/@turf/envelope/dist/es/index.js"     )    ;var                                                                                                                                                                                                                                                                                                                                                                                                                                       _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_3__     =                                                                                                                                                                                                                                                                                                                                                                                                                     __webpack_require__(                                                                                                                                                                                                                                                                 "../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js");var EdgeRing =function (                                                                                                                                                                                                                                                                                                         ){function EdgeRing(){this.edges =[];this.polygon =undefined;this.envelope =                                                                                                                                                                                      undefined;}EdgeRing.prototype.push =function  (edge){this.edges.push( edge) ;this.polygon =this.envelope =undefined;};EdgeRing.prototype.get =function (i){return this.edges[ i];} ;Object.defineProperty(EdgeRing.prototype,"length",{get:function (){                                                                                                                                             return this.   edges.length;},enumerable:true,configurable:true }) ;EdgeRing.   prototype.forEach  = function (f){this.edges.forEach(f);};EdgeRing.prototype.map =function ( f) {return this.edges.map(f);};EdgeRing.prototype.some =function  (f){return this.edges.some(f);};EdgeRing.prototype.isValid =function (){                                                                                                                                                                                                                                                                                return   true;};EdgeRing.prototype.isHole =function  (  ){var _this = this;var                                                                                                                                      hiIndex =this.edges.reduce(function (high,edge,i){if (edge.from.coordinates[1]>_this.edges[high].from.coordinates[1])high =i;return high;},0),iPrev =(hiIndex ===0 ?this.length :hiIndex)-1,iNext  =(hiIndex +1)%this.length,disc =(0,_util_js__WEBPACK_IMPORTED_MODULE_0__.orientationIndex)(                                                                                                                                                                                                           this.edges[iPrev].from.      coordinates,this.edges[ hiIndex] .from. coordinates,this.edges[ iNext].from.     coordinates);if (disc ===                                                                                                                                                                                                                    
                                                                                                                                                               0)  return  this. edges[ iPrev] .  from.           coordinates[0]> this.edges[iNext].from.coordinates[0];return  disc >0;}   ;EdgeRing.prototype.toMultiPoint =function (){return  (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.multiPoint)(this.edges.map( function   (edge){return edge.from.coordinates;} ));};EdgeRing.prototype.toPolygon  =function (){if (this. polygon) return this.polygon;var  coordinates =this.edges.map(function (edge) {return edge. from.coordinates;}) ;coordinates. push( this.edges[0].from. coordinates);return this.polygon =(0,            _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.   polygon)  (    [                                                                                                                                                                                                                                                                                                                                    coordinates]);};EdgeRing.prototype. getEnvelope =function (){if (this.envelope)return this.envelope;return this.envelope =(0,_turf_envelope__WEBPACK_IMPORTED_MODULE_2__["default"])(this.toPolygon());};EdgeRing.findEdgeRingContaining  = function (testEdgeRing,shellList){var testEnvelope =testEdgeRing.getEnvelope();var minEnvelope,minShell;shellList.forEach(function (                                                                                                         shell){var  tryEnvelope  =  shell. getEnvelope();if (minShell)minEnvelope =minShell.                                                                                                                                                                                                                                                                                                                                                                                                                                getEnvelope( ) ;if     (   (  0, _util_js__WEBPACK_IMPORTED_MODULE_0__.                                                                                                                                                                                                                                                                                                                                                                  envelopeIsEqual)    (  tryEnvelope, testEnvelope)) return  ;if   (  (0,                                                                                                                                                                                                                                                                        _util_js__WEBPACK_IMPORTED_MODULE_0__.envelopeContains)(tryEnvelope,testEnvelope)){                                                                                                                                                                                                                                                                                                                 var testEdgeRingCoordinates =testEdgeRing.   map(  function ( edge) {                                                                                                                                                                                                    return edge.from.coordinates;});var testPoint =void 0;var _loop_1 =function (pt){if (!shell.some(function (edge){return (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.coordinatesEqual)(pt,edge.from.coordinates);})){testPoint =pt;}};for (var                                                                                                                                                 _i = 0,    testEdgeRingCoordinates_1  =  testEdgeRingCoordinates;    _i    <    testEdgeRingCoordinates_1. length;_i++ ){var pt =testEdgeRingCoordinates_1[_i] ;_loop_1(pt);}  if  (testPoint && shell.inside( (0, _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.point) (testPoint))){if (! minShell ||( 0,                                                                                                                                                                                                                                                                                                   _util_js__WEBPACK_IMPORTED_MODULE_0__. envelopeContains)  ( minEnvelope,                                                                                                                                                  tryEnvelope)) minShell  =shell;}}});return minShell;} ;EdgeRing.prototype.inside =function (pt){return (0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_3__["default" ])(pt,this.toPolygon()) ;};return EdgeRing;}(  );const __WEBPACK_DEFAULT_EXPORT__ =EdgeRing;} ,                                                                                                                                                                                                                  "../node_modules/@turf/polygonize/dist/es/lib/Graph.js"   :      (         __unused_webpack___webpack_module__,   __webpack_exports__, __webpack_require__)  =>  {                                                                                                                                                                                      
                                                                                                                                                                    "use strict";__webpack_require__.  r(            __webpack_exports__);__webpack_require__.d(  __webpack_exports__,{ "default" :()  =>__WEBPACK_DEFAULT_EXPORT__    }  );var _Node_js__WEBPACK_IMPORTED_MODULE_0__  =__webpack_require__("../node_modules/@turf/polygonize/dist/es/lib/Node.js" );var _Edge_js__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__( "../node_modules/@turf/polygonize/dist/es/lib/Edge.js");var _EdgeRing_js__WEBPACK_IMPORTED_MODULE_2__  =__webpack_require__("../node_modules/@turf/polygonize/dist/es/lib/EdgeRing.js" ) ;var           _turf_meta__WEBPACK_IMPORTED_MODULE_3__  =__webpack_require__(                                                                                                                                                                                                                                                                                                                                                                       "../node_modules/@turf/meta/dist/es/index.js" )            ;var _turf_invariant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( "../node_modules/@turf/invariant/dist/es/index.js" ) ;function validateGeoJson( geoJson)  {                     if                        (                         !        geoJson)                                                                                                                                                                 throw new                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Error(                                                                                                                                                                                                                                                                                                                                                                                                                                      "No geojson passed"                             )                                                                                                                                                                                                                                                                                                           ;if (        geoJson.                                                                                                                                                                                                                                                                                                                                                                                                            type     !==                                                                                                                                                                                                                                                                                     "FeatureCollection" && geoJson. type            !==      "GeometryCollection"  &&    geoJson.                        type        !==                                                                                                                                                                          "MultiLineString" &&geoJson.type !=="LineString"&& geoJson.type !=="Feature")       throw  new    Error(         "Invalid input type '"           +                         geoJson. type +           "'. Geojson must be FeatureCollection, GeometryCollection, LineString, MultiLineString or Feature" )  ;}                                                                                                                                                                                                                                                                                                    var Graph =function (){function Graph(){this.edges =[];this.nodes                                                                                                                                                                                                      =   {                              }                             ;}                        Graph. fromGeoJson  =                function                (     geoJson)                                        {                                                                                                                                                                                                                                                           validateGeoJson( geoJson)  ;var    graph   =  new     Graph(   )    ;(  0,   _turf_meta__WEBPACK_IMPORTED_MODULE_3__.                                                                                                                                                                                                       
                                                                                                                                                                   flattenEach)(geoJson,function (feature){(            0,_turf_invariant__WEBPACK_IMPORTED_MODULE_4__.featureOf)(feature,"LineString","Graph::fromGeoJson");(0,_turf_meta__WEBPACK_IMPORTED_MODULE_3__.coordReduce)(feature,function (prev,cur){if (prev){var start =graph.getNode(prev),end =graph.getNode(cur);graph.addEdge(start,end);}return cur;});});return graph;};Graph.prototype.getNode =function (coordinates){var id =_Node_js__WEBPACK_IMPORTED_MODULE_0__["default"].buildId(coordinates) ;var node =this.nodes[id];if (!node)node =this.nodes[            id] = new  _Node_js__WEBPACK_IMPORTED_MODULE_0__["defaultcoordinates);return node;};Graph.prototype.addEdge =function (from, to){  var       edge    =    newdge_js__WEBPACK_IMPORTED_MODULE_1__["default"](from,tosymetricEdge  = edge.  getSymetric();this.edges. push(edge);this. edges.push(       symetricEdge)  ;};Graph.                                                                                                                                                                                                                     
                                                                                                                                                                      prototype.deleteDangles =function (){var            _this =this;Object.keys(this.nodes) .map(function (id){return _this.nodes[id];}).forEach(function (node) {return _this._removeIfDangle(node);});};Graph.prototype._removeIfDangle =function   (node){var _this = this;if (node.innerEdges.length <=1) {var outerNodes =node.getOuterEdges( ).map(function ( e){return e.to;} );this.removeNode(  node);outerNodes.forEach(function (n){return _this._removeIfDangle( n);}) ;}};Graph.prototype.deleteCutEdges  =function (){var   _this =this;this.            _computeNextCWEdges( );this._findLabeledEdgeRings();this.edgesforEach(function (edge){if    (edge.label === edge.symetric.label)  {  _this.    removeEdge( edgesymetric);_this.removeEdge(edge);}});} ;Graphprototype._computeNextCWEdges =function (node){var _this =this;if (typeof node  ===  "undefined"){  Object.                                                                                                                                                                                                                      
                                                                                                                                                                       keys(this.nodes) .forEach(function ( id){             return _this._computeNextCWEdges(_this.nodes[id]);});}else {node.getOuterEdges().forEach(function (edge,i){node.getOuterEdge((i ===0 ?node.getOuterEdges().length :i)-1).symetric.next =edge;}) ;}};Graph.prototype._computeNextCCWEdges =function (node,label){var edges =node.getOuterEdges();var firstOutDE,prevInDE;for (var i  =edges.length -1;i >=0; --i){var de =edges[i],sym =de.symetric,outDE =void 0,inDE =void 0;if (de.label ===label)outDE  =de;if (sym.label ===label)inDE =              sym;if (!outDE ||!inDE)continue ;if ( inDE)  prevInDE =inDE;ifoutDE){if ( prevInDE)  {prevInDE. next =  outDE;prevInDE = undefined;} if ( !          firstOutfirstOutDE  = outDE;}}if (prevInprevInDE.next =firstOutDE;};Graph.prototype._findLabeledEdgeRings =function (){   var edgeRingStarts =[];var                                                                                                                                                                                                                       
                                                                                                                                                                         label  =0;this. edges. forEach(function (             edge){if (edge.label >=0)return ;edgeRingStarts.push(edge);var e =edge;do {e.label =label;e =e.next;}while (!edge. isEqual(e));label++ ;});return edgeRingStarts;};Graph.prototype.getEdgeRings =function (){var _this =this;this._computeNextCWEdges();this.edges.forEach(function (edge){edge.label =undefined;});this._findLabeledEdgeRings().forEach(function (edge){_this._findIntersectionNodes(edge).forEach(function (node){_this._computeNextCCWEdges(node,edge.label);});});var           edgeRingList =[];this.edges.forEach(function (edge){if (edge.ringreturn ;edgeRingList.push(_this._findEdgeRing(edge));});return edgeRingList;}   ;Graph. prototypefindIntersectionNodesfunction (startEdge){var intersectionNodes =[];var edge =startEdge;var _loop_1  = function (){var degree  =                                                                                                                                                                                                                       
                                                                                                                                                                           0;edge. from. getOuterEdges() .   forEach(            function (e){if (e.label ===startEdge.label) ++degree;});if  ( degree > 1)intersectionNodes.push(edge.from);edge =edge.next;} ;do {_loop_1();} while (!startEdge.isEqual(edge));return  intersectionNodes;};Graph.prototype._findEdgeRing =function (startEdge){var  edge =startEdge;var edgeRing =new _EdgeRing_js__WEBPACK_IMPORTED_MODULE_2__["default"]();do {edgeRing.push(edge);edge.ring = edgeRing;edge =edge.next;}while (!startEdge.isEqual(edge));return edgeRing;};Graph.             prototype. removeNode  = function ( node){ var _this =this;nodegetOuterEdges(). forEach(function (edge){ return _this.  removeEdge(edge);} )   ;node. innerEdgesforEach(function (edge) { return _this.removeEdge(edge);});delete this.nodes[   node.id];};Graph.prototype.                                                                                                                                                                                                                        
                                                                                                                                                                            removeEdge =function ( edge){this.   edges =            this.edges.filter(function (e){return !e.isEqual(edge);});edge.deleteEdge();};return Graph;}();const __WEBPACK_DEFAULT_EXPORT__ =Graph;},"../node_modules/@turf/polygonize/dist/es/lib/Node.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict" ;__webpack_require__.r(__webpack_exports__);__webpack_require__. d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ } );var _util_js__WEBPACK_IMPORTED_MODULE_0__ =                                                         __webpack_requirenode_modules/@turf/polygonize/dist/es/lib/util.js");var Node =function ()    {  function  Nodecoordinates) { this.id   = Node. buildId(coordinates)  ;this.    coordinates =   coordinates;this.innerEdges                                                                                                                                                                                                                        
                                                                                                                                                                              =[];this.outerEdges =[];this.outerEdgesSorted           =false;}Node.buildId =function (coordinates){return coordinates.join(",");};Node.prototype.removeInnerEdge =function (edge){this.innerEdges =this.innerEdges.filter(function (e){return e.from.id !==edge.from.id;});};Node.prototype.removeOuterEdge =function (edge){this.outerEdges =this.outerEdges.filter(function (e){return e.to.id !==edge.to.id;});};Node.prototype.addOuterEdge =function (edge){this.outerEdges.push(edge);this.outerEdgesSorted =false;};Node.            prototype. sortOuterEdges =function (){var _this = this;if (! thisouterEdgesSorted){this.outerEdges.sort(function (a,b){var aNode =a.to,bNode =     b.to;if (  aNodecoordinates[0] - _this. coordinates[0]  >=0 &&  bNode.coordinates[ 0]-_this.        coordinates[    0] <0)                                                                                                                                                                                                                         
                                                                                                                                                                                return 1;if   (aNode.coordinates[0]  -  _this.           coordinates[0] <0 &&bNode.coordinates[0]-_this.coordinates[0]>= 0)return ( -1);if ( aNode.coordinates[0]-_this.coordinates[ 0]===0 &&bNode.coordinates[ 0]-_this.coordinates[0]===0){if (aNode.coordinates[1]-_this.coordinates[1]>=0 ||bNode.coordinates[1]- _this.coordinates[1]>=0)return aNode.coordinates[1]-bNode.coordinates[1];return bNode.coordinates[1]-aNode.coordinates[ 1];}var det =(0, _util_js__WEBPACK_IMPORTED_MODULE_0__.orientationIndex)(_this.           coordinates, aNode.coordinates,bNode.coordinates)    ;if  (detreturn 1;if (det >0)return ( -1);var d1 =Math.pow(aNode.coordinates[0]-_this.   coordinatesath.pow(aNode.coordinates[ 1] -_this.coordinates[1],2) , d2 =Math.pow(bNode.     coordinates[0]   - _this.                                                                                                                                                                                                                         
                                                                                                                                                                                   coordinates[0] ,2)+Math.pow(bNode.coordinates[           1]-_this.coordinates[1],2);return d1 -d2;});this.outerEdgesSorted =true;}};Node.prototype.getOuterEdges  =function () {this.sortOuterEdges();return this.outerEdges;};Node.prototype.getOuterEdge =function (i){this.sortOuterEdges();return this.outerEdges[i];};Node.prototype.addInnerEdge =function (edge){this.innerEdges.push(edge);};return Node;}();const __WEBPACK_DEFAULT_EXPORT__ =Node;} ,"../node_modules/@turf/polygonize/dist/es/lib/util.js":(                __unused_webpack___webpack_module__,        __webpack_exports__,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __webpack_require__)   => {  "use strict"     ;__webpack_require__.    r(   __webpack_exportswebpack_require__. d( __webpack_exports__, {  "coordinatesEqual":  (  ) =>            coordinatesEqual,                                                                                                                                                                                                                          
                                                                                                                                                                                    "envelopeContains":  (   )  =>envelopeContains,            "envelopeIsEqual":() =>envelopeIsEqual,"orientationIndex":() =>orientationIndex });var _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__( "../node_modules/@turf/helpers/dist/es/index.js");function mathSign(x){return (x >0)-(x <0)|| +x;}function orientationIndex(p1,p2,q){var            dx1 =p2[ 0] -p1[0] ,dy1 =p2[1]-p1[1],dx2 =q[0]-p2[ 0],dy2 =q[1]-preturn mathSign(dx1 *dy2 -dx2 *dy1);}function envelopeIsEqual(env1,env2){var     envX1    =  envgeometry.coordinates[0].map(function (c){return c[ 0];}),envY1 = env1.geometry.    coordinates[  0]    .map(                                                                                                                                                                                                                           
                                                                                                                                                                                       function  (c){ return  c[ 1];} ) ,envX2  =env2.            geometry.coordinates[0].map(function (c){return c[0];}),envY2 =env2.geometry.coordinates[0].map(function (c){return c[1];});return Math.max.apply(null,envX1)===Math.max. apply(null,envX2)&&Math.max.apply(null,envY1)===Math.max.apply(null,envY2)&&Math.min.apply(null,envX1)=== Math.min.apply(null,envX2)&&Math.min.apply(null, envY1)===Math.min.apply(null,envY2);}function  envelopeContains(self,env){return env.geometry.coordinates[0].                   every(    function      (       c)    {  returnturf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__["default"]) (( 0,   _turf_helperspoint)(c) ,self);});}function coordinatesEqual(coord1,coord2){return coord1[0]   ===coord2[0]&&coord1[1] ===                                                                                                                                                                                                                           
                                                                                                                                                                                                   coord2[       1]   ;}       }        ,              "../node_modules/@turf/projection/dist/es/index.js":( __unused_webpack___webpack_module__, __webpack_exports__,__webpack_require__) => { "use strict"   ;__webpack_require__.r(__webpack_exports__);__webpack_require__.d( __webpack_exports__,{   "toMercator":()  =>toMercator, "toWgs84": ()    => toWgs84 }) ;var _turf_meta__WEBPACK_IMPORTED_MODULE_0__   = __webpack_require__( "../node_modules/@turf/meta/dist/es/index.js") ;var              _turf_helpers__WEBPACK_IMPORTED_MODULE_1__     = __webpack_requirenode_modules/@turf/helpers/dist/es/index.js"       )      ;var   _turf_clonewebpack_require__("../node_modules/@turf/clone/dist/es/index.js" );function  toMercator(geojson,options)                                                                                                                                                                                                                            
                                                                                                                                                                                            { if  ( options ===  void   0) {options   ={} ;}             return convert(geojson,"mercator",options);}function toWgs84(geojson,options){if (options ===void 0){options ={};}return convert(geojson,"wgs84",options);}function convert(geojson,projection,options){if (options ===void 0){options ={};}options =options ||{};var mutate =options.mutate;if (!geojson)throw new Error("geojson is required");if (Array.isArray(geojson)&&(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)              ( geojson[0]) )geojson =  projection ==="mercator" ? convertToMercatorgeojson) :convertToWgs84( geojson);else { if  ( mutate !==true)geojson =  (0,   _turf_clonedefault" ])(geojson);(0, _turf_meta__WEBPACK_IMPORTED_MODULE_0__. coordEach)(   geojson,function  ( coord){                                                                                                                                                                                                                            
                                                                                                                                                                                              var   newCoord  =projection   ===  "mercator"  ?               convertToMercator(coord):convertToWgs84(coord);coord[0]=newCoord[0];coord[1] =newCoord[1];});}return geojson;}function convertToMercator(lonLat){var D2R =Math.PI /180,A =6378137.0,MAXEXTENT =20037508.342789244;var adjusted =Math.abs(lonLat[0])<=180 ?lonLat[0]:lonLat[0]-sign(lonLat[0])*360;var xy =[A *adjusted *D2R,A *Math.log(Math.tan(Math.PI *0.25 +0.5 *lonLat[1]*D2R))];if (xy[0]>MAXEXTENT)xy[0]=MAXEXTENT;if (               xy[0]  <  - MAXEXTENT) xy[ 0]=   -MAXEXTENT;if (xy[1]>MAXEXTENT) xyif  ( xy[1] < - MAXEXTENT) xy[1] = -MAXEXTENT;return xy;} function   convertToWgs84(xy{var R2D =180  /Math.PI;var A =6378137.0;return [xy[0]*R2D /A,(Math.PI *0.5 -    2.0 *Math.atan(Math.exp( -                                                                                                                                                                                                                             
                                                                                                                                                                                               xy[1]/A)))*R2D];}function sign(x){return x <0 ? -1              :x  >  0 ?1 : 0;}},"../node_modules/@turf/random/dist/es/index.js":( __unused_webpack___webpack_module__, __webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__) ;__webpack_require__.d(__webpack_exports__,{ "randomLineString":()  =>randomLineString, "randomPoint":() =>randomPoint, "randomPolygon": () =>randomPolygon,"randomPosition":()  =>randomPosition } ) ;var                 _turf_helpers__WEBPACK_IMPORTED_MODULE_0__    =  __webpack_requirenode_modules/@turf/helpers/dist/es/index.js")  ;var  __spreadArrays  =        undefinedundefined.__spreadArrays ||function (){for (var s =0,i =0,il =arguments.length;   i <il;i++ )s  +=arguments[                                                                                                                                                                                                                              
                                                                                                                                                                                                 i].length;for (var r =Array(s),k =0,i =0;i <il;i++ )             for (var a =arguments[i],j =0,jl =a.length;j <jl;j++ ,k++ )r[k]=a[j];return r;};function randomPosition(bbox){if (Array.isArray(bbox)){return coordInBBox(bbox);}if (bbox &&bbox.bbox){return coordInBBox(bbox.bbox);}return [lon(),lat()];}function randomPoint(count,options){if (options ===void 0){options ={};}if (count ===undefined ||count ===null){count =1;}var features =[];for (var i =0;i <count;i++ )              { features.  push(( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.pointrandomPosition(   options.    bbox)    )    )     ;}         return   (  0,   _turf_helpersfeatureCollection) (features);}function randomPolygon(   count, options) {if (   options ===void 0){options =                                                                                                                                                                                                                             
                                                                                                                                                                                                   {};}if (count === undefined ||count ===null){count =              1;}if (!( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.isNumber)( options.num_vertices)||options.num_vertices ===undefined){ options. num_vertices  =10;}if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.isNumber)(options.max_radial_length) ||options.max_radial_length ===undefined){options.max_radial_length =10;}var features =[];var _loop_1 =function (i) {var   vertices =[] ;var circleOffsets =              __spreadArrays(  Array(  options.num_vertices    +  1)) .map(Math. randomcircleOffsets.forEach(function ( cur,index,arr){arr[ index]=index  >0 ?cur +   arr[index -1]:cur;}circleOffsets. forEach( function (cur){cur =cur *2 *Math.PI / circleOffsets[    circleOffsets.length   -1]                                                                                                                                                                                                                               
                                                                                                                                                                                                      ;var  radialScaler = Math. random();vertices. push([              radialScaler *(options.max_radial_length ||10) *Math.sin(cur),radialScaler   *(options.max_radial_length ||10)*Math.cos(cur)  ]);});vertices[ vertices.length - 1]=vertices[0];vertices =vertices.map(vertexToCoordinate(randomPosition(options.bbox)));features.push( (0, _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.polygon)([vertices]));};for ( var i =  0;i  < count; i++ ){_loop_1(i);}return (0,             _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.featureCollection) (features) ;}function randomLineString(count,options){if (options ===void 0){options ={};}   options =options ||{};if (!( 0, _turf_helpers__WEBPACK_IMPORTED_MODULE_0__. isObject)( options)) {      throw    new      Error(                                                                                                                                                                                                                               
                                                                                                                                                                                                         "options is invalid") ;}  var bbox = options.bbox;var             num_vertices =options.num_vertices;var max_length  =options.max_length;var max_rotation =options.max_rotation;if (count ===undefined ||count ===null){count =1;}if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.isNumber)(num_vertices)||num_vertices ===undefined ||num_vertices <2){num_vertices =10;}if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.isNumber) (max_length)||max_length               ===     undefined)  {     max_length  = 0.0001;}        ifturf_helpers__WEBPACK_IMPORTED_MODULE_0__.  isNumber)( max_rotation)   ||    max_rotationundefined){ max_rotation =Math.PI /8;}var  features =[];for (var i =0;i <count;  i++  ){var startingPoint  =                                                                                                                                                                                                                                
                                                                                                                                                                                                         randomPosition(bbox);var  vertices =[startingPoint];for (             var j =0;j <num_vertices -1;j++ ){var priorAngle =j ===0 ?Math.random()*2 *Math.PI :Math.tan((vertices[j][1]-vertices[j -1][1])/(vertices[j][0]-vertices[j -1][0]));var angle =priorAngle +(Math.random()-0.5)*max_rotation *2;var distance =Math.random()*max_length;vertices.push([vertices[j][0]+distance *Math.cos(angle),vertices[j][1]+distance *Math.sin(angle)]);}features.push(              (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.lineString)(vertices));}returnturf_helpers__WEBPACK_IMPORTED_MODULE_0__. featureCollection)( features);}             functionvertexToCoordinate(hub){return function (cur) {return [cur[0]+hub[0],cur[1] +    hub[1]];};}function rnd(){                                                                                                                                                                                                                                 
                                                                                                                                                                                                             return Math.random() -0.5;}function lon(){return  rnd()*              360;}function lat(){return rnd() *180;}function coordInBBox(bbox){ return [ Math.random()*(bbox[2]- bbox[ 0])+bbox[0],Math. random()*(bbox[3] - bbox[  1] )+bbox[1]];}}, "../node_modules/@turf/rectangle-grid/dist/es/index.js" :( __unused_webpack___webpack_module__, __webpack_exports__,__webpack_require__) => {"use strict"  ;__webpack_require__. r( __webpack_exports__)               ;__webpack_require__. d(   __webpack_exports__,    {   "default}              )            ;var   _turf_boolean_intersectswebpack_require__(   "../node_modules/@turf/boolean-intersects/dist/es/index.js"                                                                                                                                                                                                 
                                                                                                                                                                                                                )  ;var   _turf_distance__WEBPACK_IMPORTED_MODULE_1__  =               __webpack_require__("../node_modules/@turf/distance/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function rectangleGrid(bbox,cellWidth,cellHeight,options){if (options ===void 0) {options = {};}var results =[] ;var  west =bbox[0];var south =bbox[1];var east =bbox[2];var                 north      =  bbox[    3]    ;var    xFraction      =   cellWidthturf_distance__WEBPACK_IMPORTED_MODULE_1__["default"])([west,south],[east,     south] ,optionsvar  cellWidthDeg =xFraction *(east    -west) ;var yFraction =cellHeight /( 0,   _turf_distance__WEBPACK_IMPORTED_MODULE_1__[                                                                                                                                                                                                                
                                                                                                                                                                                                                    "default"])(  [ west,south] , [west,north], options);var               cellHeightDeg =yFraction *(north -south);var bboxWidth =east -west;var  bboxHeight =north -south;var columns =Math.floor(bboxWidth /cellWidthDeg);var rows =Math.floor(bboxHeight /cellHeightDeg);var deltaX =(bboxWidth -columns *cellWidthDeg)/2;var deltaY =(bboxHeight -rows *cellHeightDeg)/2;var currentX =west +deltaX;for (var column =0;column <columns;              column++ ) {var currentY = south +deltaY;for  (var row  =0;row  <rows;  row++ ){varcellPoly =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)([[[currentX,      currentY] ,   [                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                currentX,currentY   + cellHeightDeg] ,[ currentX  +cellWidthDeg,  currentY +    cellHeightDeg],[currentX  +                                                                                                                                                                                                                                  
                                                                                                                                                                                                                     cellWidthDeg, currentY],[  currentX, currentY]] ],options.                properties) ;if (options.mask){  if ( (0,  _turf_boolean_intersects__WEBPACK_IMPORTED_MODULE_0__["default"])(options. mask, cellPoly) ) {results. push(cellPoly);} } else {results.push( cellPoly)  ;} currentY  += cellHeightDeg;}currentX +=cellWidthDeg;}return (0,  _turf_helpers__WEBPACK_IMPORTED_MODULE_2__.featureCollection)  (results);} const                      __WEBPACK_DEFAULT_EXPORT__            =       rectangleGrid;}node_modules/@turf/rewind/dist/es/index.js"         :         (   __unused_webpack___webpack_modulewebpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(          __webpack_exports__)                                                                                                                                                                                                                                   
                                                                                                                                                                                                                        ;__webpack_require__.d(__webpack_exports__,{"default":() =>                 __WEBPACK_DEFAULT_EXPORT__  } )  ;var  _turf_clone__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__( "../node_modules/@turf/clone/dist/es/index.js");var _turf_boolean_clockwise__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__( "../node_modules/@turf/boolean-clockwise/dist/es/index.js")  ;var _turf_meta__WEBPACK_IMPORTED_MODULE_2__ =                 __webpack_require__(   "../node_modules/@turf/meta/dist/es/index.js"    )    ;varturf_invariant__WEBPACK_IMPORTED_MODULE_3__    =     __webpack_require__(   "../node_modules/@turf/invariant/dist/es/index.jsvar  _turf_helpers__WEBPACK_IMPORTED_MODULE_4__   =    __webpack_require__(   "../node_modules/@turf/helpers/dist/es/index.js"                                                                                                                                                                                                              
                                                                                                                                                                                                                          );function rewind(geojson,options){options =options ||{};if (                 !(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.isObject)(options))throw new Error("options is invalid");var  reverse =options.reverse ||false;var mutate =options.mutate ||false;if (!geojson)throw new Error("<geojson> is required");if (typeof reverse !=="boolean")throw new Error("<reverse> must be a boolean");if (typeof mutate                  !=="boolean")throw new Error("<mutate> must be a boolean") ;if ( mutate  ===falsegeojson =(0,_turf_clone__WEBPACK_IMPORTED_MODULE_0__["default"])(geojson);var   results =[];switchgeojson.    type){      case     "GeometryCollection"   :      (    0,    _turf_meta__WEBPACK_IMPORTED_MODULE_2__.                                                                                                                                                                                                                      
                                                                                                                                                                                                                            geomEach)(geojson,function (geometry){rewindFeature(geometry,                      reverse) ;}  ) ;return geojson;case   "FeatureCollection" :  ( 0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__. featureEach)( geojson, function   (  feature) { (  0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.featureEach)(   rewindFeature( feature, reverse) ,function ( result){ results. push( result) ;}  ) ;}) ;return  (  0,                   _turf_helpers__WEBPACK_IMPORTED_MODULE_4__. featureCollection)      (  results)  ;}return rewindFeature(geojson,reverse) ;} function  rewindFeature(    geojson,   reverse){var type =                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           geojson. type ==="Feature"? geojson.geometry.type  :geojson.type;switch (type){   case "GeometryCollection":                                                                                                                                                                                                                                     
                                                                                                                                                                                                                               ( 0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.geomEach)( geojson,                  function (geometry){rewindFeature(geometry,reverse);});return geojson;case "LineString":rewindLineString((  0,_turf_invariant__WEBPACK_IMPORTED_MODULE_3__.getCoords) ( geojson),reverse);return geojson;case "Polygon": rewindPolygon((0, _turf_invariant__WEBPACK_IMPORTED_MODULE_3__. getCoords) (geojson) ,reverse)                       ;return       geojson;case            "MultiLineStringturf_invariant__WEBPACK_IMPORTED_MODULE_3__. getCoords)(geojson)  . forEach(       functionlineCoords) { rewindLineString(   lineCoords,reverse) ;} );return geojson;case     "MultiPolygon"   :  (  0,                                                                                                                                                                                                                                     
                                                                                                                                                                                                                                 _turf_invariant__WEBPACK_IMPORTED_MODULE_3__.getCoords)(geojson).                 forEach(function ( lineCoords){rewindPolygon(lineCoords,reverse);});return geojson;case "Point":case "MultiPoint":return geojson;}}function rewindLineString(coords,reverse) {if ((0,_turf_boolean_clockwise__WEBPACK_IMPORTED_MODULE_1__["default"])(coords)===reverse)coords.reverse();}function rewindPolygon(                 coords,reverse){if ((0,_turf_boolean_clockwise__WEBPACK_IMPORTED_MODULE_1__["default"]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   )(coords[0])!==reverse){coords[0].reverse();}for (var i =1;i < coords.length;     i++ ) { ifturf_boolean_clockwise__WEBPACK_IMPORTED_MODULE_1__["default"])(coords[i])===       reverse)  { coords[i] .                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                       reverse()  ;}} }const __WEBPACK_DEFAULT_EXPORT__   = rewind;} ,                 "../node_modules/@turf/rhumb-bearing/dist/es/index.js":(__unused_webpack___webpack_module__, __webpack_exports__,__webpack_require__) =>  {  "use strict";__webpack_require__. r(__webpack_exports__) ;__webpack_require__.d(__webpack_exports__, {"default" : ()  => __WEBPACK_DEFAULT_EXPORT__ } );var                         _turf_helpers__WEBPACK_IMPORTED_MODULE_0__           =       __webpack_requirenode_modules/@turf/helpers/dist/es/index.js"        )          ;var   _turf_invariantwebpack_require__(   "../node_modules/@turf/invariant/dist/es/index.js"   )     ;function   rhumbBearing(                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                      start,end,options){if (options ===void 0){options ={};}var bear360;if                 (options.final){bear360 =calculateRhumbBearing((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoord)(end),(0, _turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoord)(start));}else { bear360  =calculateRhumbBearing((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoord) (start),(0,                  _turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoord)(end));}var bear180 =bearbear360):bear360;return bear180;}function calculateRhumbBearing( from,   to){var phiturf_helpers__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians)(from[1]);var phi2 =             (             0,                                                                                                                                                                                                                                       
                                                                                                                                                                                                                                         _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians)(to[1]);var                  deltaLambda =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians)(to[0]-from[0]);if (deltaLambda >Math.PI){deltaLambda -=2 *Math.PI;}if (deltaLambda < -Math.PI){deltaLambda +=2 *Math.PI;}var deltaPsi =Math.log(Math.tan(phi2 /2 +Math. PI /4)/Math.tan(phi1 /2 +Math.                    PI   /  4)  )    ;var theta   =   Math. atan2(   deltaLambda, deltaPsi);returnturf_helpers__WEBPACK_IMPORTED_MODULE_0__. radiansToDegrees)(theta)   +360)%     360;}      constrhumbBearing;}         ,   "../node_modules/@turf/rhumb-destination/dist/es/index.js"                                                                                                                                                                                                        
                                                                                                                                                                                                                                               :   (   __unused_webpack___webpack_module__,     __webpack_exports__,                     __webpack_require__)  => {    "use strict";__webpack_require__. r( __webpack_exports__)  ;__webpack_require__. d(__webpack_exports__,  {"default" : ()  => __WEBPACK_DEFAULT_EXPORT__   } ) ;var   _turf_helpers__WEBPACK_IMPORTED_MODULE_0__  =  __webpack_require__(                                  "../node_modules/@turf/helpers/dist/es/index.js"                )          ;varturf_invariant__WEBPACK_IMPORTED_MODULE_1__   =     __webpack_require__(   "../node_modules/@turf/invariant/dist/es/index.jsfunction  rhumbDestination(origin,distance,bearing,options){if  (options ===    void 0){ options = {};}var                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                   wasNegativeDistance =  distance  < 0;var   distanceInMeters   =  (  0,                    _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.convertLength)(Math.abs(distance),options.units,"meters");if (wasNegativeDistance) distanceInMeters  =  -Math.abs(distanceInMeters);var coords =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoord)(origin)                      ;var destination = calculateRhumbDestination(coords,distanceInMeters,bearing);destinationdestination[0]-coords[ 0]>180 ? - 360 :coords[ 0] -destination[0] >180 ?360 :    0;returnturf_helpers__WEBPACK_IMPORTED_MODULE_0__.point)  (destination,   options.   properties)    ;} function                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                  calculateRhumbDestination(origin,distance,bearing,radius){radius  =radius ===                    undefined ?_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.earthRadius :Number(radius);var delta =distance /radius;var lambda1 =origin[0]*Math.PI /180;var phi1 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians)(origin[1]);var theta                     =( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians) (bearing);var DeltaPhi  = deltaath.cos(theta);var phi2 =phi1 +DeltaPhi;if (Math.abs(phi2)>Math.PI /2){phi2 =  phi2 >0 ?Mathphi2 : -Math.PI -phi2;}var  DeltaPsi =Math.log(Math.tan(phi2 /2 +Math. PI  /4)/   Math.tan(phi1 /2 +Math.PI /                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                     4));var q =Math.abs(DeltaPsi)>10e-12 ?DeltaPhi  / DeltaPsi :Math.cos(phi1);var                         DeltaLambda =delta  *Math.   sin( theta)/q;var    lambda2 =lambda1 + DeltaLambda;return [ (lambda2   * 180   /Math.   PI  + 540)  %360 -  180, phi2 *180 /   Math.PI];} const   __WEBPACK_DEFAULT_EXPORT__ = rhumbDestination;} ,                       "../node_modules/@turf/rhumb-distance/dist/es/index.js" :  (    __unused_webpack___webpack_modulewebpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.                   rwebpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>   __WEBPACK_DEFAULT_EXPORT__ }                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                           )   ;var  _turf_helpers__WEBPACK_IMPORTED_MODULE_0__     =__webpack_require__(                        "../node_modules/@turf/helpers/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");function rhumbDistance(from,to,options){                          if (options ===void 0){options =  { };} var origin  =(0, _turf_invariantgetCoord)         (   from)  ;var        destination   =         (     0,   _turf_invariantgetCoord)(to);destination[0]+=destination[0]-origin[0]>180 ? -360 :  origin[0]-   destination[0]>  180 ?360 :                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                           0;var distanceInMeters =calculateRhumbDistance(origin,destination);var distance =(                            0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.convertLength)(distanceInMeters,"meters", options.units);return  distance;}function calculateRhumbDistance(origin,destination,radius){radius =radius ===                           undefined ?_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.earthRadius :Number(radius);var R =radius;var phiorigin[ 1]*Math.PI /180;var phi2 =destination[1]*Math.PI /180;var DeltaPhi =    phi2   - phi1;vareltaLambda =Math.abs( destination[0]-origin[0] )*Math.PI /180;if (DeltaLambda >  Math.PI) {DeltaLambda -=2 *                                                                                                                                                                                                                                           
                                                                                                                                                                                                                                                                 Math.PI;}var DeltaPsi =Math.log(Math.tan(phi2 /2 +Math.PI /4)/Math.tan( phi1 /2 +                                 Math.PI /4) );var q =Math.abs(DeltaPsi)>10e-12 ?DeltaPhi /DeltaPsi :Math.cos(phi1) ;var delta =Math.sqrt(DeltaPhi * DeltaPhi +q *q *DeltaLambda *DeltaLambda);var  dist   =delta *                                   R;return       dist;}      const  __WEBPACK_DEFAULT_EXPORT__       =            rhumbDistance;}node_modules/@turf/sample/dist/es/index.js"         :           (   __unused_webpack___webpack_modulewebpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(          __webpack_exports__)                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                ;__webpack_require__.d(__webpack_exports__,{"default":()  =>__WEBPACK_DEFAULT_EXPORT__ })                                 ;var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function sample(featurecollection,num){if (!                                 featurecollection) throw  new Error("featurecollection is required") ;if  ( num  ===null || num ===undefinedthrow new Error("num is required");if (typeof num !=="number")throw new Error(  "num must be a numbervar outFC =( 0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.featureCollection)(            getRandomSubarray(                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                     featurecollection.  features,num)) ;return outFC;}function getRandomSubarray(arr, size){var                              shuffled =arr.slice(0),i =arr.length,min =i -size,temp,index;while (i-- >min){index =Math.floor((i +1)*Math.random());temp =shuffled[index];shuffled[index]                                =shuffled[  i];shuffled[ i]=temp;}return  shuffled. slice( min);}const __WEBPACK_DEFAULT_EXPORT__   =  sample;}node_modules/@turf/sector/dist/es/index.js"            :         (   __unused_webpack___webpack_modulewebpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(         __webpack_exports__)                                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                                       ;__webpack_require__.d(__webpack_exports__, {"default":( )  =>__WEBPACK_DEFAULT_EXPORT__ } );var                                    _turf_circle__WEBPACK_IMPORTED_MODULE_0__     = __webpack_require__(  "../node_modules/@turf/circle/dist/es/index.js"      )     ;var                               _turf_line_arc__WEBPACK_IMPORTED_MODULE_1__  =  __webpack_require__("../node_modules/@turf/line-arc/dist/es/index.jsvar _turf_meta__WEBPACK_IMPORTED_MODULE_2__      =   __webpack_require__(   "../node_modules/@turf/meta/dist/es/index.jsvar  _turf_helpers__WEBPACK_IMPORTED_MODULE_3__  =    __webpack_require__(    "../node_modules/@turf/helpers/dist/es/index.js"                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                )         ;var    _turf_invariant__WEBPACK_IMPORTED_MODULE_4__       =      __webpack_require__(                                    "../node_modules/@turf/invariant/dist/es/index.js");function sector(center, radius, bearing1,bearing2,options){                                      options = options   || {} ;if (!(  0, _turf_helpers__WEBPACK_IMPORTED_MODULE_3__. isObject)( options) )throw   new Error(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              "options is invalid");var    properties   = options.properties;if (!center)     throw new Errorcenter is required")  ;if (bearing1 === undefined ||bearing1 ===null)throw new                        Error(                                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                                                 "bearing1 is required" ) ;if  (  bearing2 === undefined  ||   bearing2   === null)     throw new  Error(                                            "bearing2 is required");if (!radius)throw new Error("radius is required");if (                                           typeof  options !=="object")throw  new Error("options must be an object" );if ( convertAngleTo360(bearing1)===convertAngleTobearing2)){return  (0,_turf_circle__WEBPACK_IMPORTED_MODULE_0__["default"] )(      center,  radiusoptions);}var  coords   = (  0,  _turf_invariant__WEBPACK_IMPORTED_MODULE_4__.   getCoords)(center);var arc =                                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                                             (    0,_turf_line_arc__WEBPACK_IMPORTED_MODULE_1__["default"])(center,radius,bearing1,bearing2,options);var sliceCoords                                                                                                                                                = [[coords]];(0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.coordEach)(arc,function (currentCoords){sliceCoords[0] .push(currentCoords);}sliceCoords[ 0]      .          push(    coords)   ;return         (   0,   _turf_helperspolygon)(sliceCoords,properties);}function  convertAngleTo360( alfa){var beta  =   alfa % 360;if (beta <0)beta                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                                                       +=360;return beta;}const __WEBPACK_DEFAULT_EXPORT__  =sector;} ,"../node_modules/@turf/shortest-path/dist/es/index.js":(                                                                                                                          __unused_webpack___webpack_module__,__webpack_exports__,  __webpack_require__)  => { "use strict" ;__webpack_require__.r(__webpack_exportswebpack_require__.  d( __webpack_exports__,    {  "default}   );var  _turf_bbox__WEBPACK_IMPORTED_MODULE_0__     =__webpack_require__(   "../node_modules/@turf/bbox/dist/es/index.js"                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                                                                      )      ;var       _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_1__           =           __webpack_require__(                                                                                               "../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js"    )  ;var  _turf_distance__WEBPACK_IMPORTED_MODULE_2__    =    __webpack_requirenode_modules/@turf/distance/dist/es/index.js"       )       ;var   _turf_transform_scalewebpack_require__( "../node_modules/@turf/transform-scale/dist/es/index.js")                         ;var                                                                                                                                                                                                                                                 
                                                                                                                                                                                                                                                                                               _turf_clean_coords__WEBPACK_IMPORTED_MODULE_4__       =  __webpack_require__(     "../node_modules/@turf/clean-coords/dist/es/index.js"    )      ;var                                            _turf_bbox_polygon__WEBPACK_IMPORTED_MODULE_5__ =__webpack_require__("../node_modules/@turf/bbox-polygon/dist/es/index.js");var _turf_invariantwebpack_require__("../node_modules/@turf/invariant/dist/es/index.js")  ;var   _turf_helperswebpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function    pathTo(node){ var  curr  =                                                                                                                                                                                                                                                 
                                                                                                                                                                                                                                                                                                  node,path =[];while (curr.parent){path.unshift(curr);curr =curr. parent;}return path;}function getHeap() {return new BinaryHeap(function (node) {return node.f;});}var astar = {search:function  (graph,start,end, options){graph.cleanDirty();options =options ||{};var heuristic  =options.heuristic ||astar.heuristics.manhattan,closest =options.closest ||false;varopenHeap =  getHeap()  ,closestNode =start;start.  h  = heuristic(start,end)     ;openHeap. pushstart);while (openHeap.size()>0){var currentNode =openHeap.pop();if (currentNode    ===end){ return   pathTo(                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                      currentNode);}currentNode.closed =true;var neighbors =graph.neighbors(currentNode);for (var i =0,il =neighbors.length;i <il; ++i){var neighbor =neighbors[i];if (neighbor.closed ||neighbor.isWall()){continue ;}var gScore =currentNode.g +neighbor.getCost(currentNode),beenVisited =neighbor.visited;if (!beenVisited ||gScore <neighbor.g){neighbor.visitedtrue;neighbor. parent =currentNode;neighbor. h   = neighbor. h  ||heuristic(    neighbor,    endneighbor.g  = gScore;neighbor.f =neighbor.  g  + neighbor.h;graph. markDirty(   neighbor);if (closest){if (                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                      neighbor. h <closestNode.h ||neighbor.h ===closestNode.h &&neighbor.g <closestNode.g){closestNode =neighbor;}}if (!beenVisited){openHeap.push(neighbor);}else {openHeap.rescoreElement(neighbor);}}}}if (closest){return pathTo(closestNode);}return [];},heuristics:{manhattan:function (pos0,pos1){var d1 =Math.abs(pos1.x -pos0.x);var d2 =Math.abs(pos1.y -pos0. yreturn d1 +d2;}, diagonal:function (pos0,pos1){var D =1;var D2 =Math.sqrt(2)   ;var d1 =Math.abspos1.x -pos0.x);var d2 =Math.abs(pos1.y -pos0.y);return D *(d1 +d2)+(D2 -2 *D)*    Math. min( d1, d2)  ;} } ,                                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                                                                             cleanNode:function (node){node.f =0;node.g =0;node.h =0;node.visited =false;node.closed =false;node.parent =null;}};function Graph(gridIn,options){options =options ||{};this.nodes =[];this.diagonal =!!options.diagonal;this.grid =[];for (var x = 0; x <gridIn.length;x++ ){this.grid[x]=[];for (var y =0,row =gridIn[x];y <row.length;y++ ){varnode =new GridNode(x,y,row[y]);this.grid[x][y]=node;this. nodes.push(node);}}   this.init();}Graphprototype.init  =function (){this.  dirtyNodes =[ ];for (var i =0;i <this.nodes.     length;i++   ) {  astar.                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                  cleanNode(this.nodes[i]);}};Graph.prototype.cleanDirty =function (){for (var i =0;i <this.dirtyNodes.length;i++ ){astar.cleanNode(this. dirtyNodes[i]);}this.dirtyNodes =[];};Graph.prototype.markDirty = function (node) {this.dirtyNodes.push(node);};Graph.prototype.neighbors =function (node){var ret =[], x =node.x,y =node.y,gridthis.grid;if (grid[x -1]&&grid[x -1][y]){ret.push(grid[x -1][y]);}if (grid[x +  1]&&grid[x +1][y{ret.push(grid[x +1][y]);}if (grid[x]&&grid[x][ y -1]){ret.push(grid[x][y -1]);}  if (grid[x]&&grid[x][y +1])                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                      {ret.push(grid[ x][ y  +1]);}if (this.diagonal){if ( grid[x -1]&&grid[x -1][y -1]) {ret.push(grid[x -1][y -1]);}if (grid[x +1]&&grid[x  +1][y -1]){ret.push(grid[x +1][y -1]);}if (grid[x -1]&&grid[x -1][y + 1]){ret.push(grid[x -1][y +1]);}if (grid[x +1]&&grid[x +1][y +1]){ret.push(grid[ x +1][y +1]);}}return ret;};Graphprototype.toString = function ( )  {var  graphString = [ ],nodes = this.grid,     rowDebug, row, yl;for (var x =0,len =nodes.length;x <len;x++ ){rowDebug =[];row =nodes[x];for (y   =0,l =row.length;y <l;y++ )                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                           {rowDebug.push(row[y] .weight);}graphString.push(rowDebug. join(" "));}return graphString. join("\n");};function GridNode(x,y,weight){this.x =x;this.y =y;this.weight =weight;}GridNode.prototype.toString =function (){return "["+this.x +" "+this.y + "]";};GridNode.prototype.getCost =function (fromNeighbor){iffromNeighbor     && fromNeighbor.x  !== this. x  &&fromNeighbor.y !==this.y){   return this.weight}return   this.weight;} ;GridNode. prototype.isWall  =function (  ) {   return  this. weight ===0;}                                                                                                                                                                                                                                                     
                                                                                                                                                                                                                                                                                                                                 ;function BinaryHeap(scoreFunction){this.content =[];this.scoreFunction =scoreFunction;}BinaryHeap.prototype ={push:function (element){this.content.push(element);this.sinkDown(this.content.length -1);},pop:function (){var result =this.content[0];var end =this.content.pop();if (this. content.length{this.content[0]=end;this. bubbleUp(0) ;}return result;},remove:function (   node){var i =thiscontent.indexOf(node);var end =this.content.pop();if (i !==this.content.length -  1){this.content[i]=end;if (                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                                                                    this.scoreFunction(end)<this.scoreFunction(node)){this.sinkDown(i);}else {this.bubbleUp(i);}}},size:function (){return this.content.length;},rescoreElement:function (node){this.sinkDown(this.content.indexOf(node));},sinkDown:function (n){var element =this.content[n];while (n >0){var parentn +1  >>1)-1,parent =this.content[parentN];if (this.scoreFunction( element)<   this.scoreFunction(                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        parent)){this.content[parentN]=element;this.content[n]=parent;n =parentN;}else {     break   ;}}  }, bubbleUp:                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                                                                         function (n){var length =this.content.length,element =this.content[n],elemScore  =this.scoreFunction(element);while (true) { var child2N =n +1 <<1,child1N =child2N -1;var swap = null,child1Score;if (child1N <length){var child1 =this.content[child1N];child1Score =this.scoreFunctionchild1);if (child1Score <elemScore){swap =child1N;}}if (child2N <length){ var        child2  =thiscontent[child2N],child2Score =this.scoreFunction(child2);if (child2Score <(swap       === null   ?elemScore :                                                                                                                                                                                                                                                       
                                                                                                                                                                                                                                                                                                                                              child1Score)) {swap =child2N;}}if (swap !==null){this.content[n]=this.content[swap];this.content[swap]=element;n =swap;}else {break ;} }}};function shortestPath(start,end,options){options =options ||{};if (! (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_7__.isObject)(optionsthrow new Error("options is invalid");var  resolution =options.resolution;var      minDistanceoptions.  minDistance;var      obstacles   =    options.obstacles ||  (    0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_7__.                                                                                                                                                                                                                                       
                                                                                                                                                                                                                                                                                                                                                   featureCollection)( [] );if  (!start)throw  new   Error( "start is required"  );if   ( ! end)throw  new  Error( "end is required") ;if ( resolution &&!(0, _turf_helpers__WEBPACK_IMPORTED_MODULE_7__. isNumber)(resolution) ||  resolution  <=0)  throw  new Error( "options.resolution must be a number, greater thanif         (    minDistance)       throw     new        Error(   "options.minDistance is not yet implementedvar startCoord  = ( 0, _turf_invariant__WEBPACK_IMPORTED_MODULE_6__.getCoord) (  start) ;var  endCoord = (0,                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                             _turf_invariant__WEBPACK_IMPORTED_MODULE_6__. getCoord)  (end);start   =( 0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_7__.  point)  (   startCoord)  ;end  =  ( 0, _turf_helpers__WEBPACK_IMPORTED_MODULE_7__.    point)  (endCoord);switchturf_invariant__WEBPACK_IMPORTED_MODULE_6__. getType)  ( obstacles) ){ case   "FeatureCollectionif   (   obstacles.    features.    length   === 0)    return       (   0,    _turf_helpers__WEBPACK_IMPORTED_MODULE_7__.                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                      lineString)(  [ startCoord,   endCoord]   );break   ;case   "Polygon" :  obstacles    =    ( 0, _turf_helpers__WEBPACK_IMPORTED_MODULE_7__.  featureCollection) ( [  (  0,_turf_helpers__WEBPACK_IMPORTED_MODULE_7__.featureturf_invariant__WEBPACK_IMPORTED_MODULE_6__. getGeom)   (  obstacles))  ] )    ;break   ;default:                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      throw new   Error("invalid obstacles") ;}var  collection =obstacles;collection.       features. push(  start)                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                                                                                                                         ;collection.features. push( end) ;var box =(0,_turf_bbox__WEBPACK_IMPORTED_MODULE_0__["default"] )(( 0,_turf_transform_scale__WEBPACK_IMPORTED_MODULE_3__[ "default"])((0, _turf_bbox_polygondefault"  ])( (  0, _turf_bbox__WEBPACK_IMPORTED_MODULE_0__["default"]) (   collectionif (! resolution){ var width =( 0,_turf_distance__WEBPACK_IMPORTED_MODULE_2__[  "default"])([box[0],box[1]]                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                                                                                                                                  ,[box[2],box[1]],options);resolution =width /100;}collection.features.pop();collection.features.pop( );var west =box[0];var south =box[1];var east =box[2];var north =box[3];var xFraction =resolutionturf_distance__WEBPACK_IMPORTED_MODULE_2__["default"])([west,south] ,[east,   south]  , optionsvar  cellWidth    = xFraction *(  east -west);var yFraction = resolution / (0,    _turf_distance__WEBPACK_IMPORTED_MODULE_2__[                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                                                                                                                                   "default" ] )  ([ west,south] , [west,north], options);var  cellHeight =yFraction * ( north -south);var bboxHorizontalSide =east   -west;var bboxVerticalSide   =north - south;var columns =Math.floorbboxHorizontalSide /  cellWidth)  ;var  rows = Math.floor(bboxVerticalSide /     cellHeight) ;vardeltaX   =  (bboxHorizontalSide - columns    *   cellWidth) / 2;var deltaY = (     bboxVerticalSide  -rows *                                                                                                                                                                                                                                                           
                                                                                                                                                                                                                                                                                                                                                                                              cellHeight)/2;var pointMatrix =[];var matrix =[];var closestToStart =[];var closestToEnd =[];var minDistStart =Infinity;var minDistEnd =Infinity;var currentY =north -deltaY;var r                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              = 0;while (currentY >=south){var  matrixRow = [];var pointMatrixRow  =[] ;var    currentX =westdeltaX;var    c =  0;while    (   currentX    <=    east)  {var    pt   =   (0,   _turf_helpers__WEBPACK_IMPORTED_MODULE_7__.                                                                                                                                                                                                                                           
                                                                                                                                                                                                                                                                                                                                                                                                         point)([currentX,currentY] );var isInsideObstacle =isInside(pt,obstacles);matrixRow. push(isInsideObstacle ?   0 :1);pointMatrixRow.  push(currentX + "|currentY);var distStart  =(    0,_turf_distance__WEBPACK_IMPORTED_MODULE_2__[   "default" ])  (ptstart)  ;if (!isInsideObstacle   && distStart <  minDistStart){minDistStart =   distStart;closestToStart ={                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                          x:        c,y:r };}var distEnd =(0,_turf_distance__WEBPACK_IMPORTED_MODULE_2__["default"])(pt,end);if (!isInsideObstacle &&distEnd <minDistEnd){minDistEnd = distEnd;closestToEnd  ={x:c, y:r };}currentX += cellWidth;c++ ;}      matrix.   pushmatrixRow) ;pointMatrix.push( pointMatrixRow) ;currentY -= cellHeight;r++ ;}var   graph = new  Graph(matrix,{                                                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                                                                                                                                                                                                 diagonal:true });var startOnMatrix =  graph.grid[closestToStart.y][ closestToStart.x];var endOnMatrix =graphgrid[closestToEnd.y]  [   closestToEnd.x] ;var  result =astar.search(  graph,       startOnMatrixendOnMatrix);var path =[startCoord];result.forEach(function (coord){var coords =   pointMatrix[coord.x][coord.                                                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                                                                                                                                                                                                                 y] .split( "|");path.push([  +coords[0], +coords[1]]);}  );path.push( endCoordreturn (0,_turf_clean_coords__WEBPACK_IMPORTED_MODULE_4__["default"] ) ((0,   _turf_helperslineString)(path));}function isInside(pt,polygons){ for ( var  i =0;i <polygons.   features.length;i++ ){if ((                                                                                                                                                                                                                                                             
turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_1__["default"] ) (pt,   polygons. featuresi]) )  { return  true;} }  return  false;} const __WEBPACK_DEFAULT_EXPORT__    =       shortestPath;}        ,                                                                                                                                                                                                                                                              
node_modules/@turf/simplify/dist/es/index.js"       :       (   __unused_webpack___webpack_modulewebpack_exports__,__webpack_require__) =>{"use strict" ;__webpack_require__.r(          __webpack_exports__)                                                                                                                                                                                                                                                               
webpack_require__.   d( __webpack_exports__, {   "default}  );var  _turf_clean_coords__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__(    "../node_modules/@turf/clean-coords/dist/es/index.js"                                                                                                                                                                                                                                     
var  _turf_clone__WEBPACK_IMPORTED_MODULE_1__   =   __webpack_require__(   "../node_modules/@turf/clone/dist/es/index.jsvar     _turf_meta__WEBPACK_IMPORTED_MODULE_2__   =  __webpack_require__(   "../node_modules/@turf/meta/dist/es/index.js"                                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              )   ;var   _turf_helpers__WEBPACK_IMPORTED_MODULE_3__  = __webpack_require__(   "../node_modules/@turf/helpers/dist/es/index.jsfunction getSqDist(p1,p2){var dx =p1.x -p2.x,dy =p1.y -p2.y;return dx *dx +dy *  dy;}function  getSqSegDist(                                                                                                                                                                                                                                                                 
p,p1, p2){var x =p1.x,y =p1.y,dx =p2.x -x,dy =p2.y -y;if (dx !==0 ||dy !==0){   var t =( (p.x -xdx +(p.y -y)*dy)/(dx *dx +dy *dy);if (t >1){x =p2.x;y =p2.y;}else if (t >0){x +=   dx *t;y +=dy *t;}}dx =p.x -                                                                                                                                                                                                                                                                 
x;dy =p.y  - y;return dx *dx  +dy  *dy;} function simplifyRadialDist(points,    sqTolerance) { varprevPoint =points[0],newPoints =[prevPoint],point;for (var i  = 1,len =points.   length;i <len;i++ ){point =                                                                                                                                                                                                                                                                  
points[i];if (getSqDist(point,prevPoint)> sqTolerance){ newPoints.push(point)   ;prevPoint =point;}} if  ( prevPoint  !==point) newPoints.push(  point);return  newPoints;} function      simplifyDPStep( points,                                                                                                                                                                                                                                                                   
first,last,sqTolerance,simplified){var maxSqDist =sqTolerance,index;for (var i  =first +1;i <lasti++ ){var sqDist =getSqSegDist(points[i],points[first],points[last]);if (sqDist >    maxSqDist) {   index    =                                                                                                                                                                                                                                                                   
i;maxSqDist  =sqDist;}} if  (maxSqDist > sqTolerance) {if ( index -first  >1)       simplifyDPSteppoints,first,index,sqTolerance,simplified) ;simplified.push(points[index]);if (      last    -   index   > 1)                                                                                                                                                                                                                                                                    
simplifyDPStep(     points,index,last, sqTolerance, simplified) ;} }function   simplifyDouglasPeuckerpoints,sqTolerance){var last  =points. length -1;var  simplified =[points[ 0] ]   ;simplifyDPStep(points, 0,                                                                                                                                                                                                                                                                     
last,    sqTolerance,   simplified);simplified.    push(  points[   last]   )   ;return simplified;}function simplify(points,tolerance, highestQuality){ if (  points. length <= 2)      return       points;var                                                                                                                                                                                                                                                                     
sqTolerance = tolerance !==undefined  ?tolerance   * tolerance :  1;points  =    highestQualitypoints   : simplifyRadialDist(  points,     sqTolerance)      ;points   =       simplifyDouglasPeucker(                                                                                                                                                                                                                                                                      
points,sqTolerance) ;return points;}function simplify$1(geojson,  options) {   options =options ||{};if (!( 0, _turf_helpers__WEBPACK_IMPORTED_MODULE_3__.isObject)(options))       throw      new   Error(                                                                                                                                                                                                                                                                      
options is invalid");var tolerance =options.tolerance !==undefined ?options.    tolerance  :1;varhighQuality  = options.highQuality ||false;var  mutate =options. mutate ||    false;if     (!  geojson)                                                                                                                                                                                                                                                                       
throw new Error("geojson is required");if (tolerance &&tolerance <0)throw new               Errorinvalid tolerance"   )   ;if  (   mutate  !==true) geojson   = ( 0,    _turf_clone__WEBPACK_IMPORTED_MODULE_1__[                                                                                                                                                                                                                                                         
default"]) (geojson);(0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.geomEach) (   geojson,functiongeom){  simplifyGeom(geom,tolerance, highQuality);}) ;return geojson;}    function     simplifyGeom(                                                                                                                                                                                                                                                                        
geometry,tolerance,highQuality){var type =geometry.type;if (type ==="Point"||         type     ===                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         "MultiPoint"       )           return       geometry;(      0,   _turf_clean_coords__WEBPACK_IMPORTED_MODULE_0__[                                                                                                                                                                                                                                                   
default"])(geometry,true);var coordinates =geometry.coordinates;switch     (     type)   {caseineString":geometry["coordinates"]=simplifyLine(coordinates,        tolerance,  highQuality)                                                                                                                                                                                                                                                                         
break   ;caseultiLineString"                                                         : geometry[ "coordinates"]=                                                                                                                                                                                                                                                                          
coordinates. mapfunction                                                                           (      lines)     {                                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               return simplifyLine(lines,tolerance,highQuality);});break ;case "Polygon":geometry["coordinatessimplifyPolygon(coordinates,tolerance,highQuality);break ;case "MultiPolygon":geometry["coordinates"                                                                                                                                                                                                                                                                           
coordinates. map( function (rings){  return simplifyPolygon(rings,tolerance,highQuality);}) ;}return  geometry;}   function  simplifyLine(coordinates,  tolerance, highQuality) {return   simplify(                                                                                                                                                                                                                                                                           
coordinates.map(   function ( coord){return {x:coord[ 0], y:coord[ 1],z:coord[2] } ;}) ,tolerancehighQuality).map(function (coords){return coords.z ?[coords.x,coords.y,coords.z]:[coords.x,coords.y]                                                                                                                                                                                                                                                                            
});}function simplifyPolygon(coordinates,tolerance,highQuality){return coordinates.map(functionring){var  pts =ring. map(function (  coord){return {x:coord[0],y:coord[1]};});if  (pts.length <4){                                                                                                                                                                                                                                                                             
throw  new Error( "invalid polygon");} var  simpleRing  =simplify(pts,tolerance,highQuality) .mapfunction  ( coords){ return [coords.x,coords.y];});while (!checkValidity(simpleRing)){tolerance -=                                                                                                                                                                                                                                                                              
tolerance *0.01;simpleRing =simplify( pts,tolerance,highQuality).map(function  ( coords){returncoords.x,coords.y];});}  if (simpleRing[simpleRing.length -1][0]!==simpleRing[0] [0]||simpleRing[                                                                                                                                                                                                                                                                              
simpleRing.length -1][1]!==simpleRing[0][1]){simpleRing.push(simpleRing[0]);} return simpleRing;})                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ;}function checkValidity(ring){if (ring.length <3)return false;return !(ring.length ===3  &&ring[                                                                                                                                                                                                                                                                              
ring[0][0] &&ring[2][1]===ring[ 0][1]);} const __WEBPACK_DEFAULT_EXPORT__ = simplify$1;}node_modules/@turf/square-grid/dist/es/index.js": (  __unused_webpack___webpack_module__,                                                                                                                                                                                                                                                                               
webpack_exports__, __webpack_require__)     =>   {     "use strict"  ;__webpack_require__.   rwebpack_exports__);__webpack_require__. d(__webpack_exports__, {"default":() =>squareGrid })                                                                                                                                                                                                                                                                               
var    _turf_rectangle_grid__WEBPACK_IMPORTED_MODULE_0__      =    __webpack_requirenode_modules/@turf/rectangle-grid/dist/es/index.js");function  squareGrid(bbox,cellSide,                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 options)   {if    ( options  ===void   0)   {    options      =   {     }   ;}  returnturf_rectangle_grid__WEBPACK_IMPORTED_MODULE_0__["default" ])(bbox,cellSide, cellSide,                                                                                                                                                                                                                                                                                 
options)  ;}    }        ,      "../node_modules/@turf/square/dist/es/index.jsunused_webpack___webpack_module__,  __webpack_exports__,    __webpack_require__)  =>{                                                                                                                                                                                                                                                                                  
use strict"  ;__webpack_require__.  r(__webpack_exports__)    ;__webpack_require__.     dwebpack_exports__,{ "default"  :  ( )  =>  __WEBPACK_DEFAULT_EXPORT__ } )      ;var                                                                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       _turf_distance__WEBPACK_IMPORTED_MODULE_0__        =               __webpack_requirenode_modules/@turf/distance/dist/es/index.js");function square(bbox){var west = bbox[                                                                                                                                                                                                                                                                              
var south =bbox[1];var east =bbox[2];var north =bbox[3] ;var  horizontalDistanceturf_distance__WEBPACK_IMPORTED_MODULE_0__["default"])(bbox.slice(0,2),[east,                                                                                                                                                                                                                                                                                      
south])  ;var verticalDistance  = ( 0, _turf_distancedefault"  ])(bbox.slice(0, 2),[west, north]);if  ( horizontalDistance >=                                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          verticalDistance) {var verticalMidpoint =( south  +north)/  2;return [westverticalMidpoint -(east -west)/2,east,verticalMidpoint  +(east -                                                                                                                                                                                                                                                                                             



                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             














                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             



                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             







west)/2];}else {var horizontalMidpoint =(west +east)/2;return [horizontalMidpoint -(north -south)/2,south,horizontalMidpoint +(north -south)/2,north];}}const __WEBPACK_DEFAULT_EXPORT__ =square;},"../node_modules/@turf/standard-deviational-ellipse/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_meta__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_center_mean__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/@turf/center-mean/dist/es/index.js");var _turf_points_within_polygon__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__("../node_modules/@turf/points-within-polygon/dist/es/index.js");var _turf_ellipse__WEBPACK_IMPORTED_MODULE_5__ =__webpack_require__("../node_modules/@turf/ellipse/dist/es/index.js");function standardDeviationalEllipse(points,options){options =options ||{};if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.isObject)(options))throw new Error("options is invalid");var steps =options.steps ||64;var weightTerm =options.weight;var properties =options.properties ||{};if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.isNumber)(steps))throw new Error("steps must be a number");if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.isObject)(properties))throw new Error("properties must be a number");var numberOfFeatures =(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.coordAll)(points).length;var meanCenter =(0,_turf_center_mean__WEBPACK_IMPORTED_MODULE_3__["default"])(points,{weight:weightTerm });var xDeviationSquaredSum =0;var yDeviationSquaredSum =0;var xyDeviationSum =0;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.featureEach)(points,function (point){var weight =point.properties[weightTerm]||1;var deviation =getDeviations((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(point),(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(meanCenter));xDeviationSquaredSum +=Math.pow(deviation.x,2)*weight;yDeviationSquaredSum +=Math.pow(deviation.y,2)*weight;xyDeviationSum +=deviation.x *deviation.y *weight;});var bigA =xDeviationSquaredSum -yDeviationSquaredSum;var bigB =Math.sqrt(Math.pow(bigA,2)+4 *Math.pow(xyDeviationSum,2));var bigC =2 *xyDeviationSum;var theta =Math.atan((bigA +bigB)/bigC);var thetaDeg =theta *180 /Math.PI;var sigmaXsum =0;var sigmaYsum =0;var weightsum =0;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.featureEach)(points,function (point){var weight =point.properties[weightTerm]||1;var deviation =getDeviations((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(point),(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(meanCenter));sigmaXsum +=Math.pow(deviation.x *Math.cos(theta)-deviation.y *Math.sin(theta),2)*weight;sigmaYsum +=Math.pow(deviation.x *Math.sin(theta)+deviation.y *Math.cos(theta),2)*weight;weightsum +=weight;});var sigmaX =Math.sqrt(2 *sigmaXsum /weightsum);var sigmaY =Math.sqrt(2 *sigmaYsum /weightsum);var theEllipse =(0,_turf_ellipse__WEBPACK_IMPORTED_MODULE_5__["default"])(meanCenter,sigmaX,sigmaY,{units:"degrees",angle:thetaDeg,steps:steps,properties:properties });var pointsWithinEllipse =(0,_turf_points_within_polygon__WEBPACK_IMPORTED_MODULE_4__["default"])(points,(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.featureCollection)([theEllipse]));var standardDeviationalEllipseProperties ={meanCenterCoordinates:(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(meanCenter),semiMajorAxis:sigmaX,semiMinorAxis:sigmaY,numberOfFeatures:numberOfFeatures,angle:thetaDeg,percentageWithinEllipse:100 *(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.coordAll)(pointsWithinEllipse).length /numberOfFeatures };theEllipse.properties.standardDeviationalEllipse =standardDeviationalEllipseProperties;return theEllipse;}function getDeviations(coordinates,center){return {x:coordinates[0]-center[0],y:coordinates[1]-center[1]};}const __WEBPACK_DEFAULT_EXPORT__ =standardDeviationalEllipse;},"../node_modules/@turf/tag/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js");var _turf_clone__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/clone/dist/es/index.js");var _turf_meta__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");function tag(points,polygons,field,outField){points =(0,_turf_clone__WEBPACK_IMPORTED_MODULE_1__["default"])(points);polygons =(0,_turf_clone__WEBPACK_IMPORTED_MODULE_1__["default"])(polygons);(0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.featureEach)(points,function (pt){if (!pt.properties)pt.properties ={};(0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.featureEach)(polygons,function (poly){if (pt.properties[outField]===undefined){if ((0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__["default"])(pt,poly))pt.properties[outField]=poly.properties[field];}});});return points;}const __WEBPACK_DEFAULT_EXPORT__ =tag;},"../node_modules/@turf/tesselate/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var earcut__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/earcut/src/earcut.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function tesselate(poly){if (!poly.geometry ||poly.geometry.type !=="Polygon"&&poly.geometry.type !=="MultiPolygon"){throw new Error("input must be a Polygon or MultiPolygon");}var fc ={type:"FeatureCollection",features:[]};if (poly.geometry.type ==="Polygon"){fc.features =processPolygon(poly.geometry.coordinates);}else {poly.geometry.coordinates.forEach(function (coordinates){fc.features =fc.features.concat(processPolygon(coordinates));});}return fc;}function processPolygon(coordinates){var data =flattenCoords(coordinates);var dim =2;var result =earcut__WEBPACK_IMPORTED_MODULE_0__(data.vertices,data.holes,dim);var features =[];var vertices =[];result.forEach(function (vert,i){var index =result[i];vertices.push([data.vertices[index *dim],data.vertices[index *dim +1]]);});for (var i =0;i <vertices.length;i +=3){var coords =vertices.slice(i,i +3);coords.push(vertices[i]);features.push((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.polygon)([coords]));}return features;}function flattenCoords(data){var dim =data[0][0].length,result ={vertices:[],holes:[],dimensions:dim },holeIndex =0;for (var i =0;i <data.length;i++ ){for (var j =0;j <data[i].length;j++ ){for (var d =0;d <dim;d++ )result.vertices.push(data[i][j][d]);}if (i >0){holeIndex +=data[i -1].length;result.holes.push(holeIndex);}}return result;}const __WEBPACK_DEFAULT_EXPORT__ =tesselate;},"../node_modules/@turf/tin/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>tin });var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function tin(points,z){var isPointZ =false;return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.featureCollection)(triangulate(points.features.map(function (p){var point ={x:p.geometry.coordinates[0],y:p.geometry.coordinates[1]};if (z){point.z =p.properties[z];}else if (p.geometry.coordinates.length ===3){isPointZ =true;point.z =p.geometry.coordinates[2];}return point;})).map(function (triangle){var a =[triangle.a.x,triangle.a.y];var b =[triangle.b.x,triangle.b.y];var c =[triangle.c.x,triangle.c.y];var properties ={};if (isPointZ){a.push(triangle.a.z);b.push(triangle.b.z);c.push(triangle.c.z);}else {properties ={a:triangle.a.z,b:triangle.b.z,c:triangle.c.z };}return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.polygon)([[a,b,c,a]],properties);}));}var Triangle =function (){function Triangle(a,b,c){this.a =a;this.b =b;this.c =c;var A =b.x -a.x;var B =b.y -a.y;var C =c.x -a.x;var D =c.y -a.y;var E =A *(a.x +b.x)+B *(a.y +b.y);var F =C *(a.x +c.x)+D *(a.y +c.y);var G =2 *(A *(c.y -b.y)-B *(c.x -b.x));var dx;var dy;this.x =(D *E -B *F)/G;this.y =(A *F -C *E)/G;dx =this.x -a.x;dy =this.y -a.y;this.r =dx *dx +dy *dy;}return Triangle;}();function byX(a,b){return b.x -a.x;}function dedup(edges){var j =edges.length;var a;var b;var i;var m;var n;outer:while (j){b =edges[ --j];a =edges[ --j];i =j;while (i){n =edges[ --i];m =edges[ --i];if (a ===m &&b ===n ||a ===n &&b ===m){edges.splice(j,2);edges.splice(i,2);j -=2;continue outer;}}}}function triangulate(vertices){if (vertices.length <3){return [];}vertices.sort(byX);var i =vertices.length -1;var xmin =vertices[i].x;var xmax =vertices[0].x;var ymin =vertices[i].y;var ymax =ymin;var epsilon =1e-12;var a;var b;var c;var A;var B;var G;while (i-- ){if (vertices[i].y <ymin){ymin =vertices[i].y;}if (vertices[i].y >ymax){ymax =vertices[i].y;}}var dx =xmax -xmin;var dy =ymax -ymin;var dmax =dx >dy ?dx :dy;var xmid =(xmax +xmin)*0.5;var ymid =(ymax +ymin)*0.5;var open =[new Triangle({__sentinel:true,x:xmid -20 *dmax,y:ymid -dmax },{__sentinel:true,x:xmid,y:ymid +20 *dmax },{__sentinel:true,x:xmid +20 *dmax,y:ymid -dmax })];var closed =[];var edges =[];var j;i =vertices.length;while (i-- ){edges.length =0;j =open.length;while (j-- ){dx =vertices[i].x -open[j].x;if (dx >0 &&dx *dx >open[j].r){closed.push(open[j]);open.splice(j,1);continue ;}dy =vertices[i].y -open[j].y;if (dx *dx +dy *dy >open[j].r){continue ;}edges.push(open[j].a,open[j].b,open[j].b,open[j].c,open[j].c,open[j].a);open.splice(j,1);}dedup(edges);j =edges.length;while (j){b =edges[ --j];a =edges[ --j];c =vertices[i];A =b.x -a.x;B =b.y -a.y;G =2 *(A *(c.y -b.y)-B *(c.x -b.x));if (Math.abs(G)>epsilon){open.push(new Triangle(a,b,c));}}}Array.prototype.push.apply(closed,open);i =closed.length;while (i-- ){if (closed[i].a.__sentinel ||closed[i].b.__sentinel ||closed[i].c.__sentinel){closed.splice(i,1);}}return closed;}},"../node_modules/@turf/transform-rotate/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_centroid__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/centroid/dist/es/index.js");var _turf_rhumb_bearing__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/rhumb-bearing/dist/es/index.js");var _turf_rhumb_distance__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/rhumb-distance/dist/es/index.js");var _turf_rhumb_destination__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/@turf/rhumb-destination/dist/es/index.js");var _turf_clone__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__("../node_modules/@turf/clone/dist/es/index.js");var _turf_meta__WEBPACK_IMPORTED_MODULE_5__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_6__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_7__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function transformRotate(geojson,angle,options){options =options ||{};if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_7__.isObject)(options))throw new Error("options is invalid");var pivot =options.pivot;var mutate =options.mutate;if (!geojson)throw new Error("geojson is required");if (angle ===undefined ||angle ===null ||isNaN(angle))throw new Error("angle is required");if (angle ===0)return geojson;if (!pivot)pivot =(0,_turf_centroid__WEBPACK_IMPORTED_MODULE_0__["default"])(geojson);if (mutate ===false ||mutate ===undefined)geojson =(0,_turf_clone__WEBPACK_IMPORTED_MODULE_4__["default"])(geojson);(0,_turf_meta__WEBPACK_IMPORTED_MODULE_5__.coordEach)(geojson,function (pointCoords){var initialAngle =(0,_turf_rhumb_bearing__WEBPACK_IMPORTED_MODULE_1__["default"])(pivot,pointCoords);var finalAngle =initialAngle +angle;var distance =(0,_turf_rhumb_distance__WEBPACK_IMPORTED_MODULE_2__["default"])(pivot,pointCoords);var newCoords =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_6__.getCoords)((0,_turf_rhumb_destination__WEBPACK_IMPORTED_MODULE_3__["default"])(pivot,distance,finalAngle));pointCoords[0]=newCoords[0];pointCoords[1]=newCoords[1];});return geojson;}const __WEBPACK_DEFAULT_EXPORT__ =transformRotate;},"../node_modules/@turf/transform-scale/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_clone__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/clone/dist/es/index.js");var _turf_center__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/center/dist/es/index.js");var _turf_centroid__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/centroid/dist/es/index.js");var _turf_bbox__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/@turf/bbox/dist/es/index.js");var _turf_rhumb_bearing__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__("../node_modules/@turf/rhumb-bearing/dist/es/index.js");var _turf_rhumb_distance__WEBPACK_IMPORTED_MODULE_5__ =__webpack_require__("../node_modules/@turf/rhumb-distance/dist/es/index.js");var _turf_rhumb_destination__WEBPACK_IMPORTED_MODULE_6__ =__webpack_require__("../node_modules/@turf/rhumb-destination/dist/es/index.js");var _turf_meta__WEBPACK_IMPORTED_MODULE_7__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_8__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_9__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");function transformScale(geojson,factor,options){options =options ||{};if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_8__.isObject)(options))throw new Error("options is invalid");var origin =options.origin;var mutate =options.mutate;if (!geojson)throw new Error("geojson required");if (typeof factor !=="number"||factor ===0)throw new Error("invalid factor");var originIsPoint =Array.isArray(origin)||typeof origin ==="object";if (mutate !==true)geojson =(0,_turf_clone__WEBPACK_IMPORTED_MODULE_0__["default"])(geojson);if (geojson.type ==="FeatureCollection"&&!originIsPoint){(0,_turf_meta__WEBPACK_IMPORTED_MODULE_7__.featureEach)(geojson,function (feature,index){geojson.features[index]=scale(feature,factor,origin);});return geojson;}return scale(geojson,factor,origin);}function scale(feature,factor,origin){var isPoint =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_9__.getType)(feature)==="Point";origin =defineOrigin(feature,origin);if (factor ===1 ||isPoint)return feature;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_7__.coordEach)(feature,function (coord){var originalDistance =(0,_turf_rhumb_distance__WEBPACK_IMPORTED_MODULE_5__["default"])(origin,coord);var bearing =(0,_turf_rhumb_bearing__WEBPACK_IMPORTED_MODULE_4__["default"])(origin,coord);var newDistance =originalDistance *factor;var newCoord =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_9__.getCoords)((0,_turf_rhumb_destination__WEBPACK_IMPORTED_MODULE_6__["default"])(origin,newDistance,bearing));coord[0]=newCoord[0];coord[1]=newCoord[1];if (coord.length ===3)coord[2]*=factor;});return feature;}function defineOrigin(geojson,origin){if (origin ===undefined ||origin ===null)origin ="centroid";if (Array.isArray(origin)||typeof origin ==="object")return (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_9__.getCoord)(origin);var bbox =geojson.bbox ?geojson.bbox :(0,_turf_bbox__WEBPACK_IMPORTED_MODULE_3__["default"])(geojson);var west =bbox[0];var south =bbox[1];var east =bbox[2];var north =bbox[3];switch (origin){case "sw":case "southwest":case "westsouth":case "bottomleft":return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_8__.point)([west,south]);case "se":case "southeast":case "eastsouth":case "bottomright":return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_8__.point)([east,south]);case "nw":case "northwest":case "westnorth":case "topleft":return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_8__.point)([west,north]);case "ne":case "northeast":case "eastnorth":case "topright":return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_8__.point)([east,north]);case "center":return (0,_turf_center__WEBPACK_IMPORTED_MODULE_1__["default"])(geojson);case undefined:case null:case "centroid":return (0,_turf_centroid__WEBPACK_IMPORTED_MODULE_2__["default"])(geojson);default:throw new Error("invalid origin");}}const __WEBPACK_DEFAULT_EXPORT__ =transformScale;},"../node_modules/@turf/transform-translate/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_meta__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");var _turf_clone__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/@turf/clone/dist/es/index.js");var _turf_rhumb_destination__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__("../node_modules/@turf/rhumb-destination/dist/es/index.js");function transformTranslate(geojson,distance,direction,options){options =options ||{};if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.isObject)(options))throw new Error("options is invalid");var units =options.units;var zTranslation =options.zTranslation;var mutate =options.mutate;if (!geojson)throw new Error("geojson is required");if (distance ===undefined ||distance ===null ||isNaN(distance))throw new Error("distance is required");if (zTranslation &&typeof zTranslation !=="number"&&isNaN(zTranslation))throw new Error("zTranslation is not a number");zTranslation =zTranslation !==undefined ?zTranslation :0;if (distance ===0 &&zTranslation ===0)return geojson;if (direction ===undefined ||direction ===null ||isNaN(direction))throw new Error("direction is required");if (distance <0){distance = -distance;direction =direction +180;}if (mutate ===false ||mutate ===undefined)geojson =(0,_turf_clone__WEBPACK_IMPORTED_MODULE_3__["default"])(geojson);(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.coordEach)(geojson,function (pointCoords){var newCoords =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.getCoords)((0,_turf_rhumb_destination__WEBPACK_IMPORTED_MODULE_4__["default"])(pointCoords,distance,direction,{units:units }));pointCoords[0]=newCoords[0];pointCoords[1]=newCoords[1];if (zTranslation &&pointCoords.length ===3)pointCoords[2]+=zTranslation;});return geojson;}const __WEBPACK_DEFAULT_EXPORT__ =transformTranslate;},"../node_modules/@turf/triangle-grid/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_distance__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/distance/dist/es/index.js");var _turf_intersect__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/intersect/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function triangleGrid(bbox,cellSide,options){if (options ===void 0){options ={};}var results =[];var xFraction =cellSide /(0,_turf_distance__WEBPACK_IMPORTED_MODULE_0__["default"])([bbox[0],bbox[1]],[bbox[2],bbox[1]],options);var cellWidth =xFraction *(bbox[2]-bbox[0]);var yFraction =cellSide /(0,_turf_distance__WEBPACK_IMPORTED_MODULE_0__["default"])([bbox[0],bbox[1]],[bbox[0],bbox[3]],options);var cellHeight =yFraction *(bbox[3]-bbox[1]);var xi =0;var currentX =bbox[0];while (currentX <=bbox[2]){var yi =0;var currentY =bbox[1];while (currentY <=bbox[3]){var cellTriangle1 =null;var cellTriangle2 =null;if (xi %2 ===0 &&yi %2 ===0){cellTriangle1 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)([[[currentX,currentY],[currentX,currentY +cellHeight],[currentX +cellWidth,currentY],[currentX,currentY]]],options.properties);cellTriangle2 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)([[[currentX,currentY +cellHeight],[currentX +cellWidth,currentY +cellHeight],[currentX +cellWidth,currentY],[currentX,currentY +cellHeight]]],options.properties);}else if (xi %2 ===0 &&yi %2 ===1){cellTriangle1 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)([[[currentX,currentY],[currentX +cellWidth,currentY +cellHeight],[currentX +cellWidth,currentY],[currentX,currentY]]],options.properties);cellTriangle2 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)([[[currentX,currentY],[currentX,currentY +cellHeight],[currentX +cellWidth,currentY +cellHeight],[currentX,currentY]]],options.properties);}else if (yi %2 ===0 &&xi %2 ===1){cellTriangle1 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)([[[currentX,currentY],[currentX,currentY +cellHeight],[currentX +cellWidth,currentY +cellHeight],[currentX,currentY]]],options.properties);cellTriangle2 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)([[[currentX,currentY],[currentX +cellWidth,currentY +cellHeight],[currentX +cellWidth,currentY],[currentX,currentY]]],options.properties);}else if (yi %2 ===1 &&xi %2 ===1){cellTriangle1 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)([[[currentX,currentY],[currentX,currentY +cellHeight],[currentX +cellWidth,currentY],[currentX,currentY]]],options.properties);cellTriangle2 =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)([[[currentX,currentY +cellHeight],[currentX +cellWidth,currentY +cellHeight],[currentX +cellWidth,currentY],[currentX,currentY +cellHeight]]],options.properties);}if (options.mask){if ((0,_turf_intersect__WEBPACK_IMPORTED_MODULE_1__["default"])(options.mask,cellTriangle1))results.push(cellTriangle1);if ((0,_turf_intersect__WEBPACK_IMPORTED_MODULE_1__["default"])(options.mask,cellTriangle2))results.push(cellTriangle2);}else {results.push(cellTriangle1);results.push(cellTriangle2);}currentY +=cellHeight;yi++ ;}xi++ ;currentX +=cellWidth;}return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.featureCollection)(results);}const __WEBPACK_DEFAULT_EXPORT__ =triangleGrid;},"../node_modules/@turf/truncate/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_meta__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");function truncate(geojson,options){if (options ===void 0){options ={};}var precision =options.precision;var coordinates =options.coordinates;var mutate =options.mutate;precision =precision ===undefined ||precision ===null ||isNaN(precision)?6 :precision;coordinates =coordinates ===undefined ||coordinates ===null ||isNaN(coordinates)?3 :coordinates;if (!geojson)throw new Error("<geojson> is required");if (typeof precision !=="number")throw new Error("<precision> must be a number");if (typeof coordinates !=="number")throw new Error("<coordinates> must be a number");if (mutate ===false ||mutate ===undefined)geojson =JSON.parse(JSON.stringify(geojson));var factor =Math.pow(10,precision);(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.coordEach)(geojson,function (coords){truncateCoords(coords,factor,coordinates);});return geojson;}function truncateCoords(coords,factor,coordinates){if (coords.length >coordinates)coords.splice(coordinates,coords.length);for (var i =0;i <coords.length;i++ ){coords[i]=Math.round(coords[i]*factor)/factor;}return coords;}const __WEBPACK_DEFAULT_EXPORT__ =truncate;},"../node_modules/@turf/turf/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"along":() =>_turf_along__WEBPACK_IMPORTED_MODULE_34__["default"],"angle":() =>_turf_angle__WEBPACK_IMPORTED_MODULE_85__["default"],"applyFilter":() =>_turf_clusters__WEBPACK_IMPORTED_MODULE_91__.applyFilter,"area":() =>_turf_area__WEBPACK_IMPORTED_MODULE_33__["default"],"areaFactors":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.areaFactors,"bbox":() =>_turf_bbox__WEBPACK_IMPORTED_MODULE_20__["default"],"bboxClip":() =>_turf_bbox_clip__WEBPACK_IMPORTED_MODULE_50__["default"],"bboxPolygon":() =>_turf_bbox_polygon__WEBPACK_IMPORTED_MODULE_22__["default"],"bearing":() =>_turf_bearing__WEBPACK_IMPORTED_MODULE_29__["default"],"bearingToAngle":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.bearingToAzimuth,"bearingToAzimuth":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.bearingToAzimuth,"bezier":() =>_turf_bezier_spline__WEBPACK_IMPORTED_MODULE_7__["default"],"bezierSpline":() =>_turf_bezier_spline__WEBPACK_IMPORTED_MODULE_7__["default"],"booleanClockwise":() =>_turf_boolean_clockwise__WEBPACK_IMPORTED_MODULE_67__["default"],"booleanContains":() =>_turf_boolean_contains__WEBPACK_IMPORTED_MODULE_65__["default"],"booleanCrosses":() =>_turf_boolean_crosses__WEBPACK_IMPORTED_MODULE_66__["default"],"booleanDisjoint":() =>_turf_boolean_disjoint__WEBPACK_IMPORTED_MODULE_64__["default"],"booleanEqual":() =>_turf_boolean_equal__WEBPACK_IMPORTED_MODULE_70__["default"],"booleanIntersects":() =>_turf_boolean_intersects__WEBPACK_IMPORTED_MODULE_72__["default"],"booleanOverlap":() =>_turf_boolean_overlap__WEBPACK_IMPORTED_MODULE_68__["default"],"booleanParallel":() =>_turf_boolean_parallel__WEBPACK_IMPORTED_MODULE_78__["default"],"booleanPointInPolygon":() =>_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_23__["default"],"booleanPointOnLine":() =>_turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_69__["default"],"booleanWithin":() =>_turf_boolean_within__WEBPACK_IMPORTED_MODULE_71__["default"],"buffer":() =>_turf_buffer__WEBPACK_IMPORTED_MODULE_96__["default"],"center":() =>_turf_center__WEBPACK_IMPORTED_MODULE_14__["default"],"centerMean":() =>_turf_center_mean__WEBPACK_IMPORTED_MODULE_82__["default"],"centerMedian":() =>_turf_center_median__WEBPACK_IMPORTED_MODULE_83__["default"],"centerOfMass":() =>_turf_center_of_mass__WEBPACK_IMPORTED_MODULE_15__["default"],"centroid":() =>_turf_centroid__WEBPACK_IMPORTED_MODULE_16__["default"],"circle":() =>_turf_circle__WEBPACK_IMPORTED_MODULE_12__["default"],"cleanCoords":() =>_turf_clean_coords__WEBPACK_IMPORTED_MODULE_74__["default"],"clone":() =>_turf_clone__WEBPACK_IMPORTED_MODULE_73__["default"],"clusterEach":() =>_turf_clusters__WEBPACK_IMPORTED_MODULE_91__.clusterEach,"clusterReduce":() =>_turf_clusters__WEBPACK_IMPORTED_MODULE_91__.clusterReduce,"clusters":() =>_turf_clusters__WEBPACK_IMPORTED_MODULE_91__,"clustersDbscan":() =>_turf_clusters_dbscan__WEBPACK_IMPORTED_MODULE_75__["default"],"clustersKmeans":() =>_turf_clusters_kmeans__WEBPACK_IMPORTED_MODULE_76__["default"],"collect":() =>_turf_collect__WEBPACK_IMPORTED_MODULE_4__["default"],"collectionOf":() =>_turf_invariant__WEBPACK_IMPORTED_MODULE_93__.collectionOf,"combine":() =>_turf_combine__WEBPACK_IMPORTED_MODULE_17__["default"],"concave":() =>_turf_concave__WEBPACK_IMPORTED_MODULE_3__["default"],"containsNumber":() =>_turf_invariant__WEBPACK_IMPORTED_MODULE_93__.containsNumber,"convertArea":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.convertArea,"convertDistance":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.convertLength,"convertLength":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.convertLength,"convex":() =>_turf_convex__WEBPACK_IMPORTED_MODULE_1__["default"],"coordAll":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.coordAll,"coordEach":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.coordEach,"coordReduce":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.coordReduce,"createBins":() =>_turf_clusters__WEBPACK_IMPORTED_MODULE_91__.createBins,"degrees2radians":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.degreesToRadians,"degreesToRadians":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.degreesToRadians,"destination":() =>_turf_destination__WEBPACK_IMPORTED_MODULE_30__["default"],"difference":() =>_turf_difference__WEBPACK_IMPORTED_MODULE_95__["default"],"dissolve":() =>_turf_dissolve__WEBPACK_IMPORTED_MODULE_99__["default"],"distance":() =>_turf_distance__WEBPACK_IMPORTED_MODULE_18__["default"],"distanceToDegrees":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.lengthToDegrees,"distanceToRadians":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.lengthToRadians,"distanceWeight":() =>_turf_distance_weight__WEBPACK_IMPORTED_MODULE_88__["default"],"earthRadius":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.earthRadius,"ellipse":() =>_turf_ellipse__WEBPACK_IMPORTED_MODULE_81__["default"],"envelope":() =>_turf_envelope__WEBPACK_IMPORTED_MODULE_10__["default"],"explode":() =>_turf_explode__WEBPACK_IMPORTED_MODULE_19__["default"],"factors":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.factors,"feature":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.feature,"featureCollection":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.featureCollection,"featureEach":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.featureEach,"featureOf":() =>_turf_invariant__WEBPACK_IMPORTED_MODULE_93__.featureOf,"featureReduce":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.featureReduce,"filterProperties":() =>_turf_clusters__WEBPACK_IMPORTED_MODULE_91__.filterProperties,"findPoint":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.findPoint,"findSegment":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.findSegment,"flatten":() =>_turf_flatten__WEBPACK_IMPORTED_MODULE_40__["default"],"flattenEach":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.flattenEach,"flattenReduce":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.flattenReduce,"flip":() =>_turf_flip__WEBPACK_IMPORTED_MODULE_5__["default"],"geojsonType":() =>_turf_invariant__WEBPACK_IMPORTED_MODULE_93__.geojsonType,"geomEach":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.geomEach,"geomReduce":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.geomReduce,"geometry":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.geometry,"geometryCollection":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.geometryCollection,"getCluster":() =>_turf_clusters__WEBPACK_IMPORTED_MODULE_91__.getCluster,"getCoord":() =>_turf_invariant__WEBPACK_IMPORTED_MODULE_93__.getCoord,"getCoords":() =>_turf_invariant__WEBPACK_IMPORTED_MODULE_93__.getCoords,"getGeom":() =>_turf_invariant__WEBPACK_IMPORTED_MODULE_93__.getGeom,"getType":() =>_turf_invariant__WEBPACK_IMPORTED_MODULE_93__.getType,"greatCircle":() =>_turf_great_circle__WEBPACK_IMPORTED_MODULE_44__["default"],"helpers":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__,"hexGrid":() =>_turf_hex_grid__WEBPACK_IMPORTED_MODULE_100__["default"],"inside":() =>_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_23__["default"],"interpolate":() =>_turf_interpolate__WEBPACK_IMPORTED_MODULE_104__["default"],"intersect":() =>_turf_intersect__WEBPACK_IMPORTED_MODULE_98__["default"],"invariant":() =>_turf_invariant__WEBPACK_IMPORTED_MODULE_93__,"isNumber":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.isNumber,"isObject":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.isObject,"isobands":() =>_turf_isobands__WEBPACK_IMPORTED_MODULE_58__["default"],"isolines":() =>_turf_isolines__WEBPACK_IMPORTED_MODULE_0__["default"],"kinks":() =>_turf_kinks__WEBPACK_IMPORTED_MODULE_31__["default"],"length":() =>_turf_length__WEBPACK_IMPORTED_MODULE_35__["default"],"lengthToDegrees":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.lengthToDegrees,"lengthToRadians":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.lengthToRadians,"lineArc":() =>_turf_line_arc__WEBPACK_IMPORTED_MODULE_47__["default"],"lineChunk":() =>_turf_line_chunk__WEBPACK_IMPORTED_MODULE_42__["default"],"lineDistance":() =>_turf_length__WEBPACK_IMPORTED_MODULE_35__["default"],"lineEach":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.lineEach,"lineIntersect":() =>_turf_line_intersect__WEBPACK_IMPORTED_MODULE_41__["default"],"lineOffset":() =>_turf_line_offset__WEBPACK_IMPORTED_MODULE_62__["default"],"lineOverlap":() =>_turf_line_overlap__WEBPACK_IMPORTED_MODULE_51__["default"],"lineReduce":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.lineReduce,"lineSegment":() =>_turf_line_segment__WEBPACK_IMPORTED_MODULE_45__["default"],"lineSlice":() =>_turf_line_slice__WEBPACK_IMPORTED_MODULE_36__["default"],"lineSliceAlong":() =>_turf_line_slice_along__WEBPACK_IMPORTED_MODULE_37__["default"],"lineSplit":() =>_turf_line_split__WEBPACK_IMPORTED_MODULE_46__["default"],"lineString":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.lineString,"lineStringToPolygon":() =>_turf_line_to_polygon__WEBPACK_IMPORTED_MODULE_49__["default"],"lineStrings":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.lineStrings,"lineToPolygon":() =>_turf_line_to_polygon__WEBPACK_IMPORTED_MODULE_49__["default"],"mask":() =>_turf_mask__WEBPACK_IMPORTED_MODULE_101__["default"],"meta":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__,"midpoint":() =>_turf_midpoint__WEBPACK_IMPORTED_MODULE_13__["default"],"moranIndex":() =>_turf_moran_index__WEBPACK_IMPORTED_MODULE_87__["default"],"multiLineString":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.multiLineString,"multiPoint":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.multiPoint,"multiPolygon":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.multiPolygon,"nearest":() =>_turf_nearest_point__WEBPACK_IMPORTED_MODULE_24__["default"],"nearestPoint":() =>_turf_nearest_point__WEBPACK_IMPORTED_MODULE_24__["default"],"nearestPointOnLine":() =>_turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_25__["default"],"nearestPointToLine":() =>_turf_nearest_point_to_line__WEBPACK_IMPORTED_MODULE_26__["default"],"planepoint":() =>_turf_planepoint__WEBPACK_IMPORTED_MODULE_27__["default"],"point":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.point,"pointGrid":() =>_turf_point_grid__WEBPACK_IMPORTED_MODULE_38__["default"],"pointOnFeature":() =>_turf_point_on_feature__WEBPACK_IMPORTED_MODULE_32__["default"],"pointOnLine":() =>_turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_25__["default"],"pointOnSurface":() =>_turf_point_on_feature__WEBPACK_IMPORTED_MODULE_32__["default"],"pointToLineDistance":() =>_turf_point_to_line_distance__WEBPACK_IMPORTED_MODULE_77__["default"],"points":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.points,"pointsWithinPolygon":() =>_turf_points_within_polygon__WEBPACK_IMPORTED_MODULE_2__["default"],"polygon":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.polygon,"polygonSmooth":() =>_turf_polygon_smooth__WEBPACK_IMPORTED_MODULE_86__["default"],"polygonTangents":() =>_turf_polygon_tangents__WEBPACK_IMPORTED_MODULE_56__["default"],"polygonToLine":() =>_turf_polygon_to_line__WEBPACK_IMPORTED_MODULE_48__["default"],"polygonToLineString":() =>_turf_polygon_to_line__WEBPACK_IMPORTED_MODULE_48__["default"],"polygonize":() =>_turf_polygonize__WEBPACK_IMPORTED_MODULE_63__["default"],"polygons":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.polygons,"projection":() =>_turf_projection__WEBPACK_IMPORTED_MODULE_89__,"propEach":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.propEach,"propReduce":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.propReduce,"propertiesContainsFilter":() =>_turf_clusters__WEBPACK_IMPORTED_MODULE_91__.propertiesContainsFilter,"radians2degrees":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.radiansToDegrees,"radiansToDegrees":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.radiansToDegrees,"radiansToDistance":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.radiansToLength,"radiansToLength":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.radiansToLength,"random":() =>_turf_random__WEBPACK_IMPORTED_MODULE_90__,"randomLineString":() =>_turf_random__WEBPACK_IMPORTED_MODULE_90__.randomLineString,"randomPoint":() =>_turf_random__WEBPACK_IMPORTED_MODULE_90__.randomPoint,"randomPolygon":() =>_turf_random__WEBPACK_IMPORTED_MODULE_90__.randomPolygon,"randomPosition":() =>_turf_random__WEBPACK_IMPORTED_MODULE_90__.randomPosition,"rewind":() =>_turf_rewind__WEBPACK_IMPORTED_MODULE_57__["default"],"rhumbBearing":() =>_turf_rhumb_bearing__WEBPACK_IMPORTED_MODULE_53__["default"],"rhumbDestination":() =>_turf_rhumb_destination__WEBPACK_IMPORTED_MODULE_55__["default"],"rhumbDistance":() =>_turf_rhumb_distance__WEBPACK_IMPORTED_MODULE_54__["default"],"round":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.round,"sample":() =>_turf_sample__WEBPACK_IMPORTED_MODULE_9__["default"],"sector":() =>_turf_sector__WEBPACK_IMPORTED_MODULE_52__["default"],"segmentEach":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.segmentEach,"segmentReduce":() =>_turf_meta__WEBPACK_IMPORTED_MODULE_94__.segmentReduce,"shortestPath":() =>_turf_shortest_path__WEBPACK_IMPORTED_MODULE_79__["default"],"simplify":() =>_turf_simplify__WEBPACK_IMPORTED_MODULE_6__["default"],"square":() =>_turf_square__WEBPACK_IMPORTED_MODULE_11__["default"],"squareGrid":() =>_turf_square_grid__WEBPACK_IMPORTED_MODULE_102__["default"],"standardDeviationalEllipse":() =>_turf_standard_deviational_ellipse__WEBPACK_IMPORTED_MODULE_84__["default"],"tag":() =>_turf_tag__WEBPACK_IMPORTED_MODULE_8__["default"],"tesselate":() =>_turf_tesselate__WEBPACK_IMPORTED_MODULE_21__["default"],"tin":() =>_turf_tin__WEBPACK_IMPORTED_MODULE_28__["default"],"toMercator":() =>_turf_projection__WEBPACK_IMPORTED_MODULE_89__.toMercator,"toWgs84":() =>_turf_projection__WEBPACK_IMPORTED_MODULE_89__.toWgs84,"transformRotate":() =>_turf_transform_rotate__WEBPACK_IMPORTED_MODULE_59__["default"],"transformScale":() =>_turf_transform_scale__WEBPACK_IMPORTED_MODULE_60__["default"],"transformTranslate":() =>_turf_transform_translate__WEBPACK_IMPORTED_MODULE_61__["default"],"triangleGrid":() =>_turf_triangle_grid__WEBPACK_IMPORTED_MODULE_103__["default"],"truncate":() =>_turf_truncate__WEBPACK_IMPORTED_MODULE_39__["default"],"union":() =>_turf_union__WEBPACK_IMPORTED_MODULE_97__["default"],"unitsFactors":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.unitsFactors,"unkinkPolygon":() =>_turf_unkink_polygon__WEBPACK_IMPORTED_MODULE_43__["default"],"validateBBox":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.validateBBox,"validateId":() =>_turf_helpers__WEBPACK_IMPORTED_MODULE_92__.validateId,"voronoi":() =>_turf_voronoi__WEBPACK_IMPORTED_MODULE_80__["default"],"within":() =>_turf_points_within_polygon__WEBPACK_IMPORTED_MODULE_2__["default"]});var _turf_isolines__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/isolines/dist/es/index.js");var _turf_convex__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/convex/dist/es/index.js");var _turf_points_within_polygon__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/points-within-polygon/dist/es/index.js");var _turf_concave__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/@turf/concave/dist/es/index.js");var _turf_collect__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__("../node_modules/@turf/collect/dist/es/index.js");var _turf_flip__WEBPACK_IMPORTED_MODULE_5__ =__webpack_require__("../node_modules/@turf/flip/dist/es/index.js");var _turf_simplify__WEBPACK_IMPORTED_MODULE_6__ =__webpack_require__("../node_modules/@turf/simplify/dist/es/index.js");var _turf_bezier_spline__WEBPACK_IMPORTED_MODULE_7__ =__webpack_require__("../node_modules/@turf/bezier-spline/dist/es/index.js");var _turf_tag__WEBPACK_IMPORTED_MODULE_8__ =__webpack_require__("../node_modules/@turf/tag/dist/es/index.js");var _turf_sample__WEBPACK_IMPORTED_MODULE_9__ =__webpack_require__("../node_modules/@turf/sample/dist/es/index.js");var _turf_envelope__WEBPACK_IMPORTED_MODULE_10__ =__webpack_require__("../node_modules/@turf/envelope/dist/es/index.js");var _turf_square__WEBPACK_IMPORTED_MODULE_11__ =__webpack_require__("../node_modules/@turf/square/dist/es/index.js");var _turf_circle__WEBPACK_IMPORTED_MODULE_12__ =__webpack_require__("../node_modules/@turf/circle/dist/es/index.js");var _turf_midpoint__WEBPACK_IMPORTED_MODULE_13__ =__webpack_require__("../node_modules/@turf/midpoint/dist/es/index.js");var _turf_center__WEBPACK_IMPORTED_MODULE_14__ =__webpack_require__("../node_modules/@turf/center/dist/es/index.js");var _turf_center_of_mass__WEBPACK_IMPORTED_MODULE_15__ =__webpack_require__("../node_modules/@turf/center-of-mass/dist/es/index.js");var _turf_centroid__WEBPACK_IMPORTED_MODULE_16__ =__webpack_require__("../node_modules/@turf/centroid/dist/es/index.js");var _turf_combine__WEBPACK_IMPORTED_MODULE_17__ =__webpack_require__("../node_modules/@turf/combine/dist/es/index.js");var _turf_distance__WEBPACK_IMPORTED_MODULE_18__ =__webpack_require__("../node_modules/@turf/distance/dist/es/index.js");var _turf_explode__WEBPACK_IMPORTED_MODULE_19__ =__webpack_require__("../node_modules/@turf/explode/dist/es/index.js");var _turf_bbox__WEBPACK_IMPORTED_MODULE_20__ =__webpack_require__("../node_modules/@turf/bbox/dist/es/index.js");var _turf_tesselate__WEBPACK_IMPORTED_MODULE_21__ =__webpack_require__("../node_modules/@turf/tesselate/dist/es/index.js");var _turf_bbox_polygon__WEBPACK_IMPORTED_MODULE_22__ =__webpack_require__("../node_modules/@turf/bbox-polygon/dist/es/index.js");var _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_23__ =__webpack_require__("../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js");var _turf_nearest_point__WEBPACK_IMPORTED_MODULE_24__ =__webpack_require__("../node_modules/@turf/nearest-point/dist/es/index.js");var _turf_nearest_point_on_line__WEBPACK_IMPORTED_MODULE_25__ =__webpack_require__("../node_modules/@turf/nearest-point-on-line/dist/es/index.js");var _turf_nearest_point_to_line__WEBPACK_IMPORTED_MODULE_26__ =__webpack_require__("../node_modules/@turf/nearest-point-to-line/dist/es/index.js");var _turf_planepoint__WEBPACK_IMPORTED_MODULE_27__ =__webpack_require__("../node_modules/@turf/planepoint/dist/es/index.js");var _turf_tin__WEBPACK_IMPORTED_MODULE_28__ =__webpack_require__("../node_modules/@turf/tin/dist/es/index.js");var _turf_bearing__WEBPACK_IMPORTED_MODULE_29__ =__webpack_require__("../node_modules/@turf/bearing/dist/es/index.js");var _turf_destination__WEBPACK_IMPORTED_MODULE_30__ =__webpack_require__("../node_modules/@turf/destination/dist/es/index.js");var _turf_kinks__WEBPACK_IMPORTED_MODULE_31__ =__webpack_require__("../node_modules/@turf/kinks/dist/es/index.js");var _turf_point_on_feature__WEBPACK_IMPORTED_MODULE_32__ =__webpack_require__("../node_modules/@turf/point-on-feature/dist/es/index.js");var _turf_area__WEBPACK_IMPORTED_MODULE_33__ =__webpack_require__("../node_modules/@turf/area/dist/es/index.js");var _turf_along__WEBPACK_IMPORTED_MODULE_34__ =__webpack_require__("../node_modules/@turf/along/dist/es/index.js");var _turf_length__WEBPACK_IMPORTED_MODULE_35__ =__webpack_require__("../node_modules/@turf/length/dist/es/index.js");var _turf_line_slice__WEBPACK_IMPORTED_MODULE_36__ =__webpack_require__("../node_modules/@turf/line-slice/dist/es/index.js");var _turf_line_slice_along__WEBPACK_IMPORTED_MODULE_37__ =__webpack_require__("../node_modules/@turf/line-slice-along/dist/es/index.js");var _turf_point_grid__WEBPACK_IMPORTED_MODULE_38__ =__webpack_require__("../node_modules/@turf/point-grid/dist/es/index.js");var _turf_truncate__WEBPACK_IMPORTED_MODULE_39__ =__webpack_require__("../node_modules/@turf/truncate/dist/es/index.js");var _turf_flatten__WEBPACK_IMPORTED_MODULE_40__ =__webpack_require__("../node_modules/@turf/flatten/dist/es/index.js");var _turf_line_intersect__WEBPACK_IMPORTED_MODULE_41__ =__webpack_require__("../node_modules/@turf/line-intersect/dist/es/index.js");var _turf_line_chunk__WEBPACK_IMPORTED_MODULE_42__ =__webpack_require__("../node_modules/@turf/line-chunk/dist/es/index.js");var _turf_unkink_polygon__WEBPACK_IMPORTED_MODULE_43__ =__webpack_require__("../node_modules/@turf/unkink-polygon/dist/es/index.js");var _turf_great_circle__WEBPACK_IMPORTED_MODULE_44__ =__webpack_require__("../node_modules/@turf/great-circle/dist/es/index.js");var _turf_line_segment__WEBPACK_IMPORTED_MODULE_45__ =__webpack_require__("../node_modules/@turf/line-segment/dist/es/index.js");var _turf_line_split__WEBPACK_IMPORTED_MODULE_46__ =__webpack_require__("../node_modules/@turf/line-split/dist/es/index.js");var _turf_line_arc__WEBPACK_IMPORTED_MODULE_47__ =__webpack_require__("../node_modules/@turf/line-arc/dist/es/index.js");var _turf_polygon_to_line__WEBPACK_IMPORTED_MODULE_48__ =__webpack_require__("../node_modules/@turf/polygon-to-line/dist/es/index.js");var _turf_line_to_polygon__WEBPACK_IMPORTED_MODULE_49__ =__webpack_require__("../node_modules/@turf/line-to-polygon/dist/es/index.js");var _turf_bbox_clip__WEBPACK_IMPORTED_MODULE_50__ =__webpack_require__("../node_modules/@turf/bbox-clip/dist/es/index.js");var _turf_line_overlap__WEBPACK_IMPORTED_MODULE_51__ =__webpack_require__("../node_modules/@turf/line-overlap/dist/es/index.js");var _turf_sector__WEBPACK_IMPORTED_MODULE_52__ =__webpack_require__("../node_modules/@turf/sector/dist/es/index.js");var _turf_rhumb_bearing__WEBPACK_IMPORTED_MODULE_53__ =__webpack_require__("../node_modules/@turf/rhumb-bearing/dist/es/index.js");var _turf_rhumb_distance__WEBPACK_IMPORTED_MODULE_54__ =__webpack_require__("../node_modules/@turf/rhumb-distance/dist/es/index.js");var _turf_rhumb_destination__WEBPACK_IMPORTED_MODULE_55__ =__webpack_require__("../node_modules/@turf/rhumb-destination/dist/es/index.js");var _turf_polygon_tangents__WEBPACK_IMPORTED_MODULE_56__ =__webpack_require__("../node_modules/@turf/polygon-tangents/dist/es/index.js");var _turf_rewind__WEBPACK_IMPORTED_MODULE_57__ =__webpack_require__("../node_modules/@turf/rewind/dist/es/index.js");var _turf_isobands__WEBPACK_IMPORTED_MODULE_58__ =__webpack_require__("../node_modules/@turf/isobands/dist/es/index.js");var _turf_transform_rotate__WEBPACK_IMPORTED_MODULE_59__ =__webpack_require__("../node_modules/@turf/transform-rotate/dist/es/index.js");var _turf_transform_scale__WEBPACK_IMPORTED_MODULE_60__ =__webpack_require__("../node_modules/@turf/transform-scale/dist/es/index.js");var _turf_transform_translate__WEBPACK_IMPORTED_MODULE_61__ =__webpack_require__("../node_modules/@turf/transform-translate/dist/es/index.js");var _turf_line_offset__WEBPACK_IMPORTED_MODULE_62__ =__webpack_require__("../node_modules/@turf/line-offset/dist/es/index.js");var _turf_polygonize__WEBPACK_IMPORTED_MODULE_63__ =__webpack_require__("../node_modules/@turf/polygonize/dist/es/index.js");var _turf_boolean_disjoint__WEBPACK_IMPORTED_MODULE_64__ =__webpack_require__("../node_modules/@turf/boolean-disjoint/dist/es/index.js");var _turf_boolean_contains__WEBPACK_IMPORTED_MODULE_65__ =__webpack_require__("../node_modules/@turf/boolean-contains/dist/es/index.js");var _turf_boolean_crosses__WEBPACK_IMPORTED_MODULE_66__ =__webpack_require__("../node_modules/@turf/boolean-crosses/dist/es/index.js");var _turf_boolean_clockwise__WEBPACK_IMPORTED_MODULE_67__ =__webpack_require__("../node_modules/@turf/boolean-clockwise/dist/es/index.js");var _turf_boolean_overlap__WEBPACK_IMPORTED_MODULE_68__ =__webpack_require__("../node_modules/@turf/boolean-overlap/dist/es/index.js");var _turf_boolean_point_on_line__WEBPACK_IMPORTED_MODULE_69__ =__webpack_require__("../node_modules/@turf/boolean-point-on-line/dist/es/index.js");var _turf_boolean_equal__WEBPACK_IMPORTED_MODULE_70__ =__webpack_require__("../node_modules/@turf/boolean-equal/dist/es/index.js");var _turf_boolean_within__WEBPACK_IMPORTED_MODULE_71__ =__webpack_require__("../node_modules/@turf/boolean-within/dist/es/index.js");var _turf_boolean_intersects__WEBPACK_IMPORTED_MODULE_72__ =__webpack_require__("../node_modules/@turf/boolean-intersects/dist/es/index.js");var _turf_clone__WEBPACK_IMPORTED_MODULE_73__ =__webpack_require__("../node_modules/@turf/clone/dist/es/index.js");var _turf_clean_coords__WEBPACK_IMPORTED_MODULE_74__ =__webpack_require__("../node_modules/@turf/clean-coords/dist/es/index.js");var _turf_clusters_dbscan__WEBPACK_IMPORTED_MODULE_75__ =__webpack_require__("../node_modules/@turf/clusters-dbscan/dist/es/index.js");var _turf_clusters_kmeans__WEBPACK_IMPORTED_MODULE_76__ =__webpack_require__("../node_modules/@turf/clusters-kmeans/dist/es/index.js");var _turf_point_to_line_distance__WEBPACK_IMPORTED_MODULE_77__ =__webpack_require__("../node_modules/@turf/point-to-line-distance/dist/es/index.js");var _turf_boolean_parallel__WEBPACK_IMPORTED_MODULE_78__ =__webpack_require__("../node_modules/@turf/boolean-parallel/dist/es/index.js");var _turf_shortest_path__WEBPACK_IMPORTED_MODULE_79__ =__webpack_require__("../node_modules/@turf/shortest-path/dist/es/index.js");var _turf_voronoi__WEBPACK_IMPORTED_MODULE_80__ =__webpack_require__("../node_modules/@turf/voronoi/dist/es/index.js");var _turf_ellipse__WEBPACK_IMPORTED_MODULE_81__ =__webpack_require__("../node_modules/@turf/ellipse/dist/es/index.js");var _turf_center_mean__WEBPACK_IMPORTED_MODULE_82__ =__webpack_require__("../node_modules/@turf/center-mean/dist/es/index.js");var _turf_center_median__WEBPACK_IMPORTED_MODULE_83__ =__webpack_require__("../node_modules/@turf/center-median/dist/es/index.js");var _turf_standard_deviational_ellipse__WEBPACK_IMPORTED_MODULE_84__ =__webpack_require__("../node_modules/@turf/standard-deviational-ellipse/dist/es/index.js");var _turf_angle__WEBPACK_IMPORTED_MODULE_85__ =__webpack_require__("../node_modules/@turf/angle/dist/es/index.js");var _turf_polygon_smooth__WEBPACK_IMPORTED_MODULE_86__ =__webpack_require__("../node_modules/@turf/polygon-smooth/dist/es/index.js");var _turf_moran_index__WEBPACK_IMPORTED_MODULE_87__ =__webpack_require__("../node_modules/@turf/moran-index/dist/es/index.js");var _turf_distance_weight__WEBPACK_IMPORTED_MODULE_88__ =__webpack_require__("../node_modules/@turf/distance-weight/dist/es/index.js");var _turf_projection__WEBPACK_IMPORTED_MODULE_89__ =__webpack_require__("../node_modules/@turf/projection/dist/es/index.js");var _turf_random__WEBPACK_IMPORTED_MODULE_90__ =__webpack_require__("../node_modules/@turf/random/dist/es/index.js");var _turf_clusters__WEBPACK_IMPORTED_MODULE_91__ =__webpack_require__("../node_modules/@turf/clusters/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_92__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_93__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");var _turf_meta__WEBPACK_IMPORTED_MODULE_94__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var _turf_difference__WEBPACK_IMPORTED_MODULE_95__ =__webpack_require__("../node_modules/@turf/difference/dist/es/index.js");var _turf_buffer__WEBPACK_IMPORTED_MODULE_96__ =__webpack_require__("../node_modules/@turf/buffer/dist/es/index.js");var _turf_union__WEBPACK_IMPORTED_MODULE_97__ =__webpack_require__("../node_modules/@turf/union/dist/es/index.js");var _turf_intersect__WEBPACK_IMPORTED_MODULE_98__ =__webpack_require__("../node_modules/@turf/intersect/dist/es/index.js");var _turf_dissolve__WEBPACK_IMPORTED_MODULE_99__ =__webpack_require__("../node_modules/@turf/dissolve/dist/es/index.js");var _turf_hex_grid__WEBPACK_IMPORTED_MODULE_100__ =__webpack_require__("../node_modules/@turf/hex-grid/dist/es/index.js");var _turf_mask__WEBPACK_IMPORTED_MODULE_101__ =__webpack_require__("../node_modules/@turf/mask/dist/es/index.js");var _turf_square_grid__WEBPACK_IMPORTED_MODULE_102__ =__webpack_require__("../node_modules/@turf/square-grid/dist/es/index.js");var _turf_triangle_grid__WEBPACK_IMPORTED_MODULE_103__ =__webpack_require__("../node_modules/@turf/triangle-grid/dist/es/index.js");var _turf_interpolate__WEBPACK_IMPORTED_MODULE_104__ =__webpack_require__("../node_modules/@turf/interpolate/dist/es/index.js");},"../node_modules/@turf/union/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var polygon_clipping__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/polygon-clipping/dist/polygon-clipping.umd.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");function union(poly1,poly2,options){if (options ===void 0){options ={};}var geom1 =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getGeom)(poly1);var geom2 =(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getGeom)(poly2);var unioned =polygon_clipping__WEBPACK_IMPORTED_MODULE_0__.union(geom1.coordinates,geom2.coordinates);if (unioned.length ===0)return null;if (unioned.length ===1)return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)(unioned[0],options.properties);else return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.multiPolygon)(unioned,options.properties);}const __WEBPACK_DEFAULT_EXPORT__ =union;},"../node_modules/@turf/unkink-polygon/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_meta__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/meta/dist/es/index.js");var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var rbush__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/rbush/index.js");var _turf_area__WEBPACK_IMPORTED_MODULE_3__ =__webpack_require__("../node_modules/@turf/area/dist/es/index.js");var _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_4__ =__webpack_require__("../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js");function isects(feature,filterFn,useSpatialIndex){if (feature.geometry.type !=="Polygon")throw new Error("The input feature must be a Polygon");if (useSpatialIndex ===undefined)useSpatialIndex =1;var coord =feature.geometry.coordinates;var output =[];var seen ={};if (useSpatialIndex){var allEdgesAsRbushTreeItems =[];for (var ring0 =0;ring0 <coord.length;ring0++ ){for (var edge0 =0;edge0 <coord[ring0].length -1;edge0++ ){allEdgesAsRbushTreeItems.push(rbushTreeItem(ring0,edge0));}}var tree =rbush__WEBPACK_IMPORTED_MODULE_2__();tree.load(allEdgesAsRbushTreeItems);}for (var ringA =0;ringA <coord.length;ringA++ ){for (var edgeA =0;edgeA <coord[ringA].length -1;edgeA++ ){if (useSpatialIndex){var bboxOverlaps =tree.search(rbushTreeItem(ringA,edgeA));bboxOverlaps.forEach(function (bboxIsect){var ring1 =bboxIsect.ring;var edge1 =bboxIsect.edge;ifIsectAddToOutput(ringA,edgeA,ring1,edge1);});}else {for (var ring1 =0;ring1 <coord.length;ring1++ ){for (var edge1 =0;edge1 <coord[ring1].length -1;edge1++ ){ifIsectAddToOutput(ringA,edgeA,ring1,edge1);}}}}}if (!filterFn)output ={type:"Feature",geometry:{type:"MultiPoint",coordinates:output }};return output;function ifIsectAddToOutput(ring0,edge0,ring1,edge1){var start0 =coord[ring0][edge0];var end0 =coord[ring0][edge0 +1];var start1 =coord[ring1][edge1];var end1 =coord[ring1][edge1 +1];var isect =intersect(start0,end0,start1,end1);if (isect ===null)return ;var frac0;var frac1;if (end0[0]!==start0[0]){frac0 =(isect[0]-start0[0])/(end0[0]-start0[0]);}else {frac0 =(isect[1]-start0[1])/(end0[1]-start0[1]);}if (end1[0]!==start1[0]){frac1 =(isect[0]-start1[0])/(end1[0]-start1[0]);}else {frac1 =(isect[1]-start1[1])/(end1[1]-start1[1]);}if (frac0 >=1 ||frac0 <=0 ||frac1 >=1 ||frac1 <=0)return ;var key =isect;var unique =!seen[key];if (unique){seen[key]=true;}if (filterFn){output.push(filterFn(isect,ring0,edge0,start0,end0,frac0,ring1,edge1,start1,end1,frac1,unique));}else {output.push(isect);}}function rbushTreeItem(ring,edge){var start =coord[ring][edge];var end =coord[ring][edge +1];var minX;var maxX;var minY;var maxY;if (start[0]<end[0]){minX =start[0];maxX =end[0];}else {minX =end[0];maxX =start[0];}if (start[1]<end[1]){minY =start[1];maxY =end[1];}else {minY =end[1];maxY =start[1];}return {minX:minX,minY:minY,maxX:maxX,maxY:maxY,ring:ring,edge:edge };}}function intersect(start0,end0,start1,end1){if (equalArrays(start0,start1)||equalArrays(start0,end1)||equalArrays(end0,start1)||equalArrays(end1,start1))return null;var x0 =start0[0],y0 =start0[1],x1 =end0[0],y1 =end0[1],x2 =start1[0],y2 =start1[1],x3 =end1[0],y3 =end1[1];var denom =(x0 -x1)*(y2 -y3)-(y0 -y1)*(x2 -x3);if (denom ===0)return null;var x4 =((x0 *y1 -y0 *x1)*(x2 -x3)-(x0 -x1)*(x2 *y3 -y2 *x3))/denom;var y4 =((x0 *y1 -y0 *x1)*(y2 -y3)-(y0 -y1)*(x2 *y3 -y2 *x3))/denom;return [x4,y4];}function equalArrays(array1,array2){if (!array1 ||!array2)return false;if (array1.length !==array2.length)return false;for (var i =0,l =array1.length;i <l;i++ ){if (array1[i]instanceof Array &&array2[i]instanceof Array){if (!equalArrays(array1[i],array2[i]))return false;}else if (array1[i]!==array2[i]){return false;}}return true;}function simplepolygon(feature){if (feature.type !="Feature")throw new Error("The input must a geojson object of type Feature");if (feature.geometry ===undefined ||feature.geometry ==null)throw new Error("The input must a geojson object with a non-empty geometry");if (feature.geometry.type !="Polygon")throw new Error("The input must be a geojson Polygon");var numRings =feature.geometry.coordinates.length;var vertices =[];for (var i =0;i <numRings;i++ ){var ring =feature.geometry.coordinates[i];if (!equalArrays$1(ring[0],ring[ring.length -1])){ring.push(ring[0]);}vertices.push.apply(vertices,ring.slice(0,ring.length -1));}if (!isUnique(vertices))throw new Error("The input polygon may not have duplicate vertices (except for the first and last vertex of each ring)");var numvertices =vertices.length;var selfIsectsData =isects(feature,function filterFn(isect,ring0,edge0,start0,end0,frac0,ring1,edge1,start1,end1,frac1,unique){return [isect,ring0,edge0,start0,end0,frac0,ring1,edge1,start1,end1,frac1,unique];});var numSelfIsect =selfIsectsData.length;if (numSelfIsect ==0){var outputFeatureArray =[];for (var i =0;i <numRings;i++ ){outputFeatureArray.push((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.polygon)([feature.geometry.coordinates[i]],{parent: -1,winding:windingOfRing(feature.geometry.coordinates[i])}));}var output =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.featureCollection)(outputFeatureArray);determineParents();setNetWinding();return output;}var pseudoVtxListByRingAndEdge =[];var isectList =[];for (var i =0;i <numRings;i++ ){pseudoVtxListByRingAndEdge.push([]);for (var j =0;j <feature.geometry.coordinates[i].length -1;j++ ){pseudoVtxListByRingAndEdge[i].push([new PseudoVtx(feature.geometry.coordinates[i][modulo(j +1,feature.geometry.coordinates[i].length -1)],1,[i,j],[i,modulo(j +1,feature.geometry.coordinates[i].length -1)],undefined)]);isectList.push(new Isect(feature.geometry.coordinates[i][j],[i,modulo(j -1,feature.geometry.coordinates[i].length -1)],[i,j],undefined,undefined,false,true));}}for (var i =0;i <numSelfIsect;i++ ){pseudoVtxListByRingAndEdge[selfIsectsData[i][1]][selfIsectsData[i][2]].push(new PseudoVtx(selfIsectsData[i][0],selfIsectsData[i][5],[selfIsectsData[i][1],selfIsectsData[i][2]],[selfIsectsData[i][6],selfIsectsData[i][7]],undefined));if (selfIsectsData[i][11])isectList.push(new Isect(selfIsectsData[i][0],[selfIsectsData[i][1],selfIsectsData[i][2]],[selfIsectsData[i][6],selfIsectsData[i][7]],undefined,undefined,true,true));}var numIsect =isectList.length;for (var i =0;i <pseudoVtxListByRingAndEdge.length;i++ ){for (var j =0;j <pseudoVtxListByRingAndEdge[i].length;j++ ){pseudoVtxListByRingAndEdge[i][j].sort(function (a,b){return a.param <b.param ? -1 :1;});}}var allIsectsAsIsectRbushTreeItem =[];for (var i =0;i <numIsect;i++ ){allIsectsAsIsectRbushTreeItem.push({minX:isectList[i].coord[0],minY:isectList[i].coord[1],maxX:isectList[i].coord[0],maxY:isectList[i].coord[1],index:i });}var isectRbushTree =rbush__WEBPACK_IMPORTED_MODULE_2__();isectRbushTree.load(allIsectsAsIsectRbushTreeItem);for (var i =0;i <pseudoVtxListByRingAndEdge.length;i++ ){for (var j =0;j <pseudoVtxListByRingAndEdge[i].length;j++ ){for (var k =0;k <pseudoVtxListByRingAndEdge[i][j].length;k++ ){var coordToFind;if (k ==pseudoVtxListByRingAndEdge[i][j].length -1){coordToFind =pseudoVtxListByRingAndEdge[i][modulo(j +1,feature.geometry.coordinates[i].length -1)][0].coord;}else {coordToFind =pseudoVtxListByRingAndEdge[i][j][k +1].coord;}var IsectRbushTreeItemFound =isectRbushTree.search({minX:coordToFind[0],minY:coordToFind[1],maxX:coordToFind[0],maxY:coordToFind[1]})[0];pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn =IsectRbushTreeItemFound.index;}}}for (var i =0;i <pseudoVtxListByRingAndEdge.length;i++ ){for (var j =0;j <pseudoVtxListByRingAndEdge[i].length;j++ ){for (var k =0;k <pseudoVtxListByRingAndEdge[i][j].length;k++ ){var coordToFind =pseudoVtxListByRingAndEdge[i][j][k].coord;var IsectRbushTreeItemFound =isectRbushTree.search({minX:coordToFind[0],minY:coordToFind[1],maxX:coordToFind[0],maxY:coordToFind[1]})[0];var l =IsectRbushTreeItemFound.index;if (l <numvertices){isectList[l].nxtIsectAlongRingAndEdge2 =pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn;}else {if (equalArrays$1(isectList[l].ringAndEdge1,pseudoVtxListByRingAndEdge[i][j][k].ringAndEdgeIn)){isectList[l].nxtIsectAlongRingAndEdge1 =pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn;}else {isectList[l].nxtIsectAlongRingAndEdge2 =pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn;}}}}}var queue =[];var i =0;for (var j =0;j <numRings;j++ ){var leftIsect =i;for (var k =0;k <feature.geometry.coordinates[j].length -1;k++ ){if (isectList[i].coord[0]<isectList[leftIsect].coord[0]){leftIsect =i;}i++ ;}var isectAfterLeftIsect =isectList[leftIsect].nxtIsectAlongRingAndEdge2;for (var k =0;k <isectList.length;k++ ){if (isectList[k].nxtIsectAlongRingAndEdge1 ==leftIsect ||isectList[k].nxtIsectAlongRingAndEdge2 ==leftIsect){var isectBeforeLeftIsect =k;break ;}}var windingAtIsect =isConvex([isectList[isectBeforeLeftIsect].coord,isectList[leftIsect].coord,isectList[isectAfterLeftIsect].coord],true)?1 : -1;queue.push({isect:leftIsect,parent: -1,winding:windingAtIsect });}queue.sort(function (a,b){return isectList[a.isect].coord >isectList[b.isect].coord ? -1 :1;});var outputFeatureArray =[];while (queue.length >0){var popped =queue.pop();var startIsect =popped.isect;var currentOutputRingParent =popped.parent;var currentOutputRingWinding =popped.winding;var currentOutputRing =outputFeatureArray.length;var currentOutputRingCoords =[isectList[startIsect].coord];var currentIsect =startIsect;if (isectList[startIsect].ringAndEdge1Walkable){var walkingRingAndEdge =isectList[startIsect].ringAndEdge1;var nxtIsect =isectList[startIsect].nxtIsectAlongRingAndEdge1;}else {var walkingRingAndEdge =isectList[startIsect].ringAndEdge2;var nxtIsect =isectList[startIsect].nxtIsectAlongRingAndEdge2;}while (!equalArrays$1(isectList[startIsect].coord,isectList[nxtIsect].coord)){currentOutputRingCoords.push(isectList[nxtIsect].coord);var nxtIsectInQueue =undefined;for (var i =0;i <queue.length;i++ ){if (queue[i].isect ==nxtIsect){nxtIsectInQueue =i;break ;}}if (nxtIsectInQueue !=undefined){queue.splice(nxtIsectInQueue,1);}if (equalArrays$1(walkingRingAndEdge,isectList[nxtIsect].ringAndEdge1)){walkingRingAndEdge =isectList[nxtIsect].ringAndEdge2;isectList[nxtIsect].ringAndEdge2Walkable =false;if (isectList[nxtIsect].ringAndEdge1Walkable){var pushing ={isect:nxtIsect };if (isConvex([isectList[currentIsect].coord,isectList[nxtIsect].coord,isectList[isectList[nxtIsect].nxtIsectAlongRingAndEdge2].coord],currentOutputRingWinding ==1)){pushing.parent =currentOutputRingParent;pushing.winding = -currentOutputRingWinding;}else {pushing.parent =currentOutputRing;pushing.winding =currentOutputRingWinding;}queue.push(pushing);}currentIsect =nxtIsect;nxtIsect =isectList[nxtIsect].nxtIsectAlongRingAndEdge2;}else {walkingRingAndEdge =isectList[nxtIsect].ringAndEdge1;isectList[nxtIsect].ringAndEdge1Walkable =false;if (isectList[nxtIsect].ringAndEdge2Walkable){var pushing ={isect:nxtIsect };if (isConvex([isectList[currentIsect].coord,isectList[nxtIsect].coord,isectList[isectList[nxtIsect].nxtIsectAlongRingAndEdge1].coord],currentOutputRingWinding ==1)){pushing.parent =currentOutputRingParent;pushing.winding = -currentOutputRingWinding;}else {pushing.parent =currentOutputRing;pushing.winding =currentOutputRingWinding;}queue.push(pushing);}currentIsect =nxtIsect;nxtIsect =isectList[nxtIsect].nxtIsectAlongRingAndEdge1;}}currentOutputRingCoords.push(isectList[nxtIsect].coord);outputFeatureArray.push((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.polygon)([currentOutputRingCoords],{index:currentOutputRing,parent:currentOutputRingParent,winding:currentOutputRingWinding,netWinding:undefined }));}var output =(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.featureCollection)(outputFeatureArray);determineParents();setNetWinding();function determineParents(){var featuresWithoutParent =[];for (var i =0;i <output.features.length;i++ ){if (output.features[i].properties.parent == -1)featuresWithoutParent.push(i);}if (featuresWithoutParent.length >1){for (var i =0;i <featuresWithoutParent.length;i++ ){var parent = -1;var parentArea =Infinity;for (var j =0;j <output.features.length;j++ ){if (featuresWithoutParent[i]==j)continue ;if ((0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_4__["default"])(output.features[featuresWithoutParent[i]].geometry.coordinates[0][0],output.features[j],{ignoreBoundary:true })){if ((0,_turf_area__WEBPACK_IMPORTED_MODULE_3__["default"])(output.features[j])<parentArea){parent =j;}}}output.features[featuresWithoutParent[i]].properties.parent =parent;}}}function setNetWinding(){for (var i =0;i <output.features.length;i++ ){if (output.features[i].properties.parent == -1){var netWinding =output.features[i].properties.winding;output.features[i].properties.netWinding =netWinding;setNetWindingOfChildren(i,netWinding);}}}function setNetWindingOfChildren(parent,ParentNetWinding){for (var i =0;i <output.features.length;i++ ){if (output.features[i].properties.parent ==parent){var netWinding =ParentNetWinding +output.features[i].properties.winding;output.features[i].properties.netWinding =netWinding;setNetWindingOfChildren(i,netWinding);}}}return output;}var PseudoVtx =function (coord,param,ringAndEdgeIn,ringAndEdgeOut,nxtIsectAlongEdgeIn){this.coord =coord;this.param =param;this.ringAndEdgeIn =ringAndEdgeIn;this.ringAndEdgeOut =ringAndEdgeOut;this.nxtIsectAlongEdgeIn =nxtIsectAlongEdgeIn;};var Isect =function (coord,ringAndEdge1,ringAndEdge2,nxtIsectAlongRingAndEdge1,nxtIsectAlongRingAndEdge2,ringAndEdge1Walkable,ringAndEdge2Walkable){this.coord =coord;this.ringAndEdge1 =ringAndEdge1;this.ringAndEdge2 =ringAndEdge2;this.nxtIsectAlongRingAndEdge1 =nxtIsectAlongRingAndEdge1;this.nxtIsectAlongRingAndEdge2 =nxtIsectAlongRingAndEdge2;this.ringAndEdge1Walkable =ringAndEdge1Walkable;this.ringAndEdge2Walkable =ringAndEdge2Walkable;};function isConvex(pts,righthanded){if (typeof righthanded ==="undefined")righthanded =true;if (pts.length !=3)throw new Error("This function requires an array of three points [x,y]");var d =(pts[1][0]-pts[0][0])*(pts[2][1]-pts[0][1])-(pts[1][1]-pts[0][1])*(pts[2][0]-pts[0][0]);return d >=0 ==righthanded;}function windingOfRing(ring){var leftVtx =0;for (var i =0;i <ring.length -1;i++ ){if (ring[i][0]<ring[leftVtx][0])leftVtx =i;}if (isConvex([ring[modulo(leftVtx -1,ring.length -1)],ring[leftVtx],ring[modulo(leftVtx +1,ring.length -1)]],true)){var winding =1;}else {var winding = -1;}return winding;}function equalArrays$1(array1,array2){if (!array1 ||!array2)return false;if (array1.length !=array2.length)return false;for (var i =0,l =array1.length;i <l;i++ ){if (array1[i]instanceof Array &&array2[i]instanceof Array){if (!equalArrays$1(array1[i],array2[i]))return false;}else if (array1[i]!=array2[i]){return false;}}return true;}function modulo(n,m){return (n %m +m)%m;}function isUnique(array){var u ={};var isUnique =1;for (var i =0,l =array.length;i <l; ++i){if (Object.prototype.hasOwnProperty.call(u,array[i])){isUnique =0;break ;}u[array[i]]=1;}return isUnique;}function unkinkPolygon(geojson){var features =[];(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.flattenEach)(geojson,function (feature){if (feature.geometry.type !=="Polygon")return ;(0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.featureEach)(simplepolygon(feature),function (poly){features.push((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.polygon)(poly.geometry.coordinates,feature.properties));});});return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.featureCollection)(features);}const __WEBPACK_DEFAULT_EXPORT__ =unkinkPolygon;},"../node_modules/@turf/voronoi/dist/es/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__) =>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"default":() =>__WEBPACK_DEFAULT_EXPORT__ });var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/@turf/helpers/dist/es/index.js");var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("../node_modules/@turf/invariant/dist/es/index.js");var d3_voronoi__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("../node_modules/d3-voronoi/index.js");function coordsToPolygon(coords){coords =coords.slice();coords.push(coords[0]);return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.polygon)([coords]);}function voronoi(points,options){options =options ||{};if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.isObject)(options))throw new Error("options is invalid");var bbox =options.bbox ||[ -180, -85,180,85];if (!points)throw new Error("points is required");if (!Array.isArray(bbox))throw new Error("bbox is invalid");(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.collectionOf)(points,"Point","points");return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.featureCollection)((0,d3_voronoi__WEBPACK_IMPORTED_MODULE_2__.voronoi)().x(function (feature){return feature.geometry.coordinates[0];}).y(function (feature){return feature.geometry.coordinates[1];}).extent([[bbox[0],bbox[1]],[bbox[2],bbox[3]]]).polygons(points.features).map(coordsToPolygon));}const __WEBPACK_DEFAULT_EXPORT__ =voronoi;}}]); 