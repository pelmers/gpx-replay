




                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        




                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        




                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        








                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        




                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        







                                                    "use strict";(self["webpackChunkgpx_replay_react"]=self["webpackChunkgpx_replay_react" ]||[]). push([[                                                 "components_MapComponent_tsx"  ]   ,   {  "./components/MapComponent.tsx"   :  (   __unused_webpack_module,                                                  __webpack_exports__,                                                                                                   __webpack_require__) =>{                                 
                                                                                                                                                      eval(                                               "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MapComponent)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mapTools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mapTools */ \"./mapTools.ts\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mapbox-gl */ \"../node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/turf */ \"../node_modules/@turf/turf/dist/es/index.js\");\n/* harmony import */ var _RangeSliderComponent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RangeSliderComponent */ \"./components/RangeSliderComponent.tsx\");\n/* harmony import */ var _LabelInputWithHelp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./LabelInputWithHelp */ \"./components/LabelInputWithHelp.tsx\");\n/* harmony import */ var _CheckboxControlInputComponent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./CheckboxControlInputComponent */ \"./components/CheckboxControlInputComponent.tsx\");\n/* harmony import */ var map_heightgraph_src_heightgraph__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! map.heightgraph/src/heightgraph */ \"../node_modules/map.heightgraph/src/heightgraph.js\");\n/* harmony import */ var map_heightgraph_src_heightgraph_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! map.heightgraph/src/heightgraph.css */ \"../node_modules/map.heightgraph/src/heightgraph.css\");\n/* harmony import */ var _static_map_css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../static/map.css */ \"../static/map.css\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n// @ts-ignore no types for heightgraph :(\n\n\n\nclass MapComponent extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {\n    constructor(props) {\n        super(props);\n        this.mapDivRef = react__WEBPACK_IMPORTED_MODULE_0___default().createRef();\n        this.progressRef = react__WEBPACK_IMPORTED_MODULE_0___default().createRef();\n        this.mapControl = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().NavigationControl)({ visualizePitch: true });\n        this.fullscreenControl = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().FullscreenControl)();\n        // where is the bike along the track? can be fractional, in the range [0, # points]\n        // TODO: can i put this number in the state?\n        this.playhead = 0;\n        this.lastAnimationTime = null;\n        this.point = {\n            type: 'FeatureCollection',\n            features: [\n                {\n                    type: 'Feature',\n                    properties: {},\n                    geometry: {\n                        type: 'Point',\n                        coordinates: [0, 0],\n                    },\n                },\n            ],\n        };\n        /**\n         * The main animation loop, checks if we are in playing state and then calls animationBody\n         * once the time since last animation exceeds minAnimationTime.\n         * On the first frame of playback we do not actually run the animation body,\n         * but instead we only store the time.\n         * That's because the camera animation expects a duration and we do not know in\n         * advance what the frame timing is.\n         * @param t timestamp\n         */\n        this.animationLoop = (t) => {\n            if (!this.state.isPlaying) {\n                this.animationHandle = requestAnimationFrame(this.animationLoop);\n                this.lastAnimationTime = null;\n                return;\n            }\n            else if (this.lastAnimationTime == null) {\n                this.animationHandle = requestAnimationFrame(this.animationLoop);\n                this.lastAnimationTime = t;\n                return;\n            }\n            // cap at given fps\n            const minAnimationTime = 1000 / this.props.playbackFPS;\n            if (t - this.lastAnimationTime > minAnimationTime) {\n                this.animationBody(t - this.lastAnimationTime);\n                this.lastAnimationTime = t;\n            }\n            this.animationHandle = requestAnimationFrame(this.animationLoop);\n        };\n        this.windowKeyBinds = (e) => {\n            if (e.code === 'Space') {\n                e.preventDefault();\n                e.stopPropagation();\n                this.handlePlayClick();\n            }\n            if (e.code === 'KeyF') {\n                e.preventDefault();\n                e.stopPropagation();\n                if (document.fullscreenElement == null) {\n                    if (this.mapDivRef.current != null) {\n                        this.mapDivRef.current.requestFullscreen();\n                    }\n                }\n                else {\n                    document.exitFullscreen();\n                }\n            }\n            if (e.code === 'KeyH') {\n                e.preventDefault();\n                e.stopPropagation();\n                if (this.map.hasControl(this.mapControl)) {\n                    this.map.removeControl(this.mapControl);\n                    this.map.removeControl(this.fullscreenControl);\n                }\n                else {\n                    this.map.addControl(this.mapControl);\n                    this.map.addControl(this.fullscreenControl);\n                }\n            }\n        };\n        this.handlePlayClick = () => {\n            // If we're at the end, reset to the beginning\n            if (this.playhead >= this.props.gpxInfo.points.length - 1) {\n                this.handleProgressClick({ nativeEvent: { offsetX: 0 } });\n            }\n            this.setState({ isPlaying: !this.state.isPlaying });\n        };\n        this.handleProgressClick = (evt) => {\n            let offsetFraction = evt.nativeEvent.offsetX / this.progressRef.current.offsetWidth;\n            offsetFraction = Math.max(offsetFraction, 0);\n            offsetFraction = Math.min(offsetFraction, 1);\n            const newPosition = this.props.gpxInfo.points.length * offsetFraction;\n            this.resetFollowCamMomemtum();\n            this.updatePointPosition(newPosition, 0);\n        };\n        this.state = {\n            camMomentumRollingAvgInterval: Math.round(this.props.playbackFPS * 2),\n            useFollowCam: false,\n            followSensitivity: 45,\n            followMomentum: 0,\n            useFollowTrack: false,\n            mapStyle: 'mapbox://styles/mapbox/outdoors-v11',\n            showTopo: false,\n            // divide by 60 seconds per minute\n            pointsPerSecond: props.gpxInfo.points.length / 60,\n            isPlaying: false,\n            playbackRate: 1,\n            gpxTrackWidth: 4,\n            gpxTrackColor: '#ffff00',\n            pointIcon: 'bicycle-15',\n            pointIconSize: 2,\n        };\n        if (props.initialState) {\n            this.state = Object.assign(Object.assign({}, this.state), props.initialState);\n        }\n        const origin = (0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.toGeoJson)(props.gpxInfo.points[0]);\n        this.point.features[0].geometry.coordinates = origin;\n        this.resetFollowCamMomemtum();\n    }\n    /**\n     * Runs the animation by computing a new position based on the playback rate and\n     * updating the point to that position.\n     * @param timeDeltaMs time since last animation frame in milliseconds\n     */\n    animationBody(timeDeltaMs) {\n        // Note: times are in milliseconds.\n        const timeDeltaS = timeDeltaMs / 1000;\n        // Compute how many points to advance the playhead based on the time difference and playback rate\n        const moveDelta = timeDeltaS * this.state.playbackRate * this.state.pointsPerSecond;\n        const { points } = this.props.gpxInfo;\n        const newPosition = Math.min(moveDelta + this.playhead, points.length - 1);\n        this.updatePointPosition(newPosition, timeDeltaS);\n        // We've reached the end, pause the playback indicator\n        if (newPosition === points.length - 1) {\n            this.setState({ isPlaying: false });\n        }\n    }\n    /**\n     * Compute an in-between coordinate between two points on the gpx track.\n     * @param position possibly fractional position in the range [0, points.length - 1)\n     * @returns an object {point: Feature, bearing: number}\n     * Note: the end range is not inclusive! position must be strictly less than points.length - 1\n     */\n    interpolatePoint(position) {\n        const { points } = this.props.gpxInfo;\n        const pointIndex = Math.floor(position);\n        const currentFrameFeature = (0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.toGeoJsonFeature)(points[pointIndex]);\n        const nextFrameFeature = (0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.toGeoJsonFeature)(points[pointIndex + 1]);\n        const nextDist = _turf_turf__WEBPACK_IMPORTED_MODULE_3__.distance(currentFrameFeature, nextFrameFeature);\n        const bearing = _turf_turf__WEBPACK_IMPORTED_MODULE_3__.bearing(currentFrameFeature, nextFrameFeature);\n        return {\n            point: _turf_turf__WEBPACK_IMPORTED_MODULE_3__.along((0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.toGeoJsonLineString)(points[pointIndex], points[pointIndex + 1]), nextDist * (position - pointIndex)),\n            bearing,\n        };\n    }\n    resetFollowCamMomemtum() {\n        this.lastFollowcamMoveVector = {\n            momentumVec: null,\n            lastCenter: null,\n            lastVecs: [],\n        };\n    }\n    /**\n     * Find new map position parameters based on followcam settings\n     * @param timeDeltaS time since the last frame\n     * @param pointPos the lng/lat position of the point\n     * @returns parameters {center: Position, fixedBearing: number} for map view update\n     */\n    updateFollowCamParameters(timeDeltaS, pointPos) {\n        let newCenter = pointPos;\n        const { momentumVec, lastCenter, lastVecs } = this.lastFollowcamMoveVector;\n        const { playbackRate } = this.state;\n        // To allow the momentum feature to work when we receive position updates from outside,\n        // assume that we are playing if we have a position update function.\n        // Then the momentum reset is handled by the 2 second heuristic.\n        const isPlaying = this.state.isPlaying || this.props.positionUpdateFunctionRef != null;\n        if (isPlaying && momentumVec == null && lastCenter != null) {\n            // We are playing but we have not recorded a last camera move (so this is first frame)\n            this.lastFollowcamMoveVector.momentumVec = [\n                (pointPos[0] - lastCenter[0]) / playbackRate,\n                (pointPos[1] - lastCenter[1]) / playbackRate,\n            ];\n        }\n        else if (isPlaying && momentumVec != null && lastCenter != null) {\n            // We are playing and we know a last movement vector\n            const baseMoveVector = [\n                pointPos[0] - lastCenter[0],\n                pointPos[1] - lastCenter[1],\n            ];\n            // Take the weighted sum between baseMoveVector and lastFollowcamMoveVector\n            const newMoveVector = [\n                (1 - this.state.followMomentum) * baseMoveVector[0] +\n                    this.state.followMomentum * momentumVec[0] * playbackRate,\n                (1 - this.state.followMomentum) * baseMoveVector[1] +\n                    this.state.followMomentum * momentumVec[1] * playbackRate,\n            ];\n            // Add the newMoveVector to the last center to get the new center\n            newCenter = [\n                lastCenter[0] + newMoveVector[0],\n                lastCenter[1] + newMoveVector[1],\n            ];\n            // Record this camera movement in the history\n            lastVecs.push([\n                newMoveVector[0] / playbackRate,\n                newMoveVector[1] / playbackRate,\n            ]);\n            // If we exceed our rolling average threshold, remove the first one and update the momentum vector\n            if (lastVecs.length > this.state.camMomentumRollingAvgInterval) {\n                lastVecs.shift();\n                const sum = lastVecs.reduce((acc, cur) => [acc[0] + cur[0], acc[1] + cur[1]], [0, 0]);\n                this.lastFollowcamMoveVector.momentumVec = [\n                    sum[0] / this.state.camMomentumRollingAvgInterval,\n                    sum[1] / this.state.camMomentumRollingAvgInterval,\n                ];\n            }\n        }\n        let cameraBearing = this.map.getBearing();\n        if (lastCenter) {\n            cameraBearing = _turf_turf__WEBPACK_IMPORTED_MODULE_3__.bearing(lastCenter, newCenter);\n            const rot = (0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.bearingDiff)(this.map.getBearing(), cameraBearing);\n            // Cap the camera rotation rate at specified degrees/second to prevent dizziness\n            // After adding the rotation, reset domain to [-180, 180]\n            // because moving from +170 to -170 is +20, which goes to 190, and out of bounds.\n            const changeCap = this.state.followSensitivity * timeDeltaS;\n            cameraBearing = (0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.fixBearingDomain)(this.map.getBearing() + (0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.clamp)(rot, -changeCap, changeCap));\n        }\n        this.lastFollowcamMoveVector.lastCenter = newCenter;\n        return { cameraBearing, center: newCenter };\n    }\n    /**\n     * Update the point's position on the map, and possibly animate the camera to follow.\n     * Also updates the progress bar and track display if on FollowTrack\n     * @param newPosition index into the gpx track, can be fractional\n     * @param timeDeltaS how long the camera move should take, in seconds\n     */\n    updatePointPosition(newPosition, timeDeltaS) {\n        this.playhead = newPosition;\n        const { points } = this.props.gpxInfo;\n        const pointIndex = Math.floor(newPosition);\n        if (pointIndex === points.length - 1) {\n            this.point.features[0] = (0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.toGeoJsonFeature)(points[pointIndex]);\n            return;\n        }\n        const { point, bearing } = this.interpolatePoint(newPosition);\n        // TODO: fix a bit of stuttering issue (noticeable in followcam)\n        // @ts-ignore it's okay this is fine\n        this.point.features[0] = point;\n        this.point.features[0].properties.bearing = bearing;\n        this.map.getSource('point').setData(this.point);\n        // Update progress bar percentage and elevation profile graph based on this position\n        if (this.progressRef.current != null) {\n            this.progressRef.current.value = (100 * newPosition) / (points.length - 1);\n        }\n        if (this.applyPositionUpdateToHeightGraph != null) {\n            this.applyPositionUpdateToHeightGraph(newPosition);\n        }\n        if (this.state.useFollowCam) {\n            const { center, cameraBearing } = this.updateFollowCamParameters(timeDeltaS, point.geometry.coordinates);\n            this.map.easeTo({\n                // @ts-ignore this is fine\n                center,\n                bearing: cameraBearing,\n                duration: timeDeltaS * 1000,\n                // Linear move speed\n                easing: (x) => x,\n            });\n        }\n        if (this.state.useFollowTrack) {\n            this.updateTrackDisplay(newPosition);\n        }\n    }\n    /**\n     * Update the gps track, pass in `points.length - 1` to show the entire track.\n     * @param position index into the gpx track, can be fractional\n     */\n    updateTrackDisplay(position) {\n        const pointIndex = Math.floor(position);\n        const { points } = this.props.gpxInfo;\n        if (pointIndex === points.length - 1) {\n            const source = this.map.getSource('gpxTrack');\n            source.setData((0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.pointsToGeoJsonFeature)(points).data);\n        }\n        else {\n            const sliceToPlayhead = points.slice(0, pointIndex + 1);\n            sliceToPlayhead.push((0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.geoJsonToPoint)(this.interpolatePoint(position).point));\n            const source = this.map.getSource('gpxTrack');\n            source.setData((0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.pointsToGeoJsonFeature)(sliceToPlayhead).data);\n        }\n    }\n    componentWillUnmount() {\n        if (this.animationHandle != null) {\n            cancelAnimationFrame(this.animationHandle);\n        }\n        if (this.props.bindKeys) {\n            window.removeEventListener('keydown', this.windowKeyBinds);\n        }\n    }\n    componentDidMount() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.createMapFromState(this.state);\n            if (this.props.bindKeys) {\n                window.addEventListener('keydown', this.windowKeyBinds, true);\n            }\n            if (this.props.positionUpdateFunctionRef) {\n                this.props.positionUpdateFunctionRef.current = (position, deltaS) => {\n                    if (deltaS > 2) {\n                        // heuristic: if the delta is greater than 2 seconds, it might be paused\n                        this.resetFollowCamMomemtum();\n                    }\n                    this.updatePointPosition(position, deltaS);\n                };\n            }\n        });\n    }\n    createMapFromState(state) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.animationHandle != null) {\n                cancelAnimationFrame(this.animationHandle);\n            }\n            const gpsPoints = this.props.gpxInfo.points;\n            if (this.map == null) {\n                this.map = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().Map)({\n                    container: this.mapDivRef.current,\n                    zoom: 16,\n                    pitch: 0,\n                    center: (0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.findCenter)(gpsPoints).slice(0, 2),\n                    style: state.mapStyle,\n                    accessToken: this.props.mapboxAccessToken,\n                });\n                this.map.fitBounds((0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.findBounds)(gpsPoints));\n                this.map.addControl(this.mapControl);\n                this.map.addControl(this.fullscreenControl);\n            }\n            else {\n                // If we have already loaded the map, just set the style. Otherwise it's billable\n                this.map.setStyle(state.mapStyle);\n            }\n            const addSource = (id, points, params) => {\n                this.map.addSource(id, (0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.pointsToGeoJsonFeature)(points)).addLayer({\n                    id,\n                    type: 'line',\n                    source: id,\n                    layout: {\n                        'line-join': 'round',\n                        'line-cap': 'round',\n                    },\n                    paint: params,\n                });\n            };\n            yield new Promise((resolve) => {\n                this.map.once('styledata', () => {\n                    addSource('gpxTrack', gpsPoints, {\n                        'line-color': state.gpxTrackColor,\n                        'line-width': state.gpxTrackWidth,\n                    });\n                    this.map.addSource('point', {\n                        type: 'geojson',\n                        data: this.point,\n                    });\n                    // Example from mapbox-gl docs\n                    this.map.addSource('mapbox-dem', {\n                        type: 'raster-dem',\n                        url: 'mapbox://mapbox.mapbox-terrain-dem-v1',\n                        tileSize: 512,\n                        maxzoom: 14,\n                    });\n                    if (this.state.showTopo) {\n                        this.map.setTerrain({ source: 'mapbox-dem', exaggeration: 2 });\n                    }\n                    this.map.addLayer({\n                        id: 'point',\n                        source: 'point',\n                        type: 'symbol',\n                        layout: {\n                            'icon-image': state.pointIcon,\n                            'icon-size': state.pointIconSize,\n                            'icon-allow-overlap': true,\n                            'icon-ignore-placement': true,\n                        },\n                    });\n                    if (this.state.useFollowTrack) {\n                        this.updateTrackDisplay(this.playhead);\n                    }\n                    resolve();\n                });\n            });\n            if (!this.props.positionUpdateFunctionRef) {\n                requestAnimationFrame(this.animationLoop);\n            }\n        });\n    }\n    componentWillUpdate(props, nextState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!nextState.isPlaying) {\n                // If we paused then reset the camera movement vector\n                this.resetFollowCamMomemtum();\n            }\n            // Did we toggle followcam?\n            if (nextState.useFollowCam !== this.state.useFollowCam) {\n                this.resetFollowCamMomemtum();\n                // Then update the camera on the map\n                if (nextState.useFollowCam) {\n                    this.map.easeTo({\n                        zoom: 14.5,\n                        pitch: 60,\n                        center: (0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.toGeoJson)(props.gpxInfo.points[Math.floor(this.playhead)]).slice(0, 2),\n                    });\n                }\n                else {\n                    this.map.easeTo({\n                        pitch: 0,\n                        center: (0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.findCenter)(props.gpxInfo.points).slice(0, 2),\n                        animate: false,\n                        bearing: 0,\n                    });\n                    this.map.fitBounds((0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.findBounds)(props.gpxInfo.points));\n                }\n            }\n            // we don't bother checking of follow track changed between states\n            // because the visible behavior is the same\n            if (nextState.useFollowTrack) {\n                this.updateTrackDisplay(this.playhead);\n            }\n            else {\n                this.updateTrackDisplay(props.gpxInfo.points.length - 1);\n            }\n            if (nextState.mapStyle !== this.state.mapStyle) {\n                // Changing the style also resets the track and stuff, just re-create it.\n                yield this.createMapFromState(nextState);\n            }\n            // should we update the point icon?\n            if (nextState.pointIcon !== this.state.pointIcon) {\n                this.map.setLayoutProperty('point', 'icon-image', nextState.pointIcon);\n            }\n            if (nextState.pointIconSize !== this.state.pointIconSize) {\n                this.map.setLayoutProperty('point', 'icon-size', nextState.pointIconSize);\n            }\n            // should we update the gpx track?\n            if (nextState.gpxTrackColor !== this.state.gpxTrackColor) {\n                this.map.setPaintProperty('gpxTrack', 'line-color', nextState.gpxTrackColor);\n            }\n            if (nextState.gpxTrackWidth !== this.state.gpxTrackWidth) {\n                this.map.setPaintProperty('gpxTrack', 'line-width', nextState.gpxTrackWidth);\n            }\n            if (nextState.showTopo !== this.state.showTopo) {\n                if (nextState.showTopo) {\n                    this.map.setTerrain({ source: 'mapbox-dem', exaggeration: 2 });\n                }\n                else {\n                    this.map.setTerrain(null);\n                }\n            }\n        });\n    }\n    render() {\n        const mb = this.props.gpxInfo.sizeBytes / 1000000;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null,\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"center gpx-info\" },\n                \"Selected: \",\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"b\", null, this.props.gpxInfo.name),\n                \" (\",\n                mb.toFixed(2),\n                \" MB)\"),\n            this.props.bindKeys && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"center\" },\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"b\", null, \"Tip:\"),\n                \" use space to play/pause, F to full screen, H to hide controls\")),\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"map-container-container\" },\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { id: \"map-container\", ref: this.mapDivRef })),\n            this.props.showElevationProfile && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(HeightGraphComponent, Object.assign({}, this.props, { applyPositionUpdate: (applyUpdate) => (this.applyPositionUpdateToHeightGraph = applyUpdate) }))),\n            !this.props.positionUpdateFunctionRef && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(MapComponentProgress, { isPlaying: this.state.isPlaying, onPlayClick: this.handlePlayClick, onProgressClick: this.handleProgressClick, progressRef: this.progressRef })),\n            !this.props.disableOptions && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(MapComponentOptions, { state: this.state, setState: this.setState.bind(this), showPlaybackRate: this.props.positionUpdateFunctionRef === undefined }))));\n    }\n}\nclass HeightGraphComponent extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {\n    constructor(props) {\n        super(props);\n        this.heightGraphDivRef = react__WEBPACK_IMPORTED_MODULE_0___default().createRef();\n    }\n    render() {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"heightgraph-container-container\" },\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { id: \"heightgraph-container\", ref: this.heightGraphDivRef })));\n    }\n    componentDidMount() {\n        const containerHeight = this.heightGraphDivRef.current.clientHeight;\n        const containerWidth = this.heightGraphDivRef.current.clientWidth;\n        const marginLeft = 60;\n        const marginRight = 10;\n        this.heightGraph = new map_heightgraph_src_heightgraph__WEBPACK_IMPORTED_MODULE_7__.HeightGraph(this.heightGraphDivRef.current, {\n            width: containerWidth,\n            height: containerHeight,\n            margins: {\n                top: 3,\n                bottom: 20,\n                left: marginLeft,\n                right: marginRight,\n            },\n            expandControls: false,\n        }, {\n            // placeholders, see example at https://github.com/boldtrn/Leaflet.Heightgraph/blob/no_leaflet/example/MaplibreHeightGraph.js\n            pointSelectedCallback: () => { },\n            areaSelectedCallback: () => { },\n            routeSegmentsSelectedCallback: () => { },\n        });\n        // Turn off the drag handler because I am cheating by using the drag selection to show the current position\n        this.heightGraph._dragStartHandler = () => { };\n        this.heightGraph._dragHandler = () => { };\n        this.heightGraph._mouseUpHandler = () => { };\n        this.heightGraph.setData([\n            {\n                type: 'FeatureCollection',\n                features: [\n                    {\n                        type: 'Feature',\n                        geometry: {\n                            type: 'LineString',\n                            coordinates: this.props.gpxInfo.points.map(_mapTools__WEBPACK_IMPORTED_MODULE_1__.toGeoJson),\n                        },\n                        properties: {\n                            attributeType: this.props.gpxInfo.name,\n                            summary: 'Elevation',\n                        },\n                    },\n                ],\n                properties: {\n                    label: this.props.gpxInfo.name,\n                },\n            },\n        ]);\n        this.props.applyPositionUpdate((position) => {\n            const xPosition = (position / this.props.gpxInfo.points.length) *\n                (containerWidth - marginLeft - marginRight);\n            this.heightGraph._drawDragRectangle(0, xPosition);\n        });\n    }\n}\nfunction MapComponentProgress(props) {\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"center\" },\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"progress-container\" },\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", { \"aria-label\": \"Play\", role: \"button\", className: \"play-button\", onClick: props.onPlayClick }, props.isPlaying ? '❚❚' : '►'),\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"progress\", { max: \"100\", value: \"0\", className: \"play-progress\", ref: props.progressRef, onClick: props.onProgressClick }, \"Progress\"))));\n}\nfunction MapComponentOptions(props) {\n    const { state, setState, showPlaybackRate } = props;\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null,\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"center control-group\" },\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_CheckboxControlInputComponent__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { labelText: \"FollowCam\", defaultChecked: state.useFollowCam, helpText: \"When checked, camera follows point during playback\", onChange: (checked) => setState({ useFollowCam: checked }) }),\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_CheckboxControlInputComponent__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { labelText: \"FollowTrack\", defaultChecked: state.useFollowCam, helpText: \"When checked, GPX track follows point during playback\", onChange: (checked) => setState({ useFollowTrack: checked }) })),\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"center control-group\" },\n            state.useFollowCam && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_RangeSliderComponent__WEBPACK_IMPORTED_MODULE_4__[\"default\"], { label: \"Follow Sensitivity\", min: 0, max: 180, step: 1, helpText: \"In FollowCam, limits how quickly the camera can rotate, expressed in degrees per second. At 0 the camera direction will be fixed, so it will only pan.\", value: state.followSensitivity, onChange: (v) => setState({ followSensitivity: v }) })),\n            state.useFollowCam && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_RangeSliderComponent__WEBPACK_IMPORTED_MODULE_4__[\"default\"], { label: \"Follow Momentum\", min: 0, max: 0.99, step: 0.01, helpText: \"In FollowCam, adjusts the camera movement by continuing to pan in the direction of the last frame, scaled by this factor. So a factor of 0 means we move the map such that the track point is exactly in the center. A factor of 1 would mean we only move in the same direction as the last frame. The camera will move more smoothly but will not follow the exact point as closely.\", value: state.followMomentum, onChange: (v) => setState({ followMomentum: v }) })),\n            showPlaybackRate && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_RangeSliderComponent__WEBPACK_IMPORTED_MODULE_4__[\"default\"], { label: 'Playback Rate', min: 0.1, max: 20, step: 0.1, value: state.playbackRate, helpText: \"Multiplier for playback speed. Default playback speed is tuned so it finishes in exactly 60 seconds (regardless GPX track length).\", onChange: (value) => setState({ playbackRate: value }) }))),\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"center control-group\" },\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"label\", { htmlFor: \"map-style\" }, \"Map Style\"),\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"select\", { name: \"map style\", onChange: (evt) => {\n                    // Also set isPlaying to false because changing the style reloads the map\n                    // while the map is loading, the point and the track are not yet set\n                    setState({\n                        mapStyle: evt.target.value,\n                        isPlaying: false,\n                    });\n                }, defaultValue: state.mapStyle },\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"mapbox://styles/mapbox/outdoors-v11\" }, \"Outdoors\"),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"mapbox://styles/mapbox/streets-v11\" }, \"Streets\"),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"mapbox://styles/mapbox/light-v10\" }, \"Light\"),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"mapbox://styles/mapbox/dark-v10\" }, \"Dark\"),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"mapbox://styles/mapbox/satellite-v9\" }, \"Satellite\"),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"mapbox://styles/mapbox/satellite-streets-v11\" }, \"Satellite Streets\"),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"mapbox://styles/mapbox/navigation-day-v1\" }, \"Navigation Day\"),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"mapbox://styles/mapbox/navigation-night-v1\" }, \"Navigation Night\"),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"mapbox://styles/pelmers/cl8ilg939000u15o5hxcr1mjy\" }, \"Peter Custom Satellite\"),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"mapbox://styles/pelmers/cljn0kxxr00ct01qwgdcgblzs\" }, \"peter.travel\")),\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_CheckboxControlInputComponent__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { labelText: \"3D Topography\", defaultChecked: state.showTopo, helpText: \"When checked, an extra layer of topographic terrain is added to the map to emphasize elevation. This is more visible in FollowCam.\", onChange: (checked) => setState({ showTopo: checked }) }),\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LabelInputWithHelp__WEBPACK_IMPORTED_MODULE_5__[\"default\"], { label: react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"label\", null, \"Point Icon\"), input: react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"select\", { defaultValue: state.pointIcon, onChange: (evt) => {\n                        setState({ pointIcon: evt.target.value });\n                    } },\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"bicycle-15\" }, \"Bicycle\"),\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"rocket-15\" }, \"Rocket\"),\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"swimming-15\" }, \"Swimmer\"),\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"bus-15\" }, \"Bus\"),\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"rail-15\" }, \"Train\"),\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"pitch-15\" }, \"Runner\"),\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"car-15\" }, \"Death Cage\"),\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"option\", { value: \"circle-15\" }, \"Circle\")), helpText: 'Icon to use for the point. Note: not all styles support every icon. If you have a specific request please file an issue. (Or better yet, submit a fix!)' }),\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_RangeSliderComponent__WEBPACK_IMPORTED_MODULE_4__[\"default\"], { label: 'Point Icon Size', min: 0.0, max: 25, step: 0.5, value: state.pointIconSize, onChange: (value) => setState({ pointIconSize: value }) }),\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"label\", { htmlFor: \"line-color\" }, \"Line Color\"),\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", { type: \"color\", name: \"line-color\", defaultValue: state.gpxTrackColor, onChange: (ev) => {\n                    setState({ gpxTrackColor: ev.target.value });\n                } }),\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_RangeSliderComponent__WEBPACK_IMPORTED_MODULE_4__[\"default\"], { label: 'Line Thickness', min: 0.0, max: 30, step: 0.5, value: state.gpxTrackWidth, onChange: (value) => setState({ gpxTrackWidth: value }) }))));\n}\n\n\n//# sourceURL=webpack://gpx-replay-react/./components/MapComponent.tsx?" 
);} , "./mapTools.ts" : (  __unused_webpack_module,            __webpack_exports__,                __webpack_require__)                =>             {              eval(                                "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bearingDiff\": () => (/* binding */ bearingDiff),\n/* harmony export */   \"clamp\": () => (/* binding */ clamp),\n/* harmony export */   \"findBounds\": () => (/* binding */ findBounds),\n/* harmony export */   \"findCenter\": () => (/* binding */ findCenter),\n/* harmony export */   \"fixBearingDomain\": () => (/* binding */ fixBearingDomain),\n/* harmony export */   \"geoJsonToPoint\": () => (/* binding */ geoJsonToPoint),\n/* harmony export */   \"pointsToGeoJsonFeature\": () => (/* binding */ pointsToGeoJsonFeature),\n/* harmony export */   \"toGeoJson\": () => (/* binding */ toGeoJson),\n/* harmony export */   \"toGeoJsonFeature\": () => (/* binding */ toGeoJsonFeature),\n/* harmony export */   \"toGeoJsonLineString\": () => (/* binding */ toGeoJsonLineString)\n/* harmony export */ });\nfunction toGeoJson(point) {\n    return [point.lon, point.lat, point.ele];\n}\nfunction pointsToGeoJsonFeature(points, label) {\n    return {\n        type: 'geojson',\n        data: {\n            type: 'Feature',\n            properties: {\n                label,\n            },\n            geometry: {\n                type: 'LineString',\n                coordinates: points.map(toGeoJson),\n            },\n        },\n    };\n}\nfunction geoJsonToPoint(pt) {\n    const { coordinates } = pt.geometry;\n    return {\n        lon: coordinates[0],\n        lat: coordinates[1],\n        ele: coordinates.length > 2 ? coordinates[2] : 0,\n    };\n}\nfunction toGeoJsonFeature(point) {\n    return {\n        type: 'Feature',\n        geometry: {\n            type: 'Point',\n            coordinates: toGeoJson(point),\n        },\n        properties: {},\n    };\n}\nfunction toGeoJsonLineString(from, to) {\n    return {\n        type: 'Feature',\n        geometry: {\n            type: 'LineString',\n            coordinates: [toGeoJson(from), toGeoJson(to)],\n        },\n        properties: {},\n    };\n}\nfunction findCenter(gpsPoints) {\n    const n = gpsPoints.length;\n    const avg = gpsPoints.reduce((prev, cur) => ({\n        lat: prev.lat + cur.lat / n,\n        lon: prev.lon + cur.lon / n,\n        ele: prev.ele + cur.ele / n,\n    }), { lat: 0, lon: 0, ele: 0 });\n    return toGeoJson(avg);\n}\nfunction findBounds(gpsPoints) {\n    const [sw, ne] = gpsPoints.reduce(([sw, ne], cur) => [\n        {\n            lat: Math.min(cur.lat, sw.lat),\n            lng: Math.min(cur.lon, sw.lng),\n        },\n        { lat: Math.max(cur.lat, ne.lat), lng: Math.max(cur.lon, ne.lng) },\n    ], [\n        { lat: Number.MAX_SAFE_INTEGER, lng: Number.MAX_SAFE_INTEGER },\n        { lat: Number.MIN_SAFE_INTEGER, lng: Number.MIN_SAFE_INTEGER },\n    ]);\n    // Add padding to every side\n    const pad = 0.15;\n    const x = (ne.lat - sw.lat) * pad;\n    const y = (ne.lng - sw.lng) * pad;\n    return [\n        {\n            lat: sw.lat - x,\n            lng: sw.lng - y,\n        },\n        {\n            lat: ne.lat + x,\n            lng: ne.lng + y,\n        },\n    ];\n}\nconst clamp = (num, lo, hi) => num < lo ? lo : num > hi ? hi : num;\n// Given bearings a and b in the range [-180, 180], return the short angle that moves a to b.\n// examples:\n// if a is 10 and b is -10, then the answer is -20.\n// if a is -10 and b is 10, then the answer is 20.\n// if a is -170 and b is 170, then the answer is -20.\n// if a is 170 and b is -170, then the answer is 20.\nconst bearingDiff = (a, b) => {\n    // diff will be in the range [0, 360]\n    const diff = Math.abs(b - a);\n    const sign = b > a ? 1 : -1;\n    return sign * (diff > 180 ? -(360 - diff) : diff);\n};\n// Fix a bearing between [-360, 360] to [-180, 180]\nconst fixBearingDomain = (b) => {\n    if (b < -180) {\n        return 360 + b;\n    }\n    else if (b > 180) {\n        return -360 + b;\n    }\n    return b;\n};\n\n\n//# sourceURL=webpack://gpx-replay-react/./mapTools.ts?" 
    )     ;}    } ]  )    ;  /*oooooooooooooooooooooooo*/ /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                     /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                               /*oooooooooooooooooooooooooo*/                                                                                          /*ooooooooooooooooooooooooo*/                                
                                    /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                        /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                             /*oooooooooooooooooooooooooooo*/                                                                                       /*ooooooooooooooooooooooooooo*/                               
                                   /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                     /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                              /*oooooooooooooooooooooooooooo*/                                                                                    /*ooooooooooooooooooooooooooooooooooo*/                        
                                /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                  /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                            /*oooooooooooooooooooooooooooooooo*/                                                                              /*oooooooooooooooooooooooooooooooooooo*/                        
                               /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                 /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                         /*oooooooooooooooooooooooooooooooo*/                                                                            /*ooooooooooooooooooooooooooooooooooooooooo*/                    
                             /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                            /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                       /*ooooooooooooooooooooooooooooooooooo*/                                                                       /*oooooooooooooooooooooooooooooooooooooooooooo*/                   
                            /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                      /*oooooooooooooooooooooooooooooooooooo*/                                                                     /*oooooooooooooooooooooooooooooooooooooooooooooo*/                  
                            /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                          /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                  /*oooooooooooooooooooooooooooooooooooooo*/                                                                    /*oooooooooooooooooooooooooooooooooooooooooooooo*/                  
                          /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                        /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/              /*oooooooooooooooooooooooooooooooooooooooooo*/                                                               /*oooooooooooooooooooooooooooooooooooooooooooooooo*/                  
                          /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                        /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/              /*oooooooooooooooooooooooooooooooooooooooooo*/                                                              /*oooooooooooooooooooooooooooooooooooooooooooooooooo*/                 
                         /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                    /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                            /*ooooooooooooooooooooooooooooooooooooooooooooooooooo*/                 
                         /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                     /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/         /*ooooooooooooooooooooooooooooooooooooooooooooo*/                                                         /*oooooooooooooooooooooooooooooooooooooooooooooooooooo*/                 
                         /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                     /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/         /*ooooooooooooooooooooooooooooooooooooooooooooo*/                                                        /*ooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                 
                       /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                   /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/       /*ooooooooooooooooooooooooooooooooooooooooooooooo*/                                                     /*oooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                 
                       /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                   /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/        /*ooooooooooooooooooooooooooooooooooooooooooooooo*/                                                  /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                  
                       /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                   /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/      /*oooooooooooooooooooooooooooooooooooooooooooooooo*/                                                /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                  
                      /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                   /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/      /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                              /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                   
                      /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                  /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/     /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                             /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                   
                      /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                   /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/    /*ooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                         /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                    
                      /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                    /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/       /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                       /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                      
                      /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                     /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/        /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                    /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                       
                      /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                      /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/         /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                  /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                        
                      /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                      /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                         
                      /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                        /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/          /*oooooooooooooooooooooooooooooooooooooooooooooooooo*/                             /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                          
                      /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/          /*oooooooooooooooooooooooooooooooooooooooooooooooooo*/                           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                           
                     /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                               /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooo*/                         /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                            
                     /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                  /*oo*/                                                /*oooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooo*/              /*oooooooooooooooooooooooooooooooooooooooooooooooo*/                       /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                             
                     /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                              /*ooooooooooooooooooooooooooooooooooooooooooooooo*/                                                       /*ooooooooooooooooooooooooooooooooooooooooooooooo*/              /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                     /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                               
                    /*oooooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                  /*oooooooooooooooooooooooooooooooooooooooooooo*/                                                            /*oooooooooooooooooooooooooooooooooooooooooooooo*/              /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                  /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                
                    /*ooooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                   /*oooooooooooooooooooooooooooooooooooooooooooo*/                                                              /*ooooooooooooooooooooooooooooooooooooooooooo*/                 /*oooooooooooooooooooooooooooooooooooooooooooooooo*/                 /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                
                    /*oooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                /*oooooooooooooooooooooooooooooooooooooooooo*/                 /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/              /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                  
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                      /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                /*oooooooooooooooooooooooooooooooooooooooooo*/                   /*oooooooooooooooooooooooooooooooooooooooooooooooo*/            /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                    
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                      /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                   /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/         /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                     
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                     /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                   /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/        /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                     
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                     /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                    /*ooooooooooooooooooooooooooooooooooooooooooooooooooo*/    /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                       
                     /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                     /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                       /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/ /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                        
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                     /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                       /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                        
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                     /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                         /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                          
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                     /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                         /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                           
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                     /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                             
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                      /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                              
                     /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                     /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                              /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                     /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                              /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                     /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                /*ooooooooooooooooooooooooooooooooooooooooooo*/                                /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                  
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                                     /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                /*ooooooooooooooooooooooooooooooooooooooooooo*/                                /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                  
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                             /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                             /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                /*ooooooooooooooooooooooooooooooooooooooooooo*/                                  /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                    
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                             /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                             /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                                   /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                     
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                              /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                             /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                                    /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                      
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                              /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                             /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                                     /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                        
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                              /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                /*ooooooooooooooooooooooooooooooooooooooooooo*/                                      /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                        
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                             /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                      /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooo*/                                       /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                         
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                             /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                  /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                /*ooooooooooooooooooooooooooooooooooooooooooo*/                                         /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                          
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                             /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                 /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                               /*oooooooooooooooooooooooooooooooooooooooooooo*/                                          /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                            
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                             /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                /*oooooooooooooooooooooooooooooooooooooooooo*/                                                              /*ooooooooooooooooooooooooooooooooooooooooooooo*/                                           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                            
                     /*oooooooooooooooooooooooooooooooooooooooooo*/                             /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                /*oooooooooooooooooooooooooooooooooooooooooo*/                                                            /*ooooooooooooooooooooooooooooooooooooooooooooooo*/                                            /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                              
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                             /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/              /*oooooooooooooooooooooooooooooooooooooooooooo*/                                                        /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                              /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                               
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                             /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                               /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                             /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                               /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                 
                     /*oooooooooooooooooooooooooooooooooooooooooo*/                             /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                 /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                  
                     /*oooooooooooooooooooooooooooooooooooooooooo*/                             /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                  /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                  
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                              /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                  /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                   
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                             /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                 /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                    
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                              /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                               /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                    
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                              /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                               /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                   
                     /*ooooooooooooooooooooooooooooooooooooooooo*/                              /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                               /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                   
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                             /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                             /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                   
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                               /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                            /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                  
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                              /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                            /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                 
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                          /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                 
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                 /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                               
                     /*oooooooooooooooooooooooooooooooooooooooooo*/                                  /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                               
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                                      /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                            
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                                        /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                          /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                            
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                          /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                           
                     /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                    /*oooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                         /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                          
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                        /*oooooooooooooooooooooooooooooooooooooooooooooo*/            /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                        
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                           /*oooooooooooooooooooooooooooooooooooooooooooo*/          /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                          /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                       
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                           /*ooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                      
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*ooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                            /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                     
                     /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*oooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                            /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                     
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*oooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                               /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                   
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                           /*ooooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                               /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                  
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*oooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                   /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                
                     /*ooooooooooooooooooooooooooooooooooooooooo*/                                                                             /*oooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                     /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                               
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*oooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                       /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                              
                     /*ooooooooooooooooooooooooooooooooooooooooo*/                                                                             /*oooooooooooooooooooooooooooooooooooooooooo*/          /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                               /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                            
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                             /*oooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                           
                     /*ooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*ooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                              /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                           
                     /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*oooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                              /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/      /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                         
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                             /*ooooooooooooooooooooooooooooooooooooooooooo*/          /*oooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                            /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/         /*oooooooooooooooooooooooooooooooooooooooooooooooooo*/                                       
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*oooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                       
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                             /*oooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                           /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/              /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                      
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*oooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                          /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                /*oooooooooooooooooooooooooooooooooooooooooooooooooo*/                                     
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                              /*ooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                         /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                  /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                    
                    /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                             /*oooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                        /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                     /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                  
                     /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*ooooooooooooooooooooooooooooooooooooooooooo*/          /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                      /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                         /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*oooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                     /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                         /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                
                    /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*oooooooooooooooooooooooooooooooooooooooooo*/            /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                    /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                            /*ooooooooooooooooooooooooooooooooooooooooooooooo*/                                
                     /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/          /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                   /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                              /*oooooooooooooooooooooooooooooooooooooooooooooooo*/                              
                    /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                   /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                /*ooooooooooooooooooooooooooooooooooooooooooooooooooo*/                           
                     /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                 /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                  /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                           
                     /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                                                                /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                    /*oooooooooooooooooooooooooooooooooooooooooooooooooo*/                          
                     /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                              /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                       /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                         
                      /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                              /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                          /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                        
                      /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                            /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                            /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                       
                       /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                              /*oooooooooooooooooooooooooooooooooooooooooooooooo*/                      
                       /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                          /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                 /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                    
                       /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                        /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                   /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                   
                       /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                        /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                     /*oooooooooooooooooooooooooooooooooooooooooooooooo*/                   
                         /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/          /*oooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                        /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                      /*ooooooooooooooooooooooooooooooooooooooooooooooooooo*/                
                          /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                                                         /*oooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                         /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                
                          /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                                                          /*ooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                            /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/               
                          /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                                                            /*ooooooooooooooooooooooooooooooooooooooooooooooooo*/                                                             /*oooooooooooooooooooooooooooooooooooooooooooooooo*/               
                            /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/           /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                                                            /*ooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                 /*oooooooooooooooooooooooooooooooooooooooooooooo*/               
                            /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                                                           /*ooooooooooooooooooooooooooooooooooooooooooooooo*/                                                                   /*oooooooooooooooooooooooooooooooooooooooooooooo*/              
                              /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/            /*ooooooooooooooooooooooooooooooooooooooooo*/                                                                                                            /*oooooooooooooooooooooooooooooooooooooooooooooo*/                                                                     /*oooooooooooooooooooooooooooooooooooooooooooooo*/             
                               /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/             /*ooooooooooooooooooooooooooooooooooooooooo*/                                                                                                            /*ooooooooooooooooooooooooooooooooooooooooooooo*/                                                                      /*oooooooooooooooooooooooooooooooooooooooooooooo*/             
                                 /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/              /*ooooooooooooooooooooooooooooooooooooooo*/                                                                                                             /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                          /*oooooooooooooooooooooooooooooooooooooooooooo*/             
                                  /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/              /*ooooooooooooooooooooooooooooooooooooooo*/                                                                                                            /*ooooooooooooooooooooooooooooooooooooooooooo*/                                                                            /*ooooooooooooooooooooooooooooooooooooooooooo*/             
                                   /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/             /*oooooooooooooooooooooooooooooooooooooooo*/                                                                                                            /*oooooooooooooooooooooooooooooooooooooooooo*/                                                                               /*ooooooooooooooooooooooooooooooooooooooooo*/             
                                      /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/               /*oooooooooooooooooooooooooooooooooooooo*/                                                                                                              /*ooooooooooooooooooooooooooooooooooooooo*/                                                                                 /*oooooooooooooooooooooooooooooooooooooooo*/              
                                        /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                  /*oooooooooooooooooooooooooooooooooooo*/                                                                                                              /*ooooooooooooooooooooooooooooooooooooooo*/                                                                                    /*ooooooooooooooooooooooooooooooooooooo*/              
                                           /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                   /*ooooooooooooooooooooooooooooooooooo*/                                                                                                                 /*oooooooooooooooooooooooooooooooooo*/                                                                                        /*ooooooooooooooooooooooooooooooooooo*/               
                                            /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                      /*ooooooooooooooooooooooooooooooo*/                                                                                                                    /*ooooooooooooooooooooooooooooooo*/                                                                                           /*ooooooooooooooooooooooooooooooooo*/                
                                                /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                         /*oooooooooooooooooooooooooooo*/                                                                                                                      /*ooooooooooooooooooooooooooooo*/                                                                                             /*ooooooooooooooooooooooooooooooo*/                 
                                                   /*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                             /*oooooooooooooooooooooooooo*/                                                                                                                         /*ooooooooooooooooooooooooo*/                                                                                                  /*oooooooooooooooooooooooooo*/                   
                                                          /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                     /*ooooooooooooooooo*/                                                                                                                                /*oooooooooooooooooo*/                                                                                                           /*oooooooooooooooooo*/                       
                                                                 /*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*/                                            /*oooooo*/                                                                                                                                                /*oo*/                                                                                                                   /*ooooooo*/                               
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        









                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        








                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        


