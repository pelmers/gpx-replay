                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                               "use strict";(self["webpackChunkgpx_replay_react"]=self["webpackChunkgpx_replay_react"]||[]                                               )   . push(   [ [   "components_MapComponent_tsx"  ] ,{ "./components/svg/pause_btn.svg"  : (                                           __unused_webpack_module,                                                                                       __webpack_exports__,                              
                                           __webpack_require__) =>{__webpack_require__.   r(    __webpack_exports__) ;__webpack_require__.d(                                              __webpack_exports__,     {   "default"    : ( )   =>   __WEBPACK_DEFAULT_EXPORT__   }   )    ;var                                      react__WEBPACK_IMPORTED_MODULE_0__                                                                            =__webpack_require__(                              
                                     "../node_modules/react/index.js") ;var react__WEBPACK_IMPORTED_MODULE_0___default  =__webpack_require__.n(                                         react__WEBPACK_IMPORTED_MODULE_0__) ;var _g, _defs;function _extends(){ _extends =Object. assign ?Object.                               assign.bind( ):function (                                                                                   target){for (var i =1;i <                             
                                  arguments.length;i++ ){var source  =arguments[i];for (var key in source){ if (Object. prototype.hasOwnProperty.                                     call(source,key)) { target[key]=source[key];}}}return target;};return  _extends. apply(this, arguments);} var                               SvgPauseBtn  =  function                                                                                 SvgPauseBtn( props,  ref) {                            
                                return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({width:508,height:508,viewBox:"0 0 508 508"                                    ,fill:"none",xmlns:"http://www.w3.org/2000/svg",ref:ref  },props),_g ||(_g =react__WEBPACK_IMPORTED_MODULE_0__.                           createElement("g" ,{ filter:                                                                               "url(#filter0_d_1105_5)" },                            
                              react__WEBPACK_IMPORTED_MODULE_0__.createElement( "circle",{ cx:248,cy: 242,  r:237.5,fill:"#DB0000", stroke: "black" ,                                 strokeWidth:5 })  ,react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {x:289,y:82,width:80,height:320,fill:                                  "white"         } )  ,                                                                           react__WEBPACK_IMPORTED_MODULE_0__.                     
                             createElement("rect",{ x:128,y:82,width:80,height:320,fill:"white"}))),_defs ||(_defs =react__WEBPACK_IMPORTED_MODULE_0__.                               createElement("defs",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("filter",{id:"filter0_d_1105_5",x:0,y:0,                            width:  508,  height:    508,                                                                         filterUnits:  "userSpaceOnUse"   ,                     
                           colorInterpolationFilters:  "sRGB"}  ,   react__WEBPACK_IMPORTED_MODULE_0__.createElement( "feFlood"  ,{ floodOpacity:0, result:                           "BackgroundImageFix" }), react__WEBPACK_IMPORTED_MODULE_0__. createElement("feColorMatrix",{"in": "SourceAlpha", type:                             "matrix"    ,       values:                                                                   "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"                
                            , result:   "hardAlpha"  }  )  , react__WEBPACK_IMPORTED_MODULE_0__.  createElement(  "feOffset"  ,  { dx: 6,    dy: 12  } )   ,                          react__WEBPACK_IMPORTED_MODULE_0__.createElement("feGaussianBlur",{stdDeviation:7 }),react__WEBPACK_IMPORTED_MODULE_0__.                     createElement(  "feComposite",{ in2:                                                                   "hardAlpha" ,   operator:  "out"  })  ,                 
                                react__WEBPACK_IMPORTED_MODULE_0__.   createElement(     "feColorMatrix"   ,          {        type:   "matrix"   ,    values:                        "0 0 0 0 0.833333 0 0 0 0 0.0347222 0 0 0 0 0.0347222 0 0 0 0.3 0"    } ), react__WEBPACK_IMPORTED_MODULE_0__.createElement(                 "feBlend"  , { mode:  "normal", in2:                                                                   "BackgroundImageFix"     ,       result:                
                         "effect1_dropShadow_1105_5"}), react__WEBPACK_IMPORTED_MODULE_0__.createElement("feBlend",{mode:"normal","in" : "SourceGraphic"  ,in2:                        "effect1_dropShadow_1105_5",result:  "shape"} ) )) ));};var ForwardRef  =(0, react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(                        SvgPauseBtn)             ;const                                                           __WEBPACK_DEFAULT_EXPORT__  = ForwardRef;}  ,                
                        "./components/svg/play_btn.svg" :      (  __unused_webpack_module,__webpack_exports__,__webpack_require__)   =>{ __webpack_require__. r(                           __webpack_exports__)  ;__webpack_require__. d(__webpack_exports__,{ "default":() => __WEBPACK_DEFAULT_EXPORT__  }  ) ;var                react__WEBPACK_IMPORTED_MODULE_0__   =                                                                                    __webpack_require__(                
                      "../node_modules/react/index.js");var  react__WEBPACK_IMPORTED_MODULE_0___default =__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__)                    ;var _g,_defs;function _extends( ){_extends  = Object.assign ?Object.assign.bind():function (target){for (var i =1;i <arguments.           length;i++ ){var source =arguments[i];for (                                                      var  key  in  source) {  if  (Object.  prototype.               
                      hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return  _extends.apply(this,arguments);}var SvgPlayBtn =function                     SvgPlayBtn(props,ref){return react__WEBPACK_IMPORTED_MODULE_0__. createElement("svg", _extends(  {width: 508, height: 508,viewBox:            "0 0 508 508", fill:    "none"  , xmlns:                                                   "http://www.w3.org/2000/svg",ref:ref },props),_g ||               
                     (_g =react__WEBPACK_IMPORTED_MODULE_0__.createElement("g",{filter:"url(#filter0_d_1105_2)"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(                   "circle",{cx:248,cy:242,r:237.5,fill: "#DB0000" ,stroke: "black", strokeWidth:5 }),react__WEBPACK_IMPORTED_MODULE_0__.createElement(              "path"             ,      {          d:                                                 "M423.68 242.24L160.52 394.176V90.3046L423.68 242.24Z"             
                     , fill:"white"}) )), _defs  ||(  _defs = react__WEBPACK_IMPORTED_MODULE_0__. createElement( "defs" , null,react__WEBPACK_IMPORTED_MODULE_0__.                  createElement("filter",{id:"filter0_d_1105_2",  x: 0,y:0,width:508,height: 508,filterUnits:"userSpaceOnUse",colorInterpolationFilters:       "sRGB" } , react__WEBPACK_IMPORTED_MODULE_0__.                                               createElement( "feFlood" , {floodOpacity:0,  result:                
                       "BackgroundImageFix" }), react__WEBPACK_IMPORTED_MODULE_0__. createElement("feColorMatrix" , {"in" : "SourceAlpha" ,type: "matrix",  values:                 "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",result:"hardAlpha"} ),react__WEBPACK_IMPORTED_MODULE_0__.createElement("feOffset",{dx:6,dy:       12   }) , react__WEBPACK_IMPORTED_MODULE_0__.                                              createElement( "feGaussianBlur" ,{stdDeviation:7 } ),                
                     react__WEBPACK_IMPORTED_MODULE_0__. createElement(  "feComposite" ,{ in2: "hardAlpha" , operator:  "out"}),react__WEBPACK_IMPORTED_MODULE_0__.                  createElement("feColorMatrix"  ,  {  type:  "matrix"  , values: "0 0 0 0 0.833333 0 0 0 0 0.0347222 0 0 0 0 0.0347222 0 0 0 0.3 0"} )  ,                 react__WEBPACK_IMPORTED_MODULE_0__.                                           createElement( "feBlend" ,  { mode:  "normal"   ,in2:                 
                    "BackgroundImageFix" , result:"effect1_dropShadow_1105_2"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("feBlend",{mode:"normal"  ,"in"  :                 "SourceGraphic",in2:"effect1_dropShadow_1105_2",result:"shape"}) ))));};var ForwardRef =(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(      SvgPlayBtn);const __WEBPACK_DEFAULT_EXPORT__ =                                         ForwardRef;},"./components/HeightGraphComponent.tsx":(                 
                     __unused_webpack_module,   __webpack_exports__,  __webpack_require__)  =>{__webpack_require__.  r(__webpack_exports__) ;__webpack_require__.d(                 __webpack_exports__, {"HeightGraphComponent": (  ) =>HeightGraphComponent }) ;var  react__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__(     "../node_modules/react/index.js"         )  ;var                                             react__WEBPACK_IMPORTED_MODULE_0___default     =                 
                    __webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);var _mapTools__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("./mapTools.ts");var                          _turf_turf__WEBPACK_IMPORTED_MODULE_2__    =     __webpack_require__(   "../node_modules/@turf/turf/dist/es/index.js"    )     ;var       map_heightgraph_src_heightgraph__WEBPACK_IMPORTED_MODULE_3__                                          =             __webpack_require__(                    
                       "../node_modules/map.heightgraph/src/heightgraph.js"   )     ;var      map_heightgraph_src_heightgraph_css__WEBPACK_IMPORTED_MODULE_4__  =                         __webpack_require__(   "../node_modules/map.heightgraph/src/heightgraph.css"        )   ;class     HeightGraphComponent       extends       react__WEBPACK_IMPORTED_MODULE_0___default( )  .                                  Component { constructor(props){super( props)   ;this.                     
                    heightGraphDivRef =react__WEBPACK_IMPORTED_MODULE_0___default().createRef();this.cumulativeDistanceList =[0];let cumulativeDistance =0;const                     {points } =this.  props.gpxInfo;for (let pointIndex  =0;pointIndex <points. length - 1;pointIndex++ ){  const currentFrameFeature  =(   0,                 _mapTools__WEBPACK_IMPORTED_MODULE_1__.                                 toGeoJsonFeature)  ( points[  pointIndex]   ) ;const                      
                      nextFrameFeature   =(  0, _mapTools__WEBPACK_IMPORTED_MODULE_1__.  toGeoJsonFeature)    (points[ pointIndex  +  1]  )  ;const distance  =                         _turf_turf__WEBPACK_IMPORTED_MODULE_2__.  distance(  currentFrameFeature,  nextFrameFeature)    ;cumulativeDistance  +=  distance;this.          cumulativeDistanceList.push(cumulativeDistance)                                   ;}              }       render(     )           {                      
                      return  react__WEBPACK_IMPORTED_MODULE_0___default( )    .   createElement(  "div",  {className:"heightgraph-container-container" }  ,                          react__WEBPACK_IMPORTED_MODULE_0___default( )  .createElement("div" , {id:  "heightgraph-container",  ref:  this.heightGraphDivRef }) ) ;}          componentDidMount(){const containerHeight =this.                           heightGraphDivRef.    current.     clientHeight;const                        
                    containerWidth =this.heightGraphDivRef.current. clientWidth;const  marginLeft = 60;const  marginRight    = 10;this. heightGraph = new map_heightgraph_src_heightgraph__WEBPACK_IMPORTED_MODULE_3__. HeightGraph(this.heightGraphDivRef.current,{ width: containerWidth, height:containerHeight,margins:{top: 3, bottom:20,left:marginLeft,right: marginRight    }   ,  expandControls: false },{ pointSelectedCallback: (  ) =>{},areaSelectedCallback:(                      
                   ) =>{},routeSegmentsSelectedCallback:()  =>  { }} );this.       heightGraph. _dragStartHandler  =( ) =>   { }  ;this. heightGraph. _dragHandler                   =() =>{};this. heightGraph._mouseUpHandler =( )  =>{}    ;this. heightGraph.setData(  [ {type:'FeatureCollection',features:[{type:'Feature',             geometry: {type:'LineString',coordinates:this.                            props.      gpxInfo.        points.         map(                          
                           _mapTools__WEBPACK_IMPORTED_MODULE_1__.                                                                                                                  toGeoJson) }, properties: { attributeType:this.                                             props.  gpxInfo. name,  summary: 'Elevation' } }   ],         properties:{label:this.props.gpxInfo.name }} ])                    ;this.props.   applyPositionUpdate( position  =>{const                           
                   distance = this.cumulativeDistanceList[Math.                                                                                                                        floor(  position)]   ;this. heightGraph.                                                       _drawDragRectangle(0, this.heightGraph. _x(                   distance)     )     ;})   ;}   }     }   ,                        "./components/MapComponent.tsx"           :   (                             
                                      __unused_webpack_module,                                                                                                                      __webpack_exports__,__webpack_require__) =>                                                                 {     __webpack_require__.     r(                 __webpack_exports__);__webpack_require__. d(                __webpack_exports__,{"default":() =>MapComponent });var                             
                      react__WEBPACK_IMPORTED_MODULE_0__    =                                                                                                                                             __webpack_require__(                                                            "../node_modules/react/index.js" ) ;var                 react__WEBPACK_IMPORTED_MODULE_0___default   =                        __webpack_require__.                     n(                               
                   react__WEBPACK_IMPORTED_MODULE_0__)  ;var                                                                                                                          _mapTools__WEBPACK_IMPORTED_MODULE_1__ =                                                           __webpack_require__("./mapTools.ts");var                   mapbox_gl__WEBPACK_IMPORTED_MODULE_2__     =                                              __webpack_require__(                                
                  "../node_modules/mapbox-gl/dist/mapbox-gl.js"                                                                                                                                       )                   ;var                                                           mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default                  =         __webpack_require__.         n(              mapbox_gl__WEBPACK_IMPORTED_MODULE_2__)     ;var                                  
                   _turf_turf__WEBPACK_IMPORTED_MODULE_3__ =                                                                                                                                              __webpack_require__(                                                           "../node_modules/@turf/turf/dist/es/index.js"                                  )                      ;var             _static_map_css__WEBPACK_IMPORTED_MODULE_4__  =                                   
                    __webpack_require__("../static/map.css")                                                                                                                                                              ;var                                                           _HeightGraphComponent__WEBPACK_IMPORTED_MODULE_5__                         =            __webpack_require__(         "./components/HeightGraphComponent.tsx"  )  ;var                                    
                   _MapComponentProgress__WEBPACK_IMPORTED_MODULE_6__                                                                                                                             =       __webpack_require__(                                                           "./components/MapComponentProgress.tsx" )                        ;var           _MapComponentOptions__WEBPACK_IMPORTED_MODULE_7__          =    __webpack_require__(                                     
                   "./components/MapComponentOptions.tsx"  )                                                                                                                           ;var __awaiter  =undefined &&undefined.                                                           __awaiter ||function (thisArg,_arguments,                      P, generator){function adopt( value){return value instanceof P ? value :new P(function    (resolve) {                                     
                    resolve(value);});}return new (P ||( P =                                                                                                                        Promise)  )( function (resolve,  reject) {                                                           function  fulfilled(value){try  {   step(                       generator.next(value));}catch (e){reject(e);}}function rejected(value){try {step(generator["throw"                                       
                   ](value));}catch (e){reject(e);}}function                                                                                                                        step(result) {result.done ?resolve(result.                                                          value):adopt(result.value).then(fulfilled,                        rejected);}step((generator = generator. apply(thisArg, _arguments  ||[ ] )). next() );});};class                                        
                              MapComponent           extends                                                                                                                        react__WEBPACK_IMPORTED_MODULE_0___default(                                                         )  .Component  {constructor( props){super(                          props);this. mapDivRef   = react__WEBPACK_IMPORTED_MODULE_0___default( )  .createRef();this.                                          
                                  progressRef              =                                                                                                                        react__WEBPACK_IMPORTED_MODULE_0___default(                                                          )  . createRef()  ;this.mapControl =new (                           mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().NavigationControl)({visualizePitch:true }                                           
                     );this. fullscreenControl   =    new  (                                                                                                                         mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default(                                                     ).FullscreenControl)( ) ;this.playhead  =                           0;this.  lastAnimationTime = null;this. point ={ type:'FeatureCollection',features:[{type:                                           
                  'Feature' ,properties: {} ,geometry:{type:                                                                                                                        'Point',   coordinates:[0, 0]}  }] };this.                                                           animationLoop  =t    =>{if (!this. state.                              isPlaying) { this.animationHandle  =requestAnimationFrame(this. animationLoop) ;this.                                             
                   lastAnimationTime =null;return ;}else if (                          this.  lastAnimationTime  ==  null){  this.    animationHandle   =                            requestAnimationFrame(this.animationLoop)                                                          ;this. lastAnimationTime =t;return ;}const                               minAnimationTime = 1000  / this. props.playbackFPS;if   (t -this.lastAnimationTime >                                             
                  minAnimationTime){this.  animationBody(t -                            this. lastAnimationTime)  ;this.    lastAnimationTime =  t;} this.                          animationHandle  =  requestAnimationFrame(                                                          this.animationLoop);};this.windowKeyBinds =                              e  => {if  (e. code === 'Space'  ){ e.preventDefault();e. stopPropagation( );this.                                               
                  handlePlayClick();}if  (e.code ==='KeyF'){                               e.   preventDefault()  ;e.stopPropagation(   ) ;if   (document.                           fullscreenElement ==   null){ if   (this.                                                           mapDivRef.current !=null){this.mapDivRef.                                current.requestFullscreen();} }else {document.exitFullscreen();}} if (e.code ===                                                
                      'KeyH' ) {  e.  preventDefault(  );e.                            stopPropagation();if (this.map.hasControl( this. mapControl)){this.                          map. removeControl(this.mapControl) ;this.                                                           map.removeControl(this.fullscreenControl)                                 ;} else {this.map.addControl(  this. mapControl);this. map. addControl( this. fullscreenControl)                               
                  ;}}};this.handlePlayClick =() =>{if (this.                               playhead >=  this.   props. gpxInfo.points.length   - 1) { this.                         handleProgressClick({nativeEvent:{offsetX:                                                          0  }}) ;} this.setState({isPlaying: !this.                                  state.isPlaying } );};this. handleProgressClick =evt =>{let offsetFraction =                                                  
                  evt.nativeEvent.offsetX /this.progressRef.                            current. offsetWidth;offsetFraction    =Math.   max( offsetFraction,  0)                    ;offsetFraction  =Math.min(offsetFraction,                                                          1);const newPosition =this. props.gpxInfo.                                     points.length *  offsetFraction;this.resetFollowCamMomemtum(   )  ;this.                                                   
                  updatePointPosition(newPosition,0);};this.                           state ={camMomentumRollingAvgInterval:Math.round(this.props.playbackFPS *2)                  ,useFollowCam:false, followSensitivity:45,                                                           followMomentum:  0,useFollowTrack: false,                                       mapStyle:  'mapbox://styles/mapbox/outdoors-v11'  ,showTopo:   false,                                                    
                     pointsPerSecond:props. gpxInfo. points.                           length  /  60,isPlaying:false,playbackRate:1,gpxTrackWidth:4,  gpxTrackColor:                   '#ffff00'  ,pointIcon:   'bicycle-15' ,                                                         pointIconSize:2  };if (props.initialState){                                      this.state =Object. assign(  Object.assign({  }, this.state) ,props.                                                      
                   initialState)  ;} const  origin  =    (0,                            _mapTools__WEBPACK_IMPORTED_MODULE_1__.toGeoJson)(props.  gpxInfo.points[ 0] )                 ;this. point. features[  0] . geometry.                                                                 coordinates      =     origin;this.                                       resetFollowCamMomemtum(    )  ;}animationBody(timeDeltaMs){  const                                                       
                   timeDeltaS   =  timeDeltaMs /  1000;const                             moveDelta   = timeDeltaS  * this.   state.  playbackRate  *   this.    state.               pointsPerSecond;const  { points } = this.                                                     props.gpxInfo;const newPosition   =Math.  min(                                            moveDelta   +  this.playhead,  points. length -  1)   ;this.                                                         
                        updatePointPosition(    newPosition,                           timeDeltaS);if (newPosition ===points.length -1){this.setState({isPlaying:false }             );}} interpolatePoint(position) { const  {                                              points  }=this.props.gpxInfo;const pointIndex =Math.                                            floor(   position);const   currentFrameFeature    =  (    0,                                                         
                     _mapTools__WEBPACK_IMPORTED_MODULE_1__.                             toGeoJsonFeature)  (  points[  pointIndex]   );const  nextFrameFeature  =  (  0,             _mapTools__WEBPACK_IMPORTED_MODULE_1__.toGeoJsonFeature)(points[pointIndex +1]);const  nextDist   =_turf_turf__WEBPACK_IMPORTED_MODULE_3__.                                           distance(currentFrameFeature,nextFrameFeature);const bearing                                                          
                   =_turf_turf__WEBPACK_IMPORTED_MODULE_3__.                             bearing(  currentFrameFeature,        nextFrameFeature)     ;return   {   point:           _turf_turf__WEBPACK_IMPORTED_MODULE_3__.along((  0, _mapTools__WEBPACK_IMPORTED_MODULE_1__.toGeoJsonLineString)(points[pointIndex],  points[                                             pointIndex +1]),nextDist *(position -pointIndex)),bearing }                                                          
                      ;} resetFollowCamMomemtum(  )   {this.                           lastFollowcamMoveVector =  {momentumVec: null,   lastCenter:  null,lastVecs:[ ]};}            updateFollowCamParameters( timeDeltaS, pointPos) { let   newCenter   =   pointPos;const {   momentumVec,   lastCenter, lastVecs  }=    this.                                             lastFollowcamMoveVector;const {  playbackRate } =  this.                                                            
                   state;const   isPlaying   = this.  state.                             isPlaying ||this.props. positionUpdateFunctionRef   != null;if  (  isPlaying  &&           momentumVec ==null &&lastCenter !=null){this.lastFollowcamMoveVector.momentumVec  =[( pointPos[0]- lastCenter[0])/playbackRate,(pointPos[1]-                                             lastCenter[ 1])  / playbackRate] ;}else  if (isPlaying &&                                                            
                  momentumVec !=  null &&lastCenter !=null){                          const baseMoveVector =[pointPos[0]-lastCenter[0],pointPos[ 1] - lastCenter[1]];const           newMoveVector =[ ( 1 - this.state.followMomentum)*baseMoveVector[0]+this. state.followMomentum *momentumVec[0]*playbackRate,(1 -this.state.                                             followMomentum)  *  baseMoveVector[  1] +   this.state.                                                              
                      followMomentum   * momentumVec[ 1]  *                             playbackRate]  ;newCenter   = [  lastCenter[0] +newMoveVector[  0] ,lastCenter[1]+            newMoveVector[ 1] ] ;lastVecs.push([ newMoveVector[ 0]/playbackRate,newMoveVector[ 1]/ playbackRate]) ;if (  lastVecs.length  >this.state.                                           camMomentumRollingAvgInterval){lastVecs.shift();const sum =                                                            
                  lastVecs.reduce((acc,cur) =>[acc[ 0]+cur[                            0], acc[1]+cur[1]],[ 0,0] );this.lastFollowcamMoveVector.momentumVec =[sum[0]/this.          state.camMomentumRollingAvgInterval,sum[1]  /this.    state.camMomentumRollingAvgInterval];}}let cameraBearing =this.map.getBearing() ;if (                                                   lastCenter)          {       cameraBearing        =                                                             
                    _turf_turf__WEBPACK_IMPORTED_MODULE_3__.                           bearing(lastCenter,newCenter);const rot =(0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.          bearingDiff)  ( this.  map.getBearing()  , cameraBearing);const changeCap  = this. state.followSensitivity   *timeDeltaS;cameraBearing =(0,                                         _mapTools__WEBPACK_IMPORTED_MODULE_1__.fixBearingDomain)(this.                                                            
                      map.   getBearing(    )    +     (  0,                            _mapTools__WEBPACK_IMPORTED_MODULE_1__.clamp) ( rot, -changeCap,changeCap));}this.           lastFollowcamMoveVector.lastCenter =newCenter;return {cameraBearing, center:newCenter };}updatePointPosition(newPosition,timeDeltaS){this.                                         playhead =newPosition;const {points }=this.props.gpxInfo;const                                                            
                   pointIndex =Math.floor(newPosition);if (                            pointIndex  >=   points. length    - 1)    { this.  point. features[  0]   =  (  0,          _mapTools__WEBPACK_IMPORTED_MODULE_1__.  toGeoJsonFeature)(  points[pointIndex]);return ;}const {point,  bearing  }=this.interpolatePoint(                                        newPosition);this.point.features[0]=point;this.point.features[0].                                                           
                  properties.   bearing = bearing;this. map.                             getSource('point').setData(this.point);if (this.progressRef.current !=null){this.          progressRef. current.value  =100  * newPosition /( points. length  - 1);}if   (  this.  applyPositionUpdateToHeightGraph   != null){this.                                         applyPositionUpdateToHeightGraph(newPosition)  ;} if  (this.state.                                                          
                   useFollowCam){const {center,cameraBearing                              } =this.updateFollowCamParameters( timeDeltaS, point.geometry.coordinates);this.           map.easeTo(  {center,bearing:    cameraBearing, duration:timeDeltaS  *1000,  easing: x =>x  }) ;} if (this.state.useFollowTrack) { this.                                       updateTrackDisplay(newPosition);} }updateTrackDisplay(position){const                                                         
                   pointIndex =Math.floor( position);const {                               points }=this.props. gpxInfo;if (pointIndex ===points.length -1){const source =          this.map. getSource( 'gpxTrack');source.setData((0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.pointsToGeoJsonFeature)(points) .data);}else {                                       const sliceToPlayhead =points.slice(0,pointIndex + 1);sliceToPlayhead.                                                         
                                 push(         (          0,                                         _mapTools__WEBPACK_IMPORTED_MODULE_1__.  geoJsonToPoint)   (    this.               interpolatePoint( position)    .     point)  )   ;const    source   =  this.   map. getSource( 'gpxTrack');source.   setData( ( 0,                                         _mapTools__WEBPACK_IMPORTED_MODULE_1__.   pointsToGeoJsonFeature)     (                                                       
                         sliceToPlayhead)  .  data)   ;}   }                                     componentWillUnmount()    {if (   this.  animationHandle   !=null)      {           cancelAnimationFrame( this.animationHandle);}if (this.props.bindKeys){window. removeEventListener('keydown', this. windowKeyBinds);}}                                       componentDidMount() {  return  __awaiter(this,void 0,void  0,  function* (){                                                     
                   yield this.createMapFromState(this.state)                                            ;if  (this.props.bindKeys){window.addEventListener('keydown',this.          windowKeyBinds,true);}if (this.props.positionUpdateFunctionRef){this.props.positionUpdateFunctionRef.current =(position,deltaS) =>{if                                      (deltaS >2){this.resetFollowCamMomemtum( );}this.updatePointPosition(position,                                                     
                   deltaS);};}});}createMapFromState(state){                                                                 return __awaiter(this,void 0,void 0,function*          (){if (this.animationHandle !=null){cancelAnimationFrame(this.animationHandle);}const gpsPoints =this.props.gpxInfo.points;if (this.                                      map ==null){this.map =new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().Map)                                                    
                   ({container:this.mapDivRef. current,zoom:                                                                       16,pitch:    0,      center:   (     0,           _mapTools__WEBPACK_IMPORTED_MODULE_1__.  findCenter)(     gpsPoints) .  slice(0,2),style:state.mapStyle,accessToken:   this.props.                                      mapboxAccessToken });this.map.fitBounds((0, _mapTools__WEBPACK_IMPORTED_MODULE_1__.                                                  
                    findBounds)  (  gpsPoints) );this.  map.                                                                     addControl(this. mapControl)   ;this.map.          addControl(this.fullscreenControl);}else {this.  map.setStyle(state.mapStyle);}const addSource =(id, points,params) =>{this.map.                                       addSource(id,(0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.pointsToGeoJsonFeature)(points)                                                 
                   ).addLayer(  {id,type: 'line' ,source:id,                                                                    layout:  {'line-join' :'round','line-cap':          'round'},paint:params }) ;} ;yield new Promise(resolve  => {this.map.once( 'styledata' ,() =>{addSource('gpxTrack',gpsPoints,{                                        'line-color': state. gpxTrackColor, 'line-width' :state.  gpxTrackWidth  } );this. map.                                                 
                   addSource('point', {type: 'geojson',data:                                                                      this.point }  )  ;this. map.  addSource(           'mapbox-dem',{type:'raster-dem',url:  'mapbox://mapbox.mapbox-terrain-dem-v1' , tileSize: 512,maxzoom:15 }) ;if (this.state.                                        showTopo){this.map.setTerrain({source:'mapbox-dem',exaggeration:2 });}this.map.addLayer({                                                
                  id:'point', source: 'point',type:'symbol',                                                                     layout:{  'icon-image' : state.pointIcon,          'icon-size':state.pointIconSize,'icon-allow-overlap':true,'icon-ignore-placement':true }});if (this.state.useFollowTrack){                                            this.updateTrackDisplay( this.playhead) ;}resolve(   ) ;}  ) ;} );if    ( ! this.   props.                                              
                         positionUpdateFunctionRef)        {                                                                     requestAnimationFrame(this.animationLoop)          ;}});}componentWillUpdate(props,nextState){return __awaiter(this,void 0,void 0,function*( ) {if  (!nextState.isPlaying){                                           this.resetFollowCamMomemtum();}if (nextState.useFollowCam  !== this.state.useFollowCam){ this.                                             
                   resetFollowCamMomemtum();if  ( nextState.                                                                    useFollowCam){this.map. easeTo({zoom:14.5,          pitch:60,center:(0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.toGeoJson)(props.gpxInfo.points[Math.floor(this.playhead)])                                             .slice(0, 2)});}else {this.map.easeTo({ pitch:0,center:(0,_mapTools__WEBPACK_IMPORTED_MODULE_1__.                                           
                   findCenter)(props.gpxInfo.points).slice(                                                                      0,2),animate:false,bearing:0 });this.map.            fitBounds(( 0,  _mapTools__WEBPACK_IMPORTED_MODULE_1__.findBounds)(props. gpxInfo.points)) ;}} if  (nextState.                                                 useFollowTrack){this.updateTrackDisplay(  this.playhead);} else  {  this.updateTrackDisplay(props.                                           
                   gpxInfo.points.length -1);}if (nextState.                                                                      mapStyle !== this.  state.  mapStyle)  {          yield this.createMapFromState(nextState) ;}if  (nextState.pointIcon !==this.state. pointIcon) { this.  map.                                                      setLayoutProperty('point','icon-image', nextState.pointIcon)  ;}if  (nextState.pointIconSize !==this.                                        
                    state.  pointIconSize)  {   this.  map.                                                                      setLayoutProperty( 'point',  'icon-size',          nextState.pointIconSize);}if (nextState. gpxTrackColor   !==     this. state. gpxTrackColor) { this.map.                                                      setPaintProperty('gpxTrack','line-color',nextState.gpxTrackColor);}if (nextState.gpxTrackWidth !==  this.                                       
                      state. gpxTrackWidth)  {  this.  map.                                                                     setPaintProperty('gpxTrack' ,'line-width',           nextState. gpxTrackWidth)  ;}if (nextState.                                                                                                                  showTopo  !==this.  state.showTopo) {if  (nextState.showTopo){  this.map.setTerrain({source:'mapbox-dem',                                       
                    exaggeration:  2  });}else { this.  map.                                                                    setTerrain(null);}}});}render(){const mb =             this.   props. gpxInfo.  sizeBytes     /                                                                                                                 1000000;return react__WEBPACK_IMPORTED_MODULE_0___default( )              .                   createElement(                                      
                  react__WEBPACK_IMPORTED_MODULE_0___default(                                                                          )       .        Fragment,    null,          react__WEBPACK_IMPORTED_MODULE_0___default(                                                                                                                ). createElement( "div",{className: "center gpx-info"},                         "Selected: "                  ,                                    
                   react__WEBPACK_IMPORTED_MODULE_0___default(                                                                   ).  createElement( "b", null, this.props.           gpxInfo.name)," (",mb.toFixed(2) ," MB)"),                                                                                                                          this.       props.           bindKeys     &&            react__WEBPACK_IMPORTED_MODULE_0___default() .                                   
                   createElement("div",{className:"center"},                                                                     react__WEBPACK_IMPORTED_MODULE_0___default(         ). createElement("b" ,  null,"Tip:"   ) ,                                                                                                               " use space to play/pause, F to full screen, H to hide controls"    ),react__WEBPACK_IMPORTED_MODULE_0___default().                                  
                   createElement(   "div"   ,  { className:                                                                           "map-container-container"   }      ,          react__WEBPACK_IMPORTED_MODULE_0___default(                                                                                                             ).createElement(  "div", {id:"map-container",ref:this.                mapDivRef } )),this.props.showElevationProfile                                  
                                                          &&                                                                     react__WEBPACK_IMPORTED_MODULE_0___default(                )             .     createElement(                                                                                                                _HeightGraphComponent__WEBPACK_IMPORTED_MODULE_5__.                  HeightGraphComponent,Object.  assign({  },this.                                
                   props,{applyPositionUpdate:applyUpdate =>                                                                      this. applyPositionUpdateToHeightGraph =            applyUpdate    } )  )  ,!    this.props.                                                                                                                         positionUpdateFunctionRef              &&                     react__WEBPACK_IMPORTED_MODULE_0___default( ).                               
                                              createElement(                                                                    _MapComponentProgress__WEBPACK_IMPORTED_MODULE_6__. MapComponentProgress,  { isPlaying:  this.                                                                                                            state.isPlaying,  onPlayClick: this. handlePlayClick,                        onProgressClick:   this.  handleProgressClick,                             
                   progressRef: this. progressRef } ), !this.                                                                          props.      disableOptions       &&           react__WEBPACK_IMPORTED_MODULE_0___default(                                                                                                                      )             .           createElement(                         _MapComponentOptions__WEBPACK_IMPORTED_MODULE_7__.                         
                   MapComponentOptions,{state:this.state,setState:this.setState.  bind(this),showPlaybackRate:this.props. positionUpdateFunctionRef ===undefined }));}}} ,            "./components/MapComponentOptions.tsx":(                                                                                                                __unused_webpack_module,   __webpack_exports__,                           __webpack_require__) =>{__webpack_require__.r(                            
                   __webpack_exports__);__webpack_require__.d(__webpack_exports__,{"MapComponentOptions":() =>MapComponentOptions });var react__WEBPACK_IMPORTED_MODULE_0__                   =          __webpack_require__(                                                                                                           "../node_modules/react/index.js"        )      ;var                                react__WEBPACK_IMPORTED_MODULE_0___default  =                          
                    __webpack_require__.n( react__WEBPACK_IMPORTED_MODULE_0__);var   _CheckboxControlInputComponent__WEBPACK_IMPORTED_MODULE_1__  =   __webpack_require__(          "./components/CheckboxControlInputComponent.tsx"                                                                                               );var _LabelInputWithHelp__WEBPACK_IMPORTED_MODULE_2__ =                                                          __webpack_require__(                         
                             "./components/LabelInputWithHelp.tsx"        )    ;var       _RangeSliderComponent__WEBPACK_IMPORTED_MODULE_3__       =  __webpack_require__(           "./components/RangeSliderComponent.tsx")                                                                                                     ;function  MapComponentOptions(  props){ const  {state,                                         setState,  showPlaybackRate      }     =                        
                     props;return  react__WEBPACK_IMPORTED_MODULE_0___default(  )   . createElement(   react__WEBPACK_IMPORTED_MODULE_0___default(  )   .  Fragment, null,          react__WEBPACK_IMPORTED_MODULE_0___default(                                                                                                  ).createElement("div",{className:"center control-group"                                    },react__WEBPACK_IMPORTED_MODULE_0___default().                       
                     createElement( _CheckboxControlInputComponent__WEBPACK_IMPORTED_MODULE_1__["default" ]  ,{labelText: "FollowCam", defaultChecked:state. useFollowCam,                                           helpText:                                                                                                  "When checked, camera follows point during playback"  ,                                       onChange:checked   => setState({ useFollowCam:                      
                     checked  })}),  react__WEBPACK_IMPORTED_MODULE_0___default() .createElement(_CheckboxControlInputComponent__WEBPACK_IMPORTED_MODULE_1__[ "default"],{           labelText:"FollowTrack" , defaultChecked:                                                                                                             state.           useFollowCam,    helpText:                                         "When checked, GPX track follows point during playback"            
                     , onChange: checked =>  setState({useFollowTrack: checked })}  ) ), react__WEBPACK_IMPORTED_MODULE_0___default().   createElement( "div" ,{className:          "center control-group"},state.useFollowCam                                                                                                   &&react__WEBPACK_IMPORTED_MODULE_0___default(    ) .                                                                            createElement(                   
                       _RangeSliderComponent__WEBPACK_IMPORTED_MODULE_3__[   "default"] ,{  label:   "Follow Sensitivity" ,   min: 0,  max:  180,   step:    1, helpText:           "In FollowCam, limits how quickly the camera can rotate, expressed in degrees per second. At 0 the camera direction will be fixed, so it will only pan." ,value:state.followSensitivity, onChange:v => setState({                             followSensitivity:v })}),state.useFollowCam &&                  
                       react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_RangeSliderComponent__WEBPACK_IMPORTED_MODULE_3__["default"], {label:"Follow Momentum",            min:  0, max:0.99,  step: 0.01,helpText:                                                                                              "In FollowCam, adjusts the camera movement by continuing to pan in the direction of the last frame, scaled by this factor. So a factor of 0 means we move the map such that the track point is exactly in the center. A factor of 1 would mean we only move in the same direction as the last frame. The camera will move more smoothly but will not follow the exact point as closely." 
 ,value:state. followMomentum, onChange:v   =>  setState(     {    followMomentum:    v    }   )}     ) , showPlaybackRate   &&  react__WEBPACK_IMPORTED_MODULE_0___default( )   .   createElement( _RangeSliderComponent__WEBPACK_IMPORTED_MODULE_3__[                                                                     "default"],{label:'Playback Rate',min:0.1,max:20,step:                                                  0.1,  value: state.  playbackRate,   helpText:                
                         "Multiplier for playback speed. Default playback speed is tuned so it finishes in exactly 60 seconds (regardless GPX track length)." ,  onChange:          value =>setState({playbackRate:value })}))                                                                                                ,  react__WEBPACK_IMPORTED_MODULE_0___default()  .                                                       createElement(       "div"  ,   { className:               
                        "center control-group" }     ,  react__WEBPACK_IMPORTED_MODULE_0___default(  ).createElement(  "label" , {   htmlFor: "map-style"},"Map Style" ) ,           react__WEBPACK_IMPORTED_MODULE_0___default(                                                                                              ) . createElement(  "select" , {name:"map style",                                                      onChange: evt =>{setState({mapStyle:evt.target.              
                         value, isPlaying:false });}, defaultValue: state. mapStyle }  ,  react__WEBPACK_IMPORTED_MODULE_0___default() .  createElement( "option" ,{value:             "mapbox://styles/mapbox/outdoors-v11"},                                                                                                             "Outdoors"          )             ,                                                        react__WEBPACK_IMPORTED_MODULE_0___default() .              
                         createElement(  "option",{ value:"mapbox://styles/mapbox/streets-v11"},"Streets" ) ,react__WEBPACK_IMPORTED_MODULE_0___default().  createElement(               "option"     ,       {         value:                                                                                                 "mapbox://styles/mapbox/light-v10"},"Light"),                                                            react__WEBPACK_IMPORTED_MODULE_0___default().             
                          createElement("option",{value:"mapbox://styles/mapbox/dark-v10"},"Dark") ,react__WEBPACK_IMPORTED_MODULE_0___default() .createElement("option",{                                             value:                                                                                                   "mapbox://styles/mapbox/satellite-v9"   }  ,                                                                          "Satellite"         )         ,             
                                react__WEBPACK_IMPORTED_MODULE_0___default() . createElement(  "option"   ,{ value:  "mapbox://styles/mapbox/satellite-streets-v11"    },                "Satellite Streets"         )      ,                                                                                                 react__WEBPACK_IMPORTED_MODULE_0___default().                                                                  createElement(  "option"  ,    {   value:            
                             "mapbox://styles/mapbox/navigation-day-v1"},"Navigation Day"),react__WEBPACK_IMPORTED_MODULE_0___default( ).createElement( "option" ,{value:            "mapbox://styles/mapbox/navigation-night-v1"                                                                                                   } ,        "Navigation Night"    )   ,                                                                 react__WEBPACK_IMPORTED_MODULE_0___default(            
                                )  .  createElement(    "option"  ,{    value:"mapbox://styles/pelmers/cl8ilg939000u15o5hxcr1mjy"     } ,   "Peter Custom Satellite"  ) ,             react__WEBPACK_IMPORTED_MODULE_0___default(                                                                                              )     .createElement(  "option" ,{ value:                                                                    "mapbox://styles/pelmers/cljn0kxxr00ct01qwgdcgblzs"   
                                         }          ,          "peter.travel"  )    )      ,     react__WEBPACK_IMPORTED_MODULE_0___default(    ) .        createElement(            _CheckboxControlInputComponent__WEBPACK_IMPORTED_MODULE_1__[                                                                             "default" ] ,{labelText:"3D Topography",                                                                         defaultChecked:state.showTopo,helpText:            
                                  "When checked, an extra layer of topographic terrain is added to the map to emphasize elevation. This is more visible in FollowCam." ,              onChange:checked =>setState({showTopo:                                                                                                         checked  }      )     }    )   ,                                                                         react__WEBPACK_IMPORTED_MODULE_0___default(         
                                    ).createElement( _LabelInputWithHelp__WEBPACK_IMPORTED_MODULE_2__["default"],{ label: react__WEBPACK_IMPORTED_MODULE_0___default().                 createElement( "label" ,     null,                                                                                                     "Point Icon"     )     ,        input:                                                                           react__WEBPACK_IMPORTED_MODULE_0___default(       
                                       ) .createElement("select",{defaultValue:  state.  pointIcon,onChange:evt  => {setState( { pointIcon:evt.target.value  })  ;}} ,                  react__WEBPACK_IMPORTED_MODULE_0___default(                                                                                              ).createElement("option", {value:                                                                                "bicycle-15"  } ,  "Bicycle"   ) ,              
                                            react__WEBPACK_IMPORTED_MODULE_0___default()  .createElement( "option" ,   {  value:   "rocket-15"   } ,    "Rocket" )  ,                     react__WEBPACK_IMPORTED_MODULE_0___default(                                                                                            ) .createElement(  "option",  {                                                                                   value:"swimming-15" },"Swimmer"),              
                                             react__WEBPACK_IMPORTED_MODULE_0___default(   ). createElement("option"   ,     {  value: "bus-15" } ,  "Bus"      ) ,                        react__WEBPACK_IMPORTED_MODULE_0___default(                                                                                             ).createElement("option" ,{                                                                                        value:"rail-15"} ,"Train" ),                
                                                  react__WEBPACK_IMPORTED_MODULE_0___default(  )   . createElement("option", {  value:"pitch-15"  }, "Runner")  ,                             react__WEBPACK_IMPORTED_MODULE_0___default(                                                                                                 ) . createElement(                                                                                           "option",{value:"car-15"                   
                                                        } ,  "Death Cage"), react__WEBPACK_IMPORTED_MODULE_0___default(   ).createElement( "option",{  value:                                     "circle-15"} , "Circle"                                                                                                                 )),  helpText:                                                                                                   'Icon to use for the point. Note: not all styles support every icon. If you have a specific request please file an issue. (Or better yet, submit a fix!)' 
                                                                         }), react__WEBPACK_IMPORTED_MODULE_0___default( ). createElement( _RangeSliderComponent__WEBPACK_IMPORTED_MODULE_3__[ "default" ],{ label: 'Point Icon Size'  , min: 0.0, max: 25,                                                                                                                                                                                                                                       
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  

step:0.5,value:state.pointIconSize,onChange:value =>setState({pointIconSize:value })}),react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label",{htmlFor:"line-color"},"Line Color"),react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input",{type:"color",name:"line-color",defaultValue:state.gpxTrackColor,onChange:ev =>{setState({gpxTrackColor:ev.target.value });}}),react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_RangeSliderComponent__WEBPACK_IMPORTED_MODULE_3__["default"],{label:'Line Thickness',min:0.0,max:30,step:0.5,value:state.gpxTrackWidth,onChange:value =>setState({gpxTrackWidth:value })})));}},"./components/MapComponentProgress.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"MapComponentProgress":() =>MapComponentProgress });var react__WEBPACK_IMPORTED_MODULE_0__ =__webpack_require__("../node_modules/react/index.js");var react__WEBPACK_IMPORTED_MODULE_0___default =__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);var _svg_play_btn_svg__WEBPACK_IMPORTED_MODULE_1__ =__webpack_require__("./components/svg/play_btn.svg");var _svg_pause_btn_svg__WEBPACK_IMPORTED_MODULE_2__ =__webpack_require__("./components/svg/pause_btn.svg");function MapComponentProgress(props){return react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div",{className:"center"},react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div",{className:"progress-container"},react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button",{"aria-label":"Play",role:"button",className:"play-button",onClick:props.onPlayClick },props.isPlaying ?react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_svg_pause_btn_svg__WEBPACK_IMPORTED_MODULE_2__["default"],null):react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_svg_play_btn_svg__WEBPACK_IMPORTED_MODULE_1__["default"],null)),react__WEBPACK_IMPORTED_MODULE_0___default().createElement("progress",{max:"100",value:"0",className:"play-progress",ref:props.progressRef,onClick:props.onProgressClick },"Progress")));}},"./mapTools.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__) =>{__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"bearingDiff":() =>bearingDiff,"clamp":() =>clamp,"findBounds":() =>findBounds,"findCenter":() =>findCenter,"fixBearingDomain":() =>fixBearingDomain,"geoJsonToPoint":() =>geoJsonToPoint,"pointsToGeoJsonFeature":() =>pointsToGeoJsonFeature,"toGeoJson":() =>toGeoJson,"toGeoJsonFeature":() =>toGeoJsonFeature,"toGeoJsonLineString":() =>toGeoJsonLineString });function toGeoJson(point){return [point.lon,point.lat,point.ele];}function pointsToGeoJsonFeature(points,label){return {type:'geojson',data:{type:'Feature',properties:{label },geometry:{type:'LineString',coordinates:points.map(toGeoJson)}}};}function geoJsonToPoint(pt){const {coordinates }=pt.geometry;return {lon:coordinates[0],lat:coordinates[1],ele:coordinates.length >2 ?coordinates[2]:0 };}function toGeoJsonFeature(point){return {type:'Feature',geometry:{type:'Point',coordinates:toGeoJson(point)},properties:{}};}function toGeoJsonLineString(from,to){return {type:'Feature',geometry:{type:'LineString',coordinates:[toGeoJson(from),toGeoJson(to)]},properties:{}};}function findCenter(gpsPoints){const n =gpsPoints.length;const avg =gpsPoints.reduce((prev,cur) =>({lat:prev.lat +cur.lat /n,lon:prev.lon +cur.lon /n,ele:prev.ele +cur.ele /n }),{lat:0,lon:0,ele:0 });return toGeoJson(avg);}function findBounds(gpsPoints){const [sw,ne]=gpsPoints.reduce(([sw,ne],cur) =>[{lat:Math.min(cur.lat,sw.lat),lng:Math.min(cur.lon,sw.lng)},{lat:Math.max(cur.lat,ne.lat),lng:Math.max(cur.lon,ne.lng)}],[{lat:Number.MAX_SAFE_INTEGER,lng:Number.MAX_SAFE_INTEGER },{lat:Number.MIN_SAFE_INTEGER,lng:Number.MIN_SAFE_INTEGER }]);const pad =0.15;const x =(ne.lat -sw.lat)*pad;const y =(ne.lng -sw.lng)*pad;return [{lat:sw.lat -x,lng:sw.lng -y },{lat:ne.lat +x,lng:ne.lng +y }];}const clamp =(num,lo,hi) =>num <lo ?lo :num >hi ?hi :num;const bearingDiff =(a,b) =>{const diff =Math.abs(b -a);const sign =b >a ?1 : -1;return sign *(diff >180 ? -(360 -diff):diff);};const fixBearingDomain =b =>{if (b < -180){return 360 +b;}else if (b >180){return ( -360 +b);}return b;};}}]); 